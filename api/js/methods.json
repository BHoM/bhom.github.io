[{"namespace":"BH.Engine.UI","className":"Compute","memberName":"RecordError","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"e","namespace":"System","memberName":"Exception","isGeneric":"0","descriptionParts":["This is a Exception"],"isRequired":1,"isInterface":0},{"inputName":"message","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.UI","className":"Compute","memberName":"RecordExecutionError","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"e","namespace":"System","memberName":"Exception","isGeneric":"0","descriptionParts":["This is a Exception"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.UI","className":"Compute","memberName":"SaveSettings","assemblyName":"UI_Engine.dll","descriptionParts":["Saves the settings for a toolkit into C:\ProgramData\BHoM\Settings. If Any previoulsy saved settings for that toolkit will be overwritten ",""],"inputs":[{"inputName":"settings","namespace":"BH.oM.UI","memberName":"ISettings","isGeneric":"0","descriptionParts":["Settings for a toolkit that need to be saved permanently. ","This is a BH.oM.UI.ISettings: ","Toolkit Settings that need to be saved permanently. ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Returns true if the settings were saved successfully. ","This is a Boolean"]}},{"namespace":"BH.Engine.UI","className":"Compute","memberName":"LogUsage","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"uiName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"uiVersion","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"componentId","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["This is a Guid"],"isRequired":1,"isInterface":0},{"inputName":"callerName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"selectedItem","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"events","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Reflection.Debugging","memberName":"Event","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Event>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.UI","className":"Compute","memberName":"BHoMVersion","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.UI","className":"Compute","memberName":"LoadAssemblies","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.UI","className":"Compute","memberName":"IOrganise","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"items","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"SearchItem","isInterface":"0","isGeneric":"0"}]},{"namespace":"BH.oM.Data.Collections","memberName":"Tree","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<BH.oM.UI.SearchItem>, BH.oM.Data.Collections.Tree<System.Object>>"]}},{"namespace":"BH.Engine.UI","className":"Compute","memberName":"OrganiseMethods","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"methods","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"SearchItem","isInterface":"0","isGeneric":"0"}]},{"namespace":"BH.oM.Data.Collections","memberName":"Tree","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<BH.oM.UI.SearchItem>, BH.oM.Data.Collections.Tree<System.Object>>"]}},{"namespace":"BH.Engine.UI","className":"Compute","memberName":"OrganiseTypes","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"types","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"SearchItem","isInterface":"0","isGeneric":"0"}]},{"namespace":"BH.oM.Data.Collections","memberName":"Tree","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<BH.oM.UI.SearchItem>, BH.oM.Data.Collections.Tree<System.Object>>"]}},{"namespace":"BH.Engine.UI","className":"Compute","memberName":"OrganiseMembers","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"members","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"SearchItem","isInterface":"0","isGeneric":"0"}]},{"namespace":"BH.oM.Data.Collections","memberName":"Tree","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<BH.oM.UI.SearchItem>, BH.oM.Data.Collections.Tree<System.Object>>"]}},{"namespace":"BH.Engine.UI","className":"Compute","memberName":"ConstructorText","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The type of object to create a constructor for ","This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"maxParams","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The maximum number of parameters to include in the text ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxChars","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The maximum number of characters for the output text ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The text corresponding to the description of the constructor generated for that type ","This is a String"]}},{"namespace":"BH.Engine.UI","className":"Compute","memberName":"Constructor","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The type of object to create a constructor for ","This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"parameters","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"ParamInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The properties that should be used as parameters for the constructor ","This is a List<ParamInfo>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Func","namespace":"System","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object[]","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The compiled constructor ","This is a Func<Object[], Object>"]}},{"namespace":"BH.Engine.UI","className":"Create","memberName":"OutputAccessor","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"accessorType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"dataType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Func","namespace":"System","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"IDataAccessor","isInterface":"1","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Boolean","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Func<IDataAccessor, Object, Int32, Boolean>"]}},{"namespace":"BH.Engine.UI","className":"Create","memberName":"InputAccessor","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"accessorType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"dataType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Func","namespace":"System","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"IDataAccessor","isInterface":"1","isGeneric":"0"},{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Func<IDataAccessor, Int32, Object>"]}},{"namespace":"BH.Engine.UI","className":"Create","memberName":"ParamInfo","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the parameter ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The framework type of the parameter, e.g. BH.oM.Base.BHoMObject ","This is a Type"],"isRequired":0,"isInterface":0},{"inputName":"kind","namespace":"BH.oM.UI","memberName":"ParamKind","isGeneric":"0","descriptionParts":["Whether the parameter is an input of an output. Input is the default value ","This is a BH.oM.UI.ParamKind ","Enum values: ","-Unknown ","-Input ","-Output"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ParamInfo","namespace":"BH.oM.UI","isGeneric":"0","descriptionParts":["The bhom parameter used in the bhom abstract syntax ","This is a BH.oM.UI.ParamInfo"]}},{"namespace":"BH.Engine.UI","className":"Create","memberName":"ParamInfo","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"property","namespace":"System.Reflection","memberName":"PropertyInfo","isGeneric":"0","descriptionParts":["The system property to convert to bhom ","This is a PropertyInfo"],"isRequired":1,"isInterface":0},{"inputName":"instance","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ParamInfo","namespace":"BH.oM.UI","isGeneric":"0","descriptionParts":["The bhom parameter used in the bhom abstract syntax ","This is a BH.oM.UI.ParamInfo"]}},{"namespace":"BH.Engine.UI","className":"Create","memberName":"ParamInfo","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"parameter","namespace":"System.Reflection","memberName":"ParameterInfo","isGeneric":"0","descriptionParts":["This is a ParameterInfo"],"isRequired":1,"isInterface":0},{"inputName":"description","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ParamInfo","namespace":"BH.oM.UI","isGeneric":"0","descriptionParts":["The bhom parameter used in the bhom abstract syntax ","This is a BH.oM.UI.ParamInfo"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"MatchWith","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"newList","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"ParamInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<ParamInfo>"],"isRequired":1,"isInterface":0},{"inputName":"oldList","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"ParamInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<ParamInfo>"],"isRequired":1,"isInterface":0},{"inputName":"added","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"0","descriptionParts":["This is a List`1&"],"isRequired":1,"isInterface":0},{"inputName":"removed","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"0","descriptionParts":["This is a List`1&"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"ParamInfo","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.UI","memberName":"ParamInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<ParamInfo, ParamInfo>"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"Changes","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"newList","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"ParamInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<ParamInfo>"],"isRequired":1,"isInterface":0},{"inputName":"oldList","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"ParamInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<ParamInfo>"],"isRequired":1,"isInterface":0},{"inputName":"selectedOnly","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"IParamUpdate","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<IParamUpdate> ","This can be of the following types: ParamUpdated, ParamMoved, ParamRemoved, ParamAdded"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"SelectionIndex","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"parameters","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"ParamInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<ParamInfo>"],"isRequired":1,"isInterface":0},{"inputName":"index","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"IToText","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"update","namespace":"BH.oM.UI","memberName":"IParamUpdate","isGeneric":"0","descriptionParts":["This is a BH.oM.UI.IParamUpdate ","This can be of the following types: ParamUpdated, ParamMoved, ParamRemoved, ParamAdded"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"OutputParams","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"ParamInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<ParamInfo>"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"AreMatching","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"newList","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"ParamInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<ParamInfo>"],"isRequired":1,"isInterface":0},{"inputName":"oldList","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"ParamInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<ParamInfo>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"AreMatching","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"props","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"PropertyInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<PropertyInfo>"],"isRequired":1,"isInterface":0},{"inputName":"oldList","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"ParamInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<ParamInfo>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"Settings","assemblyName":"UI_Engine.dll","descriptionParts":["Extract settings of a given type from C:\ProgramData\BHoM\Settings ",""],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["Object type of the settings you want to recover ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ISettings","namespace":"BH.oM.UI","isGeneric":"0","descriptionParts":["Settings recovered from the corresponding file in C:\ProgramData\BHoM\Settings ","This is a BH.oM.UI.ISettings: ","Toolkit Settings that need to be saved permanently. ","This can be of the following types"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"Settings","assemblyName":"UI_Engine.dll","descriptionParts":["Extract settings for a given toolkit from C:\ProgramData\BHoM\Settings ",""],"inputs":[{"inputName":"toolkitName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Toolkit you want to recover the settings for ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ISettings","namespace":"BH.oM.UI","isGeneric":"0","descriptionParts":["Settings recovered from the corresponding file in C:\ProgramData\BHoM\Settings ","This is a BH.oM.UI.ISettings: ","Toolkit Settings that need to be saved permanently. ","This can be of the following types"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"Hits","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"items","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"SearchItem","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<SearchItem>"],"isRequired":1,"isInterface":0},{"inputName":"search","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"nbMax","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"hitsOnEmptySearch","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.UI","memberName":"SearchItem","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<SearchItem>"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"EngineItems","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodBase","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<MethodBase>"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"CreateItems","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodBase","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<MethodBase>"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"ComputeItems","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodBase","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<MethodBase>"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"ConvertItems","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodBase","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<MethodBase>"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"ModifyItems","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodBase","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<MethodBase>"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"QueryItems","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodBase","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<MethodBase>"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"AdapterConstructorItems","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodBase","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<MethodBase>"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"CreateRequestItems","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodBase","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<MethodBase>"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"ConstructableRequestItems","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Type>"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"TypeItems","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Type>"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"ConstructableTypeItems","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Type>"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"EnumItems","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Type>"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"LibraryItems","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"ExternalItems","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodBase","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<MethodBase>"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"Weight","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"item","namespace":"BH.oM.UI","memberName":"SearchItem","isGeneric":"0","descriptionParts":["This is a BH.oM.UI.SearchItem"],"isRequired":1,"isInterface":0},{"inputName":"search","namespace":"System","memberName":"String[]","isGeneric":"0","descriptionParts":["This is a String[]"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"Weight","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"item","namespace":"BH.oM.UI","memberName":"SearchItem","isGeneric":"0","descriptionParts":["This is a BH.oM.UI.SearchItem"],"isRequired":1,"isInterface":0},{"inputName":"config","namespace":"BH.oM.UI","memberName":"SearchConfig","isGeneric":"0","descriptionParts":["This is a BH.oM.UI.SearchConfig"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"SubType","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"info","namespace":"BH.oM.UI","memberName":"ParamInfo","isGeneric":"0","descriptionParts":["This is a BH.oM.UI.ParamInfo"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Type","namespace":"System","isGeneric":"0","descriptionParts":["This is a Type"]}},{"namespace":"BH.Engine.UI","className":"Query","memberName":"Depth","assemblyName":"UI_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"info","namespace":"BH.oM.UI","memberName":"ParamInfo","isGeneric":"0","descriptionParts":["This is a BH.oM.UI.ParamInfo"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.Serialiser","className":"Create","memberName":"MethodBase","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"methodName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"paramTypeNames","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MethodBase","namespace":"System.Reflection","isGeneric":"0","descriptionParts":["This is a MethodBase"]}},{"namespace":"BH.Engine.Serialiser","className":"Create","memberName":"MethodBase","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"methodName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"paramTypes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MethodBase","namespace":"System.Reflection","isGeneric":"0","descriptionParts":["This is a MethodBase"]}},{"namespace":"BH.Engine.Serialiser","className":"Query","memberName":"GenericTypeConstraint","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Type","namespace":"System","isGeneric":"0","descriptionParts":["This is a Type"]}},{"namespace":"BH.Engine.Serialiser","className":"Query","memberName":"ParametersWithConstraints","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ParameterInfo[]","namespace":"System.Reflection","isGeneric":"0","descriptionParts":["This is a ParameterInfo[]"]}},{"namespace":"BH.Engine.Reflection","className":"Compute","memberName":"MakeGenericFromInputs","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodInfo","isGeneric":"0","descriptionParts":["This is a MethodInfo"],"isRequired":1,"isInterface":0},{"inputName":"inputTypes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MethodInfo","namespace":"System.Reflection","isGeneric":"0","descriptionParts":["This is a MethodInfo"]}},{"namespace":"BH.Engine.Reflection","className":"Compute","memberName":"DeepDependencies","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"methods","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodBase","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<MethodBase>"],"isRequired":1,"isInterface":0},{"inputName":"maxDepth","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodBase","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<MethodBase>>"]}},{"namespace":"BH.Engine.Reflection","className":"Compute","memberName":"IOpenHelpPage","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Reflection","className":"Compute","memberName":"OpenHelpPage","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Reflection","className":"Compute","memberName":"OpenHelpPage","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Reflection","className":"Compute","memberName":"RecordError","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"message","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Compute","memberName":"RemoveEvent","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"newEvent","namespace":"BH.oM.Reflection.Debugging","memberName":"Event","isGeneric":"0","descriptionParts":["This is a BH.oM.Reflection.Debugging.Event"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Compute","memberName":"RemoveEvents","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"events","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Reflection.Debugging","memberName":"Event","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Event>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Compute","memberName":"RecordEvent","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"message","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"BH.oM.Reflection.Debugging","memberName":"EventType","isGeneric":"0","descriptionParts":["This is a BH.oM.Reflection.Debugging.EventType ","Enum values: ","-Unknown ","-Error ","-Warning ","-Note"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Compute","memberName":"LoadAllAssemblies","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"folder","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Reflection","className":"Compute","memberName":"RecordNote","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"message","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Compute","memberName":"RecordWarning","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"message","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Compute","memberName":"RunExtensionMethod","assemblyName":"Reflection_Engine.dll","descriptionParts":["Runs an extension method accepting a single argument based on a provided object and method name.","Finds the method via reflection the first time it is run, thean compiles it to a function and stores it for subsequent calls. ",""],"inputs":[{"inputName":"target","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["The object to find and run the extension method for. ","This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"methodName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the method to be run. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["The result of the method execution. If no method was found, null is returned. ","This is a Object"]}},{"namespace":"BH.Engine.Reflection","className":"Compute","memberName":"RunExtensionMethod","assemblyName":"Reflection_Engine.dll","descriptionParts":["Runs an extension method accepting a multiple argument based on a provided main object and method name and additional arguments.","Finds the method via reflection the first time it is run, thean compiles it to a function and stores it for subsequent calls. ",""],"inputs":[{"inputName":"target","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["The first of the argument of the method to find and run the extention method for. ","This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"methodName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the method to be run. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"parameters","namespace":"System","memberName":"Object[]","isGeneric":"0","descriptionParts":["The additional arguments of the call to the method, skipping the first argument provided by 'target'. ","This is a Object[]"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["The result of the method execution. If no method was found, null is returned. ","This is a Object"]}},{"namespace":"BH.Engine.Reflection","className":"Compute","memberName":"SplitByIndices","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"text","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"indices","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Int32>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"]}},{"namespace":"BH.Engine.Reflection","className":"Compute","memberName":"UnqualifiedName","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"qualifiedName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Compute","memberName":"ClearCurrentEvents","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Convert","memberName":"ToFunc","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Func","namespace":"System","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object[]","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Func<Object[], Object>"]}},{"namespace":"BH.Engine.Reflection","className":"Convert","memberName":"ToFunc","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodInfo","isGeneric":"0","descriptionParts":["This is a MethodInfo"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Func","namespace":"System","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object[]","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Func<Object[], Object>"]}},{"namespace":"BH.Engine.Reflection","className":"Convert","memberName":"ToFunc","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ctor","namespace":"System.Reflection","memberName":"ConstructorInfo","isGeneric":"0","descriptionParts":["This is a ConstructorInfo"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Func","namespace":"System","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object[]","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Func<Object[], Object>"]}},{"namespace":"BH.Engine.Reflection","className":"Convert","memberName":"ToFunc","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"act","namespace":"System","memberName":"Action","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object[]","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Action<Object[]>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Func","namespace":"System","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object[]","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Func<Object[], Object>"]}},{"namespace":"BH.Engine.Reflection","className":"Convert","memberName":"ToFunc","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"func","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object[]","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Func<Object, Object[], Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Func","namespace":"System","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object[]","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Func<Object[], Object>"]}},{"namespace":"BH.Engine.Reflection","className":"Convert","memberName":"ToFunc","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"act","namespace":"System","memberName":"Action","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object[]","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Action<Object, Object[]>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Func","namespace":"System","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object[]","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Func<Object[], Object>"]}},{"namespace":"BH.Engine.Reflection","className":"Convert","memberName":"IToText","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"member","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"includePath","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Convert","memberName":"ToText","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"member","namespace":"System.Reflection","memberName":"MemberInfo","isGeneric":"0","descriptionParts":["This is a MemberInfo"],"isRequired":1,"isInterface":0},{"inputName":"includePath","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Convert","memberName":"ToText","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0},{"inputName":"includePath","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"paramStart","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"paramSeparator","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"paramEnd","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"removeIForInterface","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"includeParamNames","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"maxParams","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxChars","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"includeParamPaths","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Convert","memberName":"ToText","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"includePath","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"replaceGeneric","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"genericStart","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"genericSeparator","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"genericEnd","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Create","memberName":"MethodInfo","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"declaringType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"methodName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"paramTypes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MethodInfo","namespace":"System.Reflection","isGeneric":"0","descriptionParts":["This is a MethodInfo"]}},{"namespace":"BH.Engine.Reflection","className":"Create","memberName":"Output","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"item1","namespace":"BH.Engine.Reflection","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T>"]}},{"namespace":"BH.Engine.Reflection","className":"Create","memberName":"Output","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"item1","namespace":"BH.Engine.Reflection","memberName":"T1","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T1"],"isRequired":1,"isInterface":0},{"inputName":"item2","namespace":"BH.Engine.Reflection","memberName":"T2","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T2"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2>"]}},{"namespace":"BH.Engine.Reflection","className":"Create","memberName":"Output","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"item1","namespace":"BH.Engine.Reflection","memberName":"T1","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T1"],"isRequired":1,"isInterface":0},{"inputName":"item2","namespace":"BH.Engine.Reflection","memberName":"T2","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T2"],"isRequired":1,"isInterface":0},{"inputName":"item3","namespace":"BH.Engine.Reflection","memberName":"T3","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T3"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T3","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2, BH.Engine.Reflection.T3>"]}},{"namespace":"BH.Engine.Reflection","className":"Create","memberName":"Output","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"item1","namespace":"BH.Engine.Reflection","memberName":"T1","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T1"],"isRequired":1,"isInterface":0},{"inputName":"item2","namespace":"BH.Engine.Reflection","memberName":"T2","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T2"],"isRequired":1,"isInterface":0},{"inputName":"item3","namespace":"BH.Engine.Reflection","memberName":"T3","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T3"],"isRequired":1,"isInterface":0},{"inputName":"item4","namespace":"BH.Engine.Reflection","memberName":"T4","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T4"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T3","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T4","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2, BH.Engine.Reflection.T3, BH.Engine.Reflection.T4>"]}},{"namespace":"BH.Engine.Reflection","className":"Create","memberName":"Output","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"item1","namespace":"BH.Engine.Reflection","memberName":"T1","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T1"],"isRequired":1,"isInterface":0},{"inputName":"item2","namespace":"BH.Engine.Reflection","memberName":"T2","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T2"],"isRequired":1,"isInterface":0},{"inputName":"item3","namespace":"BH.Engine.Reflection","memberName":"T3","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T3"],"isRequired":1,"isInterface":0},{"inputName":"item4","namespace":"BH.Engine.Reflection","memberName":"T4","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T4"],"isRequired":1,"isInterface":0},{"inputName":"item5","namespace":"BH.Engine.Reflection","memberName":"T5","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T5"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T3","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T4","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T5","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2, BH.Engine.Reflection.T3, BH.Engine.Reflection.T4, BH.Engine.Reflection.T5>"]}},{"namespace":"BH.Engine.Reflection","className":"Create","memberName":"Output","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"item1","namespace":"BH.Engine.Reflection","memberName":"T1","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T1"],"isRequired":1,"isInterface":0},{"inputName":"item2","namespace":"BH.Engine.Reflection","memberName":"T2","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T2"],"isRequired":1,"isInterface":0},{"inputName":"item3","namespace":"BH.Engine.Reflection","memberName":"T3","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T3"],"isRequired":1,"isInterface":0},{"inputName":"item4","namespace":"BH.Engine.Reflection","memberName":"T4","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T4"],"isRequired":1,"isInterface":0},{"inputName":"item5","namespace":"BH.Engine.Reflection","memberName":"T5","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T5"],"isRequired":1,"isInterface":0},{"inputName":"item6","namespace":"BH.Engine.Reflection","memberName":"T6","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T6"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T3","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T4","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T5","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T6","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2, BH.Engine.Reflection.T3, BH.Engine.Reflection.T4, BH.Engine.Reflection.T5, BH.Engine.Reflection.T6>"]}},{"namespace":"BH.Engine.Reflection","className":"Create","memberName":"Output","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"item1","namespace":"BH.Engine.Reflection","memberName":"T1","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T1"],"isRequired":1,"isInterface":0},{"inputName":"item2","namespace":"BH.Engine.Reflection","memberName":"T2","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T2"],"isRequired":1,"isInterface":0},{"inputName":"item3","namespace":"BH.Engine.Reflection","memberName":"T3","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T3"],"isRequired":1,"isInterface":0},{"inputName":"item4","namespace":"BH.Engine.Reflection","memberName":"T4","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T4"],"isRequired":1,"isInterface":0},{"inputName":"item5","namespace":"BH.Engine.Reflection","memberName":"T5","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T5"],"isRequired":1,"isInterface":0},{"inputName":"item6","namespace":"BH.Engine.Reflection","memberName":"T6","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T6"],"isRequired":1,"isInterface":0},{"inputName":"item7","namespace":"BH.Engine.Reflection","memberName":"T7","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T7"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T3","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T4","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T5","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T6","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T7","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2, BH.Engine.Reflection.T3, BH.Engine.Reflection.T4, BH.Engine.Reflection.T5, BH.Engine.Reflection.T6, BH.Engine.Reflection.T7>"]}},{"namespace":"BH.Engine.Reflection","className":"Create","memberName":"Output","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"item1","namespace":"BH.Engine.Reflection","memberName":"T1","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T1"],"isRequired":1,"isInterface":0},{"inputName":"item2","namespace":"BH.Engine.Reflection","memberName":"T2","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T2"],"isRequired":1,"isInterface":0},{"inputName":"item3","namespace":"BH.Engine.Reflection","memberName":"T3","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T3"],"isRequired":1,"isInterface":0},{"inputName":"item4","namespace":"BH.Engine.Reflection","memberName":"T4","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T4"],"isRequired":1,"isInterface":0},{"inputName":"item5","namespace":"BH.Engine.Reflection","memberName":"T5","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T5"],"isRequired":1,"isInterface":0},{"inputName":"item6","namespace":"BH.Engine.Reflection","memberName":"T6","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T6"],"isRequired":1,"isInterface":0},{"inputName":"item7","namespace":"BH.Engine.Reflection","memberName":"T7","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T7"],"isRequired":1,"isInterface":0},{"inputName":"item8","namespace":"BH.Engine.Reflection","memberName":"T8","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T8"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T3","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T4","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T5","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T6","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T7","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T8","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2, BH.Engine.Reflection.T3, BH.Engine.Reflection.T4, BH.Engine.Reflection.T5, BH.Engine.Reflection.T6, BH.Engine.Reflection.T7, BH.Engine.Reflection.T8>"]}},{"namespace":"BH.Engine.Reflection","className":"Create","memberName":"Output","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"item1","namespace":"BH.Engine.Reflection","memberName":"T1","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T1"],"isRequired":1,"isInterface":0},{"inputName":"item2","namespace":"BH.Engine.Reflection","memberName":"T2","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T2"],"isRequired":1,"isInterface":0},{"inputName":"item3","namespace":"BH.Engine.Reflection","memberName":"T3","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T3"],"isRequired":1,"isInterface":0},{"inputName":"item4","namespace":"BH.Engine.Reflection","memberName":"T4","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T4"],"isRequired":1,"isInterface":0},{"inputName":"item5","namespace":"BH.Engine.Reflection","memberName":"T5","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T5"],"isRequired":1,"isInterface":0},{"inputName":"item6","namespace":"BH.Engine.Reflection","memberName":"T6","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T6"],"isRequired":1,"isInterface":0},{"inputName":"item7","namespace":"BH.Engine.Reflection","memberName":"T7","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T7"],"isRequired":1,"isInterface":0},{"inputName":"item8","namespace":"BH.Engine.Reflection","memberName":"T8","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T8"],"isRequired":1,"isInterface":0},{"inputName":"item9","namespace":"BH.Engine.Reflection","memberName":"T9","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T9"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T3","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T4","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T5","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T6","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T7","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T8","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T9","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2, BH.Engine.Reflection.T3, BH.Engine.Reflection.T4, BH.Engine.Reflection.T5, BH.Engine.Reflection.T6, BH.Engine.Reflection.T7, BH.Engine.Reflection.T8, BH.Engine.Reflection.T9>"]}},{"namespace":"BH.Engine.Reflection","className":"Create","memberName":"Output","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"item1","namespace":"BH.Engine.Reflection","memberName":"T1","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T1"],"isRequired":1,"isInterface":0},{"inputName":"item2","namespace":"BH.Engine.Reflection","memberName":"T2","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T2"],"isRequired":1,"isInterface":0},{"inputName":"item3","namespace":"BH.Engine.Reflection","memberName":"T3","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T3"],"isRequired":1,"isInterface":0},{"inputName":"item4","namespace":"BH.Engine.Reflection","memberName":"T4","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T4"],"isRequired":1,"isInterface":0},{"inputName":"item5","namespace":"BH.Engine.Reflection","memberName":"T5","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T5"],"isRequired":1,"isInterface":0},{"inputName":"item6","namespace":"BH.Engine.Reflection","memberName":"T6","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T6"],"isRequired":1,"isInterface":0},{"inputName":"item7","namespace":"BH.Engine.Reflection","memberName":"T7","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T7"],"isRequired":1,"isInterface":0},{"inputName":"item8","namespace":"BH.Engine.Reflection","memberName":"T8","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T8"],"isRequired":1,"isInterface":0},{"inputName":"item9","namespace":"BH.Engine.Reflection","memberName":"T9","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T9"],"isRequired":1,"isInterface":0},{"inputName":"item10","namespace":"BH.Engine.Reflection","memberName":"T10","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T10"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T3","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T4","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T5","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T6","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T7","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T8","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T9","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T10","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2, BH.Engine.Reflection.T3, BH.Engine.Reflection.T4, BH.Engine.Reflection.T5, BH.Engine.Reflection.T6, BH.Engine.Reflection.T7, BH.Engine.Reflection.T8, BH.Engine.Reflection.T9, BH.Engine.Reflection.T10>"]}},{"namespace":"BH.Engine.Reflection","className":"Create","memberName":"Type","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"silent","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Type","namespace":"System","isGeneric":"0","descriptionParts":["This is a Type"]}},{"namespace":"BH.Engine.Reflection","className":"Create","memberName":"GenericType","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"silent","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Type","namespace":"System","isGeneric":"0","descriptionParts":["This is a Type"]}},{"namespace":"BH.Engine.Reflection","className":"Create","memberName":"EngineType","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"silent","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Type","namespace":"System","isGeneric":"0","descriptionParts":["This is a Type"]}},{"namespace":"BH.Engine.Reflection","className":"Create","memberName":"AllTypes","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"silent","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"]}},{"namespace":"BH.Engine.Reflection","className":"Modify","memberName":"CastGeneric","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"source","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"genericType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Reflection","className":"Modify","memberName":"MakeFromGeneric","assemblyName":"Reflection_Engine.dll","descriptionParts":["Returns the constraint type from a generic type ",""],"inputs":[{"inputName":"genericType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The generic type. Type is generic if Type.IsGenericParameter or Type.ContrainsGenericparameters is true ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Type","namespace":"System","isGeneric":"0","descriptionParts":["The specific type constructed from the generic one ","This is a Type"]}},{"namespace":"BH.Engine.Reflection","className":"Modify","memberName":"MakeFromGeneric","assemblyName":"Reflection_Engine.dll","descriptionParts":["Replaces the generic parameters with parameters whose type is their constraint, and returns a new MethodInfo from those ",""],"inputs":[{"inputName":"genericMethod","namespace":"System.Reflection","memberName":"MethodInfo","isGeneric":"0","descriptionParts":["The generic method. Method is generic if MethodInfo.ContainsGenericParameter is true ","This is a MethodInfo"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MethodInfo","namespace":"System.Reflection","isGeneric":"0","descriptionParts":["The specific method constructed from the generic one ","This is a MethodInfo"]}},{"namespace":"BH.Engine.Reflection","className":"Modify","memberName":"SortExtensionMethods","assemblyName":"Reflection_Engine.dll","descriptionParts":["Sorts methods based on methods first parameters closeness to the type. First implementation will only rate exact type matching over non exact ",""],"inputs":[{"inputName":"methods","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The list of extentionmethods to sort. Will assume the first inputparameter of the methods to be of a type assignable from the provided Type ","This is a IEnumerable<MethodInfo>"],"isRequired":1,"isInterface":1},{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["Type to check closeness to. Assumed to match first input parameter of the methods ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Sorted methods ","This is a List<MethodInfo>"]}},{"namespace":"BH.Engine.Reflection","className":"Modify","memberName":"SetPropertyValue","assemblyName":"Reflection_Engine.dll","descriptionParts":["Set the value of a property with a given name for an object ",""],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["object to set the value for ","This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"propName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["name of the property to set the value of ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"value","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["new value of the property. ","If left empty, the value for that property will be cleared ","(enumerables will be emptied, primitives will be set to their default value, and objects will be set to null) ","This is a Object"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["New object with its property changed to the new value ","This is a Object"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"PropertyTypes","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"goDeep","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"PropertyTypes","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"goDeep","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"PropertyValue","assemblyName":"Reflection_Engine.dll","descriptionParts":["Get the value of a property with a given name from an object ",""],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["object to get the value from ","This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"propName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["name of the property to get the value from ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["value of the property ","This is a Object"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"ObjectsByType","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Object>"],"isRequired":1,"isInterface":1},{"inputName":"goDeep","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a Dictionary<Type, List<Object>>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"BHoMVersion","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"CurrentAssemblyFolder","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"BHoMFolder","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"EnumValues","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"enumValue","namespace":"BH.Engine.Reflection","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Reflection.T"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"EnumValues","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"enumType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"ImplementingTypes","assemblyName":"Reflection_Engine.dll","descriptionParts":["Returns all the loaded types that implement the specified interface. ",""],"inputs":[{"inputName":"interface","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"ICount","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"list","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Item","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Item","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"list","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsAssignableFromIncludeGenerics","assemblyName":"Reflection_Engine.dll","descriptionParts":["Checks if a type is assignable from another type by first checking the system IsAssignableFrom and, if this is false, checks if the assignable is generic and tests if it can be assigned as a generics version. ",""],"inputs":[{"inputName":"assignableTo","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The type to check if it can be assigned to. ","This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"assignableFrom","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The type to check if it can be assigned from. ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Returns true if 'assignableTo' is assignable from 'assignableFrom'. ","This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsAssignableToGenericType","assemblyName":"Reflection_Engine.dll","descriptionParts":["Checks if the given method can be assigned to the generic type. Returns false if the second argument is a non generic. ",""],"inputs":[{"inputName":"givenType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The type to check if it can be assigned to the generic type. ","This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"genericType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The generic type to check assignability to. ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Returns true if the given type can be assigned to the generic type. ","This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"DefaultValueWarning","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"property","namespace":"System.Reflection","memberName":"PropertyInfo","isGeneric":"0","descriptionParts":["This is a PropertyInfo"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsAutoConstructorAllowed","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsRequired","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"property","namespace":"System.Reflection","memberName":"PropertyInfo","isGeneric":"0","descriptionParts":["This is a PropertyInfo"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IIsExposed","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsExposed","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsExposed","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsExposed","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"delegate","namespace":"System","memberName":"Delegate","isGeneric":"0","descriptionParts":["This is a Delegate"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IItem","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"index","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Item","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"list","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<T>"],"isRequired":1,"isInterface":0},{"inputName":"index","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Item","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"output","namespace":"BH.oM.Reflection","memberName":"Output","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T>"],"isRequired":1,"isInterface":0},{"inputName":"index","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Item","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"output","namespace":"BH.oM.Reflection","memberName":"Output","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2>"],"isRequired":1,"isInterface":0},{"inputName":"index","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Item","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"output","namespace":"BH.oM.Reflection","memberName":"Output","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T3","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2, BH.Engine.Reflection.T3>"],"isRequired":1,"isInterface":0},{"inputName":"index","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Item","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"output","namespace":"BH.oM.Reflection","memberName":"Output","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T3","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T4","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2, BH.Engine.Reflection.T3, BH.Engine.Reflection.T4>"],"isRequired":1,"isInterface":0},{"inputName":"index","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Item","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"output","namespace":"BH.oM.Reflection","memberName":"Output","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T3","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T4","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T5","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2, BH.Engine.Reflection.T3, BH.Engine.Reflection.T4, BH.Engine.Reflection.T5>"],"isRequired":1,"isInterface":0},{"inputName":"index","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Item","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"output","namespace":"BH.oM.Reflection","memberName":"Output","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T3","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T4","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T5","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T6","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2, BH.Engine.Reflection.T3, BH.Engine.Reflection.T4, BH.Engine.Reflection.T5, BH.Engine.Reflection.T6>"],"isRequired":1,"isInterface":0},{"inputName":"index","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Item","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"output","namespace":"BH.oM.Reflection","memberName":"Output","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T3","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T4","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T5","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T6","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T7","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2, BH.Engine.Reflection.T3, BH.Engine.Reflection.T4, BH.Engine.Reflection.T5, BH.Engine.Reflection.T6, BH.Engine.Reflection.T7>"],"isRequired":1,"isInterface":0},{"inputName":"index","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Item","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"output","namespace":"BH.oM.Reflection","memberName":"Output","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T3","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T4","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T5","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T6","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T7","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T8","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2, BH.Engine.Reflection.T3, BH.Engine.Reflection.T4, BH.Engine.Reflection.T5, BH.Engine.Reflection.T6, BH.Engine.Reflection.T7, BH.Engine.Reflection.T8>"],"isRequired":1,"isInterface":0},{"inputName":"index","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Item","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"output","namespace":"BH.oM.Reflection","memberName":"Output","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T3","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T4","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T5","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T6","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T7","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T8","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T9","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2, BH.Engine.Reflection.T3, BH.Engine.Reflection.T4, BH.Engine.Reflection.T5, BH.Engine.Reflection.T6, BH.Engine.Reflection.T7, BH.Engine.Reflection.T8, BH.Engine.Reflection.T9>"],"isRequired":1,"isInterface":0},{"inputName":"index","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Item","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"output","namespace":"BH.oM.Reflection","memberName":"Output","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T1","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T2","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T3","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T4","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T5","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T6","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T7","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T8","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T9","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Reflection","memberName":"T10","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.Engine.Reflection.T1, BH.Engine.Reflection.T2, BH.Engine.Reflection.T3, BH.Engine.Reflection.T4, BH.Engine.Reflection.T5, BH.Engine.Reflection.T6, BH.Engine.Reflection.T7, BH.Engine.Reflection.T8, BH.Engine.Reflection.T9, BH.Engine.Reflection.T10>"],"isRequired":1,"isInterface":0},{"inputName":"index","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"NestedMethods","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<MethodInfo>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"OutputCount","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"output","namespace":"BH.oM.Reflection.Interface","memberName":"IOutput","isGeneric":"0","descriptionParts":["This is a BH.oM.Reflection.Interface.IOutput ","This can be of the following types: Output<T>, Output<T1, T2>, Output<T1, T2, T3>, Output<T1, T2, T3, T4>, Output<T1, T2, T3, T4, T5>, Output<T1, T2, T3, T4, T5, T6>, Output<T1, T2, T3, T4, T5, T6, T7>, Output<T1, T2, T3, T4, T5, T6, T7, T8>, Output<T1, T2, T3, T4, T5, T6, T7, T8, T9>, Output<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"OutputType","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Type","namespace":"System","isGeneric":"0","descriptionParts":["This is a Type"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"OutputAttributes","assemblyName":"Reflection_Engine.dll","descriptionParts":["Return names and descriptions of the multiple outputs of a C# method ",""],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Reflection.Attributes","memberName":"OutputAttribute","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<OutputAttribute>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsAutoGenerated","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsAutoGenerated","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"BHoMAssemblyList","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"Assembly","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Assembly>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"AllAssemblyList","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"Assembly","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Assembly>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsReleased","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsReleased","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsNotImplemented","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsNotImplemented","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsInterfaceMethod","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IIsDeprecated","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsDeprecated","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsDeprecated","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsMultipleOutputs","assemblyName":"Reflection_Engine.dll","descriptionParts":["Return true if a C# method has multiple outputs ",""],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"OutputName","assemblyName":"Reflection_Engine.dll","descriptionParts":["Return the custom name of the output of a C# method ",""],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"PropertyAbbreviation","assemblyName":"Reflection_Engine.dll","descriptionParts":["Get the abbreviated name of the given property from an object ",""],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["Object to query the property from ","This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"propName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of abbreviated property ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["Abbreviated property name ","This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"UnderlyingType","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"UnderlyingType","namespace":"BH.oM.Reflection","isGeneric":"0","descriptionParts":["This is a BH.oM.Reflection.UnderlyingType"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IUrl","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Url","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Url","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"UsedAssemblies","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"assembly","namespace":"System.Reflection","memberName":"Assembly","isGeneric":"0","descriptionParts":["This is a Assembly"],"isRequired":1,"isInterface":0},{"inputName":"onlyBHoM","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"Assembly","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Assembly>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"UsedNamespaces","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0},{"inputName":"onlyBHoM","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"maxDepth","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"UsedNamespaces","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"onlyBHoM","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"maxDepth","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"InheritedTypes","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"onlyBHoM","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"UsedTypes","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0},{"inputName":"onlyBHoM","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"UsedTypes","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"onlyBHoM","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"inheritedTypes","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"AllEvents","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Reflection.Debugging","memberName":"Event","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Event>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"CurrentEvents","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Reflection.Debugging","memberName":"Event","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Event>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"UsedMethods","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0},{"inputName":"onlyBHoM","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodBase","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<MethodBase>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"OutputDescription","assemblyName":"Reflection_Engine.dll","descriptionParts":["Return the custom description of the output of a C# method ",""],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"InputDescriptions","assemblyName":"Reflection_Engine.dll","descriptionParts":["Return the custom description of all inputs of a C# method ",""],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Dictionary where the keys are the names of the inputs, and the values their descriptions ","This is a Dictionary<String, String>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"DistinctProperties","assemblyName":"Reflection_Engine.dll","descriptionParts":["Extract all the distinct objects of a specific type from the properties of a list of objects ",""],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of objects to extract the properties from ","This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"propertyType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["Type of property to extract ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Object>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"DistinctProperties","assemblyName":"Reflection_Engine.dll","descriptionParts":["Extract all the distinct objects of a specific type P from the properties of a list of objects ",""],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Reflection","memberName":"P","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<P>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsLegal","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodInfo","isGeneric":"0","descriptionParts":["This is a MethodInfo"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IsLegal","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Path","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Path","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["This is a MethodBase"],"isRequired":1,"isInterface":0},{"inputName":"userReturnTypeForCreate","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"useExtentionType","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"ExtensionMethods","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"methodName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<MethodInfo>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"BHoMMethodList","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<MethodInfo>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"AllMethodList","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodBase","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<MethodBase>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"ExternalMethodList","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodBase","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<MethodBase>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"BHoMEnumList","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Description","assemblyName":"Reflection_Engine.dll","descriptionParts":["Return the custom description of a C# class member (e.g. property, method, field) ",""],"inputs":[{"inputName":"member","namespace":"System.Reflection","memberName":"MemberInfo","isGeneric":"0","descriptionParts":["This is a MemberInfo"],"isRequired":1,"isInterface":0},{"inputName":"addTypeDescription","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Description","assemblyName":"Reflection_Engine.dll","descriptionParts":["Return the custom description of a C# method argument ",""],"inputs":[{"inputName":"parameter","namespace":"System.Reflection","memberName":"ParameterInfo","isGeneric":"0","descriptionParts":["This is a ParameterInfo"],"isRequired":1,"isInterface":0},{"inputName":"addTypeDescription","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Description","assemblyName":"Reflection_Engine.dll","descriptionParts":["Return the custom description of a C# class ",""],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Description","assemblyName":"Reflection_Engine.dll","descriptionParts":["Return the custom description of a C# class ",""],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"classification","namespace":"BH.oM.Reflection.Attributes","memberName":"InputClassificationAttribute","isGeneric":"0","descriptionParts":["This is a BH.oM.Reflection.Attributes.InputClassificationAttribute"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IDescription","assemblyName":"Reflection_Engine.dll","descriptionParts":["Return the custom description of a C# element such as Type, MemberInfo, and ParamaterInfo ",""],"inputs":[{"inputName":"item","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This item can either be a Type, a MemberInfo, or a ParamaterInfo ","This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"IDescription","assemblyName":"Reflection_Engine.dll","descriptionParts":["Return the custom description of a classification attribute. ",""],"inputs":[{"inputName":"classification","namespace":"BH.oM.Reflection.Attributes","memberName":"InputClassificationAttribute","isGeneric":"0","descriptionParts":["Classification attribute to be queried for description. ","This is a BH.oM.Reflection.Attributes.InputClassificationAttribute"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Description","assemblyName":"Reflection_Engine.dll","descriptionParts":["Return the custom description of a quantity attribute. ",""],"inputs":[{"inputName":"quantity","namespace":"BH.oM.Quantities.Attributes","memberName":"QuantityAttribute","isGeneric":"0","descriptionParts":["Quantity attribute to be queried for description. ","This is a BH.oM.Quantities.Attributes.QuantityAttribute: ","Dimensional quantity as defined by the International System of Quantities"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Description","assemblyName":"Reflection_Engine.dll","descriptionParts":["Return the description of a folder path attribute. ",""],"inputs":[{"inputName":"folderPath","namespace":"BH.oM.Reflection.Attributes","memberName":"FolderPathAttribute","isGeneric":"0","descriptionParts":["Folder path attribute to be queried for description. ","This is a BH.oM.Reflection.Attributes.FolderPathAttribute: ","Path to a folder in the client's file system."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"Description","assemblyName":"Reflection_Engine.dll","descriptionParts":["Return the description of a file path attribute. ",""],"inputs":[{"inputName":"filePath","namespace":"BH.oM.Reflection.Attributes","memberName":"FilePathAttribute","isGeneric":"0","descriptionParts":["File path attribute to be queried for description. ","This is a BH.oM.Reflection.Attributes.FilePathAttribute: ","Path to a folder in the client's file system."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"BHoMInterfaceList","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"BHoMTypeList","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"AdapterTypeList","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"AllTypeList","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"EngineTypeList","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"BHoMTypeDictionary","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a Dictionary<String, List<Type>>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"PropertyDictionary","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<String, Object>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"PropertyDictionary","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"BH.oM.Base","memberName":"CustomObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.CustomObject"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<String, Object>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"PropertyNames","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"PropertyNames","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"PropertyObjects","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"goDeep","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"]}},{"namespace":"BH.Engine.Reflection","className":"Query","memberName":"PropertyObjects","assemblyName":"Reflection_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Object>"],"isRequired":1,"isInterface":1},{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a Dictionary<Type, List<Object>>"]}},{"namespace":"BH.Engine.Acoustic","className":"Create","memberName":"Panel","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Panel"]}},{"namespace":"BH.Engine.Acoustic","className":"Create","memberName":"Panel","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"r","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"Frequency","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<Frequency, Double>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Panel"]}},{"namespace":"BH.Engine.Acoustic","className":"Create","memberName":"Rasti","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"value","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"receiverID","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Rasti","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Rasti"]}},{"namespace":"BH.Engine.Acoustic","className":"Create","memberName":"Ray","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"path","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"source","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"target","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"bouncingPattern","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Int32>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Ray","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Ray"]}},{"namespace":"BH.Engine.Acoustic","className":"Create","memberName":"Ray","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"speaker","namespace":"BH.oM.Acoustic","memberName":"Speaker","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Speaker"],"isRequired":1,"isInterface":0},{"inputName":"receiver","namespace":"BH.oM.Acoustic","memberName":"Receiver","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Receiver"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Ray","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Ray"]}},{"namespace":"BH.Engine.Acoustic","className":"Create","memberName":"Receiver","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Receiver","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Receiver"]}},{"namespace":"BH.Engine.Acoustic","className":"Create","memberName":"Receiver","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"category","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Receiver","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Receiver"]}},{"namespace":"BH.Engine.Acoustic","className":"Create","memberName":"Room","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"area","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"volume","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Room","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Room: ","An acoustics room is defined by the criteria related to the sound within the space, as well as its geometry"]}},{"namespace":"BH.Engine.Acoustic","className":"Create","memberName":"Room","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"receivers","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"Receiver","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Receiver>"],"isRequired":1,"isInterface":0},{"inputName":"area","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"volume","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Room","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Room: ","An acoustics room is defined by the criteria related to the sound within the space, as well as its geometry"]}},{"namespace":"BH.Engine.Acoustic","className":"Create","memberName":"RT60","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"value","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"receiverID","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"speakerID","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"RT60","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.RT60"]}},{"namespace":"BH.Engine.Acoustic","className":"Create","memberName":"SnRatio","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"value","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"receiverID","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"speakerID","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"frequency","namespace":"BH.oM.Acoustic","memberName":"Frequency","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Frequency ","Enum values: ","-Hz63 ","-Hz125 ","-Hz250 ","-Hz500 ","-Hz1000 ","-Hz2000 ","-Hz4000 ","-Hz8000 ","-Hz16000 ","-Sum"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SnRatio","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.SnRatio"]}},{"namespace":"BH.Engine.Acoustic","className":"Create","memberName":"SoundLevel","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"value","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"receiverID","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"speakerID","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"frequency","namespace":"BH.oM.Acoustic","memberName":"Frequency","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Frequency ","Enum values: ","-Hz63 ","-Hz125 ","-Hz250 ","-Hz500 ","-Hz1000 ","-Hz2000 ","-Hz4000 ","-Hz8000 ","-Hz16000 ","-Sum"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SoundLevel","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.SoundLevel"]}},{"namespace":"BH.Engine.Acoustic","className":"Create","memberName":"Speaker","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"emissiveLevel","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"category","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Speaker","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Speaker"]}},{"namespace":"BH.Engine.Acoustic","className":"Create","memberName":"Speaker","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"category","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"gains","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"Frequency","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<Frequency, Double>"],"isRequired":0,"isInterface":0},{"inputName":"directivity","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"Frequency","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double[,]","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<Frequency, Double[,]>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Speaker","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Speaker"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"DirectRays","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"receivers","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"Receiver","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Receiver>"],"isRequired":1,"isInterface":0},{"inputName":"speakers","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"Speaker","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Speaker>"],"isRequired":1,"isInterface":0},{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Panel>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"Ray","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Ray>"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"DirectSound","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"receiver","namespace":"BH.oM.Acoustic","memberName":"Receiver","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Receiver"],"isRequired":1,"isInterface":0},{"inputName":"speakers","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"Speaker","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Speaker>"],"isRequired":1,"isInterface":0},{"inputName":"room","namespace":"BH.oM.Acoustic","memberName":"Room","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Room: ","An acoustics room is defined by the criteria related to the sound within the space, as well as its geometry"],"isRequired":1,"isInterface":0},{"inputName":"revTime","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"frequency","namespace":"BH.oM.Acoustic","memberName":"Frequency","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Frequency ","Enum values: ","-Hz63 ","-Hz125 ","-Hz250 ","-Hz500 ","-Hz1000 ","-Hz2000 ","-Hz4000 ","-Hz8000 ","-Hz16000 ","-Sum"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SoundLevel","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.SoundLevel"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"GainFactor","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"speaker","namespace":"BH.oM.Acoustic","memberName":"Speaker","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Speaker"],"isRequired":1,"isInterface":0},{"inputName":"angle","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"frequency","namespace":"BH.oM.Acoustic","memberName":"Frequency","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Frequency ","Enum values: ","-Hz63 ","-Hz125 ","-Hz250 ","-Hz500 ","-Hz1000 ","-Hz2000 ","-Hz4000 ","-Hz8000 ","-Hz16000 ","-Sum"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"Length","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ray","namespace":"BH.oM.Acoustic","memberName":"Ray","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Ray"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"Order","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ray","namespace":"BH.oM.Acoustic","memberName":"Ray","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Ray"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"Plane","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"panel","namespace":"BH.oM.Acoustic","memberName":"Panel","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Panel"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"TravelTime","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ray","namespace":"BH.oM.Acoustic","memberName":"Ray","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Ray"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"Rasti","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"receiver","namespace":"BH.oM.Acoustic","memberName":"Receiver","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Receiver"],"isRequired":1,"isInterface":0},{"inputName":"speakers","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"Speaker","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Speaker>"],"isRequired":1,"isInterface":0},{"inputName":"room","namespace":"BH.oM.Acoustic","memberName":"Room","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Room: ","An acoustics room is defined by the criteria related to the sound within the space, as well as its geometry"],"isRequired":1,"isInterface":0},{"inputName":"sabineTime","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"envNoise","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Rasti","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Rasti"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"ReverbDistance","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"room","namespace":"BH.oM.Acoustic","memberName":"Room","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Room: ","An acoustics room is defined by the criteria related to the sound within the space, as well as its geometry"],"isRequired":1,"isInterface":0},{"inputName":"revTime","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"RoomConstant","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"room","namespace":"BH.oM.Acoustic","memberName":"Room","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Room: ","An acoustics room is defined by the criteria related to the sound within the space, as well as its geometry"],"isRequired":1,"isInterface":0},{"inputName":"sabineTime","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"SabineTime","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"room","namespace":"BH.oM.Acoustic","memberName":"Room","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Room: ","An acoustics room is defined by the criteria related to the sound within the space, as well as its geometry"],"isRequired":1,"isInterface":0},{"inputName":"roomAbsorbtion","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"SignalToNoise","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"receiver","namespace":"BH.oM.Acoustic","memberName":"Receiver","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Receiver"],"isRequired":1,"isInterface":0},{"inputName":"speakers","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"Speaker","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Speaker>"],"isRequired":1,"isInterface":0},{"inputName":"room","namespace":"BH.oM.Acoustic","memberName":"Room","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Room: ","An acoustics room is defined by the criteria related to the sound within the space, as well as its geometry"],"isRequired":1,"isInterface":0},{"inputName":"sabineTime","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"envNoise","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"f","namespace":"BH.oM.Acoustic","memberName":"Frequency","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Frequency ","Enum values: ","-Hz63 ","-Hz125 ","-Hz250 ","-Hz500 ","-Hz1000 ","-Hz2000 ","-Hz4000 ","-Hz8000 ","-Hz16000 ","-Sum"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SnRatio","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.SnRatio"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"SoundLevel","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ray","namespace":"BH.oM.Acoustic","memberName":"Ray","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Ray"],"isRequired":1,"isInterface":0},{"inputName":"frequency","namespace":"BH.oM.Acoustic","memberName":"Frequency","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Frequency ","Enum values: ","-Hz63 ","-Hz125 ","-Hz250 ","-Hz500 ","-Hz1000 ","-Hz2000 ","-Hz4000 ","-Hz8000 ","-Hz16000 ","-Sum"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SoundLevel","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.SoundLevel"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"SoundLevelsSum","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"spl","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Double>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"SoundLevelsSum","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"spl","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"SoundLevel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<SoundLevel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SoundLevel","namespace":"BH.oM.Acoustic","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.SoundLevel"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"TimeConstant","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"revTime","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"TimeConstant","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"revTime","namespace":"BH.oM.Acoustic","memberName":"RT60","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.RT60"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Acoustic","className":"Query","memberName":"IsObstructed","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ray","namespace":"BH.oM.Acoustic","memberName":"Ray","isGeneric":"0","descriptionParts":["This is a BH.oM.Acoustic.Ray"],"isRequired":1,"isInterface":0},{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Acoustic","className":"Modify","memberName":"FilterRays","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rays","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"Ray","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Ray>"],"isRequired":1,"isInterface":0},{"inputName":"sourceFilter","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Int32>"],"isRequired":0,"isInterface":0},{"inputName":"targetFilter","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Int32>"],"isRequired":0,"isInterface":0},{"inputName":"panelFilter","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Int32>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"Ray","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Ray>"]}},{"namespace":"BH.Engine.Acoustic","className":"Modify","memberName":"FilterVisibleRays","assemblyName":"Acoustic_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rays","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"Ray","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Ray>"],"isRequired":1,"isInterface":0},{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Acoustic","memberName":"Ray","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Ray>"]}},{"namespace":"BH.Engine.Adapter","className":"Query","memberName":"HasAdapterIdFragment","assemblyName":"Adapter_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"iBHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"fragmentType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Adapter","className":"Query","memberName":"AdapterId","assemblyName":"Adapter_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"adapterIdFragmentType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Adapter","className":"Query","memberName":"AdapterId","assemblyName":"Adapter_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"adapterIdFragmentType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"T","namespace":"BH.Engine.Adapter","isGeneric":"0","descriptionParts":["This is a BH.Engine.Adapter.T"]}},{"namespace":"BH.Engine.Adapter","className":"Query","memberName":"AdapterMethods","assemblyName":"Adapter_Engine.dll","descriptionParts":["Returns a list of MethodInfo with all methods contained in classes whose name ends with `Adapter`. ",""],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<MethodInfo>"]}},{"namespace":"BH.Engine.Adapter","className":"Query","memberName":"AdaptersCRUDNamedMethods","assemblyName":"Adapter_Engine.dll","descriptionParts":["Returns a collection with all CRUD-named methods found in all the Adapters loaded at runtime, grouped per CRUD type.CRUD-named means whose name contains any of the CRUD keywords: `Create`, `Read`, `Update`, `Delete`. ",""],"inputs":[],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodInfo","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["Dictionary with string key, one of: `Create`, `Read`, `Update`, `Delete`; value is the List of CRUD methods. ","This is a Dictionary<String, List<MethodInfo>>"]}},{"namespace":"BH.Engine.Adapter","className":"Query","memberName":"CRUDcompatibleTypes","assemblyName":"Adapter_Engine.dll","descriptionParts":["Returns a collection of all Types that are supported by some CRUD action, grouped per object type. ",""],"inputs":[],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System.Collections.Generic","memberName":"Dictionary","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"MethodInfo","isInterface":"0","isGeneric":"0"}]}]}],"descriptionParts":["Dictionary with string key, one of: `Create`, `Read`, `Update`, `Delete`;","value is a Dictionary with key: BHoM Type of with some CRUD method that supports it; value: list of CRUD methods compatible with that Type. ","This is a Dictionary<String, Dictionary<Type, List<MethodInfo>>>"]}},{"namespace":"BH.Engine.Adapter","className":"Query","memberName":"GetComparerForType","assemblyName":"Adapter_Engine.dll","descriptionParts":["Returns the comparer to be used with a certain object type. ",""],"inputs":[{"inputName":"bHoMAdapter","namespace":"BH.oM.Adapter","memberName":"IBHoMAdapter","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapter.IBHoMAdapter ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"actionConfig","namespace":"BH.oM.Adapter","memberName":"ActionConfig","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapter.ActionConfig: ","Configurations specific for an Adapter Action (Push, Pull, etc).","Consider that your tookit might have a more specific implementation available. Try to look for [your toolkit name]ActionConfig."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IEqualityComparer","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Adapter","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEqualityComparer<T> ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapter","className":"Query","memberName":"GetDependencyTypes","assemblyName":"Adapter_Engine.dll","descriptionParts":["Returns the dependency types for a certain object type. ",""],"inputs":[{"inputName":"bhomAdapter","namespace":"BH.oM.Adapter","memberName":"IBHoMAdapter","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapter.IBHoMAdapter ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"]}},{"namespace":"BH.Engine.Adapter","className":"Query","memberName":"GetFullFileName","assemblyName":"Adapter_Engine.dll","descriptionParts":["Queries the full file path to where the file is located on your computer, for use with the file settings ",""],"inputs":[{"inputName":"fileSettings","namespace":"BH.oM.Adapter","memberName":"FileSettings","isGeneric":"0","descriptionParts":["The file settings object which contains the file path data ","This is a BH.oM.Adapter.FileSettings: ","The fileSettings, file name and directory, to use with an adapter for push and pull"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The full file path for the file settings ","This is a String"]}},{"namespace":"BH.Engine.Adapter","className":"Query","memberName":"GetCopyPropertiesModules","assemblyName":"Adapter_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"adapter","namespace":"BH.oM.Adapter","memberName":"IBHoMAdapter","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapter.IBHoMAdapter ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapter","memberName":"ICopyPropertiesModule","isInterface":"1","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Adapter","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<ICopyPropertiesModule<T>> ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapter","className":"Query","memberName":"GetDependencyObjects","assemblyName":"Adapter_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Adapter","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"dependencyTypes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Type>"],"isRequired":1,"isInterface":0},{"inputName":"tag","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"},{"namespace":"System.Collections","memberName":"IEnumerable","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<Type, IEnumerable>"]}},{"namespace":"BH.Engine.Adapter","className":"Modify","memberName":"SetAdapterId","assemblyName":"Adapter_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"adapterIdFragmentType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"id","namespace":"BH.Engine.Adapter","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Adapter.T"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Adapter","className":"Modify","memberName":"SetAdapterId","assemblyName":"Adapter_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"id","namespace":"BH.oM.Base","memberName":"IAdapterId","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IAdapterId ","This can be of the following types: ETABSId, GSAId, LusasId, MidasCivilId, RAMId, RFEMId, RobotId, SAP2000Id"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Analytical","className":"Convert","memberName":"ToDataVizObjects","assemblyName":"Analytical_Engine.dll","descriptionParts":["Convert a graph to CustomOBjects for visualisation. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to convert. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"CustomObject","isInterface":"0","isGeneric":"0"}],"descriptionParts":["CUstom objects representing the Graph. ","This is a List<CustomObject>"]}},{"namespace":"BH.Engine.Analytical","className":"Convert","memberName":"ToDotFormat","assemblyName":"Analytical_Engine.dll","descriptionParts":["Convert a graph to DotFormat for visualisation. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to convert. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"shape","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The optional DotFormat shape to represent Graph entities. Default is 'box'. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"fontsize","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The optional DotFormat fontsize for text in the DotFormat. Default is 12. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The DotFormat string that can be copied and pasted in on line viewers like https://visjs.github.io/vis-network/examples/network/data/dotLanguage/dotPlayground.html for quick visualisation. ","This is a String"]}},{"namespace":"BH.Engine.Analytical","className":"Convert","memberName":"IToRelation","assemblyName":"Analytical_Engine.dll","descriptionParts":["Convert an IDependencyFragment to relations. ",""],"inputs":[{"inputName":"dependency","namespace":"BH.oM.Analytical.Fragments","memberName":"IDependencyFragment","isGeneric":"0","descriptionParts":["The IDependencyFragment to convert. ","This is a BH.oM.Analytical.Fragments.IDependencyFragment: ","Interface common to all DependencyFragments. ","This can be of the following types: SourcesDependencyFragment, TargetsDependencyFragment"],"isRequired":1,"isInterface":1},{"inputName":"owningEntity","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["The Guid of the entity from where the fragment was extracted. ","This is a Guid"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Analytical.Elements","memberName":"IRelation","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Collection of the converted relations. ","This is a List<IRelation> ","This can be of the following types: Relation"]}},{"namespace":"BH.Engine.Analytical","className":"Convert","memberName":"ToRelation","assemblyName":"Analytical_Engine.dll","descriptionParts":["Convert a SourcesDependencyFragment to relations. ",""],"inputs":[{"inputName":"dependency","namespace":"BH.oM.Analytical.Fragments","memberName":"SourcesDependencyFragment","isGeneric":"0","descriptionParts":["The DependencyFragment to convert. ","This is a BH.oM.Analytical.Fragments.SourcesDependencyFragment: ","Dependency fragment used to define one or more Relations that originate at the specified sources and use the IBHoMObject owning this fragment as the target."],"isRequired":1,"isInterface":0},{"inputName":"owningEntity","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["The Guid of the entity from where the fragment was extracted. ","This is a Guid"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Analytical.Elements","memberName":"IRelation","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Collection of the converted relations. ","This is a List<IRelation> ","This can be of the following types: Relation"]}},{"namespace":"BH.Engine.Analytical","className":"Convert","memberName":"ToRelation","assemblyName":"Analytical_Engine.dll","descriptionParts":["Convert a TargetsDependencyFragment to relations. ",""],"inputs":[{"inputName":"dependency","namespace":"BH.oM.Analytical.Fragments","memberName":"TargetsDependencyFragment","isGeneric":"0","descriptionParts":["The DependencyFragment to convert. ","This is a BH.oM.Analytical.Fragments.TargetsDependencyFragment: ","Dependency fragment used to define one or more Relations that terminate at the specified targets and use the IBHoMObject owning this fragment as the source."],"isRequired":1,"isInterface":0},{"inputName":"owningEntity","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["The Guid of the entity from where the fragment was extracted. ","This is a Guid"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Analytical.Elements","memberName":"IRelation","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Collection of the converted relations. ","This is a List<IRelation> ","This can be of the following types: Relation"]}},{"namespace":"BH.Engine.Analytical","className":"Convert","memberName":"ToRelation","assemblyName":"Analytical_Engine.dll","descriptionParts":["Convert an IBHoMObject to a collection of relations. ",""],"inputs":[{"inputName":"obj","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["The IBHoMObject to convert. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Analytical.Elements","memberName":"IRelation","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Collection of the converted relations. ","This is a List<IRelation> ","This can be of the following types: Relation"]}},{"namespace":"BH.Engine.Analytical","className":"Convert","memberName":"ToRelation","assemblyName":"Analytical_Engine.dll","descriptionParts":["Convert an ILink to a collection of relations. ",""],"inputs":[{"inputName":"link","namespace":"BH.oM.Analytical.Elements","memberName":"ILink","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TNode","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The ILink to convert. ","This is a BH.oM.Analytical.Elements.ILink<BH.Engine.Analytical.TNode> ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"linkDirection","namespace":"BH.oM.Analytical.Elements","memberName":"RelationDirection","isGeneric":"0","descriptionParts":["The optional RelationDirection defining the direction of the relation. Default is RelationDirection.Forwards. ","This is a BH.oM.Analytical.Elements.RelationDirection ","Enum values: ","-Forwards ","-Backwards ","-Both"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Analytical.Elements","memberName":"IRelation","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Collection of the converted relations. ","This is a List<IRelation> ","This can be of the following types: Relation"]}},{"namespace":"BH.Engine.Analytical","className":"Convert","memberName":"ToRelation","assemblyName":"Analytical_Engine.dll","descriptionParts":["Convert a an ILink to a single forward direction relation. ",""],"inputs":[{"inputName":"link","namespace":"BH.oM.Analytical.Elements","memberName":"ILink","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TNode","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The ILink to convert. ","This is a BH.oM.Analytical.Elements.ILink<BH.Engine.Analytical.TNode> ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IRelation","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The converted relation. ","This is a BH.oM.Analytical.Elements.IRelation: ","Interface common to all Relation objects. ","This can be of the following types: Relation"]}},{"namespace":"BH.Engine.Analytical","className":"Create","memberName":"ComparisonConfig","assemblyName":"Analytical_Engine.dll","descriptionParts":["Create a simple ComparisonConfig. ",""],"inputs":[{"inputName":"numericTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Tolerance used to determine numerical differences.","Defaults to Tolerance.Distance (1e-6). ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"propertyNamesToConsider","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["By default, all the properties of the objects are considered in determining uniqueness.","Here you can specify a list of property names. Only the properties with a name matching any of this list will be considered.","Works only for top-level properties.","E.g., if you input 'Name' only the differences in terms of name will be returned. ","This is a List<String>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ComparisonConfig","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.ComparisonConfig: ","Settings to determine the uniqueness of an Object."]}},{"namespace":"BH.Engine.Analytical","className":"Create","memberName":"Graph","assemblyName":"Analytical_Engine.dll","descriptionParts":["Create a graph from a collection of IBHoMObjects, property names and decimal places to determine unique graph entities. ",""],"inputs":[{"inputName":"entities","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of IBHoMOBjects to use as Graph entities. Entities should include DependencyFragments to determine the Graph Relations. ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0},{"inputName":"comparisonConfig","namespace":"BH.oM.Base","memberName":"ComparisonConfig","isGeneric":"0","descriptionParts":["Settings to determine the uniqueness of entities. ","This is a BH.oM.Base.ComparisonConfig: ","Settings to determine the uniqueness of an Object."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Graph","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["Graph. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."]}},{"namespace":"BH.Engine.Analytical","className":"Create","memberName":"Graph","assemblyName":"Analytical_Engine.dll","descriptionParts":["Create a graph from a collection of IRelations, property names and decimal places to determine unique graph entities. ",""],"inputs":[{"inputName":"relations","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Analytical.Elements","memberName":"IRelation","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of IRelations to use as Graph Relations. Relations should include sub Graphs containing the entities to be used in the Graph. ","This is a List<IRelation> ","This can be of the following types: Relation"],"isRequired":1,"isInterface":0},{"inputName":"comparisonConfig","namespace":"BH.oM.Base","memberName":"ComparisonConfig","isGeneric":"0","descriptionParts":["Settings to determine the uniqueness of entities. ","This is a BH.oM.Base.ComparisonConfig: ","Settings to determine the uniqueness of an Object."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Graph","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["Graph. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."]}},{"namespace":"BH.Engine.Analytical","className":"Create","memberName":"Graph","assemblyName":"Analytical_Engine.dll","descriptionParts":["Create a graph from a collection of IBHoMObjects, a collection of IRelations, property names and decimal places to determine unique graph entities. ",""],"inputs":[{"inputName":"entities","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional collection of IBHoMOBjects to use as Graph entities. Entities can include DependencyFragments to determine the Graph Relations. ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":0,"isInterface":0},{"inputName":"relations","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Analytical.Elements","memberName":"IRelation","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional collection of IRelations to use as Graph Relations. Relations can include sub Graphs containing the entities to be used in the Graph. ","This is a List<IRelation> ","This can be of the following types: Relation"],"isRequired":0,"isInterface":0},{"inputName":"comparisonConfig","namespace":"BH.oM.Base","memberName":"ComparisonConfig","isGeneric":"0","descriptionParts":["Settings to determine the uniqueness of entities. ","This is a BH.oM.Base.ComparisonConfig: ","Settings to determine the uniqueness of an Object."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Graph","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["Graph. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."]}},{"namespace":"BH.Engine.Analytical","className":"Create","memberName":"Graph","assemblyName":"Analytical_Engine.dll","descriptionParts":["Create a graph from a collection of ICurves. ",""],"inputs":[{"inputName":"connectingCurves","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of ICurve representing the Graph Relations. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"prototypeEntity","namespace":"BH.Engine.Analytical","memberName":"T","isGeneric":"0","descriptionParts":["An IElement0D to be used as the prototype of all entities in the Graph. ","This is a BH.Engine.Analytical.T"],"isRequired":1,"isInterface":0},{"inputName":"entities","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement0D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional collection of IBHoMObjects to use as Graph entities. ","This is a List<IElement0D> ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":0,"isInterface":0},{"inputName":"snappingTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional tolerance used when comparing connectingCurves end points and provided entities. Default is Tolerance.Distance (1e-6). ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"relationDirection","namespace":"BH.oM.Analytical.Elements","memberName":"RelationDirection","isGeneric":"0","descriptionParts":["Optional RelationDirection used to determine the direction that relations can be traversed. Defaults to Forward indicating traversal is from source to target. ","This is a BH.oM.Analytical.Elements.RelationDirection ","Enum values: ","-Forwards ","-Backwards ","-Both"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Graph","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["Graph. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."]}},{"namespace":"BH.Engine.Analytical","className":"Create","memberName":"Graph","assemblyName":"Analytical_Engine.dll","descriptionParts":["Create a random graph from a randomly generated entities within a BoundingBox. ",""],"inputs":[{"inputName":"entityCount","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Total number of entities. ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"branching","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Total number of Relations between an entity and its closest neighbours. ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"boundingBox","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["BoundingBox defining the spatial limits of the Graph. ","This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0},{"inputName":"prototypeEntity","namespace":"BH.oM.Dimensional","memberName":"IElement0D","isGeneric":"0","descriptionParts":["An IElement0D to be used as the prototype of all entities in the Graph. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional minimum distance permitted between randomly generated entities. Default is Tolerance.Distance (1e-6). ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"relationDirection","namespace":"BH.oM.Analytical.Elements","memberName":"RelationDirection","isGeneric":"0","descriptionParts":["Optional RelationDirection used to determine the direction that relations can be traversed. Defaults to Forward indicating traversal is from source to target. ","This is a BH.oM.Analytical.Elements.RelationDirection ","Enum values: ","-Forwards ","-Backwards ","-Both"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Graph","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["Graph. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."]}},{"namespace":"BH.Engine.Analytical","className":"Create","memberName":"Graph","assemblyName":"Analytical_Engine.dll","descriptionParts":["Create a random graph within an orthogonal three-dimensional grid of Points. ",""],"inputs":[{"inputName":"width","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Number of Points in the X direction. ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Number of Points in the Y direction. ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"height","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Number of Points in the Z direction. ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"cellSize","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance between points in X, Y and Z directions. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"prototypeEntity","namespace":"BH.Engine.Analytical","memberName":"T","isGeneric":"0","descriptionParts":["An IElement0D to be used as the prototype of all entities in the Graph. ","This is a BH.Engine.Analytical.T"],"isRequired":1,"isInterface":0},{"inputName":"relationDirection","namespace":"BH.oM.Analytical.Elements","memberName":"RelationDirection","isGeneric":"0","descriptionParts":["Optional RelationDirection used to determine the direction that relations can be traversed. Defaults to Forward indicating traversal is from source to target. ","This is a BH.oM.Analytical.Elements.RelationDirection ","Enum values: ","-Forwards ","-Backwards ","-Both"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Graph","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["Graph. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."]}},{"namespace":"BH.Engine.Analytical","className":"Create","memberName":"Relation","assemblyName":"Analytical_Engine.dll","descriptionParts":["Create a Relation from a source IBHoMObject,target IBHoMObject, subgraph, weight and curve. ",""],"inputs":[{"inputName":"source","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["The source IBHoMOBject. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"target","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["The target IBHoMOBject. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"subgraph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["Optional sub Graph of this Relation. Default is a new Graph. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":0,"isInterface":0},{"inputName":"weight","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional weight for the Relation. Default is 1. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":1}],"outputs":{"memberName":"Relation","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["Optional Curve that represents the link between the source and target entities Default is null. ","This is a BH.oM.Analytical.Elements.Relation: ","Base class for all Relation classes."]}},{"namespace":"BH.Engine.Analytical","className":"Create","memberName":"NewInternalElement2D","assemblyName":"Analytical_Engine.dll","descriptionParts":["Creates a new Element2D, appropriate to the input type. For this case the appropriate type for the Panel will be a new Opening, in the position provided. ","Method required for any IElement2D that contians internal IElement2Ds. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Analytical.Elements","memberName":"IPanel","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Analytical","memberName":"TOpening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Panel just used to determine the appropriate type of IElement2D to create. ","This is a BH.oM.Analytical.Elements.IPanel<BH.Engine.Analytical.TEdge, BH.Engine.Analytical.TOpening> ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IElement2D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["The created Opening as a IElement2D. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"IRelationCurves","assemblyName":"Analytical_Engine.dll","descriptionParts":["Modifies a Graph by ensuring all relations have a representative ICurve. If no curve has been provided a line is created between the source and target entities. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to modify. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"projection","namespace":"BH.oM.Analytical.Elements","memberName":"IProjection","isGeneric":"0","descriptionParts":["The IProjection required of the Graph. ","This is a BH.oM.Analytical.Elements.IProjection: ","Interface common to all graph projections. ","This can be of the following types: GeometricProjection, GraphicalProjection, SpatialProjection"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Graph","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The modified Graph where all relations have a representative ICurve. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"RemoveEntity","assemblyName":"Analytical_Engine.dll","descriptionParts":["Modifies a Graph by removing the specified entity and any dependent relations. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to modify. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"entityToRemove","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["The IBHoMObject entity to remove. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Graph","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The modified Graph with the specified entity and any dependent relations removed. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"RemoveEntity","assemblyName":"Analytical_Engine.dll","descriptionParts":["Modifies a Graph by removing the specified entity and any dependent relations. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to modify. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"entityToRemove","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["The Guid of the entity to remove. ","This is a Guid"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Graph","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The modified Graph with the specified entity and any dependent relations removed. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"RemoveIsolatedEntities","assemblyName":"Analytical_Engine.dll","descriptionParts":["Modifies a Graph by removing all entities that are not used by relations. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to modify. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Graph","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The modified Graph without isolated entities. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"IReverse","assemblyName":"Analytical_Engine.dll","descriptionParts":["Modifies an IRelation by reversing it. ",""],"inputs":[{"inputName":"relation","namespace":"BH.oM.Analytical.Elements","memberName":"IRelation","isGeneric":"0","descriptionParts":["The IRelation to reverse. ","This is a BH.oM.Analytical.Elements.IRelation: ","Interface common to all Relation objects. ","This can be of the following types: Relation"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IRelation","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The reversed IRelation. ","This is a BH.oM.Analytical.Elements.IRelation: ","Interface common to all Relation objects. ","This can be of the following types: Relation"]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"Reverse","assemblyName":"Analytical_Engine.dll","descriptionParts":["Modifies a Relation by reversing it. ",""],"inputs":[{"inputName":"relation","namespace":"BH.oM.Analytical.Elements","memberName":"Relation","isGeneric":"0","descriptionParts":["The Relation to reverse. ","This is a BH.oM.Analytical.Elements.Relation: ","Base class for all Relation classes."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Relation","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The reversed Relation. ","This is a BH.oM.Analytical.Elements.Relation: ","Base class for all Relation classes."]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"Reverse","assemblyName":"Analytical_Engine.dll","descriptionParts":["Modifies a Graph by reversing all Relations within it. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to reverse. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Graph","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The reversed Graph. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"Reverse","assemblyName":"Analytical_Engine.dll","descriptionParts":["Modifies a Relation by reversing it. ",""],"inputs":[{"inputName":"relation","namespace":"BH.oM.Analytical.Elements","memberName":"IRelation","isGeneric":"0","descriptionParts":["The Relation to reverse. ","This is a BH.oM.Analytical.Elements.IRelation: ","Interface common to all Relation objects. ","This can be of the following types: Relation"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IRelation","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The reversed Relation. ","This is a BH.oM.Analytical.Elements.IRelation: ","Interface common to all Relation objects. ","This can be of the following types: Relation"]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"SetElements0D","assemblyName":"Analytical_Engine.dll","descriptionParts":["Sets the IElement0Ds of the ILink, i.e. its two end Nodes or Points. Method required for IElement1Ds. ",""],"inputs":[{"inputName":"link","namespace":"BH.oM.Analytical.Elements","memberName":"ILink","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TNode","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The ILink to set the IElement0Ds to. ","This is a BH.oM.Analytical.Elements.ILink<BH.Engine.Analytical.TNode> ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"newElements0D","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement0D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The new IElement0Ds of the ILink. Should be a list of length two, containing exactly two analytical Nodes mathcing the type of the ILink or Geometrical Points. ","Points will assigin default end properties to the ILink. ","This is a List<IElement0D> ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ILink","namespace":"BH.oM.Analytical.Elements","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TNode","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The ILink with updated Nodes. ","This is a BH.oM.Analytical.Elements.ILink<BH.Engine.Analytical.TNode> ","This can be of the following types"]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"SetGeometry","assemblyName":"Analytical_Engine.dll","descriptionParts":["Updates the position of a INode. ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Analytical.Elements","memberName":"INode","isGeneric":"0","descriptionParts":["The INode to set the postion to. ","This is a BH.oM.Analytical.Elements.INode ","This can be of the following types: Node, Node, AirTerminal, LightFixture, Node"],"isRequired":1,"isInterface":1},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The new position of the INode. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"INode","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The INode with updated geometry. ","This is a BH.oM.Analytical.Elements.INode ","This can be of the following types: Node, Node, AirTerminal, LightFixture, Node"]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"SetGeometry","assemblyName":"Analytical_Engine.dll","descriptionParts":["Updates geometry of an ILink by updating the positions of its end Nodes. ",""],"inputs":[{"inputName":"link","namespace":"BH.oM.Analytical.Elements","memberName":"ILink","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TNode","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The ILink to update. ","This is a BH.oM.Analytical.Elements.ILink<BH.Engine.Analytical.TNode> ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The new centreline curve of the ILink. Should be a linear curve. ","The start point of the curve will be used to set the position of the StartNode and the end point to set the position of the EndNode. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ILink","namespace":"BH.oM.Analytical.Elements","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TNode","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The ILink with updated geometry. ","This is a BH.oM.Analytical.Elements.ILink<BH.Engine.Analytical.TNode> ","This can be of the following types"]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"SetGeometry","assemblyName":"Analytical_Engine.dll","descriptionParts":["Updates the curve geometry of an IEdge. ",""],"inputs":[{"inputName":"edge","namespace":"BH.oM.Analytical.Elements","memberName":"IEdge","isGeneric":"0","descriptionParts":["The IEdge to update. ","This is a BH.oM.Analytical.Elements.IEdge ","This can be of the following types: Edge, FrameEdge, Edge"],"isRequired":1,"isInterface":1},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The curve to set to the IEdge. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IEdge","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The IEdge with updated geometry. ","This is a BH.oM.Analytical.Elements.IEdge ","This can be of the following types: Edge, FrameEdge, Edge"]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"SetGeometry","assemblyName":"Analytical_Engine.dll","descriptionParts":["Updates the geometrical ISurface of a analytical ISurface. ",""],"inputs":[{"inputName":"anaSurface","namespace":"BH.oM.Analytical.Elements","memberName":"ISurface","isGeneric":"0","descriptionParts":["The analytical Surface to update. ","This is a BH.oM.Analytical.Elements.ISurface ","This can be of the following types: Surface"],"isRequired":1,"isInterface":1},{"inputName":"geoSurface","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["The geometrical ISurface to set to the structural Surface. ","This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The analytical Surface with updated geometry. ","This is a BH.oM.Analytical.Elements.ISurface ","This can be of the following types: Surface"]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"SetInternalElements2D","assemblyName":"Analytical_Engine.dll","descriptionParts":["Sets internal IElement2Ds of a IPanel, i.e. sets the Openings of an IPanel. Method required for all IElement2Ds. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Analytical.Elements","memberName":"IPanel","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Analytical","memberName":"TOpening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IPanel to update. ","This is a BH.oM.Analytical.Elements.IPanel<BH.Engine.Analytical.TEdge, BH.Engine.Analytical.TOpening> ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The internal IElement2Ds to set. For an IPanel this should be a list of Openings matching the type of the IPanel. ","This is a List<IElement2D> ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IPanel","namespace":"BH.oM.Analytical.Elements","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Analytical","memberName":"TOpening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IPanel with updated Openings. ","This is a BH.oM.Analytical.Elements.IPanel<BH.Engine.Analytical.TEdge, BH.Engine.Analytical.TOpening> ","This can be of the following types"]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"SetOutlineElements1D","assemblyName":"Analytical_Engine.dll","descriptionParts":["Sets the Outline Element1Ds of an opening, i.e. the Edges of an Opening. Method required for all IElement2Ds. ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Analytical.Elements","memberName":"IOpening","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The Opening to update the Edges of. ","This is a BH.oM.Analytical.Elements.IOpening<BH.Engine.Analytical.TEdge> ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"edges","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of IElement1Ds which all should be of a type of Edge accepted by the Opening or Geometrical ICurve. ","ICurve will default the outlines properties. ","This is a IEnumerable<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IOpening","namespace":"BH.oM.Analytical.Elements","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The opening with updated Edges. ","This is a BH.oM.Analytical.Elements.IOpening<BH.Engine.Analytical.TEdge> ","This can be of the following types"]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"SetOutlineElements1D","assemblyName":"Analytical_Engine.dll","descriptionParts":["Sets the outline Element1Ds of a IPanel, i.e. the ExternalEdges of a IPanel. Method required for all IElement2Ds. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Analytical.Elements","memberName":"IPanel","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Analytical","memberName":"TOpening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IPanel to update the ExternalEdges of. ","This is a BH.oM.Analytical.Elements.IPanel<BH.Engine.Analytical.TEdge, BH.Engine.Analytical.TOpening> ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"edges","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of IElement1Ds which all should be of a type of Edge accepted by the IPanel or Geometrical ICurve. ","ICurve will default the outlines properties. ","This is a IEnumerable<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IPanel","namespace":"BH.oM.Analytical.Elements","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Analytical","memberName":"TOpening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IPanel with updated ExternalEdges. ","This is a BH.oM.Analytical.Elements.IPanel<BH.Engine.Analytical.TEdge, BH.Engine.Analytical.TOpening> ","This can be of the following types"]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"SetOutlineElements1D","assemblyName":"Analytical_Engine.dll","descriptionParts":["Sets the Outline Element1Ds of an IRegion, i.e. the perimiter. Method required for all IElement2Ds. ",""],"inputs":[{"inputName":"region","namespace":"BH.oM.Analytical.Elements","memberName":"IRegion","isGeneric":"0","descriptionParts":["The IRegion to update the Perimeter of. ","This is a BH.oM.Analytical.Elements.IRegion: ","Base interface for analytical elements defined by a single closed perimiter curve. ","This can be of the following types: CeilingTile, Room, Space"],"isRequired":1,"isInterface":1},{"inputName":"outlineElements","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of IElement1Ds which all should be Geometrical ICurves. ","This is a IEnumerable<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IRegion","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The region with updated perimiter. ","This is a BH.oM.Analytical.Elements.IRegion: ","Base interface for analytical elements defined by a single closed perimiter curve. ","This can be of the following types: CeilingTile, Room, Space"]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"UniqueEntities","assemblyName":"Analytical_Engine.dll","descriptionParts":["Enforce unique entities on a Graph. Source and Target properties of relations are updated to match the unique entities. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph from which duplicate entities should be removed. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"replaceMap","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A Dictionary providing the replacement mapping, where Key is replaced with Value. ","This is a Dictionary<Guid, IBHoMObject>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Graph","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The Graph with unique entities. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"UniqueEntityNames","assemblyName":"Analytical_Engine.dll","descriptionParts":["Enforce unique entity names on a collection of entities. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to modify. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Graph","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The modified graph. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."]}},{"namespace":"BH.Engine.Analytical","className":"Modify","memberName":"IProjectGraph","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns a Graph projection defined by the projection provided. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to query. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"projection","namespace":"BH.oM.Analytical.Elements","memberName":"IProjection","isGeneric":"0","descriptionParts":["The required IView. ","This is a BH.oM.Analytical.Elements.IProjection: ","Interface common to all graph projections. ","This can be of the following types: GeometricProjection, GraphicalProjection, SpatialProjection"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Graph","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The projection of the original Graph. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Elements0D","assemblyName":"Analytical_Engine.dll","descriptionParts":["Gets the Element0Ds of an ILink, which for the case of a ILink means getting the StartNode and EndNode. Method necessary for IElement pattern. ",""],"inputs":[{"inputName":"link","namespace":"BH.oM.Analytical.Elements","memberName":"ILink","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TNode","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The ILink to extract IElement0ds from. ","This is a BH.oM.Analytical.Elements.ILink<BH.Engine.Analytical.TNode> ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement0D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The list of Elements0D of the ILink, i.e. the StartNode and EndNode. ","This is a List<IElement0D> ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"ExternalPolyCurve","assemblyName":"Analytical_Engine.dll","descriptionParts":["Gets the polycurve that defines the outline of the panel and checks for a single continuous linear curve ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Analytical.Elements","memberName":"IPanel","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Analytical","memberName":"TOpening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IPanel to get the polycurve from ","This is a BH.oM.Analytical.Elements.IPanel<BH.Engine.Analytical.TEdge, BH.Engine.Analytical.TOpening> ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The polycurve defining the outline of the panel ","This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Geometry","assemblyName":"Analytical_Engine.dll","descriptionParts":["Gets the geometry of a INode as a Point. Method required for automatic display in UI packages. ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Analytical.Elements","memberName":"INode","isGeneric":"0","descriptionParts":["INode to get the Point from. ","This is a BH.oM.Analytical.Elements.INode ","This can be of the following types: Node, Node, AirTerminal, LightFixture, Node"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The geometry of the INode. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Geometry","assemblyName":"Analytical_Engine.dll","descriptionParts":["Gets the geometry of a ILink as its centreline. Method required for automatic display in UI packages. ",""],"inputs":[{"inputName":"link","namespace":"BH.oM.Analytical.Elements","memberName":"ILink","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TNode","isInterface":"0","isGeneric":"0"}],"descriptionParts":["ILink to get the centreline geometry from. ","This is a BH.oM.Analytical.Elements.ILink<BH.Engine.Analytical.TNode> ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The geometry of the ILink as its centreline. ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Geometry","assemblyName":"Analytical_Engine.dll","descriptionParts":["Gets the geometry of a IEdge as its Curve. Method required for automatic display in UI packages. ",""],"inputs":[{"inputName":"edge","namespace":"BH.oM.Analytical.Elements","memberName":"IEdge","isGeneric":"0","descriptionParts":["IEdge to get the curve geometry from. ","This is a BH.oM.Analytical.Elements.IEdge ","This can be of the following types: Edge, FrameEdge, Edge"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The geometry of the IEdge as its Curve. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Geometry","assemblyName":"Analytical_Engine.dll","descriptionParts":["Gets the geometry of a analytical IPanel at its centre. Method required for automatic display in UI packages. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Analytical.Elements","memberName":"IPanel","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Analytical","memberName":"TOpening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["IPanel to get the planar surface geometry from. ","This is a BH.oM.Analytical.Elements.IPanel<BH.Engine.Analytical.TEdge, BH.Engine.Analytical.TOpening> ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"PlanarSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The geometry of the analytical IPanel at its centre. ","This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Geometry","assemblyName":"Analytical_Engine.dll","descriptionParts":["Gets the geometry of a analytical IOpening as an outline curve. Method required for automatic display in UI packages. ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Analytical.Elements","memberName":"IOpening","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"}],"descriptionParts":["IOpening to get the outline geometry from. ","This is a BH.oM.Analytical.Elements.IOpening<BH.Engine.Analytical.TEdge> ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The geometry of the analytical IOpening. ","This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Geometry","assemblyName":"Analytical_Engine.dll","descriptionParts":["Gets the geometry of a analytical ISurface at its centre. Method required for automatic display in UI packages. ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Analytical.Elements","memberName":"ISurface","isGeneric":"0","descriptionParts":["Analytical ISurface to get the geometrical Surface geometry from. ","This is a BH.oM.Analytical.Elements.ISurface ","This can be of the following types: Surface"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The underlying surface geometry of the analytical ISurface at its centre. ","This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Geometry","assemblyName":"Analytical_Engine.dll","descriptionParts":["Gets the geometry of a analytical IMesh as a geometrical Mesh. A geometrical mesh only supports 3 and 4 nodes faces, while a FEMesh does not have this limitation. For FEMeshFaces with more than 4 nodes or less than 3 this operation is therefore not possible. Method required for automatic display in UI packages. ",""],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Analytical.Elements","memberName":"IMesh","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TNode","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Analytical","memberName":"TFace","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Analytical IMesh to get the mesh geometry from. ","This is a BH.oM.Analytical.Elements.IMesh<BH.Engine.Analytical.TNode, BH.Engine.Analytical.TFace> ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The geometry of the IMesh as a geometrical Mesh. ","This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Geometry","assemblyName":"Analytical_Engine.dll","descriptionParts":["Gets the geometry of a collection of IFaces as a geometrical Mesh's Faces. A geometrical mesh face only supports 3 and 4 nodes faces, while a FEMeshFace does not have this limitation. For FEMeshFaces with more than 4 nodes or less than 3 this operation is therefore not possible. Method required for automatic display in UI packages. ",""],"inputs":[{"inputName":"faces","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TFace","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Analytical IFaces to get the mesh faces geometry from. ","This is a IEnumerable<TFace>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Face","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The geometry of the IFaces as geometrical Mesh Faces. ","This is a IEnumerable<Face>"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Geometry","assemblyName":"Analytical_Engine.dll","descriptionParts":["Gets the geometry of a analytical IFace as a geometrical Mesh's Face. A geometrical mesh face only supports 3 and 4 nodes faces, while a FEMeshFace does not have this limitation. For FEMeshFaces with more than 4 nodes or less than 3 this operation is therefore not possible. Method required for automatic display in UI packages. ",""],"inputs":[{"inputName":"face","namespace":"BH.oM.Analytical.Elements","memberName":"IFace","isGeneric":"0","descriptionParts":["Analytical IFace to get the mesh face geometry from. ","This is a BH.oM.Analytical.Elements.IFace ","This can be of the following types: FEMeshFace"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Face","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The geometry of the IFace as geometrical Mesh Face. ","This is a BH.oM.Geometry.Face: ","A triangular or quadrilateral shape forming the basis of a polygon Mesh. Defined by corner vertices referencing indices of a Point list. See BH.oM.Geometry.Mesh object for usage.","A value of -1 for the fourth vertex D indicates the Face is triangular."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Geometry","assemblyName":"Analytical_Engine.dll","descriptionParts":["Gets the geometry of a IRegion as its Perimiter curve. Method required for automatic display in UI packages. ",""],"inputs":[{"inputName":"region","namespace":"BH.oM.Analytical.Elements","memberName":"IRegion","isGeneric":"0","descriptionParts":["IRegion to get the curve geometry from. ","This is a BH.oM.Analytical.Elements.IRegion: ","Base interface for analytical elements defined by a single closed perimiter curve. ","This can be of the following types: CeilingTile, Room, Space"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The geometry of the IRegion as its Perimiter curve. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Geometry","assemblyName":"Analytical_Engine.dll","descriptionParts":["Gets the geometry of a Graph if it comprises of entities that inherit from IElement0D. Method required for automatic display in UI packages. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["Graph to get the geometry from. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CompositeGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The CompositeGeometry geometry of the Graph. ","This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Adjacency","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the adjacency dictionary for a Graph. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to represent as an adjacency dictionary. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"relationDirection","namespace":"BH.oM.Analytical.Elements","memberName":"RelationDirection","isGeneric":"0","descriptionParts":["Optional RelationDirection used to determine the direction that relations can be traversed. Defaults to Forwards indicating traversal is from source to target. ","This is a BH.oM.Analytical.Elements.RelationDirection ","Enum values: ","-Forwards ","-Backwards ","-Both"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["The Dictionary where the keys are entities and the values are the collection of adjacent entities. ","This is a Dictionary<Guid, List<Guid>>"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"UniqueEntitiesReplacementMap","assemblyName":"Analytical_Engine.dll","descriptionParts":["Identifies unique objects from a collection IBHoMObjects using hash comparison. ",""],"inputs":[{"inputName":"entities","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of IBHoMObjects from which unique instances are identified. ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0},{"inputName":"comparisonConfig","namespace":"BH.oM.Base","memberName":"ComparisonConfig","isGeneric":"0","descriptionParts":["Configuration of diffing used to find unique entities. ","This is a BH.oM.Base.ComparisonConfig: ","Settings to determine the uniqueness of an Object."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A Dictionary replacement map of the entities where the keys are the Guid of the original entity and the Values the matching IBHoMObject entity. ","This is a Dictionary<Guid, IBHoMObject>"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"EntityNeighbourhood","assemblyName":"Analytical_Engine.dll","descriptionParts":["Find all sub Graphs around all entities at maximum depth 1 within a Graph. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to search. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"relationDirection","namespace":"BH.oM.Analytical.Elements","memberName":"RelationDirection","isGeneric":"0","descriptionParts":["Optional RelationDirection used to determine the direction that relations can be traversed. Defaults to Forward indicating traversal is from source to target. ","This is a BH.oM.Analytical.Elements.RelationDirection ","Enum values: ","-Forwards ","-Backwards ","-Both"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of sub Graphs found in the input Graph. ","This is a List<Graph>"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"EntityNeighbourhood","assemblyName":"Analytical_Engine.dll","descriptionParts":["Find the sub Graph around an entity at a specified depth within a Graph. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to search. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"entity","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["The IBHoMObject entity to search from. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"maximumDepth","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The maximum traversal depth from the given entity. ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"relationDirection","namespace":"BH.oM.Analytical.Elements","memberName":"RelationDirection","isGeneric":"0","descriptionParts":["Optional RelationDirection used to determine the direction that relations can be traversed. Defaults to Forward indicating traversal is from source to target. ","This is a BH.oM.Analytical.Elements.RelationDirection ","Enum values: ","-Forwards ","-Backwards ","-Both"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Graph","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The sub Graph found in the input Graph. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"AStarShortestPath","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the a star shortest path for a Graph. ","If the supplied Graph does not contain entities that implement IElement0D or and relations that are SpatialRelations the shortest path is computed using the Dijkstra shortest path. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to query for the shortest path. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"start","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["The IBHoMObject entity used for the start of the path. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"end","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["The IBHoMObject entity used for the end of the path. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ShortestPathResult","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The ShortestPathResult. ","This is a BH.oM.Analytical.Elements.ShortestPathResult: ","Results associated with the computation of shortest paths."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"AStarShortestPath","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the a star shortest path for a Graph. ","If the supplied Graph does not contain entities that implement IElement0D or and spatial relations the shortest path is computed using the Dijkstra shortest path. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to query for the shortest path. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"start","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["The Guid entity used for the start of the path. ","This is a Guid"],"isRequired":1,"isInterface":0},{"inputName":"end","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["The Guid entity used for the end of the path. ","This is a Guid"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ShortestPathResult","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The ShortestPathResult. ","This is a BH.oM.Analytical.Elements.ShortestPathResult: ","Results associated with the computation of shortest paths."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"ClosestIElement0D","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the entity closest to a Point from a collection of entities. ",""],"inputs":[{"inputName":"entities","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of entities to search. ","This is a List<T>"],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The Point to search from. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IElement0D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["The IElement0D closest to the Point. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Depth","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the Dictionary of entity depths in a Graph given a start entity. The query uses breadth first search, each key value pair in the resulting dictionary is in the form <entity, depth>. ",""],"inputs":[{"inputName":"adjacency","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["The adjacency dictionary of the Graph to extract the depth dictionary from. ","This is a Dictionary<Guid, List<Guid>>"],"isRequired":1,"isInterface":0},{"inputName":"startEntity","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["The Guid of the entity from which the depth dictionary is created. ","This is a Guid"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A Dictionary of the depths of the entities in the Graph. ","This is a Dictionary<Guid, Int32>"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Depth","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the Dictionary of entity depths in a Graph given a start entity. The query uses breadth first search, each key value pair in the resulting dictionary is in the form <entity, depth>. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The graph to extract the depth dictionary from. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"startEntity","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["The Guid of the entity from which the depth dictionary is created. ","This is a Guid"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A Dictionary of the depths of the entities in the Graph. ","This is a Dictionary<Guid, Int32>"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Destinations","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the collection of entity guids that can be accessed from a given entity. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to search. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"entity","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["The Guid of the entity for which the destinations are required. ","This is a Guid"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of guids of the destination entities. ","This is a List<Guid>"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Destinations","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the collection of IBHoMObject entities that can be accessed from a given entity. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to search. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"entity","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["The IBHoMObject entity for which the destinations are required. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The collection of IBHoMObjects of the destination entities. ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"DijkstraShortestPath","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the Dijkstra shortest path for a graph. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to query for the shortest path. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"start","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["The IBHoMObject entity used for the start of the path. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"end","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["The IBHoMObject entity used for the end of the path. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ShortestPathResult","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The ShortestPathResult. ","This is a BH.oM.Analytical.Elements.ShortestPathResult: ","Results associated with the computation of shortest paths."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"DijkstraShortestPath","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the Dijkstra shortest path for a graph. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to query for the shortest path. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"start","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["The Guid entity used for the start of the path. ","This is a Guid"],"isRequired":1,"isInterface":0},{"inputName":"end","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["The Guid entity used for the end of the path. ","This is a Guid"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ShortestPathResult","namespace":"BH.oM.Analytical.Elements","isGeneric":"0","descriptionParts":["The ShortestPathResult. ","This is a BH.oM.Analytical.Elements.ShortestPathResult: ","Results associated with the computation of shortest paths."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Entities","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns all the entities in a Graph as collection. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to extract entities from. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The Graph entities. ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Entity","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns an entity from a Graph, or null if it does not exist. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to extract the entity from. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"entityName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the entity. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IBHoMObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["The entity as an IBHoMObject. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Entity","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns an entity from a Graph, or null if it does not exist. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to extract the entity from. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"entityGuid","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["The Guid of the entity. ","This is a Guid"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IBHoMObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["The Guid of the entity. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"FilterEntities","assemblyName":"Analytical_Engine.dll","descriptionParts":["Filter entities from a Graph. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to filter the entities from. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"typeFilter","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The Type of the entities to filter. ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Entity Dictionary containing the filtered entities. ","This is a Dictionary<Guid, IBHoMObject>"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"FilterRelations","assemblyName":"Analytical_Engine.dll","descriptionParts":["Filter relations from a Graph. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to filter the relations from. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"typeFilter","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The Type of the relation to filter. ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Analytical.Elements","memberName":"IRelation","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Collection of IRelations filtered from the Graph. ","This is a List<IRelation> ","This can be of the following types: Relation"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Incoming","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the collection of entity Guids that can access the given entity. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The graph to search. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"entity","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["The Guid of the entity for which the accessing entities are required. ","This is a Guid"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Guids of the accessing entities. ","This is a List<Guid>"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Incoming","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the collection of IBoMObject entities that can access the given entity. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The graph to search. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"entity","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["The IBHoMObject entity for which the accessing entities are required. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The collection of IBHoMObjects of the accessing entities. ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Relation","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the collection of IRelations that have source and target Guids matching those provided. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph that owns the IRelation. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"source","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["The IBHoMObject source to search for. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"target","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["The IBHoMObject target to search for. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"relationDirection","namespace":"BH.oM.Analytical.Elements","memberName":"RelationDirection","isGeneric":"0","descriptionParts":["Optional RelationDirection used to determine the direction that relations can be traversed. Defaults to Forwards indicating traversal is from source to target. ","This is a BH.oM.Analytical.Elements.RelationDirection ","Enum values: ","-Forwards ","-Backwards ","-Both"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Analytical.Elements","memberName":"IRelation","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The collection of matching IRelations. ","This is a List<IRelation> ","This can be of the following types: Relation"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Relation","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the collection of IRelation Guids that have source and target Guids matching those provided. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph that owns the IRelation. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"source","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["The Guid of the source to search for. ","This is a Guid"],"isRequired":1,"isInterface":0},{"inputName":"target","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["The Guid of the target to search for. ","This is a Guid"],"isRequired":1,"isInterface":0},{"inputName":"relationDirection","namespace":"BH.oM.Analytical.Elements","memberName":"RelationDirection","isGeneric":"0","descriptionParts":["Optional RelationDirection used to determine the direction that relations can be traversed. Defaults to Forwards indicating traversal is from source to target. ","This is a BH.oM.Analytical.Elements.RelationDirection ","Enum values: ","-Forwards ","-Backwards ","-Both"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of matching IRelation Guids. ","This is a List<Guid>"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"RelationArrow","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns arrow geometry used to represent a Relation. ",""],"inputs":[{"inputName":"relation","namespace":"BH.oM.Analytical.Elements","memberName":"IRelation","isGeneric":"0","descriptionParts":["The IRelation to represent with geometry. ","This is a BH.oM.Analytical.Elements.IRelation: ","Interface common to all Relation objects. ","This can be of the following types: Relation"],"isRequired":1,"isInterface":1},{"inputName":"headLength","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional length of the arrow head. Default is 1. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"baseWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional width of the arrow head. Default is 0.3. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"closed","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Optional boolean to set if the arrow head is closed or open. Default is false. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"CompositeGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["CompositeGeometry of the arrow. ","This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"RelationLength","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the length of the ICurve on IRelations or distance between source and target entity if no ICurve has been defined. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph that owns the IRelation. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"relation","namespace":"BH.oM.Analytical.Elements","memberName":"IRelation","isGeneric":"0","descriptionParts":["The IRelation to query. ","This is a BH.oM.Analytical.Elements.IRelation: ","Interface common to all Relation objects. ","This can be of the following types: Relation"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The length of the IRelation. ","This is a Double"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"NotSinks","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the collection of entity Guids that are used as at least one Relation source. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to search. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of entity Guids that are not sinks. ","This is a List<Guid>"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Sinks","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the collection of entity Guids that are never used a Relation source. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to search. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of entity Guids that are sinks. ","This is a List<Guid>"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"Sources","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the collection of entity Guids that are never used as Relation targets. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to search. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of entity Guids that are sources. ","This is a List<Guid>"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"SubGraphs","assemblyName":"Analytical_Engine.dll","descriptionParts":["Find all disconnected sub Graphs within a Graph. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to search. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0},{"inputName":"relationDirection","namespace":"BH.oM.Analytical.Elements","memberName":"RelationDirection","isGeneric":"0","descriptionParts":["The RelationDirection used to determine the direction that relations can be traversed. Defaults to Forward indicating traversal is from source to target. ","This is a BH.oM.Analytical.Elements.RelationDirection ","Enum values: ","-Forwards ","-Backwards ","-Both"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of sub Graphs found in the input Graph. ","This is a List<Graph>"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"IsolatedEntities","assemblyName":"Analytical_Engine.dll","descriptionParts":["Returns the collection of entity Guids that are never used as Relation targets or sources. ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Analytical.Elements","memberName":"Graph","isGeneric":"0","descriptionParts":["The Graph to search. ","This is a BH.oM.Analytical.Elements.Graph: ","A set of IBHoMObject entities and the relations between them."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of entity Guids that are isolated. ","This is a List<Guid>"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"InternalElements2D","assemblyName":"Analytical_Engine.dll","descriptionParts":["Gets inner IElement2Ds from a IPanel. Method required for all IElement2Ds. ","For a IPanel this method will return a list of all of its openings. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Analytical.Elements","memberName":"IPanel","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Analytical","memberName":"TOpening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IPanel to get internal IElement2Ds from. ","This is a BH.oM.Analytical.Elements.IPanel<BH.Engine.Analytical.TEdge, BH.Engine.Analytical.TOpening> ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The list of the internal IELement2Ds of the IPanel, i.e. a list of the Openings of the IPanel. ","This is a List<IElement2D> ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"IsAligned","assemblyName":"Analytical_Engine.dll","descriptionParts":["Checks if the Panel is planar and is aligned to the Plane provided. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Analytical.Elements","memberName":"IPanel","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Analytical","memberName":"TOpening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IPanel to check if it is aligned to the Plane provided. ","This is a BH.oM.Analytical.Elements.IPanel<BH.Engine.Analytical.TEdge, BH.Engine.Analytical.TOpening> ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["The Plane that the IPanel alignment is checked against. ","This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Angle tolerance between the IPanel and the Plane provided ","This is a Angle [rad] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the IPanel is aligned withe the Plane provided ","This is a Boolean"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"IsHorizontal","assemblyName":"Analytical_Engine.dll","descriptionParts":["Checks if the IPanel is aligned with the horizontal plane (global XY). ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Analytical.Elements","memberName":"IPanel","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Analytical","memberName":"TOpening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IPanel to check if it is aligned to the horizontal plane (global XY). ","This is a BH.oM.Analytical.Elements.IPanel<BH.Engine.Analytical.TEdge, BH.Engine.Analytical.TOpening> ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Angle tolerance between the IPanel and the horizontal plane (global XY) ","This is a Angle [rad] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the IPanel is aligned with the horizontal plane (global XY). ","This is a Boolean"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"IsOutlineQuad","assemblyName":"Analytical_Engine.dll","descriptionParts":["Determines whether a panel's outline is a quadilateral. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Analytical.Elements","memberName":"IPanel","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Analytical","memberName":"TOpening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IPanel to check if the outline is a quadilateral. ","This is a BH.oM.Analytical.Elements.IPanel<BH.Engine.Analytical.TEdge, BH.Engine.Analytical.TOpening> ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True for panels with a quadilateral outline or false for panels with a non-quadilateral outline. ","This is a Boolean"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"IsOutlineRectangular","assemblyName":"Analytical_Engine.dll","descriptionParts":["Determines whether a panel's outline is a rectangular. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Analytical.Elements","memberName":"IPanel","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Analytical","memberName":"TOpening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IPanel to check if the outline is a rectangular. ","This is a BH.oM.Analytical.Elements.IPanel<BH.Engine.Analytical.TEdge, BH.Engine.Analytical.TOpening> ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True for panels with a rectangular outline or false for panels with a non rectangular outline. ","This is a Boolean"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"IsOutlineSquare","assemblyName":"Analytical_Engine.dll","descriptionParts":["Determines whether a panel's outline is a square. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Analytical.Elements","memberName":"IPanel","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Analytical","memberName":"TOpening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IPanel to check if the outline is a square. ","This is a BH.oM.Analytical.Elements.IPanel<BH.Engine.Analytical.TEdge, BH.Engine.Analytical.TOpening> ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True for panels with a square outline or false for panels with a non square outline. ","This is a Boolean"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"IsVertical","assemblyName":"Analytical_Engine.dll","descriptionParts":["Checks if the IPanel is aligned with any vertical plane. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Analytical.Elements","memberName":"IPanel","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Analytical","memberName":"TOpening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IPanel to check if it is aligned to any vertical plane. ","This is a BH.oM.Analytical.Elements.IPanel<BH.Engine.Analytical.TEdge, BH.Engine.Analytical.TOpening> ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Angle tolerance between the IPanel and any vertical plane ","This is a Angle [rad] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the IPanel is aligned with any vertical plane. ","This is a Boolean"]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"OutlineElements1D","assemblyName":"Analytical_Engine.dll","descriptionParts":["Gets the edge elements from an IOpening defining the boundary of the element. Method required for all IElement2Ds. ","For an IOpening this will return a list of its Edges. ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Analytical.Elements","memberName":"IOpening","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IOpening to get outline elements from. ","This is a BH.oM.Analytical.Elements.IOpening<BH.Engine.Analytical.TEdge> ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Outline elements of the IOpening, i.e. the Edges of the Opening. ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"OutlineElements1D","assemblyName":"Analytical_Engine.dll","descriptionParts":["Gets the edge elements from an IPanel defining the boundary of the element. Method required for all IElement2Ds. ","For an IPanel this will return a list of its ExternalEdges. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Analytical.Elements","memberName":"IPanel","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Analytical","memberName":"TEdge","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Analytical","memberName":"TOpening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IPanel to get outline elements from. ","This is a BH.oM.Analytical.Elements.IPanel<BH.Engine.Analytical.TEdge, BH.Engine.Analytical.TOpening> ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Outline elements of the IPanel, i.e. the ExternalEdges of the Panel. ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Analytical","className":"Query","memberName":"OutlineElements1D","assemblyName":"Analytical_Engine.dll","descriptionParts":["Gets the boundary from an IRegion defining the boundary of the element as the subparts of the perimiter curve. Method required for all IElement2Ds. ",""],"inputs":[{"inputName":"region","namespace":"BH.oM.Analytical.Elements","memberName":"IRegion","isGeneric":"0","descriptionParts":["The IRegion to get outline elements from. ","This is a BH.oM.Analytical.Elements.IRegion: ","Base interface for analytical elements defined by a single closed perimiter curve. ","This can be of the following types: CeilingTile, Room, Space"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Outline elements of the IRegion, i.e. the subparts of the Perimiter curve. ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Architecture","className":"Compute","memberName":"CeilingTiles","assemblyName":"Architecture_Engine.dll","descriptionParts":["Generate a collection of Ceiling Tile objects that can sit within the given ceiling. Uses the BH.Engine.Geometry.Compute.Split(Polyline, List<Line>) method for its core. ",""],"inputs":[{"inputName":"ceiling","namespace":"BH.oM.Architecture.Elements","memberName":"Ceiling","isGeneric":"0","descriptionParts":["Ceiling object which provides the outer perimeter of the ceiling tiles ","This is a BH.oM.Architecture.Elements.Ceiling"],"isRequired":1,"isInterface":0},{"inputName":"ceilingTileLines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The lines across the ceiling which will be used to cut the ceiling into individual tiles. ","This is a List<Line>"],"isRequired":1,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Tolerance used for angle calculations. Default set to BH.oM.Geometry.Tolerance.Angle. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Tolerance used for distance calculations. Default set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["All coordinates of the geometry will be rounded to the number of decimal places specified. Default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Architecture.Elements","memberName":"CeilingTile","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Closed Ceiling Tile regions contained within the Ceiling. ","This is a List<CeilingTile>"]}},{"namespace":"BH.Engine.Architecture","className":"Modify","memberName":"CleanRoom","assemblyName":"Architecture_Engine.dll","descriptionParts":["Returns a room that has been cleaned of short segments and insignificant vertices in its perimeter curve ",""],"inputs":[{"inputName":"room","namespace":"BH.oM.Architecture.Elements","memberName":"Room","isGeneric":"0","descriptionParts":["An architecture room that will be cleaned ","This is a BH.oM.Architecture.Elements.Room"],"isRequired":1,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The tolerance of the angle that defines a straight line. Default is set to the value defined by BH.oM.Geometry.Tolerance.Angle ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"minimumSegmentLength","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The length of the smallest allowed segment. Segments smaller than this will be removed. Default is set to the value defined by BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Room","namespace":"BH.oM.Architecture.Elements","isGeneric":"0","descriptionParts":["A room that has been cleaned ","This is a BH.oM.Architecture.Elements.Room"]}},{"namespace":"BH.Engine.Architecture","className":"Modify","memberName":"SetGeometry","assemblyName":"Architecture_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"grid","namespace":"BH.oM.Architecture.Elements","memberName":"Grid","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Elements.Grid"],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Grid","namespace":"BH.oM.Architecture.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Elements.Grid"]}},{"namespace":"BH.Engine.Architecture","className":"Modify","memberName":"SetGeometry","assemblyName":"Architecture_Engine.dll","descriptionParts":["Assign new geometry to an Architecture Room. If either geometry is null then original geometry is used ",""],"inputs":[{"inputName":"room","namespace":"BH.oM.Architecture.Elements","memberName":"Room","isGeneric":"0","descriptionParts":["An Architecture Room to set the geometry of ","This is a BH.oM.Architecture.Elements.Room"],"isRequired":1,"isInterface":0},{"inputName":"locationPoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["A BHoM Geometry Point defining the location of the room, default null ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":0,"isInterface":0},{"inputName":"perimeterCurve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["A BHoM Geometry ICurve defining the perimeter of the room, default null ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":1}],"outputs":{"memberName":"Room","namespace":"BH.oM.Architecture.Elements","isGeneric":"0","descriptionParts":["An Architecture Room with an updated geometry ","This is a BH.oM.Architecture.Elements.Room"]}},{"namespace":"BH.Engine.Architecture","className":"Modify","memberName":"SetOutlineElements1D","assemblyName":"Architecture_Engine.dll","descriptionParts":["Assign a new collection of external 1D boundaries to an Architecture Room ",""],"inputs":[{"inputName":"room","namespace":"BH.oM.Architecture.Elements","memberName":"Room","isGeneric":"0","descriptionParts":["An Architecture Room to update ","This is a BH.oM.Architecture.Elements.Room"],"isRequired":1,"isInterface":0},{"inputName":"outlineElements1D","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of outline 1D elements to assign to the Room ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Room","namespace":"BH.oM.Architecture.Elements","isGeneric":"0","descriptionParts":["The updated Architecture Room ","This is a BH.oM.Architecture.Elements.Room"]}},{"namespace":"BH.Engine.Architecture","className":"Modify","memberName":"SetOutlineElements1D","assemblyName":"Architecture_Engine.dll","descriptionParts":["Assign a new collection of external 1D boundaries to an Architecture Ceiling ",""],"inputs":[{"inputName":"ceiling","namespace":"BH.oM.Architecture.Elements","memberName":"Ceiling","isGeneric":"0","descriptionParts":["An Architecture ceiling to update ","This is a BH.oM.Architecture.Elements.Ceiling"],"isRequired":1,"isInterface":0},{"inputName":"outlineElements1D","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of outline 1D elements to assign to the Ceiling ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Ceiling","namespace":"BH.oM.Architecture.Elements","isGeneric":"0","descriptionParts":["The updated Architecture Ceiling ","This is a BH.oM.Architecture.Elements.Ceiling"]}},{"namespace":"BH.Engine.Architecture","className":"Query","memberName":"Geometry","assemblyName":"Architecture_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"grid","namespace":"BH.oM.Architecture.Elements","memberName":"Grid","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Elements.Grid"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Architecture","className":"Query","memberName":"Geometry","assemblyName":"Architecture_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"theatron","namespace":"BH.oM.Architecture.Theatron","memberName":"TheatronGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.TheatronGeometry"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CompositeGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."]}},{"namespace":"BH.Engine.Architecture","className":"Query","memberName":"Geometry","assemblyName":"Architecture_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"theatronFullProfile","namespace":"BH.oM.Architecture.Theatron","memberName":"TheatronFullProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.TheatronFullProfile"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CompositeGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."]}},{"namespace":"BH.Engine.Architecture","className":"Query","memberName":"HasMergeablePropertiesWith","assemblyName":"Architecture_Engine.dll","descriptionParts":["Evaluates if the two Rooms are equal to the point that they could be merged into one object, as Rooms only have geometrical data this is always true. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Architecture.Elements","memberName":"Room","isGeneric":"0","descriptionParts":["A Room to compare the properties of with an other Room. ","This is a BH.oM.Architecture.Elements.Room"],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Architecture.Elements","memberName":"Room","isGeneric":"0","descriptionParts":["The Room to compare with the other Room. ","This is a BH.oM.Architecture.Elements.Room"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the Rooms non-geometrical property is equal to the point that they could be merged into one object, always true for rooms. ","This is a Boolean"]}},{"namespace":"BH.Engine.Architecture","className":"Query","memberName":"NewElement1D","assemblyName":"Architecture_Engine.dll","descriptionParts":["Returns an instance of an IElement1D from the given object ",""],"inputs":[{"inputName":"room","namespace":"BH.oM.Architecture.Elements","memberName":"Room","isGeneric":"0","descriptionParts":["An Architecture Room object ","This is a BH.oM.Architecture.Elements.Room"],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The curve to clone ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IElement1D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["A 1D element object ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Architecture","className":"Query","memberName":"OutlineElements1D","assemblyName":"Architecture_Engine.dll","descriptionParts":["Returns the outline 1D elements of an Architecture Room ",""],"inputs":[{"inputName":"room","namespace":"BH.oM.Architecture.Elements","memberName":"Room","isGeneric":"0","descriptionParts":["An Architecture Room ","This is a BH.oM.Architecture.Elements.Room"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of outline 1D elements ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Architecture","className":"Query","memberName":"OutlineElements1D","assemblyName":"Architecture_Engine.dll","descriptionParts":["Returns the outline 1D elements of an Architecture Ceiling ",""],"inputs":[{"inputName":"ceiling","namespace":"BH.oM.Architecture.Elements","memberName":"Ceiling","isGeneric":"0","descriptionParts":["An Architecture Ceiling ","This is a BH.oM.Architecture.Elements.Ceiling"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of outline 1D elements ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Architecture.Elements","className":"Create","memberName":"Grid","assemblyName":"Architecture_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Grid","namespace":"BH.oM.Architecture.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Elements.Grid"]}},{"namespace":"BH.Engine.Architecture.Elements","className":"Create","memberName":"Grid","assemblyName":"Architecture_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Grid","namespace":"BH.oM.Architecture.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Elements.Grid"]}},{"namespace":"BH.Engine.Architecture.Elements","className":"Create","memberName":"Grid","assemblyName":"Architecture_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Grid","namespace":"BH.oM.Architecture.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Elements.Grid"]}},{"namespace":"BH.Engine.Architecture.Elements","className":"Create","memberName":"Grid","assemblyName":"Architecture_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Grid","namespace":"BH.oM.Architecture.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Elements.Grid"]}},{"namespace":"BH.Engine.Architecture.Elements","className":"Create","memberName":"Level","assemblyName":"Architecture_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"elevation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Level","namespace":"BH.oM.Architecture.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Elements.Level"]}},{"namespace":"BH.Engine.Architecture.Elements","className":"Create","memberName":"Level","assemblyName":"Architecture_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"elevation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Level","namespace":"BH.oM.Architecture.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Elements.Level"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"CircularPlan","assemblyName":"Architecture_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"parameters","namespace":"BH.oM.Architecture.Theatron","memberName":"StadiaParameters","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.StadiaParameters"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TheatronPlan","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.TheatronPlan"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"EightArcPlan","assemblyName":"Architecture_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"parameters","namespace":"BH.oM.Architecture.Theatron","memberName":"StadiaParameters","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.StadiaParameters"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TheatronPlan","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.TheatronPlan"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"FourArcPlan","assemblyName":"Architecture_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"parameters","namespace":"BH.oM.Architecture.Theatron","memberName":"StadiaParameters","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.StadiaParameters"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TheatronPlan","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.TheatronPlan"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"NoCornersPlan","assemblyName":"Architecture_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"parameters","namespace":"BH.oM.Architecture.Theatron","memberName":"StadiaParameters","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.StadiaParameters"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TheatronPlan","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.TheatronPlan"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"OrthogonalPlan","assemblyName":"Architecture_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"parameters","namespace":"BH.oM.Architecture.Theatron","memberName":"StadiaParameters","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.StadiaParameters"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TheatronPlan","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.TheatronPlan"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"ActivityArea","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create an activityArea rectangle with width: 60 and length: 90, focal point is at 0,0,0 ",""],"inputs":[{"inputName":"scale","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional input to scale from default values ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ActivityArea","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.ActivityArea"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"ActivityArea","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create an activityArea rectangle, focal point is at 0,0,0 ",""],"inputs":[{"inputName":"width","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional, width default is 60 ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional, length default is 90 ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ActivityArea","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.ActivityArea"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"ActivityArea","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create an ActivityArea from any closed polyline and a focal point ",""],"inputs":[{"inputName":"activityArea","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["Closed polyline defining the activity area ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"activityFocalPoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["Point defining the centre of attention for the activity area ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ActivityArea","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.ActivityArea"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"ProfileOrigin","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a ProfileOrigin for a structural section, comprised of origin and section direction ",""],"inputs":[{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["Origin point for the section ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Horizontal Vector defining the direction of the section ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ProfileOrigin","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.ProfileOrigin: ","Used for orientation and setting out of tier profiles"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"ProfileParameters","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a default set of profile parameters ",""],"inputs":[{"inputName":"scale","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional scale if working units are not metres ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ProfileParameters","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.ProfileParameters"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"ProfileParameters","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a full set of profile parameters for a single tier, default values in metres ",""],"inputs":[{"inputName":"startX","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The horizontal postion for the first spectator eye, ignored in the first tier if the profile depends on a plan geometry ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"startZ","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The vertical postion for the first spectator eye ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"rowWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Row width ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"targetC","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Target Cvalue ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"seatWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Seat width ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"numRows","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Number of rows ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"boardHeight","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Height of advertising signage infront of seating ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"riserRounding","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Round riser heights are rounded to multiples of this value ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"eyePositionParameters","namespace":"BH.oM.Humans.ViewQuality","memberName":"EyePositionParameters","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.ViewQuality.EyePositionParameters"],"isRequired":0,"isInterface":0},{"inputName":"vomitoryParameters","namespace":"BH.oM.Architecture.Theatron","memberName":"VomitoryParameters","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.VomitoryParameters"],"isRequired":0,"isInterface":0},{"inputName":"superRiserParameters","namespace":"BH.oM.Architecture.Theatron","memberName":"SuperRiserParameters","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.SuperRiserParameters"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ProfileParameters","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.ProfileParameters"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"SeatingBlock","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a SeatignBlock ",""],"inputs":[{"inputName":"start","namespace":"BH.oM.Architecture.Theatron","memberName":"ProfileOrigin","isGeneric":"0","descriptionParts":["ProfileOrigin defining the start of the block ","This is a BH.oM.Architecture.Theatron.ProfileOrigin: ","Used for orientation and setting out of tier profiles"],"isRequired":1,"isInterface":0},{"inputName":"vom","namespace":"BH.oM.Architecture.Theatron","memberName":"ProfileOrigin","isGeneric":"0","descriptionParts":["ProfileOrigin defining the vomitory position of the block ","This is a BH.oM.Architecture.Theatron.ProfileOrigin: ","Used for orientation and setting out of tier profiles"],"isRequired":1,"isInterface":0},{"inputName":"end","namespace":"BH.oM.Architecture.Theatron","memberName":"ProfileOrigin","isGeneric":"0","descriptionParts":["ProfileOrigin defining the end of the block ","This is a BH.oM.Architecture.Theatron.ProfileOrigin: ","Used for orientation and setting out of tier profiles"],"isRequired":1,"isInterface":0},{"inputName":"t","namespace":"BH.oM.Architecture.Theatron","memberName":"SeatingBlockType","isGeneric":"0","descriptionParts":["SeatingBlockType ","This is a BH.oM.Architecture.Theatron.SeatingBlockType ","Enum values: ","-Side ","-End ","-Corner ","-Transition1 ","-Transition2 ","-CornerNoVom ","-Transition1mirrored ","-Transition2mirrored ","-Undefined"],"isRequired":1,"isInterface":0},{"inputName":"seatWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Width of seats ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"aisleWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Width of asile at vomitory ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SeatingBlock","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.SeatingBlock"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"StadiaParameters","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a default set of stadia parameters ",""],"inputs":[{"inputName":"scale","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional input to scale from default values ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"StadiaParameters","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.StadiaParameters"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"StadiaParameters","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a full set of stadia parameters, default values in metres ",""],"inputs":[{"inputName":"structBayWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Target width for structural bays measure at front of the first row ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"cornerRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Radius for the corners if using EightArc or Orthogonal stadia types ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"sideBound","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Dimension from the side of the playing area to the front row at the half way line ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"endBound","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Dimension from the end of playing area to the front row at the middle of the goal mouth ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"sideRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Side arc radius when using EightArc stadia type ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"endRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["End arc radius when using EightArc stadia type ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"theatronRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Radius of bowl for Circular stadia type ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"numCornerBays","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Number of structural bays through corners if using EightArc or Orthogonal stadia types ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"typeOfBowl","namespace":"BH.oM.Architecture.Theatron","memberName":"StadiaType","isGeneric":"0","descriptionParts":["What is the stadia type defined by a StadiaType enum ","This is a BH.oM.Architecture.Theatron.StadiaType ","Enum values: ","-EightArc ","-Orthogonal ","-NoCorners ","-Circular ","-FourArc ","-Undefined"],"isRequired":0,"isInterface":0},{"inputName":"cornerFraction","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Proportional width of the transition bays between corners and sides and corners and ends ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"activityArea","namespace":"BH.oM.Architecture.Theatron","memberName":"ActivityArea","isGeneric":"0","descriptionParts":["ActivityArea defines playing area and a focal point ","This is a BH.oM.Architecture.Theatron.ActivityArea"],"isRequired":0,"isInterface":0},{"inputName":"pitchLength","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of the pitch ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"pitchWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Width of the pitch ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"StadiaParameters","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.StadiaParameters"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"StadiaTypeEnum","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create an enumerator for predfined stadia types. ",""],"inputs":[{"inputName":"typeNum","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["0 = EightArc, 1 = Orthogonal, 2 = NoCorners, 3 = Circular, 4 = FourArc, 5 = Oblong, 6 = undefined ","This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"StadiaType","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.StadiaType ","Enum values: ","-EightArc ","-Orthogonal ","-NoCorners ","-Circular ","-FourArc ","-Undefined"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"SuperRiserParameters","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a default set of super riser parameters ",""],"inputs":[{"inputName":"scale","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional input to scale from default values ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SuperRiserParameters","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.SuperRiserParameters"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"SuperRiserParameters","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a custom set of super riser parameters ",""],"inputs":[{"inputName":"superRiser","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Is there a super riser (accessible row) ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"superRiserStart","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["What row does the super riser start? ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"superRiserKerbWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional scale if working units are not metres ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SuperRiserParameters","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.SuperRiserParameters"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"TheatronGeometry","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a full stadium TheatronGeometry based on predefined plan types, Cvalue is used to define the TheatronFullProfile ",""],"inputs":[{"inputName":"planFull","namespace":"BH.oM.Architecture.Theatron","memberName":"TheatronPlan","isGeneric":"0","descriptionParts":["The theatron plan ","This is a BH.oM.Architecture.Theatron.TheatronPlan"],"isRequired":1,"isInterface":0},{"inputName":"profile","namespace":"BH.oM.Architecture.Theatron","memberName":"TheatronFullProfile","isGeneric":"0","descriptionParts":["The TheatronFullProfile used in defining the plan ","This is a BH.oM.Architecture.Theatron.TheatronFullProfile"],"isRequired":1,"isInterface":0},{"inputName":"sParams","namespace":"BH.oM.Architecture.Theatron","memberName":"StadiaParameters","isGeneric":"0","descriptionParts":["The StadiaParameters ","This is a BH.oM.Architecture.Theatron.StadiaParameters"],"isRequired":1,"isInterface":0},{"inputName":"pParams","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Architecture.Theatron","memberName":"ProfileParameters","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of the ProfileParameters ","This is a List<ProfileParameters>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TheatronGeometry","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.TheatronGeometry"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"TheatronGeometry","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a partial TheatronGeometry based on structural locations and a TheatronFullProfile, Cvalue is not used to define the TheatronFullProfile ",""],"inputs":[{"inputName":"structuralOrigins","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Architecture.Theatron","memberName":"ProfileOrigin","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of ProfileOrigins to orientate of the structural sections ","This is a List<ProfileOrigin>"],"isRequired":1,"isInterface":0},{"inputName":"profile","namespace":"BH.oM.Architecture.Theatron","memberName":"TheatronFullProfile","isGeneric":"0","descriptionParts":["The TheatronFullProfile ","This is a BH.oM.Architecture.Theatron.TheatronFullProfile"],"isRequired":1,"isInterface":0},{"inputName":"pParams","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Architecture.Theatron","memberName":"ProfileParameters","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of the ProfileParameters ","This is a List<ProfileParameters>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TheatronGeometry","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.TheatronGeometry"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"TheatronGeometry","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a partial TheatronGeometry based on a partial plan and a profile, Cvalue is used to define the TheatronFullProfile ",""],"inputs":[{"inputName":"planPart","namespace":"BH.oM.Architecture.Theatron","memberName":"TheatronPlan","isGeneric":"0","descriptionParts":["The partial TheatronPlan ","This is a BH.oM.Architecture.Theatron.TheatronPlan"],"isRequired":1,"isInterface":0},{"inputName":"profile","namespace":"BH.oM.Architecture.Theatron","memberName":"TheatronFullProfile","isGeneric":"0","descriptionParts":["The TheatronFullProfile ","This is a BH.oM.Architecture.Theatron.TheatronFullProfile"],"isRequired":1,"isInterface":0},{"inputName":"pParams","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Architecture.Theatron","memberName":"ProfileParameters","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of the ProfileParameters ","This is a List<ProfileParameters>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TheatronGeometry","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.TheatronGeometry"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"TheatronFullProfile","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a full profile from one or more ProfileParameters ",""],"inputs":[{"inputName":"parameters","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Architecture.Theatron","memberName":"ProfileParameters","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of ProfileParameters ","This is a List<ProfileParameters>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TheatronFullProfile","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.TheatronFullProfile"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"TheatronFullProfile","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a full profile from one or more ProfileParameters and a TheatronPlan geometry. The worst case section will be found and used to define the profile geometry ",""],"inputs":[{"inputName":"parameters","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Architecture.Theatron","memberName":"ProfileParameters","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of ProfileParameters ","This is a List<ProfileParameters>"],"isRequired":1,"isInterface":0},{"inputName":"planGeometry","namespace":"BH.oM.Architecture.Theatron","memberName":"TheatronPlan","isGeneric":"0","descriptionParts":["A TheatronPlan ","This is a BH.oM.Architecture.Theatron.TheatronPlan"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TheatronFullProfile","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.TheatronFullProfile"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"TheatronFullProfile","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a full profile from one or more ProfileParameters and a focal point and ProfileOrigin ",""],"inputs":[{"inputName":"parameters","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Architecture.Theatron","memberName":"ProfileParameters","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of ProfileParameters ","This is a List<ProfileParameters>"],"isRequired":1,"isInterface":0},{"inputName":"focalPoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"sectionOrigin","namespace":"BH.oM.Architecture.Theatron","memberName":"ProfileOrigin","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.ProfileOrigin: ","Used for orientation and setting out of tier profiles"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TheatronFullProfile","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.TheatronFullProfile"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"PlanGeometry","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a partial TheatronPlan ",""],"inputs":[{"inputName":"structuralSections","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Architecture.Theatron","memberName":"ProfileOrigin","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of ProfileOrigin to orientate the structural sections ","This is a List<ProfileOrigin>"],"isRequired":1,"isInterface":0},{"inputName":"focalPolyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["The polyline used to define focal points for Cvalue profile generation ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TheatronPlan","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.TheatronPlan"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"PlanGeometry","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a full TheatronPlan from StadiaParameters ",""],"inputs":[{"inputName":"parameters","namespace":"BH.oM.Architecture.Theatron","memberName":"StadiaParameters","isGeneric":"0","descriptionParts":["StadiaParameters to define the TheatronPlan ","This is a BH.oM.Architecture.Theatron.StadiaParameters"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TheatronPlan","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.TheatronPlan"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"TierProfile","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a single TierProfile from a single ProfileParameters and setting out point. 0,0,0 is used as the focal point. ",""],"inputs":[{"inputName":"parameters","namespace":"BH.oM.Architecture.Theatron","memberName":"ProfileParameters","isGeneric":"0","descriptionParts":["ProfileParameters ","This is a BH.oM.Architecture.Theatron.ProfileParameters"],"isRequired":1,"isInterface":0},{"inputName":"lastPointPrevTier","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["Spectator eye point from previous tier or 0,0,0 on first tier ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TierProfile","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.TierProfile"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"TransformProfile","assemblyName":"Architecture_Engine.dll","descriptionParts":["Scale, rotate and translate a TierProfile ",""],"inputs":[{"inputName":"originalSection","namespace":"BH.oM.Architecture.Theatron","memberName":"TierProfile","isGeneric":"0","descriptionParts":["TierProfile to transform ","This is a BH.oM.Architecture.Theatron.TierProfile"],"isRequired":1,"isInterface":0},{"inputName":"scale","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Scaling amount ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"source","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["Origin point for the transform ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"target","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["Target point for the transform ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"angle","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Rotation angle ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TierProfile","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.TierProfile"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"VomitoryParameters","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a default set of vomitory parameters ",""],"inputs":[{"inputName":"scale","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional input to scale from default values ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"VomitoryParameters","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.VomitoryParameters"]}},{"namespace":"BH.Engine.Architecture.Theatron","className":"Create","memberName":"VomitoryParameters","assemblyName":"Architecture_Engine.dll","descriptionParts":["Create a custom set of vomitory parameters ",""],"inputs":[{"inputName":"vomitory","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Is there a vomitory? ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"vomitoryStartRow","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["What row does the vomitory start? (If there is a super riser the vomitory will start at the same row as the super riser) ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"vomitoryWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Width of aisle at vomitory ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"VomitoryParameters","namespace":"BH.oM.Architecture.Theatron","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Theatron.VomitoryParameters"]}},{"namespace":"BH.Engine.Base","className":"Modify","memberName":"SetHashFragment","assemblyName":"BHoM_Engine.dll","descriptionParts":["Computes the hash of the input BHoMObjects and stores it in a HashFragment for each of them.","If the hashFragment already existed, it is replaced. ",""],"inputs":[{"inputName":"objs","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Base","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<T>"],"isRequired":1,"isInterface":0},{"inputName":"comparisonConfig","namespace":"BH.oM.Base","memberName":"ComparisonConfig","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.ComparisonConfig: ","Settings to determine the uniqueness of an Object."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Base","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<T>"]}},{"namespace":"BH.Engine.Base","className":"Modify","memberName":"SetHashFragment","assemblyName":"BHoM_Engine.dll","descriptionParts":["Computes the hash of the BHoMObject and stores it in a HashFragment.","If the hashFragment already existed, it is replaced. ",""],"inputs":[{"inputName":"obj","namespace":"BH.Engine.Base","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Base.T"],"isRequired":1,"isInterface":0},{"inputName":"comparisonConfig","namespace":"BH.oM.Base","memberName":"ComparisonConfig","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.ComparisonConfig: ","Settings to determine the uniqueness of an Object."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"T","namespace":"BH.Engine.Base","isGeneric":"0","descriptionParts":["This is a BH.Engine.Base.T"]}},{"namespace":"BH.Engine.Base","className":"Modify","memberName":"SetHashFragment","assemblyName":"BHoM_Engine.dll","descriptionParts":["Clones the IBHoMObject, computes its hash and stores it in a HashFragment.","If the hashFragment already existed, it is replaced. ",""],"inputs":[{"inputName":"obj","namespace":"BH.Engine.Base","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Base.T"],"isRequired":1,"isInterface":0},{"inputName":"hash","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"T","namespace":"BH.Engine.Base","isGeneric":"0","descriptionParts":["This is a BH.Engine.Base.T"]}},{"namespace":"BH.Engine.Base","className":"Modify","memberName":"RemoveFragment","assemblyName":"BHoM_Engine.dll","descriptionParts":["Returns a deep clone of a given BHoM Object with the Fragment of the input fragmentType removed. ",""],"inputs":[{"inputName":"iBHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["Any object implementing the IBHoMObject interface that can have fragment properties appended to it. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"fragmentType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The type of fragment that should be removed from the object. ","This is a Type"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IBHoMObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["The BHoM object with the added fragment. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Base","className":"Modify","memberName":"AddFragment","assemblyName":"BHoM_Engine.dll","descriptionParts":["Returns a deep clone of a given BHoM Object and attaches to it the given Fragment. ",""],"inputs":[{"inputName":"iBHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["Any object implementing the IBHoMObject interface that can have fragment properties appended to it ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"fragment","namespace":"BH.oM.Base","memberName":"IFragment","isGeneric":"0","descriptionParts":["Any fragment object implementing the IFragment interface to append to the object ","This is a BH.oM.Base.IFragment ","This can be of the following types: HashFragment, PreviousNamesFragment, ParamOldIndexFragment, ProjectionFragment, RoutingFragment, SourcesDependencyFragment, TargetsDependencyFragment, RevisionFragment, GasMaterial, SolidMaterial, AnalyticalConstruction, LightReflectanceFragment, BuildingAnalyticalFragment, BuildingContextFragment, BuildingResultFragment, and more..."],"isRequired":1,"isInterface":1},{"inputName":"replace","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If set to true and the object already contains a fragment of the type being added, the fragment will be replaced by this instance ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IBHoMObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["The BHoM object with the added fragment ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Base","className":"Modify","memberName":"ISetGeometry","assemblyName":"BHoM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IBHoMObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Base","className":"Query","memberName":"Hash","assemblyName":"BHoM_Engine.dll","descriptionParts":["Computes a Hash code for the iObject. The hash uniquely represents an object's state, based on its properties and their values. It can be used for comparisons.","You can change how the hash is computed by changing the settings in the ComparisonConfig. ",""],"inputs":[{"inputName":"iObj","namespace":"BH.oM.Base","memberName":"IObject","isGeneric":"0","descriptionParts":["iObject the hash code should be calculated for. ","This is a BH.oM.Base.IObject ","This can be of the following types: FileSettings, AdapterSettings, ObjectWrapper, ActionConfig, AnalyseLoadCases, CustomCommand, Analyse, NewModel, Close, Open, ClearResults, SaveAs, Save, BatchRequest, CustomRequest, and more..."],"isRequired":1,"isInterface":1},{"inputName":"comparisonConfig","namespace":"BH.oM.Base","memberName":"ComparisonConfig","isGeneric":"0","descriptionParts":["Configure how the hash is computed. ","This is a BH.oM.Base.ComparisonConfig: ","Settings to determine the uniqueness of an Object."],"isRequired":0,"isInterface":0},{"inputName":"hashFromFragment","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, if the object is a BHoMObject storing a HashFragment, retrieve the hash from it instead of computing the hash. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Base","className":"Query","memberName":"GetAllFragments","assemblyName":"BHoM_Engine.dll","descriptionParts":["Returns all Fragments of an object that inherit from the given parentType, or all of them if no parentType is provided. ",""],"inputs":[{"inputName":"iBHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["Any IBHoMObject object. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"parentType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["All fragments of a type that inherits from this parent type will be returned. If not specified, all fragments are returned. ","This is a Type"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IFragment","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A deep copy of the fragments is returned for immutability. ","This is a List<IFragment> ","This can be of the following types: HashFragment, PreviousNamesFragment, ParamOldIndexFragment, ProjectionFragment, RoutingFragment, SourcesDependencyFragment, TargetsDependencyFragment, RevisionFragment, GasMaterial, SolidMaterial, AnalyticalConstruction, LightReflectanceFragment, BuildingAnalyticalFragment, BuildingContextFragment, BuildingResultFragment, and more..."]}},{"namespace":"BH.Engine.Base","className":"Query","memberName":"FindFragment","assemblyName":"BHoM_Engine.dll","descriptionParts":["Returns an instance of a BHoM Fragment if it exists on the object ",""],"inputs":[{"inputName":"iBHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["A generic IBHoMObject object ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"fragmentType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The type of fragment to be queried and returned. If not specified, the generic type is taken. ","This is a Type"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"T","namespace":"BH.Engine.Base","isGeneric":"0","descriptionParts":["The instance of that Fragment if it exists on the object, null otherwise ","This is a BH.Engine.Base.T"]}},{"namespace":"BH.Engine.Base","className":"Query","memberName":"DeepClone","assemblyName":"BHoM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"BH.Engine.Base","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Base.T"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"T","namespace":"BH.Engine.Base","isGeneric":"0","descriptionParts":["This is a BH.Engine.Base.T"]}},{"namespace":"BH.Engine.Base","className":"Query","memberName":"FilterByType","assemblyName":"BHoM_Engine.dll","descriptionParts":["Filters a list of objects by a type. Any objects that is assignable from the provided type will be returned. ",""],"inputs":[{"inputName":"list","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The list of elements to filter. ","This is a IEnumerable<Object>"],"isRequired":1,"isInterface":1},{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["Type to filter by. ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Filtered list containing only objects assignable from the provided type. ","This is a List<Object>"]}},{"namespace":"BH.Engine.Base","className":"Query","memberName":"IGeometry","assemblyName":"BHoM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Base","className":"Query","memberName":"Geometry","assemblyName":"BHoM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"BH.oM.Base","memberName":"CustomObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.CustomObject"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Base","className":"Query","memberName":"GroupByType","assemblyName":"BHoM_Engine.dll","descriptionParts":["Groups a list of objects by their type ",""],"inputs":[{"inputName":"list","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Base","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of objects to group ","This is a IEnumerable<T>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Base","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["List of List of objects. Each inner list will correspond to one object type ","This is a List<List<T>>"]}},{"namespace":"BH.Engine.Base","className":"Query","memberName":"ObjectsByType","assemblyName":"BHoM_Engine.dll","descriptionParts":["Returns a collection of objects which are of the provided object type. ",""],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of generic BHoM objects. ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The type of object to be queried and returned. ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of generic BHoM objects matching the provided type. ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Base","className":"Query","memberName":"ShallowClone","assemblyName":"BHoM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"BH.Engine.Base","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Base.T"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"T","namespace":"BH.Engine.Base","isGeneric":"0","descriptionParts":["This is a BH.Engine.Base.T"]}},{"namespace":"BH.Engine.Base","className":"Query","memberName":"ShallowClone","assemblyName":"BHoM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"BH.Engine.Base","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Base.T"],"isRequired":1,"isInterface":0},{"inputName":"newGuid","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"T","namespace":"BH.Engine.Base","isGeneric":"0","descriptionParts":["This is a BH.Engine.Base.T"]}},{"namespace":"BH.Engine.Base","className":"Query","memberName":"TryGetValue","assemblyName":"BHoM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"fragmentSet","namespace":"BH.oM.Base","memberName":"FragmentSet","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.FragmentSet"],"isRequired":1,"isInterface":0},{"inputName":"fragmentType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"fragment","namespace":"BH.oM.Base","memberName":"IFragment&","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IFragment&"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Base","className":"Create","memberName":"BHoMGroup","assemblyName":"BHoM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"elements","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Base","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"downCast","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IBHoMGroup","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IBHoMGroup ","This can be of the following types: BHoMGroup<T>"]}},{"namespace":"BH.Engine.Base","className":"Create","memberName":"BHoMGroup","assemblyName":"BHoM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"elements","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Base","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IBHoMGroup","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IBHoMGroup ","This can be of the following types: BHoMGroup<T>"]}},{"namespace":"BH.Engine.Base","className":"Create","memberName":"RandomObject","assemblyName":"BHoM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IObject ","This can be of the following types: FileSettings, AdapterSettings, ObjectWrapper, ActionConfig, AnalyseLoadCases, CustomCommand, Analyse, NewModel, Close, Open, ClearResults, SaveAs, Save, BatchRequest, CustomRequest, and more..."]}},{"namespace":"BH.Engine.Base","className":"Create","memberName":"RandomObject","assemblyName":"BHoM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IObject ","This can be of the following types: FileSettings, AdapterSettings, ObjectWrapper, ActionConfig, AnalyseLoadCases, CustomCommand, Analyse, NewModel, Close, Open, ClearResults, SaveAs, Save, BatchRequest, CustomRequest, and more..."]}},{"namespace":"BH.Engine.Base","className":"Create","memberName":"CustomObject","assemblyName":"BHoM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"data","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<String, Object>"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"CustomObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.CustomObject"]}},{"namespace":"BH.Engine.Base","className":"Create","memberName":"CustomObject","assemblyName":"BHoM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"propertyNames","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"],"isRequired":1,"isInterface":0},{"inputName":"propertyValues","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"CustomObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.CustomObject"]}},{"namespace":"BH.Engine.Base","className":"Compute","memberName":"ExecutionSpeed","assemblyName":"BHoM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"functions","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Base.Objects","memberName":"IterFunction","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<IterFunction>"],"isRequired":1,"isInterface":0},{"inputName":"testTime","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Int32>"]}},{"namespace":"BH.Engine.Adapters.CarbonQueryDatabase","className":"Compute","memberName":"CQDBearerToken","assemblyName":"CarbonQueryDatabase_Engine.dll","descriptionParts":["Returns a bearer token for the CarbonQueryDatabase system from the provided username and password ",""],"inputs":[{"inputName":"username","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Your username for the system ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"password","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Your password for the system - case sensitive, do not share scripts with this saved ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The bearer token to use the database system or the full response string if there was an error ","This is a String"]}},{"namespace":"BH.Engine.Adapters.CarbonQueryDatabase","className":"Create","memberName":"CarbonQueryDatabaseRequest","assemblyName":"CarbonQueryDatabase_Engine.dll","descriptionParts":["Create a GetRequest for the CarbonQueryDatabase ",""],"inputs":[{"inputName":"apiCommand","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The CarbonQueryDatabase REST API command to create a GetRequest with ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"bearerToken","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The CarbonQueryDatabase bearerToken (this can be acquired using Compute BearerToken with your EC3 username and password) ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"parameters","namespace":"BH.oM.Adapters.CarbonQueryDatabase","memberName":"CQDConfig","isGeneric":"0","descriptionParts":["An optional config object with properties representing parameters to create the GetRequest with (ie count, name_like, etc) ","This is a BH.oM.Adapters.CarbonQueryDatabase.CQDConfig: ","This Config can be specified in the `ActionConfig` input of any Adapter Action (e.g. Push)."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GetRequest","namespace":"BH.oM.Adapters.HTTP","isGeneric":"0","descriptionParts":["A GetRequest with CarbonQueryDatabase specific headers and uri ","This is a BH.oM.Adapters.HTTP.GetRequest"]}},{"namespace":"BH.Engine.Geometry.Offset","className":"Compute","memberName":"Offset","assemblyName":"Clipper_Engine.dll","descriptionParts":["Offset a curve by the given distance (using Clipper http://www.angusj.com/delphi/clipper.php) ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["A BHoM Polyline representing the curve to offset ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"distance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The distance by which to offset the curve (-Ve is inwards) ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A list of BHoM Polylines ","This is a List<Polyline>"]}},{"namespace":"BH.Engine.CSharp","className":"Compute","memberName":"Variables","assemblyName":"CSharp_Engine.dll","descriptionParts":["Compute all variables existing within a block of nodes (i.e the nodes and the inputs for that block) ",""],"inputs":[{"inputName":"nodes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Programming","memberName":"INode","isInterface":"1","isGeneric":"0"}],"descriptionParts":["List of nodes inside that block to extract variables from ","This is a List<INode> ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"],"isRequired":1,"isInterface":0},{"inputName":"blockInputs","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Programming","memberName":"DataParam","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of input parameters for that block ","This is a List<DataParam>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.CSharp","memberName":"Variable","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Variables organised by the id of the parameter generating them ","This is a Dictionary<Guid, Variable>"]}},{"namespace":"BH.Engine.CSharp","className":"Compute","memberName":"NodeSequence","assemblyName":"CSharp_Engine.dll","descriptionParts":["Order the nodes in a sequence where each node appears after all its inputs ",""],"inputs":[{"inputName":"nodes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Programming","memberName":"INode","isInterface":"1","isGeneric":"0"}],"descriptionParts":["List of nodes to order ","This is a List<INode> ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Programming","memberName":"INode","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Ordered list of nodes ","This is a List<INode> ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"]}},{"namespace":"BH.Engine.CSharp","className":"Compute","memberName":"ApplyGroups","assemblyName":"CSharp_Engine.dll","descriptionParts":["Replace groups of nodes into block nodes ",""],"inputs":[{"inputName":"nodes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Programming","memberName":"INode","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Flat list of nodes that need to be grouped ","This is a List<INode> ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"],"isRequired":1,"isInterface":0},{"inputName":"groups","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Programming","memberName":"NodeGroup","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Defines how the nodes should be grouped ","This is a List<NodeGroup>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Programming","memberName":"INode","isInterface":"1","isGeneric":"0"}],"descriptionParts":["New list where the grouped nodes are now contained in block nodes ","This is a List<INode> ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"]}},{"namespace":"BH.Engine.CSharp","className":"Convert","memberName":"ToCSharpText","assemblyName":"CSharp_Engine.dll","descriptionParts":["Convert a BHoM Cluster content into C# code ",""],"inputs":[{"inputName":"content","namespace":"BH.oM.Programming","memberName":"ClusterContent","isGeneric":"0","descriptionParts":["Cluster content to convert ","This is a BH.oM.Programming.ClusterContent: ","Content of a Cluster syntax node."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["Corresponding C# code ","This is a String"]}},{"namespace":"BH.Engine.CSharp","className":"Convert","memberName":"ToCSharpSyntaxNode","assemblyName":"CSharp_Engine.dll","descriptionParts":["Convert a BHoM Cluster content into a Microsoft CSharp syntax node ",""],"inputs":[{"inputName":"content","namespace":"BH.oM.Programming","memberName":"ClusterContent","isGeneric":"0","descriptionParts":["Cluster content to convert ","This is a BH.oM.Programming.ClusterContent: ","Content of a Cluster syntax node."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CSharpSyntaxNode","namespace":"Microsoft.CodeAnalysis.CSharp","isGeneric":"0","descriptionParts":["Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode corresponding to the input BHoM content ","This is a CSharpSyntaxNode"]}},{"namespace":"BH.Engine.CSharp","className":"Query","memberName":"Children","assemblyName":"CSharp_Engine.dll","descriptionParts":["Get the ids of all the nodes inside the input group (including nodes inside internal groups) ",""],"inputs":[{"inputName":"group","namespace":"BH.oM.Programming","memberName":"NodeGroup","isGeneric":"0","descriptionParts":["Group to get the children from ","This is a BH.oM.Programming.NodeGroup: ","A group of syntax nodes referenced by their Guid."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Ids of the children nodes ","This is a List<Guid>"]}},{"namespace":"BH.Engine.CSharp","className":"Query","memberName":"IExpression","assemblyName":"CSharp_Engine.dll","descriptionParts":["Get the C# expression corresponding to a node given a list of available input expressions ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Programming","memberName":"INode","isGeneric":"0","descriptionParts":["Node to get the expression from ","This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"],"isRequired":1,"isInterface":1},{"inputName":"inputs","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"Microsoft.CodeAnalysis.CSharp.Syntax","memberName":"ExpressionSyntax","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of input expressions available in the context of the node ","This is a List<ExpressionSyntax>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ExpressionSyntax","namespace":"Microsoft.CodeAnalysis.CSharp.Syntax","isGeneric":"0","descriptionParts":["Microsoft.CodeAnalysis.CSharp.ExpressionSyntax corresponding to the node ","This is a ExpressionSyntax"]}},{"namespace":"BH.Engine.CSharp","className":"Query","memberName":"SyntaxToken","assemblyName":"CSharp_Engine.dll","descriptionParts":["Get the C# syntax token corresponding to a variable ",""],"inputs":[{"inputName":"variable","namespace":"BH.oM.CSharp","memberName":"Variable","isGeneric":"0","descriptionParts":["Variable to get the token from ","This is a BH.oM.CSharp.Variable: ","Represents a code variable in the context of a BHoM abstract syntax tree."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SyntaxToken","namespace":"Microsoft.CodeAnalysis","isGeneric":"0","descriptionParts":["Microsoft.CodeAnalysis.CSharp.SyntaxToken corresponding to the variable ","This is a SyntaxToken"]}},{"namespace":"BH.Engine.CSharp","className":"Query","memberName":"DepthDifference","assemblyName":"CSharp_Engine.dll","descriptionParts":["Compares the depth of the data type accepted by a receiver against the data type of its source.","The depth represents the number of list levels are wrapped around the underlying type.","E.g. List<T> havve a depth of 1, List<List<T>> havve a depth of 2,... ",""],"inputs":[{"inputName":"receiver","namespace":"BH.oM.Programming","memberName":"ReceiverParam","isGeneric":"0","descriptionParts":["The receiver to get the depth difference for compared to its source ","This is a BH.oM.Programming.ReceiverParam: ","Input of a syntax node."],"isRequired":1,"isInterface":0},{"inputName":"emitters","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Programming","memberName":"DataParam","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<Guid, DataParam>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["receiver.Depth - receiver.Source.Depth ","This is a Int32"]}},{"namespace":"BH.Engine.CSharp","className":"Query","memberName":"DepthDifference","assemblyName":"CSharp_Engine.dll","descriptionParts":["Compares the depth of the data type accepted by a receiver against the data type of its source.","The depth represents the number of list levels are wrapped around the underlying type.","E.g. List<T> havve a depth of 1, List<List<T>> havve a depth of 2,... ",""],"inputs":[{"inputName":"receiver","namespace":"BH.oM.Programming","memberName":"ReceiverParam","isGeneric":"0","descriptionParts":["The receiver to get the depth difference for compared to its source ","This is a BH.oM.Programming.ReceiverParam: ","Input of a syntax node."],"isRequired":1,"isInterface":0},{"inputName":"variables","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.CSharp","memberName":"Variable","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The receiver only stores the id of its source so this is the list of available sources ","This is a Dictionary<Guid, Variable>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["receiver.Depth - receiver.Source.Depth ","This is a Int32"]}},{"namespace":"BH.Engine.CSharp","className":"Query","memberName":"IStatements","assemblyName":"CSharp_Engine.dll","descriptionParts":["Get the list of C# statements corresponding to a node given a list of available variables ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Programming","memberName":"INode","isGeneric":"0","descriptionParts":["Node to get the statements from ","This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"],"isRequired":1,"isInterface":1},{"inputName":"variables","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.CSharp","memberName":"Variable","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of variables available in the context of the node ","This is a Dictionary<Guid, Variable>"],"isRequired":1,"isInterface":0},{"inputName":"depth","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Optional input defining how many groups are wrapping this node ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"Microsoft.CodeAnalysis.CSharp.Syntax","memberName":"StatementSyntax","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Microsoft.CodeAnalysis.CSharp.StatementSyntax corresponding to the node ","This is a List<StatementSyntax>"]}},{"namespace":"BH.Engine.CSharp","className":"Query","memberName":"IOutputVariables","assemblyName":"CSharp_Engine.dll","descriptionParts":["Get the C# inline expressions corresponding to a node outputs given a list of available variables ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Programming","memberName":"INode","isGeneric":"0","descriptionParts":["Node to get the expression from ","This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"],"isRequired":1,"isInterface":1},{"inputName":"variables","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.CSharp","memberName":"Variable","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of variables available in the context of the node ","This is a Dictionary<Guid, Variable>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.CSharp","memberName":"Variable","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Microsoft.CodeAnalysis.CSharp.ExpressionSyntax corresponding to the node ","This is a Dictionary<Guid, Variable>"]}},{"namespace":"BH.Engine.CSharp","className":"Query","memberName":"Body","assemblyName":"CSharp_Engine.dll","descriptionParts":["Get the C# statement syntax corresponding to the content of a cluster ",""],"inputs":[{"inputName":"content","namespace":"BH.oM.Programming","memberName":"ClusterContent","isGeneric":"0","descriptionParts":["cluster content to get the statement syntax from ","This is a BH.oM.Programming.ClusterContent: ","Content of a Cluster syntax node."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"Microsoft.CodeAnalysis.CSharp.Syntax","memberName":"StatementSyntax","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of Microsoft.CodeAnalysis.CSharp.StatementSyntax corresponding to the input content ","This is a List<StatementSyntax>"]}},{"namespace":"BH.Engine.CSharp","className":"Query","memberName":"ArgumentValue","assemblyName":"CSharp_Engine.dll","descriptionParts":["Get the C# expression corresponding to a receiver param given a list of available variables ",""],"inputs":[{"inputName":"receiver","namespace":"BH.oM.Programming","memberName":"ReceiverParam","isGeneric":"0","descriptionParts":["Input of a node we need the C# expression for ","This is a BH.oM.Programming.ReceiverParam: ","Input of a syntax node."],"isRequired":1,"isInterface":0},{"inputName":"variables","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.CSharp","memberName":"Variable","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Variables available in the context of the receiver param ","This is a Dictionary<Guid, Variable>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ExpressionSyntax","namespace":"Microsoft.CodeAnalysis.CSharp.Syntax","isGeneric":"0","descriptionParts":["Microsoft.CodeAnalysis.CSharp.ExpressionSyntax corresponding to the receiver parameter ","This is a ExpressionSyntax"]}},{"namespace":"BH.Engine.CSharp","className":"Query","memberName":"ReturnType","assemblyName":"CSharp_Engine.dll","descriptionParts":["Get the C# type syntax corresponding to the first output of a cluster content ",""],"inputs":[{"inputName":"content","namespace":"BH.oM.Programming","memberName":"ClusterContent","isGeneric":"0","descriptionParts":["Cluster content to get the type syntax from ","This is a BH.oM.Programming.ClusterContent: ","Content of a Cluster syntax node."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TypeSyntax","namespace":"Microsoft.CodeAnalysis.CSharp.Syntax","isGeneric":"0","descriptionParts":["Microsoft.CodeAnalysis.CSharp.TypeSyntax corresponding to the return type of the content first output ","This is a TypeSyntax"]}},{"namespace":"BH.Engine.CSharp","className":"Query","memberName":"IReturnType","assemblyName":"CSharp_Engine.dll","descriptionParts":["Get the C# type syntax corresponding to the first output of a node ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Programming","memberName":"INode","isGeneric":"0","descriptionParts":["node to get the type syntax from ","This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"],"isRequired":1,"isInterface":1},{"inputName":"depth","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["number of list levels the return type needs to be wrapped into ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"TypeSyntax","namespace":"Microsoft.CodeAnalysis.CSharp.Syntax","isGeneric":"0","descriptionParts":["Microsoft.CodeAnalysis.CSharp.TypeSyntax corresponding to the return type of the node first output ","This is a TypeSyntax"]}},{"namespace":"BH.Engine.Data","className":"Compute","memberName":"DomainTreeClusters","assemblyName":"Data_Engine.dll","descriptionParts":["Clusters data in different collections using a DomainTree. ",""],"inputs":[{"inputName":"data","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Data to cluster. ","This is a List<T>"],"isRequired":1,"isInterface":0},{"inputName":"toDomainBox","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Data.Collections","memberName":"DomainBox","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Method which takes a item in the data and produces a DomainBox for the tree. ","This is a Func<T, DomainBox>"],"isRequired":1,"isInterface":0},{"inputName":"treeEvaluator","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"DomainBox","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Data.Collections","memberName":"DomainBox","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Boolean","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Method which evaluates if the items within the second DomainBox could be in the same cluster as the first DomainBox. ","This is a Func<DomainBox, DomainBox, Boolean>"],"isRequired":1,"isInterface":0},{"inputName":"itemEvaluator","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Boolean","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Method which evaluates if the two items should be in the same cluster. ","This is a Func<T, T, Boolean>"],"isRequired":1,"isInterface":0},{"inputName":"minItemCount","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Lowest number of item in a cluster to return. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["Clusters where itemEvaluator is never true between items from different clusters. ","This is a List<List<T>>"]}},{"namespace":"BH.Engine.Data","className":"Compute","memberName":"ClusterDBSCAN","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"items","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<T>"],"isRequired":1,"isInterface":0},{"inputName":"metricFunction","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Boolean","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Func<T, T, Boolean>"],"isRequired":1,"isInterface":0},{"inputName":"minCount","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<T>>"]}},{"namespace":"BH.Engine.Data","className":"Compute","memberName":"Series","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"count","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"start","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"step","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Double>"]}},{"namespace":"BH.Engine.Data","className":"Compute","memberName":"FilterData","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"request","namespace":"BH.oM.Data.Requests","memberName":"FilterRequest","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Requests.FilterRequest"],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Data","className":"Compute","memberName":"RelatedPairs","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"matrix","namespace":"BH.oM.Data.Collections","memberName":"PointMatrix","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.PointMatrix<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"minDist","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"maxDist","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Tuple","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"LocalData","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]},{"namespace":"BH.oM.Data.Collections","memberName":"LocalData","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}]}],"descriptionParts":["This is a List<Tuple<LocalData<T>, LocalData<T>>>"]}},{"namespace":"BH.Engine.Data","className":"Compute","memberName":"Path","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"graph","namespace":"BH.oM.Data.Collections","memberName":"Graph","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Graph<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"startNode","namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"endNode","namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"costHeuristic","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Func<T, T, Double>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<GraphNode<T>>"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"DomainTreeLeaf","assemblyName":"Data_Engine.dll","descriptionParts":["Create a leaf node for a DomainTree. ",""],"inputs":[{"inputName":"data","namespace":"BH.Engine.Data","memberName":"T","isGeneric":"0","descriptionParts":["The data to store in the DomainTree leaf. ","This is a BH.Engine.Data.T"],"isRequired":1,"isInterface":0},{"inputName":"domainBox","namespace":"BH.oM.Data.Collections","memberName":"DomainBox","isGeneric":"0","descriptionParts":["A DomainBox that encompasses the data. ","This is a BH.oM.Data.Collections.DomainBox: ","A multidimensional domain, defined by the minimum and maximum values in each dimension, enclosing a hypercube."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"DomainTree","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A leaf node for a DomainTree. ","This is a BH.oM.Data.Collections.DomainTree<BH.Engine.Data.T>: ","A data tree which is traversed through DomainBoxes. Each node's DomainBox is assumed to be enclosed by its parent's DomainBox and to enclose its own data. All the tree's data is stored in its leaves."]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"DomainTree","assemblyName":"Data_Engine.dll","descriptionParts":["Create a data tree with its data in its leaves which can be traversed by DomainBoxes. ",""],"inputs":[{"inputName":"dataItems","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The data to store in the DomainTree. ","This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"dataEvaluator","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Data.Collections","memberName":"DomainBox","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A function to query each data item's DomainBox. Used to build the tree. ","This is a Func<T, DomainBox>"],"isRequired":1,"isInterface":0},{"inputName":"treeDegree","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of child nodes for each node. ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"leafSize","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of siblings a leaf node can have. ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"sampleSize","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of items used to determine how to split the collection. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"DomainTree","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A data tree with its data in its leaves which can be traversed by DomainBoxes. ","This is a BH.oM.Data.Collections.DomainTree<BH.Engine.Data.T>: ","A data tree which is traversed through DomainBoxes. Each node's DomainBox is assumed to be enclosed by its parent's DomainBox and to enclose its own data. All the tree's data is stored in its leaves."]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"DomainTree","assemblyName":"Data_Engine.dll","descriptionParts":["Create a data tree with its data in its leaves which can be traversed by DomainBoxes. ",""],"inputs":[{"inputName":"dataItems","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"DomainTree","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["The data to store in the DomainTree. Provided as DomainTrees, needs to have the DomainBox property set to function. ","This is a IEnumerable<DomainTree<T>>"],"isRequired":1,"isInterface":1},{"inputName":"treeDegree","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of child nodes for each node. ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"leafSize","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of siblings a leaf node can have. ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"sampleSize","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of items used to determine how to split the collection. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"DomainTree","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A data tree with its data in its leaves which can be traversed by DomainBoxes. ","This is a BH.oM.Data.Collections.DomainTree<BH.Engine.Data.T>: ","A data tree which is traversed through DomainBoxes. Each node's DomainBox is assumed to be enclosed by its parent's DomainBox and to enclose its own data. All the tree's data is stored in its leaves."]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"DomainBox","assemblyName":"Data_Engine.dll","descriptionParts":["Creates a DomainBox from the two value arrays. ",""],"inputs":[{"inputName":"min","namespace":"System","memberName":"Double[]","isGeneric":"0","descriptionParts":["The minimum value for each dimension. ","This is a Double[]"],"isRequired":1,"isInterface":0},{"inputName":"max","namespace":"System","memberName":"Double[]","isGeneric":"0","descriptionParts":["The maximum value for each dimension. ","This is a Double[]"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"DomainBox","namespace":"BH.oM.Data.Collections","isGeneric":"0","descriptionParts":["A DomainBox enclosing the values. ","This is a BH.oM.Data.Collections.DomainBox: ","A multidimensional domain, defined by the minimum and maximum values in each dimension, enclosing a hypercube."]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"DomainBox","assemblyName":"Data_Engine.dll","descriptionParts":["Creates a DomainBox enclosing each array in the collection. ",""],"inputs":[{"inputName":"values","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double[]","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Each array in the collection is for a different dimension and will be enclosed by the DomainBox. ","This is a IEnumerable<Double[]>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"DomainBox","namespace":"BH.oM.Data.Collections","isGeneric":"0","descriptionParts":["A DomainBox enclosing the values. ","This is a BH.oM.Data.Collections.DomainBox: ","A multidimensional domain, defined by the minimum and maximum values in each dimension, enclosing a hypercube."]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"Domain","assemblyName":"Data_Engine.dll","descriptionParts":["Creates a numerical domain around the two values. ",""],"inputs":[{"inputName":"min","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The lowest value in the domain, will be set as max if larger than max. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"max","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The highest value in the domain, will be set as min if larger than min. ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Domain","namespace":"BH.oM.Data.Collections","isGeneric":"0","descriptionParts":["A numerical domain with its extreme values at min and max. ","This is a BH.oM.Data.Collections.Domain: ","A numerical domain defined by a minimum and maximum value."]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"Domain","assemblyName":"Data_Engine.dll","descriptionParts":["Creates a numerical domain around the collection of values. ",""],"inputs":[{"inputName":"values","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Values to create a domain around. ","This is a IEnumerable<Double>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Domain","namespace":"BH.oM.Data.Collections","isGeneric":"0","descriptionParts":["A numerical domain enclosing all the values of the input. ","This is a BH.oM.Data.Collections.Domain: ","A numerical domain defined by a minimum and maximum value."]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"LogicalNotRequest","assemblyName":"Data_Engine.dll","descriptionParts":["Creates a logical request that inverts the query specified by the input request, i.e. any object that fits this request will be excluded from a pull. ",""],"inputs":[{"inputName":"request","namespace":"BH.oM.Data.Requests","memberName":"IRequest","isGeneric":"0","descriptionParts":["Request to be inverted, i.e. defining what should be excluded. ","This is a BH.oM.Data.Requests.IRequest ","This can be of the following types: BatchRequest, CustomRequest, FilterRequest, LogicalAndRequest, LogicalNotRequest, LogicalOrRequest, SelectionRequest, PierAndSpandrelForceRequest, RemoveRequest, FileContentRequest, DirectoryRequest, FileRequest, FileDirRequest, GetRequest, CollectionNames, and more... ",""],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"LogicalNotRequest","namespace":"BH.oM.Data.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Data.Requests.LogicalNotRequest: ","IRequest that inverts the query specified by the input request, i.e. any object that fits this request will be excluded from a pull."]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"Node","assemblyName":"Data_Engine.dll","descriptionParts":["Passes the data down through the tree to the leaves and creates the parent nodes on the way back up. i.e. The data will be stored in the leaves and the parent node can be defined through its children. ",""],"inputs":[{"inputName":"dataItems","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"TNode","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The data to store in the Node tree, formatted as leaf nodes. ","This is a IEnumerable<TNode>"],"isRequired":1,"isInterface":1},{"inputName":"splitDataMethod","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"IEnumerable","isInterface":"1","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"TNode","isInterface":"0","isGeneric":"0"}]},{"namespace":"BH.oM.Reflection","memberName":"Output","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"TNode","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"TNode","isInterface":"0","isGeneric":"0"}]}]}],"descriptionParts":["Method clustering a collection of leaves into two collections based on their data. ","This is a Func<IEnumerable<TNode>, Output<List<TNode>, List<TNode>>>"],"isRequired":1,"isInterface":0},{"inputName":"setChildrenToNode","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"IEnumerable","isInterface":"1","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"TNode","isInterface":"0","isGeneric":"0"}]},{"namespace":"BH.Engine.Data","memberName":"TNode","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Method which creates a parent node of the provided nodes and assignes them as children. Called last, any data assigned within to the parent will be avalible for use on the children it operates on due to recursion. ","This is a Func<IEnumerable<TNode>, TNode>"],"isRequired":1,"isInterface":0},{"inputName":"treeDegree","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of child nodes for each node. ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"leafSize","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of siblings a leaf node can have. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"TNode","namespace":"BH.Engine.Data","isGeneric":"0","descriptionParts":["Root node for a data tree with all the data in its leaves and with nodes defined by their children. ","This is a BH.Engine.Data.TNode"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"Node","assemblyName":"Data_Engine.dll","descriptionParts":["Passes the data down through the tree to the leaves and creates the parent nodes on the way back up. i.e. The data will be stored in the leaves and the parent node can be defined through its children. ",""],"inputs":[{"inputName":"dataItems","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"TNode","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The data to store in the Node tree, formatted as leaf nodes. ","This is a IEnumerable<TNode>"],"isRequired":1,"isInterface":1},{"inputName":"partitionMethod","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"IEnumerable","isInterface":"1","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"TNode","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"IEnumerable","isInterface":"1","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"IEnumerable","isInterface":"1","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"TNode","isInterface":"0","isGeneric":"0"}]}]}],"descriptionParts":["Method to separate a flat collection of data into the data collections for the child nodes. Number of collections returned will be the degree of the tree. Breaks the recursion when it only returns a single collection. ","This is a Func<IEnumerable<TNode>, IEnumerable<IEnumerable<TNode>>>"],"isRequired":1,"isInterface":0},{"inputName":"setChildrenToNode","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"IEnumerable","isInterface":"1","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"TNode","isInterface":"0","isGeneric":"0"}]},{"namespace":"BH.Engine.Data","memberName":"TNode","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Method which creates a parent node of the provided nodes and assignes them. Called last, any data assigned within to the parent will be avalible for use on the children it operates on due to recursion. ","This is a Func<IEnumerable<TNode>, TNode>"],"isRequired":1,"isInterface":0},{"inputName":"leafSize","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of siblings a leaf node can have. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"TNode","namespace":"BH.Engine.Data","isGeneric":"0","descriptionParts":["Root node for a data tree with all the data in its leaves and with nodes defined by their children. ","This is a BH.Engine.Data.TNode"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"BatchRequest","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"requests","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Requests","memberName":"IRequest","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<IRequest> ","This can be of the following types: BatchRequest, CustomRequest, FilterRequest, LogicalAndRequest, LogicalNotRequest, LogicalOrRequest, SelectionRequest, PierAndSpandrelForceRequest, RemoveRequest, FileContentRequest, DirectoryRequest, FileRequest, FileDirRequest, GetRequest, CollectionNames, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"BatchRequest","namespace":"BH.oM.Data.Requests","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Requests.BatchRequest"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"CustomRequest","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"request","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"CustomRequest","namespace":"BH.oM.Data.Requests","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Requests.CustomRequest"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"Dataset","assemblyName":"Data_Engine.dll","descriptionParts":["Creates a Dataset. A Dataset contains a list of BHoMObjects as well as metadata such as source information and time of creation. "," The datasets are used together with the serialised datasets accessed with the Library_Engine ",""],"inputs":[{"inputName":"data","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The list of BHoMObjects to store in the Dataset ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0},{"inputName":"source","namespace":"BH.oM.Data.Library","memberName":"Source","isGeneric":"0","descriptionParts":["Citation for the source of the data ","This is a BH.oM.Data.Library.Source"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the dataset ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"timeOfCreation","namespace":"System","memberName":"Nullable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"DateTime","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The time the Dataset was generated. If no time is provided, the current UTC time will be used. ","This is a Nullable<DateTime>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Dataset","namespace":"BH.oM.Data.Library","isGeneric":"0","descriptionParts":["The created Dataset ","This is a BH.oM.Data.Library.Dataset"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"DBSCANObject","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"cluserItem","namespace":"BH.Engine.Data","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Data.T"],"isRequired":1,"isInterface":0},{"inputName":"clusterId","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"isVisited","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"DBSCANObject","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.DBSCANObject<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"FilterRequest","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":0,"isInterface":0},{"inputName":"tag","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"FilterRequest","namespace":"BH.oM.Data.Requests","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Requests.FilterRequest"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"FilterRequest","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"equalities","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<String, Object>"],"isRequired":1,"isInterface":0},{"inputName":"tag","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"FilterRequest","namespace":"BH.oM.Data.Requests","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Requests.FilterRequest"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"FilterRequest","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"cases","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Object>"],"isRequired":0,"isInterface":1},{"inputName":"objectIds","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Object>"],"isRequired":0,"isInterface":1},{"inputName":"tag","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"FilterRequest","namespace":"BH.oM.Data.Requests","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Requests.FilterRequest"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"LogicalAndRequest","assemblyName":"Data_Engine.dll","descriptionParts":["Creates an IRequest that combines a couple of requests into a logical AND statement. ",""],"inputs":[{"inputName":"request1","namespace":"BH.oM.Data.Requests","memberName":"IRequest","isGeneric":"0","descriptionParts":["First request in logical statement. ","This is a BH.oM.Data.Requests.IRequest ","This can be of the following types: BatchRequest, CustomRequest, FilterRequest, LogicalAndRequest, LogicalNotRequest, LogicalOrRequest, SelectionRequest, PierAndSpandrelForceRequest, RemoveRequest, FileContentRequest, DirectoryRequest, FileRequest, FileDirRequest, GetRequest, CollectionNames, and more..."],"isRequired":1,"isInterface":1},{"inputName":"request2","namespace":"BH.oM.Data.Requests","memberName":"IRequest","isGeneric":"0","descriptionParts":["Second request in logical statement. ","This is a BH.oM.Data.Requests.IRequest ","This can be of the following types: BatchRequest, CustomRequest, FilterRequest, LogicalAndRequest, LogicalNotRequest, LogicalOrRequest, SelectionRequest, PierAndSpandrelForceRequest, RemoveRequest, FileContentRequest, DirectoryRequest, FileRequest, FileDirRequest, GetRequest, CollectionNames, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"LogicalAndRequest","namespace":"BH.oM.Data.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Data.Requests.LogicalAndRequest: ","IRequest that combines a group of requests into a logical AND statement."]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"LogicalAndRequest","assemblyName":"Data_Engine.dll","descriptionParts":["Creates an IRequest that combines a group of requests into a logical AND statement. ",""],"inputs":[{"inputName":"requests","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Requests","memberName":"IRequest","isInterface":"1","isGeneric":"0"}],"descriptionParts":["IRequests to be combined into a logical AND statement. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LogicalAndRequest","namespace":"BH.oM.Data.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Data.Requests.LogicalAndRequest: ","IRequest that combines a group of requests into a logical AND statement."]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"LogicalOrRequest","assemblyName":"Data_Engine.dll","descriptionParts":["Creates an IRequest that combines a couple of requests into a logical OR statement. ",""],"inputs":[{"inputName":"request1","namespace":"BH.oM.Data.Requests","memberName":"IRequest","isGeneric":"0","descriptionParts":["First request in logical statement. ","This is a BH.oM.Data.Requests.IRequest ","This can be of the following types: BatchRequest, CustomRequest, FilterRequest, LogicalAndRequest, LogicalNotRequest, LogicalOrRequest, SelectionRequest, PierAndSpandrelForceRequest, RemoveRequest, FileContentRequest, DirectoryRequest, FileRequest, FileDirRequest, GetRequest, CollectionNames, and more..."],"isRequired":1,"isInterface":1},{"inputName":"request2","namespace":"BH.oM.Data.Requests","memberName":"IRequest","isGeneric":"0","descriptionParts":["Second request in logical statement. ","This is a BH.oM.Data.Requests.IRequest ","This can be of the following types: BatchRequest, CustomRequest, FilterRequest, LogicalAndRequest, LogicalNotRequest, LogicalOrRequest, SelectionRequest, PierAndSpandrelForceRequest, RemoveRequest, FileContentRequest, DirectoryRequest, FileRequest, FileDirRequest, GetRequest, CollectionNames, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"LogicalOrRequest","namespace":"BH.oM.Data.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Data.Requests.LogicalOrRequest: ","IRequest that combines a group of requests into a logical OR statement."]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"LogicalOrRequest","assemblyName":"Data_Engine.dll","descriptionParts":["Creates an IRequest that combines a group of requests into a logical OR statement. ",""],"inputs":[{"inputName":"requests","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Requests","memberName":"IRequest","isInterface":"1","isGeneric":"0"}],"descriptionParts":["IRequests to be combined into a logical OR statement. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LogicalOrRequest","namespace":"BH.oM.Data.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Data.Requests.LogicalOrRequest: ","IRequest that combines a group of requests into a logical OR statement."]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"PointMatrix","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"cellSize","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PointMatrix","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.PointMatrix<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"PointMatrix","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"data","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"LocalData","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<LocalData<T>>"],"isRequired":1,"isInterface":0},{"inputName":"cellSize","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PointMatrix","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.PointMatrix<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"LocalData","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"position","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"data","namespace":"BH.Engine.Data","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Data.T"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LocalData","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.LocalData<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"DiscretePoint","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"x","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"y","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"z","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"DiscretePoint","namespace":"BH.oM.Data.Collections","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Collections.DiscretePoint"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"DiscretePoint","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"step","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"DiscretePoint","namespace":"BH.oM.Data.Collections","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Collections.DiscretePoint"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"PriorityQueue","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"data","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<T>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PriorityQueue","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.PriorityQueue<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"SelectionRequest","assemblyName":"Data_Engine.dll","descriptionParts":["Creates an IRequest that filters all elements currently selected in the software. ",""],"inputs":[],"outputs":{"memberName":"SelectionRequest","namespace":"BH.oM.Data.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Data.Requests.SelectionRequest: ","IRequest that filters all elements currently selected in the software."]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"Table","assemblyName":"Data_Engine.dll","descriptionParts":["Generates a Table from a list of BHoMObjects. To generate a custom table, use this in conjunction with CustomObjects ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the table ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"bhomObjects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The list of BHoMObejcts to turn into a Table ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0},{"inputName":"ignoreName","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether to skip the name property or not, defaults to false ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"ignoreGuid","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether to skip the name Guid or not, defaults to false ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"ignoreTags","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether to skip the name Tags or not, defaults to false ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Table","namespace":"BH.oM.Data.Collections","isGeneric":"0","descriptionParts":["The created Table class ","This is a BH.oM.Data.Collections.Table"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"Table","assemblyName":"Data_Engine.dll","descriptionParts":["Generates a 2d tables based on the two main axis values in two directions and matrix of internal values. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the table ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"axis1Name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the first axis ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"axis1Values","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Values of the first axis ","This is a List<Object>"],"isRequired":1,"isInterface":0},{"inputName":"axis2Name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the second axis ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"axis2Values","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Values of the second axis ","This is a List<Object>"],"isRequired":1,"isInterface":0},{"inputName":"values","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["Main values of the table ","This is a List<List<T>>"],"isRequired":1,"isInterface":0},{"inputName":"valuesName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Optional name of the values of the table ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Table","namespace":"BH.oM.Data.Collections","isGeneric":"0","descriptionParts":["The generated table ","This is a BH.oM.Data.Collections.Table"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"Tree","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"value","namespace":"BH.Engine.Data","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Data.T"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Tree","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Tree<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"Tree","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"children","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Data.Collections","memberName":"Tree","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a Dictionary<String, Tree<T>>"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Tree","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Tree<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"Tree","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"items","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<T>"],"isRequired":1,"isInterface":0},{"inputName":"paths","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<String>>"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Tree","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Tree<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"VennDiagram","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"set1","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"set2","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"comparer","namespace":"System.Collections.Generic","memberName":"IEqualityComparer","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEqualityComparer<T> ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"VennDiagram","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.VennDiagram<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"Graph","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"nodes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<GraphNode<T>>"],"isRequired":0,"isInterface":0},{"inputName":"links","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"GraphLink","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<GraphLink<T>>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Graph","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Graph<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"GraphLink","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"from","namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"to","namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"weight","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"attributes","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<String, Object>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GraphLink","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphLink<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Create","memberName":"GraphNode","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"value","namespace":"BH.Engine.Data","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Data.T"],"isRequired":0,"isInterface":0},{"inputName":"attributes","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<String, Object>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GraphNode","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"Add","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"queue","namespace":"BH.oM.Data.Collections","memberName":"PriorityQueue","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.PriorityQueue<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"item","namespace":"BH.Engine.Data","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Data.T"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"Add","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"matrix","namespace":"BH.oM.Data.Collections","memberName":"PointMatrix","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.PointMatrix<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"position","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"data","namespace":"BH.Engine.Data","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Data.T"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"GroupByName","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tree","namespace":"BH.oM.Data.Collections","memberName":"Tree","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Tree<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Tree","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Tree<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"ShortenBranches","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tree","namespace":"BH.oM.Data.Collections","memberName":"Tree","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Tree<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Tree","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Tree<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"Pop","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"queue","namespace":"BH.oM.Data.Collections","memberName":"PriorityQueue","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.PriorityQueue<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"T","namespace":"BH.Engine.Data","isGeneric":"0","descriptionParts":["This is a BH.Engine.Data.T"]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"RemoveLink","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"graph","namespace":"BH.oM.Data.Collections","memberName":"Graph","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Graph<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"from","namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"to","namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"bothDirection","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"RemoveLink","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"graph","namespace":"BH.oM.Data.Collections","memberName":"Graph","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Graph<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"link","namespace":"BH.oM.Data.Collections","memberName":"GraphLink","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphLink<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"AddLink","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"graph","namespace":"BH.oM.Data.Collections","memberName":"Graph","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Graph<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"from","namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"to","namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"weight","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"bothDirection","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"AddLink","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"graph","namespace":"BH.oM.Data.Collections","memberName":"Graph","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Graph<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"link","namespace":"BH.oM.Data.Collections","memberName":"GraphLink","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphLink<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"AddNode","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"graph","namespace":"BH.oM.Data.Collections","memberName":"Graph","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Graph<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"node","namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"AddNode","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"graph","namespace":"BH.oM.Data.Collections","memberName":"Graph","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Graph<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"value","namespace":"BH.Engine.Data","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Data.T"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"GraphNode","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"RemoveNode","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"graph","namespace":"BH.oM.Data.Collections","memberName":"Graph","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Graph<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"node","namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"TransposeRectangularCollection","assemblyName":"Data_Engine.dll","descriptionParts":["Get the transpose of a rectangular collection ",""],"inputs":[{"inputName":"lists","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["The rectangular collection to transpose ","This is a List<List<T>>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["The transposed rectangular collection ","This is a List<List<T>>"]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"Peek","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"queue","namespace":"BH.oM.Data.Collections","memberName":"PriorityQueue","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.PriorityQueue<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"T","namespace":"BH.Engine.Data","isGeneric":"0","descriptionParts":["This is a BH.Engine.Data.T"]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"IRequests","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"request","namespace":"BH.oM.Data.Requests","memberName":"ILogicalRequest","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Requests.ILogicalRequest ","This can be of the following types: LogicalAndRequest, LogicalNotRequest, LogicalOrRequest"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Requests","memberName":"IRequest","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<IRequest> ","This can be of the following types: BatchRequest, CustomRequest, FilterRequest, LogicalAndRequest, LogicalNotRequest, LogicalOrRequest, SelectionRequest, PierAndSpandrelForceRequest, RemoveRequest, FileContentRequest, DirectoryRequest, FileRequest, FileDirRequest, GetRequest, CollectionNames, and more..."]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"Requests","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"request","namespace":"BH.oM.Data.Requests","memberName":"LogicalAndRequest","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Requests.LogicalAndRequest: ","IRequest that combines a group of requests into a logical AND statement."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Requests","memberName":"IRequest","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<IRequest> ","This can be of the following types: BatchRequest, CustomRequest, FilterRequest, LogicalAndRequest, LogicalNotRequest, LogicalOrRequest, SelectionRequest, PierAndSpandrelForceRequest, RemoveRequest, FileContentRequest, DirectoryRequest, FileRequest, FileDirRequest, GetRequest, CollectionNames, and more..."]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"Requests","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"request","namespace":"BH.oM.Data.Requests","memberName":"LogicalOrRequest","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Requests.LogicalOrRequest: ","IRequest that combines a group of requests into a logical OR statement."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Requests","memberName":"IRequest","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<IRequest> ","This can be of the following types: BatchRequest, CustomRequest, FilterRequest, LogicalAndRequest, LogicalNotRequest, LogicalOrRequest, SelectionRequest, PierAndSpandrelForceRequest, RemoveRequest, FileContentRequest, DirectoryRequest, FileRequest, FileDirRequest, GetRequest, CollectionNames, and more..."]}},{"namespace":"BH.Engine.Data","className":"Modify","memberName":"Requests","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"request","namespace":"BH.oM.Data.Requests","memberName":"LogicalNotRequest","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Requests.LogicalNotRequest: ","IRequest that inverts the query specified by the input request, i.e. any object that fits this request will be excluded from a pull."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Requests","memberName":"IRequest","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<IRequest> ","This can be of the following types: BatchRequest, CustomRequest, FilterRequest, LogicalAndRequest, LogicalNotRequest, LogicalOrRequest, SelectionRequest, PierAndSpandrelForceRequest, RemoveRequest, FileContentRequest, DirectoryRequest, FileRequest, FileDirRequest, GetRequest, CollectionNames, and more..."]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"AdjacencyDictionary","assemblyName":"Data_Engine.dll","descriptionParts":["Gets the adjacency dictionary of a graph, each key value pair in the resulting dictionary is in the form <node, neighbours> ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Data.Collections","memberName":"Graph","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The graph to extract the adjacency dictionary from ","This is a BH.oM.Data.Collections.Graph<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}]}],"descriptionParts":["This is a Dictionary<GraphNode<T>, List<GraphNode<T>>>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"Axes","assemblyName":"Data_Engine.dll","descriptionParts":["Gets the names of all the axes in the table ",""],"inputs":[{"inputName":"table","namespace":"BH.oM.Data.Collections","memberName":"Table","isGeneric":"0","descriptionParts":["The table to extract the axes from ","This is a BH.oM.Data.Collections.Table"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The table axes names ","This is a List<String>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"AxisExists","assemblyName":"Data_Engine.dll","descriptionParts":["Checks if the table contains a specific axis ",""],"inputs":[{"inputName":"table","namespace":"BH.oM.Data.Collections","memberName":"Table","isGeneric":"0","descriptionParts":["The table to check ","This is a BH.oM.Data.Collections.Table"],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the axis to check for ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Returns true if the axis is in the table ","This is a Boolean"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"AxisExists","assemblyName":"Data_Engine.dll","descriptionParts":["Checks if the table contains a specific axis ",""],"inputs":[{"inputName":"table","namespace":"BH.oM.Data.Collections","memberName":"Table","isGeneric":"0","descriptionParts":["The table to check ","This is a BH.oM.Data.Collections.Table"],"isRequired":1,"isInterface":0},{"inputName":"axes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The name of the axes to check for ","This is a List<String>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Returns true if the axis is in the table ","This is a Boolean"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"IChildren","assemblyName":"Data_Engine.dll","descriptionParts":["Gets the child nodes of this node. ",""],"inputs":[{"inputName":"node","namespace":"BH.Engine.Data","memberName":"TNode","isGeneric":"0","descriptionParts":["The node to query for its children. ","This is a BH.Engine.Data.TNode"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"TNode","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Child nodes of the input node. ","This is a IEnumerable<TNode>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"Children","assemblyName":"Data_Engine.dll","descriptionParts":["Gets the child nodes of this node. ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Data.Collections","memberName":"DomainTree","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The node to query for its children. ","This is a BH.oM.Data.Collections.DomainTree<BH.Engine.Data.T>: ","A data tree which is traversed through DomainBoxes. Each node's DomainBox is assumed to be enclosed by its parent's DomainBox and to enclose its own data. All the tree's data is stored in its leaves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"DomainTree","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["Child nodes of the input node. ","This is a List<DomainTree<T>>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"GroupBy","assemblyName":"Data_Engine.dll","descriptionParts":["Groups objects by their property values. Note that not all object properties have groupable values ",""],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of objects to be grouped. All objects in the list should be of similar type ","This is a List<T>"],"isRequired":1,"isInterface":0},{"inputName":"propertyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the property to group the list of objects by. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["The collection of objects grouped by the given property ","This is a List<List<T>>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"RemoveNulls","assemblyName":"Data_Engine.dll","descriptionParts":["Removing any null objects from the input collection. ",""],"inputs":[{"inputName":"collection","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection to remove nulls from. ","This is a IEnumerable<T>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection without nulls in it as a list. ","This is a List<T>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"DepthDictionary","assemblyName":"Data_Engine.dll","descriptionParts":["Gets the depth dictionary of a graph using breadth first search, each key value pair in the resulting dictionary is in the form <graph node, depth> ",""],"inputs":[{"inputName":"adjacency","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}]}],"descriptionParts":["The adjacency dictionary to extract the depth dictionary from ","This is a Dictionary<GraphNode<T>, List<GraphNode<T>>>"],"isRequired":1,"isInterface":0},{"inputName":"startNode","namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The graph node from which the depth dictionary is created ","This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]},{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<GraphNode<T>, Int32>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"DepthDictionary","assemblyName":"Data_Engine.dll","descriptionParts":["Gets the depth dictionary of a graph using breadth first search, each key value pair in the resulting dictionary is in the form <graph node, depth> ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Data.Collections","memberName":"Graph","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The graph to extract the depth dictionary from ","This is a BH.oM.Data.Collections.Graph<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"startNode","namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The graph node from which the depth dictionary is created ","This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]},{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<GraphNode<T>, Int32>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"ChunkByNumber","assemblyName":"Data_Engine.dll","descriptionParts":["Partition an enumerable collection into sublists based on the number of target sub-lists ",""],"inputs":[{"inputName":"collection","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["An enumerable list of variable data types ","This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"nChunks","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of 'chunks' into which the collection should be split ","This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["The chunked list ","This is a IEnumerable<List<T>>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"ChunkBySize","assemblyName":"Data_Engine.dll","descriptionParts":["Chunk an enumerable collection into sublists based on a maximum size of each sub-list ",""],"inputs":[{"inputName":"collection","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["An enumerable list of variable data types ","This is a List<T>"],"isRequired":1,"isInterface":0},{"inputName":"chunkSize","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The size of each 'chunk' into which the collection should be split ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["The chunked list ","This is a IEnumerable<List<T>>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"ItemsInRange","assemblyName":"Data_Engine.dll","descriptionParts":["Gets all data in the tree which DomainBox is in range of the box. ",""],"inputs":[{"inputName":"tree","namespace":"BH.oM.Data.Collections","memberName":"DomainTree","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Tree to search from. ","This is a BH.oM.Data.Collections.DomainTree<BH.Engine.Data.T>: ","A data tree which is traversed through DomainBoxes. Each node's DomainBox is assumed to be enclosed by its parent's DomainBox and to enclose its own data. All the tree's data is stored in its leaves."],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Data.Collections","memberName":"DomainBox","isGeneric":"0","descriptionParts":["Search box which will intersect all the retuned data's DomainBoxes. ","This is a BH.oM.Data.Collections.DomainBox: ","A multidimensional domain, defined by the minimum and maximum values in each dimension, enclosing a hypercube."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["All data in the tree which DomainBox is in range of the box. ","This is a IEnumerable<T>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"ItemsInRange","assemblyName":"Data_Engine.dll","descriptionParts":["Gets the values and evaluates the children based on the provided function. ",""],"inputs":[{"inputName":"tree","namespace":"BH.Engine.Data","memberName":"TNode","isGeneric":"0","descriptionParts":["Tree to search from. ","This is a BH.Engine.Data.TNode"],"isRequired":1,"isInterface":0},{"inputName":"isWithinSearch","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"TNode","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Boolean","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Method to traverse the tree. A false result means that no descendants of that node can return true. A true result means that that nodes data is returned and its descendants might return true. ","This is a Func<TNode, Boolean>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["All data in the tree which nodes returned true for the isWithinSearch method. ","This is a IEnumerable<T>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"IsInRange","assemblyName":"Data_Engine.dll","descriptionParts":["Queries if the two DomainBoxes are in range of each other. ",""],"inputs":[{"inputName":"box1","namespace":"BH.oM.Data.Collections","memberName":"DomainBox","isGeneric":"0","descriptionParts":["Box to evaluate intersection of. ","This is a BH.oM.Data.Collections.DomainBox: ","A multidimensional domain, defined by the minimum and maximum values in each dimension, enclosing a hypercube."],"isRequired":1,"isInterface":0},{"inputName":"box2","namespace":"BH.oM.Data.Collections","memberName":"DomainBox","isGeneric":"0","descriptionParts":["Box to evaluate intersection of. ","This is a BH.oM.Data.Collections.DomainBox: ","A multidimensional domain, defined by the minimum and maximum values in each dimension, enclosing a hypercube."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Numerical tolerance for the operation. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["true if the two Domainboxes are in range of each other. ","This is a Boolean"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"IsInRange","assemblyName":"Data_Engine.dll","descriptionParts":["Queries if the two Domains are in range of each other. ",""],"inputs":[{"inputName":"domain1","namespace":"BH.oM.Data.Collections","memberName":"Domain","isGeneric":"0","descriptionParts":["Domain to evaluate overlap with. ","This is a BH.oM.Data.Collections.Domain: ","A numerical domain defined by a minimum and maximum value."],"isRequired":1,"isInterface":0},{"inputName":"domain2","namespace":"BH.oM.Data.Collections","memberName":"Domain","isGeneric":"0","descriptionParts":["Domain to evaluate overlap with. ","This is a BH.oM.Data.Collections.Domain: ","A numerical domain defined by a minimum and maximum value."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Numerical tolerance for the operation. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["true if the two Domains are in range of each other. ","This is a Boolean"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"IsInRange","assemblyName":"Data_Engine.dll","descriptionParts":["Queries if the value is in range of the domain. ",""],"inputs":[{"inputName":"domain","namespace":"BH.oM.Data.Collections","memberName":"Domain","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Collections.Domain: ","A numerical domain defined by a minimum and maximum value."],"isRequired":1,"isInterface":0},{"inputName":"val","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Value to query overlap with the domain. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Numerical tolerance for the operation. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["true if the value is in the domain. ","This is a Boolean"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"FurthestSquareDistance","assemblyName":"Data_Engine.dll","descriptionParts":["Gets the furthest possible distance between two vectors confined in respective DomainBoxes. ",""],"inputs":[{"inputName":"box1","namespace":"BH.oM.Data.Collections","memberName":"DomainBox","isGeneric":"0","descriptionParts":["Box to evaluate furthest possible square distance from. ","This is a BH.oM.Data.Collections.DomainBox: ","A multidimensional domain, defined by the minimum and maximum values in each dimension, enclosing a hypercube."],"isRequired":1,"isInterface":0},{"inputName":"box2","namespace":"BH.oM.Data.Collections","memberName":"DomainBox","isGeneric":"0","descriptionParts":["Box to evaluate furthest possible square distance from. ","This is a BH.oM.Data.Collections.DomainBox: ","A multidimensional domain, defined by the minimum and maximum values in each dimension, enclosing a hypercube."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The furthest possible square distance between two vectors confined in the respective DomainBoxes. ","This is a Double"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"FurthestTightSquareDistance","assemblyName":"Data_Engine.dll","descriptionParts":["Gets the furthest possible distance between two vectors confined in respective tight DomainBoxes.i.e. assume that the data in the DomainBoxes coincide with every side of the box and get a worst-case distance between their data. ",""],"inputs":[{"inputName":"box1","namespace":"BH.oM.Data.Collections","memberName":"DomainBox","isGeneric":"0","descriptionParts":["Box to evaluate furthest possible square distance from. ","This is a BH.oM.Data.Collections.DomainBox: ","A multidimensional domain, defined by the minimum and maximum values in each dimension, enclosing a hypercube."],"isRequired":1,"isInterface":0},{"inputName":"box2","namespace":"BH.oM.Data.Collections","memberName":"DomainBox","isGeneric":"0","descriptionParts":["Box to evaluate furthest possible square distance from. ","This is a BH.oM.Data.Collections.DomainBox: ","A multidimensional domain, defined by the minimum and maximum values in each dimension, enclosing a hypercube."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The furthest possible square distance between two vectors confined in the respective tight DomainBoxes. ","This is a Double"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"GraphNodes","assemblyName":"Data_Engine.dll","descriptionParts":["Finds the nodes of a graph with value that matches the input value ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Data.Collections","memberName":"Graph","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Graph<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"value","namespace":"BH.Engine.Data","memberName":"T","isGeneric":"0","descriptionParts":["The value to match ","This is a BH.Engine.Data.T"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<GraphNode<T>>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"FirstValueAbove","assemblyName":"Data_Engine.dll","descriptionParts":["Gets the first table row with values exeeding the values provided sorted by the sortAxis. Values returned as CustomObjects ",""],"inputs":[{"inputName":"table","namespace":"BH.oM.Data.Collections","memberName":"Table","isGeneric":"0","descriptionParts":["The table to extract values from ","This is a BH.oM.Data.Collections.Table"],"isRequired":1,"isInterface":0},{"inputName":"axes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The axis of the table to match values for ","This is a List<String>"],"isRequired":1,"isInterface":0},{"inputName":"values","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The value of the axis to match with ","This is a List<Object>"],"isRequired":1,"isInterface":0},{"inputName":"sortAxis","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The axis the values should be sorted by. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"allowEqual","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Sets whether exact matching values are allowed or not ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"CustomObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["The data matching the provided axes and values as CustomObjects. ","This is a BH.oM.Base.CustomObject"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"FirstValueAt","assemblyName":"Data_Engine.dll","descriptionParts":["Gets the first table row matching the expression string sorted by a specified axis. Values returned as CustomObjects ",""],"inputs":[{"inputName":"table","namespace":"BH.oM.Data.Collections","memberName":"Table","isGeneric":"0","descriptionParts":["The table to extract values from ","This is a BH.oM.Data.Collections.Table"],"isRequired":1,"isInterface":0},{"inputName":"expression","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Expression string for extracting the values from the table. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"sortOrder","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The axis the values should be sorted by. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CustomObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["The data matching the provided axes and values as CustomObjects. ","This is a BH.oM.Base.CustomObject"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"LeafNodes","assemblyName":"Data_Engine.dll","descriptionParts":["Extracts a list of leaf nodes from a graph, leaf nodes have no neighbours deeper in the graph ",""],"inputs":[{"inputName":"graph","namespace":"BH.oM.Data.Collections","memberName":"Graph","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The graph to extract the leaf nodes from ","This is a BH.oM.Data.Collections.Graph<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"startNode","namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The graph node used to determine depth in the graph of all nodes ","This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<GraphNode<T>>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"FilterBy","assemblyName":"Data_Engine.dll","descriptionParts":["Filters a list of objects to output only those with a property value matching that input ",""],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of objects to be filtered. All objects in the list should be of similar type ","This is a List<T>"],"isRequired":1,"isInterface":0},{"inputName":"propertyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the property to filter the objects by ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"value","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["The value of the selected property to filter the objects by ","This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"ignoreStringCase","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Ignore upper/lower case letters if the property filtered by is a text/string. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"exactStringMatch","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true checks if the property filtered by contains the text value (filtering must be a string/text) ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of objects that match the given filter conditions ","This is a List<T>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"OrderBy","assemblyName":"Data_Engine.dll","descriptionParts":["Orders a list of objects by a property of the object - e.g. input 'Name' to sort objects by their names. Note that not all object properties have sortable values ",""],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of objects to be sorted. All objects in the list should be of similar type ","This is a List<T>"],"isRequired":1,"isInterface":0},{"inputName":"propertyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the property to sort the list of objects by. Note that the property must be able to be sorted - e.g. numbers/text ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of objects ordered by the given parameters ","This is a List<T>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"CloseToPoint","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"matrix","namespace":"BH.oM.Data.Collections","memberName":"PointMatrix","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.PointMatrix<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"refPt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"maxDist","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"LocalData","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<LocalData<T>>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"ClosestData","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"matrix","namespace":"BH.oM.Data.Collections","memberName":"PointMatrix","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.PointMatrix<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"refPt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"maxDist","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LocalData","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.LocalData<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"ClosestData","assemblyName":"Data_Engine.dll","descriptionParts":["Finds all data which could be the closest item based on a best and worst case senario. ",""],"inputs":[{"inputName":"tree","namespace":"BH.oM.Data.Collections","memberName":"DomainTree","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["DomainTree to query for all data items which may be the closest data. ","This is a BH.oM.Data.Collections.DomainTree<BH.Engine.Data.T>: ","A data tree which is traversed through DomainBoxes. Each node's DomainBox is assumed to be enclosed by its parent's DomainBox and to enclose its own data. All the tree's data is stored in its leaves."],"isRequired":1,"isInterface":0},{"inputName":"searchBox","namespace":"BH.oM.Data.Collections","memberName":"DomainBox","isGeneric":"0","descriptionParts":["Search box containing data to find the closest data from. ","This is a BH.oM.Data.Collections.DomainBox: ","A multidimensional domain, defined by the minimum and maximum values in each dimension, enclosing a hypercube."],"isRequired":1,"isInterface":0},{"inputName":"tightBox","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Assume that the DomainBox around the data is tight. i.e. A data point can be found on each boundary of the DomainBox. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"maxDistance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Data whose distance is further than this distance will not be returned. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance, used as a margin of error for the closest data. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["All data which could be the closest item based on a best and worst case senario. ","This is a IEnumerable<T>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"ClosestData","assemblyName":"Data_Engine.dll","descriptionParts":["Assumes all data to be queried is stored in leaves. i.e. Nodes without children.Gets the data in all nodes which evaluationMethod evaluates to less than the smallest evaluation of the WorstCaseMethod. ",""],"inputs":[{"inputName":"tree","namespace":"BH.Engine.Data","memberName":"TNode","isGeneric":"0","descriptionParts":["Node tree to query for all data items which may be the closest data. ","This is a BH.Engine.Data.TNode"],"isRequired":1,"isInterface":0},{"inputName":"evaluationMethod","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"TNode","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Method returning a value evaluating its closeness based on a best case scenario. ","This is a Func<TNode, Double>"],"isRequired":1,"isInterface":0},{"inputName":"worstCaseMethod","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"TNode","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Method returning a value evaluating its closeness based on a worst case scenario. ","This is a Func<TNode, Double>"],"isRequired":1,"isInterface":0},{"inputName":"maxEvaluation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Data which evaluates to more than this value will not be returned. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Margin of error for the evaluation method. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["All data which could be the closest item based on a best and worst case scenario. ","This is a IEnumerable<T>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"ClosestNode","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"graph","namespace":"BH.oM.Data.Collections","memberName":"Graph","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Graph<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"value","namespace":"BH.Engine.Data","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Data.T"],"isRequired":1,"isInterface":0},{"inputName":"nodeDist","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Func<T, T, Double>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"GraphNode","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"Count","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"queue","namespace":"BH.oM.Data.Collections","memberName":"PriorityQueue","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.PriorityQueue<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"Count","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"graph","namespace":"BH.oM.Data.Collections","memberName":"Graph","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Graph<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"Count","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tree","namespace":"BH.oM.Data.Collections","memberName":"Tree","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Tree<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"Count","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"diagram","namespace":"BH.oM.Data.Collections","memberName":"VennDiagram","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.VennDiagram<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"Filter","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"request","namespace":"BH.oM.Data.Requests","memberName":"FilterRequest","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Requests.FilterRequest"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"FolderContent","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"directory","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"searchKey","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"depth","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a Dictionary<Int32, List<String>>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"Neighbours","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"graph","namespace":"BH.oM.Data.Collections","memberName":"Graph","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Graph<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"node","namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"graphLinkDirection","namespace":"BH.oM.Data","memberName":"GraphLinkDirection","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.GraphLinkDirection ","Enum values: ","-Incoming ","-Outgoing ","-Both"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<GraphNode<T>>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"OppositeNode","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"link","namespace":"BH.oM.Data.Collections","memberName":"GraphLink","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphLink<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"node","namespace":"BH.oM.Data.Collections","memberName":"GraphNode","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"GraphNode","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.GraphNode<BH.Engine.Data.T>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"SquareDistance","assemblyName":"Data_Engine.dll","descriptionParts":["Queries the square distance between two DomainBoxes. ",""],"inputs":[{"inputName":"box1","namespace":"BH.oM.Data.Collections","memberName":"DomainBox","isGeneric":"0","descriptionParts":["Box to evaluate square distance from. ","This is a BH.oM.Data.Collections.DomainBox: ","A multidimensional domain, defined by the minimum and maximum values in each dimension, enclosing a hypercube."],"isRequired":1,"isInterface":0},{"inputName":"box2","namespace":"BH.oM.Data.Collections","memberName":"DomainBox","isGeneric":"0","descriptionParts":["Box to evaluate square distance from. ","This is a BH.oM.Data.Collections.DomainBox: ","A multidimensional domain, defined by the minimum and maximum values in each dimension, enclosing a hypercube."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Square distance between the two DomainBoxes. ","This is a Double"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"SubMatrixData","assemblyName":"Data_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"matrix","namespace":"BH.oM.Data.Collections","memberName":"PointMatrix","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.PointMatrix<BH.Engine.Data.T>"],"isRequired":1,"isInterface":0},{"inputName":"minCell","namespace":"BH.oM.Data.Collections","memberName":"DiscretePoint","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Collections.DiscretePoint"],"isRequired":1,"isInterface":0},{"inputName":"maxCell","namespace":"BH.oM.Data.Collections","memberName":"DiscretePoint","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Collections.DiscretePoint"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Collections","memberName":"LocalData","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<LocalData<T>>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"ValuesAbove","assemblyName":"Data_Engine.dll","descriptionParts":["Gets all table rows with values exeeding the values provided. Values returned as CustomObjects ",""],"inputs":[{"inputName":"table","namespace":"BH.oM.Data.Collections","memberName":"Table","isGeneric":"0","descriptionParts":["The table to extract values from ","This is a BH.oM.Data.Collections.Table"],"isRequired":1,"isInterface":0},{"inputName":"axes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The axis of the table to match values for ","This is a List<String>"],"isRequired":1,"isInterface":0},{"inputName":"values","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The value of the axis to match with ","This is a List<Object>"],"isRequired":1,"isInterface":0},{"inputName":"allowEqual","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Sets whether exact matching values are allowed or not ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"CustomObject","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The data matching the provided axes and values as CustomObjects. ","This is a List<CustomObject>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"ValuesAbove","assemblyName":"Data_Engine.dll","descriptionParts":["Gets all table rows with values exeeding the values provided sorted by the sortAxis. Values returned as CustomObjects ",""],"inputs":[{"inputName":"table","namespace":"BH.oM.Data.Collections","memberName":"Table","isGeneric":"0","descriptionParts":["The table to extract values from ","This is a BH.oM.Data.Collections.Table"],"isRequired":1,"isInterface":0},{"inputName":"axes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The axis of the table to match values for ","This is a List<String>"],"isRequired":1,"isInterface":0},{"inputName":"values","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The value of the axis to match with ","This is a List<Object>"],"isRequired":1,"isInterface":0},{"inputName":"sortAxis","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The axis the values should be sorted by. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"allowEqual","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Sets whether exact matching values are allowed or not ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"CustomObject","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The data matching the provided axes and values as CustomObjects. ","This is a List<CustomObject>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"ValuesAt","assemblyName":"Data_Engine.dll","descriptionParts":["Gets all table rows with an exact match to the values provided. Values returned as CustomObjects ",""],"inputs":[{"inputName":"table","namespace":"BH.oM.Data.Collections","memberName":"Table","isGeneric":"0","descriptionParts":["The table to extract values from ","This is a BH.oM.Data.Collections.Table"],"isRequired":1,"isInterface":0},{"inputName":"axes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The axis of the table to match values for ","This is a List<String>"],"isRequired":1,"isInterface":0},{"inputName":"values","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The value of the axis to match with ","This is a List<Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"CustomObject","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The data matching the provided axes and values as CustomObjects. ","This is a List<CustomObject>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"ValuesAt","assemblyName":"Data_Engine.dll","descriptionParts":["Gets all table rows matching the expression string. Values returned as CustomObjects ",""],"inputs":[{"inputName":"table","namespace":"BH.oM.Data.Collections","memberName":"Table","isGeneric":"0","descriptionParts":["The table to extract values from ","This is a BH.oM.Data.Collections.Table"],"isRequired":1,"isInterface":0},{"inputName":"expression","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Expression string for extracting the values from the table. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"CustomObject","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The data matching the provided axes and values as CustomObjects. ","This is a List<CustomObject>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"ValuesAt","assemblyName":"Data_Engine.dll","descriptionParts":["Gets all table rows matching the expression string sorted by a specified axis. Values returned as CustomObjects ",""],"inputs":[{"inputName":"table","namespace":"BH.oM.Data.Collections","memberName":"Table","isGeneric":"0","descriptionParts":["The table to extract values from ","This is a BH.oM.Data.Collections.Table"],"isRequired":1,"isInterface":0},{"inputName":"expression","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Expression string for extracting the values from the table. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"sortOrder","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The axis the values should be sorted by. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"CustomObject","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The data matching the provided axes and values as CustomObjects. ","This is a List<CustomObject>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"Values","assemblyName":"Data_Engine.dll","descriptionParts":["Gets all table rows. Values returned as CustomObjects ",""],"inputs":[{"inputName":"table","namespace":"BH.oM.Data.Collections","memberName":"Table","isGeneric":"0","descriptionParts":["The table to extract values from ","This is a BH.oM.Data.Collections.Table"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"CustomObject","isInterface":"0","isGeneric":"0"}],"descriptionParts":["All data in the table as CustomObjects. ","This is a List<CustomObject>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"IValues","assemblyName":"Data_Engine.dll","descriptionParts":["Gets the data values contained in this node. ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Data.Collections","memberName":"INode","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The node to query for its data values. ","This is a BH.oM.Data.Collections.INode<BH.Engine.Data.T>: ","The base interface for data tree nodes. Exposes generic helper Create and Query methods for working with data trees. Objects implementing this interface will be required to implement Values() & Children() methods for getting data from an INode. ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Data values contained in this node. ","This is a IEnumerable<T>"]}},{"namespace":"BH.Engine.Data","className":"Query","memberName":"Values","assemblyName":"Data_Engine.dll","descriptionParts":["Gets the data values contained in this node. ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Data.Collections","memberName":"DomainTree","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The node to query for its data values. ","This is a BH.oM.Data.Collections.DomainTree<BH.Engine.Data.T>: ","A data tree which is traversed through DomainBoxes. Each node's DomainBox is assumed to be enclosed by its parent's DomainBox and to enclose its own data. All the tree's data is stored in its leaves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Data","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Data values contained in this node. ","This is a List<T>"]}},{"namespace":"BH.Engine.Diffing","className":"Compute","memberName":"DiffOneByOne","assemblyName":"Diffing_Engine.dll","descriptionParts":["Computes the diffing for two lists of objects, comparing objects one by one.","This will only identify 'modified' or 'unchanged' objects. For 'modified' objects, the property differences are also returned.","It will work correctly only if the input objects are in the same order. ",""],"inputs":[{"inputName":"pastObjects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Past objects. Objects whose creation precedes 'currentObjects'. ","This is a IEnumerable<Object>"],"isRequired":1,"isInterface":1},{"inputName":"currentObjects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Following objects. Objects that were created after 'pastObjects'. ","This is a IEnumerable<Object>"],"isRequired":1,"isInterface":1},{"inputName":"diffConfig","namespace":"BH.oM.Diffing","memberName":"DiffingConfig","isGeneric":"0","descriptionParts":["Sets configs such as properties to be ignored in the diffing, or enable/disable property-by-property diffing. ","This is a BH.oM.Diffing.DiffingConfig: ","General configurations for the Diffing process, including settings for the Hash computation."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Diff","namespace":"BH.oM.Diffing","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.Diff: ","Represents the differences between two sets of objects."]}},{"namespace":"BH.Engine.Diffing","className":"Compute","memberName":"DiffWithFragmentId","assemblyName":"Diffing_Engine.dll","descriptionParts":["Computes the Diffing for BHoMObjects based on an id stored in a Fragment. ",""],"inputs":[{"inputName":"pastObjects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A set of objects coming from a past revision ","This is a IEnumerable<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"currentObjects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A set of objects coming from a following Revision ","This is a IEnumerable<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"fragmentType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["(Optional - defaults to the `IPersistentId` fragment)","Fragment Type where the Id of the objects may be found in the BHoMObjects. The diff will be attempted using the Ids found there. ","This is a Type"],"isRequired":0,"isInterface":0},{"inputName":"fragmentIdProperty","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["(Optional - defaults to `PersistentId`)","Name of the property of the Fragment where the Id is stored. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"diffConfig","namespace":"BH.oM.Diffing","memberName":"DiffingConfig","isGeneric":"0","descriptionParts":["(Optional) Sets configs such as properties to be ignored in the diffing, or enable/disable property-by-property diffing. ","This is a BH.oM.Diffing.DiffingConfig: ","General configurations for the Diffing process, including settings for the Hash computation."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Diff","namespace":"BH.oM.Diffing","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.Diff: ","Represents the differences between two sets of objects."]}},{"namespace":"BH.Engine.Diffing","className":"Compute","memberName":"DiffWithHash","assemblyName":"Diffing_Engine.dll","descriptionParts":["Computes the diffing using the Hash of the specified objects. If objects do not have an hash, compute it. ",""],"inputs":[{"inputName":"pastObjects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Objects whose creation predates 'currentObjects'. ","This is a IEnumerable<Object>"],"isRequired":1,"isInterface":1},{"inputName":"currentObjects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Following objects. Objects that were created after 'pastObjects'. ","This is a IEnumerable<Object>"],"isRequired":1,"isInterface":1},{"inputName":"diffConfig","namespace":"BH.oM.Diffing","memberName":"DiffingConfig","isGeneric":"0","descriptionParts":["Sets configs such as properties to be ignored in the diffing, or enable/disable property-level diffing. ","This is a BH.oM.Diffing.DiffingConfig: ","General configurations for the Diffing process, including settings for the Hash computation."],"isRequired":0,"isInterface":0},{"inputName":"useExistingHash","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Advanced setting. If the objects already have an HashFragment assigned, but that only has the 'currentHash' populated. Can be used to avoid recomputing hash in some scenarios. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Diff","namespace":"BH.oM.Diffing","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.Diff: ","Represents the differences between two sets of objects."]}},{"namespace":"BH.Engine.Diffing","className":"Compute","memberName":"IDiffing","assemblyName":"Diffing_Engine.dll","descriptionParts":["Dispatches to the most appropriate Diffing method, depending on the provided inputs. ",""],"inputs":[{"inputName":"pastObjs","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Object>"],"isRequired":1,"isInterface":1},{"inputName":"followingObjs","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Object>"],"isRequired":1,"isInterface":1},{"inputName":"diffingType","namespace":"BH.oM.Diffing","memberName":"DiffingType","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.DiffingType: ","What type of Diffing should be computed. ","Enum values: ","-Automatic: Automatic: tries, in sequence, diffing with PersistentId, OneByOne, Hash. ","-Revision: Revision: for the Stream-revision workflow. The Diffing considers different Revisions of a Stream (a set of object that changed in time). ","-PersistentId: PersistentId: uses the PersistentId stored in the Fragments of the BHoMObjects, if present. If more than one PersistentId is found on the objects, a PersistentId type must be specified in the DiffConfig. ","-OneByOne: OneByOne: assuming the input collections are of the same length, this compares objects one by one. ","-Hash: Hash: compares by using the object hashes. If there is already a HashFragment stored in the BHoMObjects, by default that is used. Otherwise, hash is computed for every object, and then by default it gets stored in the BHoMObjects. Default behaviours can be changed in the DiffConfig. ","-CustomDataId: CustomData: uses an Id stored under the BHoMObjects CustomData."],"isRequired":0,"isInterface":0},{"inputName":"diffConfig","namespace":"BH.oM.Diffing","memberName":"DiffingConfig","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.DiffingConfig: ","General configurations for the Diffing process, including settings for the Hash computation."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Diff","namespace":"BH.oM.Diffing","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.Diff: ","Represents the differences between two sets of objects."]}},{"namespace":"BH.Engine.Diffing","className":"Compute","memberName":"DiffWithCustomId","assemblyName":"Diffing_Engine.dll","descriptionParts":["Computes the Diffing for BHoMObjects based on an id stored in their CustomData. ",""],"inputs":[{"inputName":"pastObjects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A set of objects coming from a past revision ","This is a IEnumerable<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"currentObjects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A set of objects coming from a following Revision ","This is a IEnumerable<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"customdataIdKey","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the key where the Id of the objects may be found in the BHoMObjects' CustomData. The diff will be attempted using the Ids found there.","E.g. 'Revit_UniqueId' may be used; an id must be stored under object.CustomData['Revit_UniqueId']. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"diffConfig","namespace":"BH.oM.Diffing","memberName":"DiffingConfig","isGeneric":"0","descriptionParts":["Sets configs such as properties to be ignored in the diffing, or enable/disable property-by-property diffing. ","This is a BH.oM.Diffing.DiffingConfig: ","General configurations for the Diffing process, including settings for the Hash computation."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Diff","namespace":"BH.oM.Diffing","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.Diff: ","Represents the differences between two sets of objects."]}},{"namespace":"BH.Engine.Diffing","className":"Compute","memberName":"DiffRevisions","assemblyName":"Diffing_Engine.dll","descriptionParts":["Computes the diffing for Revisions containing objects of any type (also non-BHoMObjects). ",""],"inputs":[{"inputName":"pastRevision","namespace":"BH.oM.Diffing","memberName":"Revision","isGeneric":"0","descriptionParts":["A past Revision. It must have been created before the 'followingRevision'. ","This is a BH.oM.Diffing.Revision"],"isRequired":1,"isInterface":0},{"inputName":"followingRevision","namespace":"BH.oM.Diffing","memberName":"Revision","isGeneric":"0","descriptionParts":["A following Revision. It must have been created after 'pastRevision'. ","This is a BH.oM.Diffing.Revision"],"isRequired":1,"isInterface":0},{"inputName":"diffingConfig","namespace":"BH.oM.Diffing","memberName":"DiffingConfig","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.DiffingConfig: ","General configurations for the Diffing process, including settings for the Hash computation."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Diff","namespace":"BH.oM.Diffing","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.Diff: ","Represents the differences between two sets of objects."]}},{"namespace":"BH.Engine.Diffing","className":"Convert","memberName":"TryParseObjectToGuid","assemblyName":"Diffing_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"guid","namespace":"System","memberName":"Guid&","isGeneric":"0","descriptionParts":["This is a Guid&"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Diffing","className":"Create","memberName":"StreamPointer","assemblyName":"Diffing_Engine.dll","descriptionParts":["Creates new Stream Pointer, generating a new StreamId. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"description","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"StreamPointer","namespace":"BH.oM.Diffing","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.StreamPointer: ","Points to a specific Stream. Can be used to generate a new Stream and StreamId."]}},{"namespace":"BH.Engine.Diffing","className":"Create","memberName":"Delta","assemblyName":"Diffing_Engine.dll","descriptionParts":["Returns a Delta object with the Diff between the two input Revisions, also called `Diff-based Delta`. ",""],"inputs":[{"inputName":"pastRevision","namespace":"BH.oM.Diffing","memberName":"Revision","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.Revision"],"isRequired":1,"isInterface":0},{"inputName":"currentRevision","namespace":"BH.oM.Diffing","memberName":"Revision","isGeneric":"0","descriptionParts":["A new Revision ","This is a BH.oM.Diffing.Revision"],"isRequired":1,"isInterface":0},{"inputName":"diffingConfig","namespace":"BH.oM.Diffing","memberName":"DiffingConfig","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.DiffingConfig: ","General configurations for the Diffing process, including settings for the Hash computation."],"isRequired":0,"isInterface":0},{"inputName":"comment","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Delta","namespace":"BH.oM.Diffing","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.Delta: ","Contains the Diff plus context information: parent Stream, Timestamp, etc."]}},{"namespace":"BH.Engine.Diffing","className":"Create","memberName":"Delta","assemblyName":"Diffing_Engine.dll","descriptionParts":["Returns a Delta object containing all the objects of the input Revision, also called `Revision-Based Delta`. ",""],"inputs":[{"inputName":"revision","namespace":"BH.oM.Diffing","memberName":"Revision","isGeneric":"0","descriptionParts":["A new Revision ","This is a BH.oM.Diffing.Revision"],"isRequired":1,"isInterface":0},{"inputName":"diffingConfig","namespace":"BH.oM.Diffing","memberName":"DiffingConfig","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.DiffingConfig: ","General configurations for the Diffing process, including settings for the Hash computation."],"isRequired":0,"isInterface":0},{"inputName":"comment","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Delta","namespace":"BH.oM.Diffing","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.Delta: ","Contains the Diff plus context information: parent Stream, Timestamp, etc."]}},{"namespace":"BH.Engine.Diffing","className":"Create","memberName":"Delta","assemblyName":"Diffing_Engine.dll","descriptionParts":["Returns a Delta object, containing all the input objects wrapped in a Revision. Also called `Revision-Based Delta`. ",""],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Objects that will be wrapped into a new Revision in order to produce this Delta. ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0},{"inputName":"streamId","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["Id of the Stream that will own the revision produced by this Delta. ","This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"revisionName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name to be assigned to the Revision that this Delta will produce. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"comment","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Comment to be stored along the Revision that this Delta will produce. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"diffingConfig","namespace":"BH.oM.Diffing","memberName":"DiffingConfig","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.DiffingConfig: ","General configurations for the Diffing process, including settings for the Hash computation."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Delta","namespace":"BH.oM.Diffing","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.Delta: ","Contains the Diff plus context information: parent Stream, Timestamp, etc."]}},{"namespace":"BH.Engine.Diffing","className":"Create","memberName":"Delta","assemblyName":"Diffing_Engine.dll","descriptionParts":["Returns a Delta object based on the provided Diff. ",""],"inputs":[{"inputName":"diff","namespace":"BH.oM.Diffing","memberName":"Diff","isGeneric":"0","descriptionParts":["Diff that will be included in this Delta. ","This is a BH.oM.Diffing.Diff: ","Represents the differences between two sets of objects."],"isRequired":1,"isInterface":0},{"inputName":"streamId","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["Id of the Stream that will own the revision produced by this Delta. ","This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"revision_from","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["This is a Guid"],"isRequired":1,"isInterface":0},{"inputName":"comment","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Comment to be stored along the Revision that this Delta will produce. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"diffingConfig","namespace":"BH.oM.Diffing","memberName":"DiffingConfig","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.DiffingConfig: ","General configurations for the Diffing process, including settings for the Hash computation."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Delta","namespace":"BH.oM.Diffing","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.Delta: ","Contains the Diff plus context information: parent Stream, Timestamp, etc."]}},{"namespace":"BH.Engine.Diffing","className":"Create","memberName":"DiffingConfig","assemblyName":"Diffing_Engine.dll","descriptionParts":["Defines configurations for the diffing. ",""],"inputs":[{"inputName":"enablePropertyDiffing","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Enables the property-level diffing: differences in object properties are stored in the `ModifiedPropsPerObject` dictionary. ","This is a Boolean"],"isRequired":1,"isInterface":0},{"inputName":"storeUnchangedObjects","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If enabled, the Diff stores also the objects that did not change (`Unchanged` property). ","This is a Boolean"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"DiffingConfig","namespace":"BH.oM.Diffing","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.DiffingConfig: ","General configurations for the Diffing process, including settings for the Hash computation."]}},{"namespace":"BH.Engine.Diffing","className":"Create","memberName":"DiffingConfig","assemblyName":"Diffing_Engine.dll","descriptionParts":["Defines configurations for the diffing. ",""],"inputs":[{"inputName":"enablePropertyDiffing","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Enables the property-level diffing: differences in object properties are stored in the `ModifiedPropsPerObject` dictionary. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"storeUnchangedObjects","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If enabled, the Diff stores also the objects that did not change (`Unchanged` property). ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"propertyNamesToConsider","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"DiffingConfig","namespace":"BH.oM.Diffing","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.DiffingConfig: ","General configurations for the Diffing process, including settings for the Hash computation."]}},{"namespace":"BH.Engine.Diffing","className":"Create","memberName":"Revision","assemblyName":"Diffing_Engine.dll","descriptionParts":["Creates new Stream Revision ",""],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Objects to be included in the Stream Revision ","This is a IEnumerable<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"streamId","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["Input either: a Guid of an existing stream; a previous Revision from which to extract the StreamId; or a StreamPointer object. ","This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"revisionName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the Revision. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"comment","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Any comment to be added for this Revision. Much like git commit comment. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"diffConfig","namespace":"BH.oM.Diffing","memberName":"DiffingConfig","isGeneric":"0","descriptionParts":["Diffing settings for this Stream Revision. Hashes of objects contained in this stream will be computed based on these configs. ","This is a BH.oM.Diffing.DiffingConfig: ","General configurations for the Diffing process, including settings for the Hash computation."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Revision","namespace":"BH.oM.Diffing","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.Revision"]}},{"namespace":"BH.Engine.Diffing","className":"Modify","memberName":"CombineDiffs","assemblyName":"Diffing_Engine.dll","descriptionParts":["Combines two given diffs into one, appending objects of the second to the first. ",""],"inputs":[{"inputName":"diff","namespace":"BH.oM.Diffing","memberName":"Diff","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.Diff: ","Represents the differences between two sets of objects."],"isRequired":1,"isInterface":0},{"inputName":"toAdd","namespace":"BH.oM.Diffing","memberName":"Diff","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.Diff: ","Represents the differences between two sets of objects."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Diff","namespace":"BH.oM.Diffing","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.Diff: ","Represents the differences between two sets of objects."]}},{"namespace":"BH.Engine.Diffing","className":"Modify","memberName":"RemoveDuplicatesByHash","assemblyName":"Diffing_Engine.dll","descriptionParts":["Removes duplicates from a collection of objects. The comparison is made using their Hash. If hash is missing, it is computed. ",""],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Diffing","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Collection of objects whose duplicates have to be removed. If they don't already have an Hash assigned, it will be calculated. ","This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"comparisonConfig","namespace":"BH.oM.Base","memberName":"ComparisonConfig","isGeneric":"0","descriptionParts":["Settings to determine the uniqueness of an Object. ","This is a BH.oM.Base.ComparisonConfig: ","Settings to determine the uniqueness of an Object."],"isRequired":0,"isInterface":0},{"inputName":"useExistingHash","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, if objects already have a HashFragment, use that. If false, recompute the hash for all objects. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Diffing","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"]}},{"namespace":"BH.Engine.Diffing","className":"Modify","memberName":"PrepareForRevision","assemblyName":"Diffing_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Diffing","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"diffConfig","namespace":"BH.oM.Diffing","memberName":"DiffingConfig","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.DiffingConfig: ","General configurations for the Diffing process, including settings for the Hash computation."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Diffing","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"]}},{"namespace":"BH.Engine.Diffing","className":"Modify","memberName":"SetRevisionFragment","assemblyName":"Diffing_Engine.dll","descriptionParts":["Clones the IBHoMObjects, computes their hash and stores it in a RevisionFragment. If the object already has a RevisionFragment, it computes the current one and keeps the old one in the `previousHash` of the RevisionFragment. ",""],"inputs":[{"inputName":"objs","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Diffing","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"diffingConfig","namespace":"BH.oM.Diffing","memberName":"DiffingConfig","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.DiffingConfig: ","General configurations for the Diffing process, including settings for the Hash computation."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Diffing","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<T>"]}},{"namespace":"BH.Engine.Diffing","className":"Modify","memberName":"SetRevisionFragment","assemblyName":"Diffing_Engine.dll","descriptionParts":["Clones the IBHoMObject, computes their hash and stores it in a RevisionFragment. If the object already has a RevisionFragment, it computes the current one and keeps the old one in the `previousHash` of the RevisionFragment. ",""],"inputs":[{"inputName":"obj","namespace":"BH.Engine.Diffing","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Diffing.T"],"isRequired":1,"isInterface":0},{"inputName":"diffingConfig","namespace":"BH.oM.Diffing","memberName":"DiffingConfig","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.DiffingConfig: ","General configurations for the Diffing process, including settings for the Hash computation."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"T","namespace":"BH.Engine.Diffing","isGeneric":"0","descriptionParts":["This is a BH.Engine.Diffing.T"]}},{"namespace":"BH.Engine.Diffing","className":"Modify","memberName":"SetRevisionFragment","assemblyName":"Diffing_Engine.dll","descriptionParts":["Clones the IBHoMObject, computes their hash and stores it in a RevisionFragment. If the object already has a RevisionFragment, it computes the current one and keeps the old one in the `previousHash` of the RevisionFragment. ",""],"inputs":[{"inputName":"obj","namespace":"BH.Engine.Diffing","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Diffing.T"],"isRequired":1,"isInterface":0},{"inputName":"hash","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"T","namespace":"BH.Engine.Diffing","isGeneric":"0","descriptionParts":["This is a BH.Engine.Diffing.T"]}},{"namespace":"BH.Engine.Diffing","className":"Query","memberName":"ListDifferentProperties","assemblyName":"Diffing_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"diffProps","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Tuple","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a Dictionary<String, Tuple<Object, Object>>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<System.String>, System.Collections.Generic.List<System.Object>, System.Collections.Generic.List<System.Object>>"]}},{"namespace":"BH.Engine.Diffing","className":"Query","memberName":"ListModifiedProperties","assemblyName":"Diffing_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"modProps","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System.Collections.Generic","memberName":"Dictionary","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Tuple","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}]}]}],"descriptionParts":["This is a Dictionary<String, Dictionary<String, Tuple<Object, Object>>>"],"isRequired":1,"isInterface":0},{"inputName":"filterNames","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}]}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}]}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}]}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}]}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<System.Collections.Generic.List<System.String>>, System.Collections.Generic.List<System.Collections.Generic.List<System.String>>, System.Collections.Generic.List<System.Collections.Generic.List<System.Object>>, System.Collections.Generic.List<System.Collections.Generic.List<System.Object>>>"]}},{"namespace":"BH.Engine.Diffing","className":"Query","memberName":"DifferentProperties","assemblyName":"Diffing_Engine.dll","descriptionParts":["Checks two BHoMObjects property by property and returns the differences ",""],"inputs":[{"inputName":"obj1","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"obj2","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"diffingConfig","namespace":"BH.oM.Diffing","memberName":"DiffingConfig","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.DiffingConfig: ","General configurations for the Diffing process, including settings for the Hash computation."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Tuple","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["Dictionary whose key is the name of the property, and value is a tuple with its value in obj1 and obj2. ","This is a Dictionary<String, Tuple<Object, Object>>"]}},{"namespace":"BH.Engine.Diffing","className":"Query","memberName":"RevisionFragment","assemblyName":"Diffing_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"RevisionFragment","namespace":"BH.oM.Diffing","isGeneric":"0","descriptionParts":["This is a BH.oM.Diffing.RevisionFragment: ","Stores the current and previous Hash of the parent BHoMObject, as assigned after the inclusion in a Revision."]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Convert","memberName":"ToEnergyPlus","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Convert a boolean to an EnergyPlus friendly Yes or No ",""],"inputs":[{"inputName":"value","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["A True or False value ","This is a Boolean"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["A Yes or a No ","This is a String"]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Convert","memberName":"ToEnergyPlus","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Convert a BHoM Roughness to an EnergyPlus Roughness ",""],"inputs":[{"inputName":"roughness","namespace":"BH.oM.Environment.MaterialFragments","memberName":"Roughness","isGeneric":"0","descriptionParts":["BHoM roughness ","This is a BH.oM.Environment.MaterialFragments.Roughness: ","Required for some calculations, such as determining the convective heat transfer coefficient ","Enum values: ","-Undefined ","-VeryRough ","-MediumRough ","-Rough ","-Smooth ","-MediumSmooth ","-VerySmooth"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Roughness","namespace":"BH.oM.Adapters.EnergyPlus","isGeneric":"0","descriptionParts":["EnergyPlus Roughness ","This is a BH.oM.Adapters.EnergyPlus.Roughness ","Enum values: ","-Undefined ","-VeryRough ","-Rough ","-MediumRough ","-MediumSmooth ","-Smooth ","-VerySmooth"]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Convert","memberName":"ToEnergyPlus","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Convert a BHoM GasType to an EnergyPlus GasType ",""],"inputs":[{"inputName":"gasType","namespace":"BH.oM.Environment.MaterialFragments","memberName":"Gas","isGeneric":"0","descriptionParts":["BHoM gas type ","This is a BH.oM.Environment.MaterialFragments.Gas ","Enum values: ","-Undefined ","-Air ","-Argon ","-Krypton ","-Xenon"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"GasType","namespace":"BH.oM.Adapters.EnergyPlus","isGeneric":"0","descriptionParts":["EnergyPlus gas type ","This is a BH.oM.Adapters.EnergyPlus.GasType ","Enum values: ","-Undefined ","-Air ","-Argon ","-Krypton ","-Xenon ","-Custom"]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Convert","memberName":"ToEnergyPlus","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Convert a BHoM OpeningType to an EnergyPlus OpeningType ",""],"inputs":[{"inputName":"type","namespace":"BH.oM.Environment.Elements","memberName":"OpeningType","isGeneric":"0","descriptionParts":["BHoM opening type ","This is a BH.oM.Environment.Elements.OpeningType: ","The type of cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight) ","Enum values: ","-Undefined ","-CurtainWall ","-Door ","-Frame ","-Glazing ","-Hole ","-Rooflight ","-RooflightWithFrame ","-Window ","-WindowWithFrame ","-VehicleDoor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FenestrationSurfaceType","namespace":"BH.oM.Adapters.EnergyPlus","isGeneric":"0","descriptionParts":["EnergyPlus opening type ","This is a BH.oM.Adapters.EnergyPlus.FenestrationSurfaceType ","Enum values: ","-Undefined ","-Window ","-Door ","-GlassDoor ","-TubularDaylightDome ","-TubularDaylightDiffuser"]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Convert","memberName":"ToEnergyPlus","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Convert a BHoM PanelType to an EnergyPlus BuildingSurfaceType ",""],"inputs":[{"inputName":"type","namespace":"BH.oM.Environment.Elements","memberName":"PanelType","isGeneric":"0","descriptionParts":["BHoM panel type ","This is a BH.oM.Environment.Elements.PanelType: ","The type of environmental surface (e.g. Wall, Floor, Roof) ","Enum values: ","-Undefined ","-Adiabatic ","-Air ","-Ceiling ","-CurtainWall ","-Floor ","-FloorExposed ","-FloorInternal ","-FloorRaised ","-Roof ","-Shade ","-SlabOnGrade ","-SolarPanel ","-UndergroundCeiling ","-UndergroundSlab ","-UndergroundWall ","-Wall ","-WallExternal ","-WallInternal"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BuildingSurfaceType","namespace":"BH.oM.Adapters.EnergyPlus","isGeneric":"0","descriptionParts":["EnergyPlus BuildingSurfaceType ","This is a BH.oM.Adapters.EnergyPlus.BuildingSurfaceType ","Enum values: ","-Undefined ","-Wall ","-Floor ","-Ceiling ","-Roof"]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Convert","memberName":"ToEnergyPlus","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Convert a BHoM SolidMaterial into an EPMaterial object ",""],"inputs":[{"inputName":"solidMaterial","namespace":"BH.oM.Environment.MaterialFragments","memberName":"SolidMaterial","isGeneric":"0","descriptionParts":["A BHoM SolidMaterial object ","This is a BH.oM.Environment.MaterialFragments.SolidMaterial: ","Fragment containing solid material properties related to material"],"isRequired":1,"isInterface":0},{"inputName":"thickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of material ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnergyPlusClass","namespace":"BH.oM.Adapters.EnergyPlus","isGeneric":"0","descriptionParts":["An EnergyPlus EPMaterial ","This is a BH.oM.Adapters.EnergyPlus.IEnergyPlusClass ","This can be of the following types: Version, SimulationControl, Building, ShadowCalculation, SurfaceConvectionAlgorithmInside, SurfaceConvectionAlgorithmOutside, HeatBalanceAlgorithm, HeatBalanceSettingsConductionFiniteDifference, ZoneAirHeatBalanceAlgorithm, Timestep, SiteLocation, RunPeriod, SiteGroundTemperatureBuildingSurface, SiteGroundTemperatureShallow, SiteGroundTemperatureDeep, and more..."]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Convert","memberName":"ToEnergyPlus","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Convert a BHoM GasMaterial into an EnergyPlus EnergyPlusWindowMaterialGas object ",""],"inputs":[{"inputName":"gasMaterial","namespace":"BH.oM.Environment.MaterialFragments","memberName":"GasMaterial","isGeneric":"0","descriptionParts":["A BHoM GasMaterial object ","This is a BH.oM.Environment.MaterialFragments.GasMaterial: ","Fragment containing gas material properties"],"isRequired":1,"isInterface":0},{"inputName":"thickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of material ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnergyPlusClass","namespace":"BH.oM.Adapters.EnergyPlus","isGeneric":"0","descriptionParts":["EnergyPlus EnergyPlusWindowMaterialGas ","This is a BH.oM.Adapters.EnergyPlus.IEnergyPlusClass ","This can be of the following types: Version, SimulationControl, Building, ShadowCalculation, SurfaceConvectionAlgorithmInside, SurfaceConvectionAlgorithmOutside, HeatBalanceAlgorithm, HeatBalanceSettingsConductionFiniteDifference, ZoneAirHeatBalanceAlgorithm, Timestep, SiteLocation, RunPeriod, SiteGroundTemperatureBuildingSurface, SiteGroundTemperatureShallow, SiteGroundTemperatureDeep, and more..."]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Convert","memberName":"ToEnergyPlus","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Convert a BHoM Material into an EnergyPlus Material object ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["A BHoM Material object ","This is a BH.oM.Physical.Materials.Material"],"isRequired":1,"isInterface":0},{"inputName":"thickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of material ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnergyPlusClass","namespace":"BH.oM.Adapters.EnergyPlus","isGeneric":"0","descriptionParts":["EnergyPlus Material or Gas Material object ","This is a BH.oM.Adapters.EnergyPlus.IEnergyPlusClass ","This can be of the following types: Version, SimulationControl, Building, ShadowCalculation, SurfaceConvectionAlgorithmInside, SurfaceConvectionAlgorithmOutside, HeatBalanceAlgorithm, HeatBalanceSettingsConductionFiniteDifference, ZoneAirHeatBalanceAlgorithm, Timestep, SiteLocation, RunPeriod, SiteGroundTemperatureBuildingSurface, SiteGroundTemperatureShallow, SiteGroundTemperatureDeep, and more..."]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Convert","memberName":"ToEnergyPlus","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Convert a BHoM Layer into an EnergyPlus IEnergyPlusClass object ",""],"inputs":[{"inputName":"layer","namespace":"BH.oM.Physical.Constructions","memberName":"Layer","isGeneric":"0","descriptionParts":["A BHoM Layer object ","This is a BH.oM.Physical.Constructions.Layer: ","A layer object with given material and thickness"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnergyPlusClass","namespace":"BH.oM.Adapters.EnergyPlus","isGeneric":"0","descriptionParts":["EnergyPlus IEnergyPlusClass object ","This is a BH.oM.Adapters.EnergyPlus.IEnergyPlusClass ","This can be of the following types: Version, SimulationControl, Building, ShadowCalculation, SurfaceConvectionAlgorithmInside, SurfaceConvectionAlgorithmOutside, HeatBalanceAlgorithm, HeatBalanceSettingsConductionFiniteDifference, ZoneAirHeatBalanceAlgorithm, Timestep, SiteLocation, RunPeriod, SiteGroundTemperatureBuildingSurface, SiteGroundTemperatureShallow, SiteGroundTemperatureDeep, and more..."]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Convert","memberName":"ToEnergyPlus","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Convert a BHoM Construction into a set of EnergyPlus IEnergyPlusClass objects describing construction and materials ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isGeneric":"0","descriptionParts":["A BHoM Construction object ","This is a BH.oM.Physical.Constructions.Construction"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.EnergyPlus","memberName":"IEnergyPlusClass","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of EnergyPlus objects ","This is a List<IEnergyPlusClass> ","This can be of the following types: Version, SimulationControl, Building, ShadowCalculation, SurfaceConvectionAlgorithmInside, SurfaceConvectionAlgorithmOutside, HeatBalanceAlgorithm, HeatBalanceSettingsConductionFiniteDifference, ZoneAirHeatBalanceAlgorithm, Timestep, SiteLocation, RunPeriod, SiteGroundTemperatureBuildingSurface, SiteGroundTemperatureShallow, SiteGroundTemperatureDeep, and more..."]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Convert","memberName":"ToEnergyPlus","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Convert a BHoM Building to an EnergyPlus Building ",""],"inputs":[{"inputName":"building","namespace":"BH.oM.Environment.Elements","memberName":"Building","isGeneric":"0","descriptionParts":["BHoM building ","This is a BH.oM.Environment.Elements.Building: ","This building object is used for setting the location and building type, which is required for some environmental workflows"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnergyPlusClass","namespace":"BH.oM.Adapters.EnergyPlus","isGeneric":"0","descriptionParts":["EnergyPlus building ","This is a BH.oM.Adapters.EnergyPlus.IEnergyPlusClass ","This can be of the following types: Version, SimulationControl, Building, ShadowCalculation, SurfaceConvectionAlgorithmInside, SurfaceConvectionAlgorithmOutside, HeatBalanceAlgorithm, HeatBalanceSettingsConductionFiniteDifference, ZoneAirHeatBalanceAlgorithm, Timestep, SiteLocation, RunPeriod, SiteGroundTemperatureBuildingSurface, SiteGroundTemperatureShallow, SiteGroundTemperatureDeep, and more..."]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Convert","memberName":"ToEnergyPlus","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Convert a BHoM Opening into a set of EnergyPlus IEnergyPlusClass objects describing surfaces, materials and constructions ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["A BHoM Environments Opening object, with assigned construction ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0},{"inputName":"hostName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Hosting BHoM Environments panel name ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.EnergyPlus","memberName":"IEnergyPlusClass","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of EnergyPlus IEnergyPlusClass objects ","This is a List<IEnergyPlusClass> ","This can be of the following types: Version, SimulationControl, Building, ShadowCalculation, SurfaceConvectionAlgorithmInside, SurfaceConvectionAlgorithmOutside, HeatBalanceAlgorithm, HeatBalanceSettingsConductionFiniteDifference, ZoneAirHeatBalanceAlgorithm, Timestep, SiteLocation, RunPeriod, SiteGroundTemperatureBuildingSurface, SiteGroundTemperatureShallow, SiteGroundTemperatureDeep, and more..."]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Convert","memberName":"ToEnergyPlus","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Convert a BHoM Panel into a set of EnergyPlus IEnergyPlusClass objects describing surfaces, materials and constructions ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["A BHoM Environments Panel object, with assigned construction ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.EnergyPlus","memberName":"IEnergyPlusClass","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of EnergyPlus objects ","This is a List<IEnergyPlusClass> ","This can be of the following types: Version, SimulationControl, Building, ShadowCalculation, SurfaceConvectionAlgorithmInside, SurfaceConvectionAlgorithmOutside, HeatBalanceAlgorithm, HeatBalanceSettingsConductionFiniteDifference, ZoneAirHeatBalanceAlgorithm, Timestep, SiteLocation, RunPeriod, SiteGroundTemperatureBuildingSurface, SiteGroundTemperatureShallow, SiteGroundTemperatureDeep, and more..."]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Convert","memberName":"ToEnergyPlus","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Convert a BHoM Profile to an EnergyPlus Schedule ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Environment.SpaceCriteria","memberName":"Profile","isGeneric":"0","descriptionParts":["BHoM Profile ","This is a BH.oM.Environment.SpaceCriteria.Profile: ","A profile object represents a gain, thermostat or humdistat as conditions vary over a 24-hour period"],"isRequired":1,"isInterface":0},{"inputName":"scheduleTypeLimitsNumericType","namespace":"BH.oM.Adapters.EnergyPlus","memberName":"ScheduleTypeLimitsNumericType","isGeneric":"0","descriptionParts":["EnergyPlus ScheduleTypeLimitsNumericType ","This is a BH.oM.Adapters.EnergyPlus.ScheduleTypeLimitsNumericType ","Enum values: ","-Undefined ","-Continuous ","-Discrete"],"isRequired":1,"isInterface":0},{"inputName":"scheduleTypeLimitsUnitType","namespace":"BH.oM.Adapters.EnergyPlus","memberName":"ScheduleTypeLimitsUnitType","isGeneric":"0","descriptionParts":["EnergyPlus ScheduleTypeLimitsUnitType ","This is a BH.oM.Adapters.EnergyPlus.ScheduleTypeLimitsUnitType ","Enum values: ","-Undefined ","-Dimensionless ","-Temperature ","-DeltaTemperature ","-PrecipitationRate ","-Angle ","-ConvectionCoefficient ","-ActivityLevel ","-Velocity ","-Capacity ","-Power ","-Availability ","-Percent ","-Control ","-Mode"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.EnergyPlus","memberName":"IEnergyPlusClass","isInterface":"1","isGeneric":"0"}],"descriptionParts":["EnergyPlus Schedule ","This is a List<IEnergyPlusClass> ","This can be of the following types: Version, SimulationControl, Building, ShadowCalculation, SurfaceConvectionAlgorithmInside, SurfaceConvectionAlgorithmOutside, HeatBalanceAlgorithm, HeatBalanceSettingsConductionFiniteDifference, ZoneAirHeatBalanceAlgorithm, Timestep, SiteLocation, RunPeriod, SiteGroundTemperatureBuildingSurface, SiteGroundTemperatureShallow, SiteGroundTemperatureDeep, and more..."]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Convert","memberName":"ToEnergyPlusString","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Convert an IEnergyPlusClass object to it's string representation for passing to IDF file ",""],"inputs":[{"inputName":"energyPlusClass","namespace":"BH.oM.Adapters.EnergyPlus","memberName":"IEnergyPlusClass","isGeneric":"0","descriptionParts":["IEnergyPlusClass object ","This is a BH.oM.Adapters.EnergyPlus.IEnergyPlusClass ","This can be of the following types: Version, SimulationControl, Building, ShadowCalculation, SurfaceConvectionAlgorithmInside, SurfaceConvectionAlgorithmOutside, HeatBalanceAlgorithm, HeatBalanceSettingsConductionFiniteDifference, ZoneAirHeatBalanceAlgorithm, Timestep, SiteLocation, RunPeriod, SiteGroundTemperatureBuildingSurface, SiteGroundTemperatureShallow, SiteGroundTemperatureDeep, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["String representation of IEnergyPlusClass object/s ","This is a String"]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Create","memberName":"GroundTemperature","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Create EnergyPlus SiteGroundTemperatureBuildingSurface, SiteGroundTemperatureShallow and SiteGroundTemperatureDeep objects from an EPW file ",""],"inputs":[{"inputName":"epwFile","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Path to an epw-file ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.EnergyPlus","memberName":"SiteGroundTemperatureBuildingSurface","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Adapters.EnergyPlus","memberName":"SiteGroundTemperatureShallow","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Adapters.EnergyPlus","memberName":"SiteGroundTemperatureDeep","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Adapters.EnergyPlus.SiteGroundTemperatureBuildingSurface, BH.oM.Adapters.EnergyPlus.SiteGroundTemperatureShallow, BH.oM.Adapters.EnergyPlus.SiteGroundTemperatureDeep>"]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Create","memberName":"SiteLocation","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Create an EnergyPlus SiteLocation object from an EPW file ",""],"inputs":[{"inputName":"epwFile","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Path to an epw-file ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SiteLocation","namespace":"BH.oM.Adapters.EnergyPlus","isGeneric":"0","descriptionParts":["An energyPlus siteLocation object ","This is a BH.oM.Adapters.EnergyPlus.SiteLocation"]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Query","memberName":"FilterEnergyPlusClassByClassName","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Returns a collection of EnergyPlusClass objects that match the given ClassName ",""],"inputs":[{"inputName":"energyPlusClasses","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.EnergyPlus","memberName":"IEnergyPlusClass","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of EnergyPlusClass objects ","This is a List<IEnergyPlusClass> ","This can be of the following types: Version, SimulationControl, Building, ShadowCalculation, SurfaceConvectionAlgorithmInside, SurfaceConvectionAlgorithmOutside, HeatBalanceAlgorithm, HeatBalanceSettingsConductionFiniteDifference, ZoneAirHeatBalanceAlgorithm, Timestep, SiteLocation, RunPeriod, SiteGroundTemperatureBuildingSurface, SiteGroundTemperatureShallow, SiteGroundTemperatureDeep, and more..."],"isRequired":1,"isInterface":0},{"inputName":"className","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The class name to filter by ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.EnergyPlus","memberName":"IEnergyPlusClass","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of EnergyPlusClass objects that match the given ClassName ","This is a List<IEnergyPlusClass> ","This can be of the following types: Version, SimulationControl, Building, ShadowCalculation, SurfaceConvectionAlgorithmInside, SurfaceConvectionAlgorithmOutside, HeatBalanceAlgorithm, HeatBalanceSettingsConductionFiniteDifference, ZoneAirHeatBalanceAlgorithm, Timestep, SiteLocation, RunPeriod, SiteGroundTemperatureBuildingSurface, SiteGroundTemperatureShallow, SiteGroundTemperatureDeep, and more..."]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Query","memberName":"ReadESO","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Read an EnergyPlus simulation results ESO file ",""],"inputs":[{"inputName":"filepath","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The path to the ESO file ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ESOFile","namespace":"BH.oM.Adapters.EnergyPlus","isGeneric":"0","descriptionParts":["The ESO file object containing simulation results ","This is a BH.oM.Adapters.EnergyPlus.ESOFile"]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Query","memberName":"SunWindExposure","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Query the EnergyPlus equivalent exposure to sun and/or wind for a panel object ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["A BHoM Environments panel object ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if exposed to Sun/Wind ","This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Query","memberName":"BoundaryCondition","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Query the EnergyPlus equivalent OutsideBoundaryCondition for a BHoM panel object ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["A BHoM Environments panel object ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"OutsideBoundaryCondition","namespace":"BH.oM.Adapters.EnergyPlus","isGeneric":"0","descriptionParts":["An EnergyPlus OutsideBoundaryCondition ","This is a BH.oM.Adapters.EnergyPlus.OutsideBoundaryCondition ","Enum values: ","-Undefined ","-Adiabatic ","-Surface ","-Zone ","-Outdoors ","-Foundation ","-Ground ","-GroundFCfactorMethod ","-OtherSideCoefficients ","-OtherSideConditionsModel ","-GroundSlabPreprocessorAverage ","-GroundSlabPreprocessorCore ","-GroundSlabPreprocessorPerimeter ","-GroundBasementPreprocessorAverageWall ","-GroundBasementPreprocessorAverageFloor ","-GroundBasementPreprocessorUpperWall ","-GroundBasementPreprocessorLowerWall"]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Compute","memberName":"SimulateIDF","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Run an IDF file ",""],"inputs":[{"inputName":"energyPlusSettings","namespace":"BH.oM.Adapters.EnergyPlus.Settings","memberName":"EnergyPlusSettings","isGeneric":"0","descriptionParts":["EnergyPlusSettings object ","This is a BH.oM.Adapters.EnergyPlus.Settings.EnergyPlusSettings"],"isRequired":1,"isInterface":0},{"inputName":"idfFile","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["EnergyPlus IDF file to simulate ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"run","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Set to 'True' to run simulation ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if command has been run sucessfully (subject to program being called correctly returning an Exit Code) ","This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Compute","memberName":"RunCommand","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Run a command line command from a string ",""],"inputs":[{"inputName":"commandString","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The full command string to pass to command line ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if command has been run sucessfully (subject to program being called correctly returning an Exit Code) ","This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.EnergyPlus","className":"Modify","memberName":"RemoveDuplicates","assemblyName":"EnergyPlus_Engine.dll","descriptionParts":["Remove duplicate IEnergyPlusClass objects ",""],"inputs":[{"inputName":"energyPlusClasses","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.EnergyPlus","memberName":"IEnergyPlusClass","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of EnergyPlus classes ","This is a List<IEnergyPlusClass> ","This can be of the following types: Version, SimulationControl, Building, ShadowCalculation, SurfaceConvectionAlgorithmInside, SurfaceConvectionAlgorithmOutside, HeatBalanceAlgorithm, HeatBalanceSettingsConductionFiniteDifference, ZoneAirHeatBalanceAlgorithm, Timestep, SiteLocation, RunPeriod, SiteGroundTemperatureBuildingSurface, SiteGroundTemperatureShallow, SiteGroundTemperatureDeep, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.EnergyPlus","memberName":"IEnergyPlusClass","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of EnergyPlus classes with duplicates removed ","This is a List<IEnergyPlusClass> ","This can be of the following types: Version, SimulationControl, Building, ShadowCalculation, SurfaceConvectionAlgorithmInside, SurfaceConvectionAlgorithmOutside, HeatBalanceAlgorithm, HeatBalanceSettingsConductionFiniteDifference, ZoneAirHeatBalanceAlgorithm, Timestep, SiteLocation, RunPeriod, SiteGroundTemperatureBuildingSurface, SiteGroundTemperatureShallow, SiteGroundTemperatureDeep, and more..."]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"BooleanIntersect","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns true if two Environment Panels boolean intersect ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["A single Environment Panel ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"elementToCompare","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to compare with ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the panels boolean intersect, false if they do not ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"EquipmentGain","assemblyName":"Environment_Engine.dll","descriptionParts":["Compute the sensible or latent equipment gain from the watts per meter squared and the area of the space ",""],"inputs":[{"inputName":"sensibleWattsPerSquareMeter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The sensible watts per meter squared from building code, default 0.0 ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"latentWattsPerSquareMeter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The latent watts per meter squared from building code, default 0.0 ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"area","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The area of the space, default 0.0 ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Equipment","namespace":"BH.oM.Environment.SpaceCriteria","isGeneric":"0","descriptionParts":["The calculated sensible or latent equipment gain with the sensible or latent watts for the space ","This is a BH.oM.Environment.SpaceCriteria.Equipment: ","Equipment gains are defined as the amount of both latent and sensible heat contributed by specified equipment within the space (dishwasher, oven, etc)"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"ExportEPW","assemblyName":"Environment_Engine.dll","descriptionParts":["Serialise a weatherfile object as an EPW file ",""],"inputs":[{"inputName":"weatherfile","namespace":"BH.oM.Environment.Climate","memberName":"WeatherFile","isGeneric":"0","descriptionParts":["A BHoM Weatherfile object ","This is a BH.oM.Environment.Climate.WeatherFile"],"isRequired":1,"isInterface":0},{"inputName":"outputPath","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Full path to target output file ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["Full path to target output file ","This is a String"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"ExtrudeToVolume","assemblyName":"Environment_Engine.dll","descriptionParts":["Takes an Architecture Room with a Floor Perimieter and creates a collection of Environment Panels which represent the closed volume of the room. The name of the room becomes the connected space for the panels ",""],"inputs":[{"inputName":"room","namespace":"BH.oM.Architecture.Elements","memberName":"Room","isGeneric":"0","descriptionParts":["An Architecture Room with a floor perimeter to extrude into a collection of panels ","This is a BH.oM.Architecture.Elements.Room"],"isRequired":1,"isInterface":0},{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The height of the room, as a double, to calculate the ceiling level of the room. This will be used as the Z value of the perimeter + the given height ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels which represent the closed volume of the room ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"ExtrudeToVolume","assemblyName":"Environment_Engine.dll","descriptionParts":["Takes an Environment Space with a Floor Perimieter and creates a collection of Environment Panels which represent the closed volume of the space. The name of the space becomes the connected space for the panels ",""],"inputs":[{"inputName":"space","namespace":"BH.oM.Environment.Elements","memberName":"Space","isGeneric":"0","descriptionParts":["An Environment Space with a floor perimeter to extrude into a collection of panels ","This is a BH.oM.Environment.Elements.Space: ","A space object is an analytical depiction of a room defined by its environmental conditions (internal gains)"],"isRequired":1,"isInterface":0},{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The height of the room, as a double, to calculate the ceiling level of the space. This will be used as the Z value of the perimeter + the given height ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels which represent the closed volume of the space ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"ExtrudeToVolume","assemblyName":"Environment_Engine.dll","descriptionParts":["Takes a polyline perimieter and creates a collection of Environment Panels which represent the closed volume of a space ",""],"inputs":[{"inputName":"pLine","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["A polyline perimeter to extrude into a collection of panels ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"connectingSpaceName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the space the panels will enclose ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The height of the space, as a double, to calculate the ceiling level of the room. This will be used as the Z value of the perimeter + the given height ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels which represent the closed volume of the space ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"GenerateCylindricalFarfield","assemblyName":"Environment_Engine.dll","descriptionParts":["Generates the cylindrical farfield for a collection of Environment Panels ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panel which will define the extents of the farfield geometry ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"resolution","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Fineness of the cylindrical shape ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"offsetDistance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Set the distance for expanding the radius ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"addedHeight","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Set the distance for expansion in the positive z-direction ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The cylindrical farfield represented as a collection of Environment Panels ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"ImportEPW","assemblyName":"Environment_Engine.dll","descriptionParts":["Imports an epw-file from a given file path ",""],"inputs":[{"inputName":"filePath","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The file path of the epw-file ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"WeatherFile","namespace":"BH.oM.Environment.Climate","isGeneric":"0","descriptionParts":["The imported weather-file object ","This is a BH.oM.Environment.Climate.WeatherFile"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"JulianDay","assemblyName":"Environment_Engine.dll","descriptionParts":["Calculate the Julian Day for the curent date time provided ",""],"inputs":[{"inputName":"year","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The year for calculating the Julian Day from ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"month","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The month for calculating the Julian Day from ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"day","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The day for calculating the Julian Day from ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"hour","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The hour for calculating the Julian Day from ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"minute","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The minute for calculating the Julian Day from ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"second","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The second for calculating the Julian Day from ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"timezone","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The timezone for calculating the Julian Day for, defined as the UTC Offset ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The calculated Julian Day ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"LightingGain","assemblyName":"Environment_Engine.dll","descriptionParts":["Compute a lighting gain from the watts per square meter and floor area of the space ",""],"inputs":[{"inputName":"wattsPerMeterSquared","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The watts per meter squared from a standard or set of lights, default 0.0 ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"area","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The floor area (in square meters) of the space, default 0.0 ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Lighting","namespace":"BH.oM.Environment.SpaceCriteria","isGeneric":"0","descriptionParts":["The calculated lighting gain with the sensible watts for the space ","This is a BH.oM.Environment.SpaceCriteria.Lighting: ","Lighting gains are defined as the amount of heat contributed by light fixtures"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"MapRegions","assemblyName":"Environment_Engine.dll","descriptionParts":["Maps regions based on geometry to an original set of regions. This is done by taking the intersections of the regions to map perimeters with the original region perimeters and checking which original region contains those intersections. E.G. mapping IES zoned regions back to original Revit regions. Also filters out unmatched regions and calculates the area percentage of the mapped regions that has been matched to the original regions. ",""],"inputs":[{"inputName":"regionsToMap","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Analytical.Elements","memberName":"IRegion","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of Environment regions to map to original regions ","This is a List<IRegion> ","This can be of the following types: CeilingTile, Room, Space"],"isRequired":1,"isInterface":0},{"inputName":"originalRegions","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Analytical.Elements","memberName":"IRegion","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of original regions to map to ","This is a List<IRegion> ","This can be of the following types: CeilingTile, Room, Space"],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["the tolerance used for distance calculations ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["the tolerance used for angle calculations ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Analytical.Elements","memberName":"IRegion","isInterface":"1","isGeneric":"0"}]}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}]}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Analytical.Elements","memberName":"IRegion","isInterface":"1","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Analytical.Elements","memberName":"IRegion","isInterface":"1","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<System.Collections.Generic.List<BH.oM.Analytical.Elements.IRegion>>, System.Collections.Generic.List<System.Collections.Generic.List<System.Double>>, System.Collections.Generic.List<BH.oM.Analytical.Elements.IRegion>, System.Collections.Generic.List<BH.oM.Analytical.Elements.IRegion>>"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"MapToLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Organise the BHoM Space objects into a data structure based on the level of each space. ",""],"inputs":[{"inputName":"spaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Space","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Spaces to be organised. ","This is a List<Space>"],"isRequired":1,"isInterface":0},{"inputName":"levels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Levels. ","This is a List<Level>"],"isRequired":1,"isInterface":0},{"inputName":"decimals","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Provide decimal location to define the degree of tolerance for data matching. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Space","isInterface":"0","isGeneric":"0"}]}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Space","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<System.Collections.Generic.List<BH.oM.Environment.Elements.Space>>, System.Collections.Generic.List<BH.oM.Geometry.SettingOut.Level>, System.Collections.Generic.List<BH.oM.Environment.Elements.Space>>"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"MapToLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Organise the BHoM Room objects into a data structure based on the level of each room. ",""],"inputs":[{"inputName":"rooms","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Architecture.Elements","memberName":"Room","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Rooms to be organised. ","This is a List<Room>"],"isRequired":1,"isInterface":0},{"inputName":"levels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Levels. ","This is a List<Level>"],"isRequired":1,"isInterface":0},{"inputName":"decimals","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Provide decimal location to define the degree of tolerance for data matching. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Architecture.Elements","memberName":"Room","isInterface":"0","isGeneric":"0"}]}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Architecture.Elements","memberName":"Room","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<System.Collections.Generic.List<BH.oM.Architecture.Elements.Room>>, System.Collections.Generic.List<BH.oM.Geometry.SettingOut.Level>, System.Collections.Generic.List<BH.oM.Architecture.Elements.Room>>"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"Occupancy","assemblyName":"Environment_Engine.dll","descriptionParts":["Compute the occupancy from the square meters per person and floor area of the space ",""],"inputs":[{"inputName":"metersSquaredPerPerson","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The meters squared per person from building code ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"area","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The floor area (in square meters) of the space ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The calculated occupancy for the space ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"PeopleGain","assemblyName":"Environment_Engine.dll","descriptionParts":["Compute the sensible or latent people gain from the watts per person and occupancy of the space ",""],"inputs":[{"inputName":"sensibleWattsPerPerson","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The sensible watts per person from building code, default 0.0 ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"latentWattsPerPerson","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The latent watts per person from building code, default 0.0 ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"occupancy","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The occupancy of the space, default 0.0 ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"People","namespace":"BH.oM.Environment.SpaceCriteria","isGeneric":"0","descriptionParts":["The calculated sensible or latent people gain with the sensible or latent watts for the space ","This is a BH.oM.Environment.SpaceCriteria.People: ","People gains are defined as the amount of both latent and sensible heat contributed by people based on their assumed activity level within the space (dancing, sitting, etc)"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"PlugGain","assemblyName":"Environment_Engine.dll","descriptionParts":["Compute a plug gain from the watts per square meter and floor area of the space ",""],"inputs":[{"inputName":"wattsPerMeterSquared","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The watts per meter squared from plugs/receptacles/outlets, default 0.0 ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"area","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The floor area (in square meters) of the space, default 0.0 ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Plug","namespace":"BH.oM.Environment.SpaceCriteria","isGeneric":"0","descriptionParts":["The calculated plug gain with the sensible watts for the space ","This is a BH.oM.Environment.SpaceCriteria.Plug: ","Plug gains are defined as the amount of sensible heat contributed by electrical receptacle/outlet loads"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"SolarPosition","assemblyName":"Environment_Engine.dll","descriptionParts":["Calculate the solar azimuth (degrees clockwise from 0 at North) from Datetime and Location objects ",""],"inputs":[{"inputName":"spaceTime","namespace":"BH.oM.Environment.Climate","memberName":"SpaceTime","isGeneric":"0","descriptionParts":["A SpaceTime object containing latitude, longitude, azimuth, and date data to calculate the solar position from ","This is a BH.oM.Environment.Climate.SpaceTime: ","Represents a specific moment in time related to a specific location of Earth geometry. Used for obtaining solar positions for specific moments in time at specific points on Earth"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Sun","namespace":"BH.oM.Environment.Climate","isGeneric":"0","descriptionParts":["The sun with calculated position ","This is a BH.oM.Environment.Climate.Sun: ","An environment object used to define the position of the sun (in azimuth and elevation)"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"ThirdOrderPolynomial","assemblyName":"Environment_Engine.dll","descriptionParts":["Calculate the Third Order Polynominal for the numbers provided. The equation is: ((a * x + b) * x * c) * x + d ",""],"inputs":[{"inputName":"a","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"b","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"c","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"d","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"x","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The calculated Third Order Polynominal ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"DateTimeList","assemblyName":"Environment_Engine.dll","descriptionParts":["A tool to help creation of a list of DateTime objects. ",""],"inputs":[{"inputName":"startDateTime","namespace":"System","memberName":"DateTime","isGeneric":"0","descriptionParts":["The first DateTime to include ","This is a DateTime"],"isRequired":1,"isInterface":0},{"inputName":"endDateTime","namespace":"System","memberName":"DateTime","isGeneric":"0","descriptionParts":["The last DateTime to include in the list ","This is a DateTime"],"isRequired":1,"isInterface":0},{"inputName":"minutesBetween","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Number of minutes by which to increment between startDateTime and endDateTime ","This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"DateTime","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A list of DateTime objects ","This is a IEnumerable<DateTime>"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"MergePanels","assemblyName":"Environment_Engine.dll","descriptionParts":["Merges the properties two Environment Panels together and returns a copied panel with the smallest area ",""],"inputs":[{"inputName":"panel1","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to merge from ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"panel2","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["A second Environment Panel to merge from ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["The Environment Panel with the smallest area of the two provided but with the combined properties of both ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"]}},{"namespace":"BH.Engine.Environment","className":"Compute","memberName":"MergePanels","assemblyName":"Environment_Engine.dll","descriptionParts":["Merges the geometry of two Environment Panels if they share same connected space together and get panel with bigger area, tries boolean geometry and returns panel with new geometry ",""],"inputs":[{"inputName":"panel1","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to merge from ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"panel2","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["A second Environment Panel to merge from ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["The Environment Panel with the  merged area between two panels, but with properties of larger panel ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"]}},{"namespace":"BH.Engine.Environment","className":"Convert","memberName":"ToEdges","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Edges from a BHoM Geomtry Polyline ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["A BHoM Geometry Polyline to be split into Environment Edges ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Edge","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Edges ","This is a List<Edge>"]}},{"namespace":"BH.Engine.Environment","className":"Convert","memberName":"ToEdges","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Edges from a collection of BHoM Geomtry Polylines ",""],"inputs":[{"inputName":"polylines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Geometry Polylines to be split into Environment Edges ","This is a List<Polyline>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Edge","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Edges ","This is a List<Edge>"]}},{"namespace":"BH.Engine.Environment","className":"Create","memberName":"AnalysisGrid","assemblyName":"Environment_Engine.dll","descriptionParts":["An AnalysisGrid generated from a boundary curve representing a surface. There will not be any nodes in areas within the inner boundaries, with the analysis grid only providing analysis nodes for the surface area without openings ",""],"inputs":[{"inputName":"externalBoundary","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["Surface outline representing the external boundary of the surface ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"innerBoundaries","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Holes in the surface representing openings. There will not be any analysis grid nodes within the inner boundaries ","This is a List<Polyline>"],"isRequired":0,"isInterface":0},{"inputName":"id","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["A unique identifier for this Analysis Grid. This should unqiuely identify only this analysis grid in a project, which is used to perform result analysis later on ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["A name for the Analysis Grid which is human readable and represents what this Analysis Grid is for, to aid engineers know where this grid is being utilised ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"gridSpacing","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Analysis grid spacing/resolution (default = 0.2) ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"edgeOffset","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance from the curve edges within which nodes will be generated (default = 0.1) ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"pointOffset","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance offset from surface in normal direction (default = 0.765) ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"AnalysisGrid","namespace":"BH.oM.Environment.Analysis","isGeneric":"0","descriptionParts":["An analysis grid object containing nodes with positions ","This is a BH.oM.Environment.Analysis.AnalysisGrid: ","An AnalysisGrid is used to define an area in 3D space that should be analysed for a given set of results, e.g. daylighting levels, wind levels, heat indexes, etc. - an AnalysisGrid can be used to represent a measurable bit of the environment, including a void in a space, or it can be used to represent a mesh on a panel for analysis"]}},{"namespace":"BH.Engine.Environment","className":"Create","memberName":"Panels","assemblyName":"Environment_Engine.dll","descriptionParts":["Create a collection of Environment Panels which form a space from a BHoM Boundary Representation (Brep) ",""],"inputs":[{"inputName":"brep","namespace":"BH.oM.Geometry","memberName":"BoundaryRepresentation","isGeneric":"0","descriptionParts":["A BHoM Boundary Representation to convert into a collection of Environment Panels ","This is a BH.oM.Geometry.BoundaryRepresentation: ","Solid representation defined by a collection of connected surfaces forming a closed volume"],"isRequired":1,"isInterface":0},{"inputName":"connectedSpaceName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["A name for the space which these panels are connected to. If no name is provided, a randomised default will be generated ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The angle tolerance for collapsing to polylines used when generating the external edges of the surfaces ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels representing a closed space generated from the provided Brep geometry ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Create","memberName":"Panels","assemblyName":"Environment_Engine.dll","descriptionParts":["Create a collection of Environment Panels from a collection of BHoM Surfaces ",""],"inputs":[{"inputName":"surfaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ISurface","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of BHoM surfaces to convert into a Environment Panels. The surfaces should be grouped as a single space as all panels generated from the surfaces will have the same connectedSpaceName ","This is a List<ISurface> ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":0},{"inputName":"connectedSpaceName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["A name for the space which these panels are connected to. If no name is provided, a randomised default will be generated ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The angle tolerance for collapsing to polylines used when generating the external edges of the surfaces ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["An Environment Panels representing a closed space generated from the provided surfaces ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Create","memberName":"Panel","assemblyName":"Environment_Engine.dll","descriptionParts":["Create an Environments Panel from a BHoM Surface ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["A BHoM surface to convert into an Environment Panel ","This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1},{"inputName":"connectedSpaceName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["A name for the space which this panel is connected to. If no name is provided, a randomised default will be generated ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The angle tolerance for collapsing to polylines used when generating the external edges of the surfaces ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["An Environment Panels representing a closed space generated from the provided Brep geometry ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"]}},{"namespace":"BH.Engine.Environment","className":"Create","memberName":"NewElement1D","assemblyName":"Environment_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IElement1D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Environment","className":"Create","memberName":"NewElement1D","assemblyName":"Environment_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IElement1D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Environment","className":"Create","memberName":"NewInternalElement2D","assemblyName":"Environment_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IElement2D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"AddOpenings","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a list of Environment Panel with the provided openings added. Openings are added to the panels which contain them geometrically. ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to add the opening to ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings to add to the panels ","This is a List<Opening>"],"isRequired":1,"isInterface":0},{"inputName":"centroidTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Set the tolerance for obtaining the centroid of openings, default is set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"containingTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Set the tolerance for determining geometric association of openings to panels, default is set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of modified Environment Panels with the provided openings added ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"AssignGenericConstructions","assemblyName":"Environment_Engine.dll","descriptionParts":["Assign generic constructions to a collection of Environment Panels based on their panel type. This will load a dataset of Generic Constructions and attempt to assign each generic construction to the panel based on the panel type. For example, panel type wall will be assigned the 'generic_wall' construction. WARNING: This will overwrite constructions hosted on objects passed. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"assignOpenings","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Flag to determine whether to assign generic constructions to openings hosted by the panels at the same time. Default is false, meaning openings will not be updated. If set to true then openings will receive generic constructions as well ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["A collection of Environment Panels with the generic constructions assigned ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"AssignGenericConstructions","assemblyName":"Environment_Engine.dll","descriptionParts":["Assign generic constructions to a collection of Environment Openings based on their opening type. This will load a dataset of Generic Constructions and attempt to assign each generic construction to the opening based on the opening type. For example, opening type Window will be assigned the 'generic_window' construction. WARNING: This will overwrite constructions hosted on objects passed. ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Opening","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["A collection of Environment Openings with the generic constructions assigned ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"ChangeAdjacentSpace","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a single Environment Panel with an updated connected space name ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["A single Environment Panel to change the connected space name of ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"spaceNameToChange","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The space name to replace ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"replacementSpaceName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The new space name to use ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["A modified Environment Panel with the changed connected space name ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"ChangeAdjacentSpaces","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels where any connected spaces which are detailed within the spaceNamesToChange are replaced by a replacementSpaceName. The spaceNamesToChange and replacementSpaceNames should match length to provide a 1:1 change ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to update the connected space names of ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"spaceNamesToChange","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of space names which should be updated ","This is a List<String>"],"isRequired":1,"isInterface":0},{"inputName":"replacementSpaceNames","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of space names to replace with ","This is a List<String>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels modified so that space names are changed as appropriate ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"CleanPanel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a list of panels that has been cleaned from short segments and insignificant vertices ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A list of panels that will be cleaned ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The tolerance of the angle that defines a straight line. Default is set to the value defined by BH.oM.Geometry.Tolerance.Angle ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"minimumSegmentLength","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The length of the smallest allowed segment. Segments smaller than this will be removed. Default is set to the value defined by BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A list of panels that has been cleaned ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"FixNormal","assemblyName":"Environment_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"panelsAsSpaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<Panel>>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<Panel>>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"OffsetOpenings","assemblyName":"Environment_Engine.dll","descriptionParts":["Reduces the area of the opening(s) if the total area of the opening(s) is equal to the area of the panel itself. Returns an Environment Panel object. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel object ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["An Environment Panel object ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"RemoveOpening","assemblyName":"Environment_Engine.dll","descriptionParts":["Remove all openings from the provided panels ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The Environment Panels to have their openings removed ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels with no openings ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"RemovePanel","assemblyName":"Environment_Engine.dll","descriptionParts":["Removes a single Environment Panel from a collection of Environment Panels if it exists within the list ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to modify ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"panelToRemove","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The Environment Panel to remove ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels with the panelToRemove excluded from the list ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"RemoveOpeningsByName","assemblyName":"Environment_Engine.dll","descriptionParts":["Remove all openings which match the given name from a collection of panels ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The Environment Panels to have openings filtered ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"openingName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the opening to be removed from the panels ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels with the named opening removed ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"RemovePanels","assemblyName":"Environment_Engine.dll","descriptionParts":["Removes a collection of Environment Panels from a collection of Environment Panels if they exist within the list ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to modify ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"panelsToRemove","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Environment Panels to remove ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels with the panelsToRemove excluded from the list ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetAdjancentSpaces","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a single Environment Panel with the provided space names added as the connecting spaces ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["A single Environment Panel to add the space names to ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"spaceNames","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of names of the spaces the panel is connected to ","This is a List<String>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["A modified Environment Panel with the provided space names listed as the connecting spaces ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetFloorPanels","assemblyName":"Environment_Engine.dll","descriptionParts":["Modifies a collection of Panels and sets their type to be slab on grade or internal floor if they are the lowest panel in the space. If the panel has one connected space then it is deemed to be a slab on grade panel, otherwise it is an internal floor panel ",""],"inputs":[{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels that represent a closed space ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["BHoM Environment panels representing a closed space where the slab on grade or internal floor panels have had their type set ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetOpeningConstruction","assemblyName":"Environment_Engine.dll","descriptionParts":["Update a new construction to openings hosted on panels. OPTIONAL - filter the openings to receive the new construction by their Origin Context Fragment type name ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to update the hosted openings constructions of ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"newConstruction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["The new construction to assign to the openings ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1},{"inputName":"typeNames","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["OPTIONAL: The type names of the openings to update - if any openings type name is contained in the list given it will have its construction updated, default null ","This is a List<String>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Environment Panels with updated construction on the hosted openings ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetOpeningType","assemblyName":"Environment_Engine.dll","descriptionParts":["Set the opening type based on the provided type ",""],"inputs":[{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings to set the type of ","This is a List<Opening>"],"isRequired":1,"isInterface":0},{"inputName":"openingType","namespace":"BH.oM.Environment.Elements","memberName":"OpeningType","isGeneric":"0","descriptionParts":["The opening type to assign to the openings ","This is a BH.oM.Environment.Elements.OpeningType: ","The type of cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight) ","Enum values: ","-Undefined ","-CurtainWall ","-Door ","-Frame ","-Glazing ","-Hole ","-Rooflight ","-RooflightWithFrame ","-Window ","-WindowWithFrame ","-VehicleDoor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings with their type set ","This is a List<Opening>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetPanelConstructionByType","assemblyName":"Environment_Engine.dll","descriptionParts":["Update a panel construction based on the panel type ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to update the constructions of ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"newConstruction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["The new construction to assign to the panels ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1},{"inputName":"panelType","namespace":"BH.oM.Environment.Elements","memberName":"PanelType","isGeneric":"0","descriptionParts":["The type of the panels to update ","This is a BH.oM.Environment.Elements.PanelType: ","The type of environmental surface (e.g. Wall, Floor, Roof) ","Enum values: ","-Undefined ","-Adiabatic ","-Air ","-Ceiling ","-CurtainWall ","-Floor ","-FloorExposed ","-FloorInternal ","-FloorRaised ","-Roof ","-Shade ","-SlabOnGrade ","-SolarPanel ","-UndergroundCeiling ","-UndergroundSlab ","-UndergroundWall ","-Wall ","-WallExternal ","-WallInternal"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Environment Panels with updated constructions ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetPanelTypeByAdjacencies","assemblyName":"Environment_Engine.dll","descriptionParts":["Calculates the Panel type by the spaces adjacent to it. This is only valid for wall panels and is NOT valid for roof or floor panels ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to calculate the type of ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels with their type set ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetRoofPanels","assemblyName":"Environment_Engine.dll","descriptionParts":["Modifies a collection of Panels and sets their type to be roof or ceiling if they are the highest panel in the space. If the panel has one connected space then it is deemed to be a roof panel, otherwise it is a ceiling panel ",""],"inputs":[{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels that represent a closed space ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["BHoM Environment panels representing a closed space where the roof or ceiling panels have had their type set ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetShadePanels","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the shade panels represented by Environment Panels with no adj spaces and fixes PanelType ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["BHoM Environment panel representing the shade ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetWallPanels","assemblyName":"Environment_Engine.dll","descriptionParts":["Modifies a collection of Panels and sets their type to be interior or exterior wall if they have a tilt of 90 degrees. If the panel has one connected space then it is deemed to be an internal wall panel, otherwise it is an external wall panel ",""],"inputs":[{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels that represent a closed space ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["BHoM Environment panels representing a closed space where the internal or external wall panels have had their type set ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"Split","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels that are split by a collection of provided cutting lines ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to split ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"cuttingLines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Geometry Lines to split the panels by ","This is a List<Line>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels that have been split ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"Split","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels that are split ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to split ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"cuttingPanel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to split the first panel by ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels that have been split ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"Split","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels that are split by their overlapping elements ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to split ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels that have been split ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SplitOpeningByGeometry","assemblyName":"Environment_Engine.dll","descriptionParts":["Split an Environment Opening by assigning new geometry with the original core data. Returns one opening per geometry provided ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["An Environment Opening to split ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0},{"inputName":"polylines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Geometry polylines to split the opening by - one opening per polyline will be returned ","This is a List<Polyline>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings split into the geometry parts provided ","This is a List<Opening>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SplitPanelByGeometry","assemblyName":"Environment_Engine.dll","descriptionParts":["Split an Environment Panel by assigning new geometry with the original core data. Returns one panel per geometry provided ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to split ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"polylines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Geometry polylines to split the panel by - one panel per polyline will be returned ","This is a List<Polyline>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels split into the geometry parts provided ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SplitPanelsByPoints","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels that are split by their edge points ensuring panels which span multiple spaces are split and have adjacencies assigned correctly ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to split ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels that have been split ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"CullOverlaps","assemblyName":"Environment_Engine.dll","descriptionParts":["Removes panels which overlap each other ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels with no overlaps ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"AddAdjacentSpace","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a list of Environment Panel with the provided space name added as a connected space ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to add the space name to ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"spaceName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the space the panels are connected to ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of modified Environment Panels with the provided space name listed as a connecting space ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"AddAdjacentSpace","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a single Environment Panel with the provided space name added as a connected space ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["A single Environment Panel to add the space name to ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"spaceName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the space the panel is connected to ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["A modified Environment Panel with the provided space name listed as a connecting space ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"AddOpening","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a single Environment Panel with the provided opening. Opening is added to the provided panel regardless of geometric association ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["A single Environment Panel to add the opening to ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["The Environment Opening to add to the panel ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["A modified Environment Panel with the provided opening added ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"Copy","assemblyName":"Environment_Engine.dll","descriptionParts":["Copies a Panel into a new object ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to copy from ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["The copied Environment Panel ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetConstructions","assemblyName":"Environment_Engine.dll","descriptionParts":["Update a new construction to a collection of panels. OPTIONAL - filter the panels to receive the new construction by their Origin Context Fragment type name ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to set the construction of ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"newConstruction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["The new construction to assign to the panels ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1},{"inputName":"typeNames","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["OPTIONAL: The type names of the panels to update - if any panels type name is contained in the list given it will have its construction updated, default null ","This is a List<String>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Environment Panels with an updated construction ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetConstructions","assemblyName":"Environment_Engine.dll","descriptionParts":["Update a new construction to a collection of openings. OPTIONAL - filter the openings to receive the new construction by their Origin Context Fragment type name ",""],"inputs":[{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings to set the construction of ","This is a List<Opening>"],"isRequired":1,"isInterface":0},{"inputName":"newConstruction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["The new construction to assign to the openings ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1},{"inputName":"typeNames","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["OPTIONAL: The type names of the openings to update - if any openings type name is contained in the list given it will have its construction updated, default null ","This is a List<String>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Environment Openings with an updated construction ","This is a List<Opening>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetPanelType","assemblyName":"Environment_Engine.dll","descriptionParts":["Sets the panel type based on the provided type ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to set the type of ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"BH.oM.Environment.Elements","memberName":"PanelType","isGeneric":"0","descriptionParts":["The panel type to assign to the panels ","This is a BH.oM.Environment.Elements.PanelType: ","The type of environmental surface (e.g. Wall, Floor, Roof) ","Enum values: ","-Undefined ","-Adiabatic ","-Air ","-Ceiling ","-CurtainWall ","-Floor ","-FloorExposed ","-FloorInternal ","-FloorRaised ","-Roof ","-Shade ","-SlabOnGrade ","-SolarPanel ","-UndergroundCeiling ","-UndergroundSlab ","-UndergroundWall ","-Wall ","-WallExternal ","-WallInternal"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels with their type set ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"AddFragment","assemblyName":"Environment_Engine.dll","descriptionParts":["Appends a Fragment Property to a given Environment Object ",""],"inputs":[{"inputName":"environmentObject","namespace":"BH.oM.Environment","memberName":"IEnvironmentObject","isGeneric":"0","descriptionParts":["Any object implementing the IEnvironmentObject interface that can have fragment properties appended to it ","This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"],"isRequired":1,"isInterface":1},{"inputName":"fragment","namespace":"BH.oM.Base","memberName":"IFragment","isGeneric":"0","descriptionParts":["Any fragment object implementing the IFragment interface to append to the object ","This is a BH.oM.Base.IFragment ","This can be of the following types: HashFragment, PreviousNamesFragment, ParamOldIndexFragment, ProjectionFragment, RoutingFragment, SourcesDependencyFragment, TargetsDependencyFragment, RevisionFragment, GasMaterial, SolidMaterial, AnalyticalConstruction, LightReflectanceFragment, BuildingAnalyticalFragment, BuildingContextFragment, BuildingResultFragment, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IEnvironmentObject","namespace":"BH.oM.Environment","isGeneric":"0","descriptionParts":["The environment object with the added fragment ","This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetInternalElements2D","assemblyName":"Environment_Engine.dll","descriptionParts":["BH.Engine.Environment.Modify.SetInternalElements2D => Assign a new collection of internal 2D elements to an Environment Panel ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to update ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"internalElements2D","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of internal 2D elements to assign to the panel ","This is a List<IElement2D> ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["The updated Environment Panel ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetOutlineElements1D","assemblyName":"Environment_Engine.dll","descriptionParts":["BH.Engine.Environment.Modify.SetOutlineElements1D => Assign a new collection of external 1D boundaries to an Environment Opening ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["An Environment Opening to update ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0},{"inputName":"outlineElements1D","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of outline 1D elements to assign to the opening ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Opening","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["The updated Environment Opening ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetOutlineElements1D","assemblyName":"Environment_Engine.dll","descriptionParts":["BH.Engine.Environment.Modify.SetOutlineElements1D => Assign a new collection of external 1D boundaries to an Environment Opening ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to update ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"outlineElements1D","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of outline 1D elements to assign to the opening ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["The updated Environment Opening ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetOutlineElements1D","assemblyName":"Environment_Engine.dll","descriptionParts":["Assign a new collection of external 1D boundaries to an Environment Space ",""],"inputs":[{"inputName":"space","namespace":"BH.oM.Environment.Elements","memberName":"Space","isGeneric":"0","descriptionParts":["An Environment Space to update ","This is a BH.oM.Environment.Elements.Space: ","A space object is an analytical depiction of a room defined by its environmental conditions (internal gains)"],"isRequired":1,"isInterface":0},{"inputName":"outlineElements1D","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of outline 1D elements to assign to the Space ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Space","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["The updated Environment Space ","This is a BH.oM.Environment.Elements.Space: ","A space object is an analytical depiction of a room defined by its environmental conditions (internal gains)"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SplitPanelsByOverlap","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels that have been split if any of them overlap each other to ensure no panels overlap ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to split ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels that do not overlap ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetGeometry","assemblyName":"Environment_Engine.dll","descriptionParts":["Updates the position of a Node ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Environment.Analysis","memberName":"Node","isGeneric":"0","descriptionParts":["The Node to set the postion to ","This is a BH.oM.Environment.Analysis.Node: ","0D finite element for environmental analysis. Node class contains positional information and is used to build AnalysisGrids and provide links between model geometry and analytical results"],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The new position of the Node ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Node","namespace":"BH.oM.Environment.Analysis","isGeneric":"0","descriptionParts":["The Node with updated geometry ","This is a BH.oM.Environment.Analysis.Node: ","0D finite element for environmental analysis. Node class contains positional information and is used to build AnalysisGrids and provide links between model geometry and analytical results"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"ISetGeometry","assemblyName":"Environment_Engine.dll","descriptionParts":["Assign a new ICurve boundary to a generic Environment Object ",""],"inputs":[{"inputName":"environmentObject","namespace":"BH.oM.Environment","memberName":"IEnvironmentObject","isGeneric":"0","descriptionParts":["Any object implementing the IEnvironmentObject interface that can have its geometry changed ","This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"],"isRequired":1,"isInterface":1},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["Any object implementing the ICurve interface from BHoM Geometry Curves ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IEnvironmentObject","namespace":"BH.oM.Environment","isGeneric":"0","descriptionParts":["The environment object with an updated external boundary ","This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetGeometry","assemblyName":"Environment_Engine.dll","descriptionParts":["Assign a new ICurve external boundary to an Environment Panel ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to set the external boundary of ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["Any object implementing the ICurve interface from BHoM Geometry Curves ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["An Environment Panel with an updated external boundary ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetGeometry","assemblyName":"Environment_Engine.dll","descriptionParts":["Assign a new ICurve external boundary to an Environment Opening ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["An Environment Opening to set the external boundary of ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["Any object implementing the ICurve interface from BHoM Geometry Curves ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Opening","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["An Environment Opening with an updated external boundary ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetGeometry","assemblyName":"Environment_Engine.dll","descriptionParts":["Assign a new ICurve definition to an Environment Edge ",""],"inputs":[{"inputName":"edge","namespace":"BH.oM.Environment.Elements","memberName":"Edge","isGeneric":"0","descriptionParts":["An Environment Edge to set the geometry of ","This is a BH.oM.Environment.Elements.Edge: ","An environment object used to define an edge of an external boundary (e.g. the edge of an environmental panel or opening)"],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["Any object implementing the ICurve interface from BHoM Geometry Curves ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Edge","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["An Environment Edge with an updated geometry ","This is a BH.oM.Environment.Elements.Edge: ","An environment object used to define an edge of an external boundary (e.g. the edge of an environmental panel or opening)"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"SetGeometry","assemblyName":"Environment_Engine.dll","descriptionParts":["Assign a new locaion point to an Environment Space ",""],"inputs":[{"inputName":"space","namespace":"BH.oM.Environment.Elements","memberName":"Space","isGeneric":"0","descriptionParts":["An Environment Space to set the geometry of ","This is a BH.oM.Environment.Elements.Space: ","A space object is an analytical depiction of a room defined by its environmental conditions (internal gains)"],"isRequired":1,"isInterface":0},{"inputName":"locationPoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["A BHoM Geometry Point defining the location of the space ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Space","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["An Environment Space with an updated geometry ","This is a BH.oM.Environment.Elements.Space: ","A space object is an analytical depiction of a room defined by its environmental conditions (internal gains)"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Bottom","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the bottom of a given environment object ",""],"inputs":[{"inputName":"environmentObject","namespace":"BH.oM.Environment","memberName":"IEnvironmentObject","isGeneric":"0","descriptionParts":["Any object implementing the IEnvironmentObject interface that can have a geometrical bottom ","This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["An ICurve representation of the bottom of the object ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"AltitudeRange","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the range of altitude of an Environment Object taken as the maximum z value minus minimum z value from the bounding box of the geometry ",""],"inputs":[{"inputName":"environmentObject","namespace":"BH.oM.Environment","memberName":"IEnvironmentObject","isGeneric":"0","descriptionParts":["Any object implementing the IEnvironmentObject interface that can have an altitude range ","This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The altitude range of the object ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Altitude","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the minimum altitude of an Environment Object as the minimum z value from the bounding box of the geometry ",""],"inputs":[{"inputName":"environmentObject","namespace":"BH.oM.Environment","memberName":"IEnvironmentObject","isGeneric":"0","descriptionParts":["Any object implementing the IEnvironmentObject interface that can have an altitude ","This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The altitude of the object ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Thickness","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the thickness of an Environment Panel based on its construction ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The total thickness of the panel as a result of the construction placed on it ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Thickness","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the thickness of an Environment Opening based on its construction ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["An Environment Opening ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The thickness of the opening as the largest thickness between the frame construction and opening construction ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Thickness","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the thickness of an Environment Opening based on its construction ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["An Environment Opening ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0},{"inputName":"useFrameConstruction","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Determine whether to use the frame construction for thickness or the glazing construction. Default false - default will be to use the glazing construction ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The thickness of the opening ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"UnconnectedEdges","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Edges that are unconnected in a space ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to check if the edges are all connected ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels representing a single space ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Edge","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Edges that are not properly connected with the rest of the space ","This is a List<Edge>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"ElementsNotMatched","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels which are not yet associated to spaces and are not shading panels ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"panelsAsSpaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A nested collection of Environment Panels representing spaces currently built ","This is a List<List<Panel>>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panel objects which are not associated to a space ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"ExposedToSun","assemblyName":"Environment_Engine.dll","descriptionParts":["Defines whether an Environment Panel is exposed to the Sun or not ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the panel is on the exterior of the model and has the potential to be exposed to the sun, false otherwise ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FloorGeometry","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the floor geometry of a space represented by Environment Panels as a BHoM Geometry Polyline ",""],"inputs":[{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels that represent a closed space ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance for BooleanUnion of the floor lines, default set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["BHoM Geometry Polyline representing the floor of the space ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Height","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the height of a generic Environment Object ",""],"inputs":[{"inputName":"environmentObject","namespace":"BH.oM.Environment","memberName":"IEnvironmentObject","isGeneric":"0","descriptionParts":["Any object implementing the IEnvironmentObject interface that can have its height queried ","This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The height of the environment object ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Height","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the height of an Environment Panel ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The height of the panel ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Height","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the height of an Environment Opening ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["An Environment Opening ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The height of the opening ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Height","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the height of a BHoM Geometry ICurve based on the bounding box of the curve ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["BHoM Geometry ICurve ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The height of the curve based on the difference in z values for its bounding box ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"IsCoPlanar","assemblyName":"Environment_Engine.dll","descriptionParts":["Determines whether the two Environment Panels are co-planar ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"panelToCompare","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to compare against ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the two panels are co-planar, false otherwise ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"UniqueConstructions","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of unique constructions from a collection of Environment Panels ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"includeConstructionName","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Flag to determine whether or not to use the construction name as a parameter of uniqueness. Default false ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of unique Construction objects ","This is a List<Construction>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"UniqueConstructions","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of unique constructions from a collection of Environment Openings ",""],"inputs":[{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings ","This is a List<Opening>"],"isRequired":1,"isInterface":0},{"inputName":"includeConstructionName","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Flag to determine whether or not to use the construction name as a parameter of uniqueness. Default false ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of unique Construction objects ","This is a List<Construction>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"UniqueConstructions","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of unique constructions from a nested collection of Environment Panels representing spaces ",""],"inputs":[{"inputName":"panelsAsSpaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A nested collection of Environment Panels representing spaces ","This is a List<List<Panel>>"],"isRequired":1,"isInterface":0},{"inputName":"includeConstructionName","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Flag to determine whether or not to use the construction name as a parameter of uniqueness. Default false ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of unique Construction objects ","This is a List<Construction>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"UniqueMaterials","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of unique materials from a collection of constructions ",""],"inputs":[{"inputName":"constructions","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Constructions ","This is a List<Construction>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Materials","memberName":"Material","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of unique Material objects ","This is a List<Material>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"UniqueMaterials","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of unique materials from a collection of Environment Panels ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Materials","memberName":"Material","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of unique Material objects ","This is a List<Material>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"UniqueMaterials","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of unique materials from a nested collection of Environment Panels representing spaces ",""],"inputs":[{"inputName":"panelsAsSpaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A nested collection of Environment Panels representing spaces ","This is a List<List<Panel>>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Materials","memberName":"Material","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of unique Material objects ","This is a List<Material>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"UniqueOpeningInstances","assemblyName":"Environment_Engine.dll","descriptionParts":["BH.Engine.Environment Query, Returns a collection of Environment Openings that are unique by their instance data from their origin context fragment ",""],"inputs":[{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Opening to filter ","This is a List<Opening>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Opening objects with one per instance ","This is a List<Opening>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"UniquePanelInstances","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels that are unique by their instance data from their origin context fragment ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to filter ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panel objects with one per instance ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"UniquePanels","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of unique Environment Panels from a list of panels representing spaces ",""],"inputs":[{"inputName":"panelsAsSpaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A collection of Environment Panels that represent spaces ","This is a List<List<Panel>>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panel without duplicates ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"UValue","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the UValue of a construction ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isGeneric":"0","descriptionParts":["A Construction object ","This is a BH.oM.Physical.Constructions.Construction"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The uValue of the construction ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Vertices","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of vertices for an Environment Panel ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Geometry Points which are the vertices of the panel ","This is a List<Point>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Vertices","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of vertices for a collection of Environment Panels representing a space ",""],"inputs":[{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels representing a space ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Geometry Points which are the vertices of the space ","This is a List<Point>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"InternalElements2D","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the internal 2D elements of an Environment Panel ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of internal 2D elements ","This is a List<IElement2D> ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"OutlineElements1D","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the outline 1D elements of an Environment Opening ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["An Environment Opening ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of outline 1D elements ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"OutlineElements1D","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the outline 1D elements of an Environment Panel ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of outline 1D elements ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"OutlineElements1D","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the outline 1D elements of an Environments Space ",""],"inputs":[{"inputName":"space","namespace":"BH.oM.Environment.Elements","memberName":"Space","isGeneric":"0","descriptionParts":["An Environments Space with perimeter curve ","This is a BH.oM.Environment.Elements.Space: ","A space object is an analytical depiction of a room defined by its environmental conditions (internal gains)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of outline 1D elements ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"IdentifyOverlaps","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels overlap with the given element ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to check against ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"panelsToCompare","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to find overlaps from ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels that overlap with the first panel ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Inclination","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the inclination of a generic Environment Object ",""],"inputs":[{"inputName":"environmentObject","namespace":"BH.oM.Environment","memberName":"IEnvironmentObject","isGeneric":"0","descriptionParts":["Any object implementing the IEnvironmentObject interface that can have its inclination queried ","This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The inclination of the environment object ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"IsClosed","assemblyName":"Environment_Engine.dll","descriptionParts":["Determines whether the space is closed by ensuring all edges are connected to other elements ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Environment Panels that represent the space to check ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the space is closed, false otherwise ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"IsContaining","assemblyName":"Environment_Engine.dll","descriptionParts":["Defines whether an Environment Panel is contained by at least one group of panels representing spaces ",""],"inputs":[{"inputName":"panelsAsSpaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A nested collection of Environment Panels representing spaces ","This is a List<List<Panel>>"],"isRequired":1,"isInterface":0},{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The Environment Panel to be checked to see if it is contained by the panelsAsSpaces ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the panel is contained by at least one group of panels, false if it is not ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"IsContaining","assemblyName":"Environment_Engine.dll","descriptionParts":["Defines whether an a BHoM Geometry Point is contained within a list of Points ",""],"inputs":[{"inputName":"pts","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Geometry Points ","This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"pt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The point being checked to see if it is contained within the list of points ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the point is contained within the list, false if it is not ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"IsContaining","assemblyName":"Environment_Engine.dll","descriptionParts":["Defines whether an Environment Panel contains a provided point ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to check with ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"pt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The point being checked to see if it is contained within the bounds of the panel ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"acceptOnEdges","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Decide whether to allow the point to sit on the edge of the panel, default false ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the point is contained within the panel, false if it is not ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"IsContaining","assemblyName":"Environment_Engine.dll","descriptionParts":["Defines whether a collection of Environment Panels contains a provided point ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to check with ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The point being checked to see if it is contained within the bounds of the panels ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"acceptOnEdges","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Decide whether to allow the point to sit on the edge of the panel, default false ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the point is contained within at least one of the panels, false if it is not ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"IsExternal","assemblyName":"Environment_Engine.dll","descriptionParts":["Determines whether the Environment Panel is externally facing ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the panel is externally facing, false otherwise ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"IsIdentical","assemblyName":"Environment_Engine.dll","descriptionParts":["Defines whether two panels are geometrically identical ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"panelToCompare","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to compare with the first panel ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the two panels are geometrically identical, false if not ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"IsInternal","assemblyName":"Environment_Engine.dll","descriptionParts":["Determines whether the Environment Panel is internally facing ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the panel is internally facing, false otherwise ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"NormalAwayFromSpace","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns whether the normal of a given Environment Panel is facing away from the containing space ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to check ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels which represent a single space ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance for planar checks, default set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the normal of the panel is facing away from the space, false otherwise ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"NormalAwayFromSpace","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns whether the normal of a given polyline is facing away from the containing space ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["A BHoM Geometry Polyline to check ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels which represent a single space ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance for planar checks, default set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the normal of the polyline is facing away from the space, false otherwise ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Orientation","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the angle to north of a given environmental object on an xyPlane ",""],"inputs":[{"inputName":"environmentObject","namespace":"BH.oM.Environment","memberName":"IEnvironmentObject","isGeneric":"0","descriptionParts":["Any object implementing the IEnvironmentObject interface that can have its orientation queried ","This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"],"isRequired":1,"isInterface":1},{"inputName":"northAngle","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The angle in radians for north. Default is 0. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"returnAzimuthAngle","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Set to true to return the azimuth angle from north, instead of the angle between north and the object normal. Default is false. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Nullable","namespace":"System","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The orientation of the Environment Object ","This is a Nullable<Double>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"PointsMatch","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns whether a list of points contains every point in the second list - order is not relevant. Done by measuring the square distance between points and finding those that are under the square distance tolerance. ",""],"inputs":[{"inputName":"controlPoints","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Geometry Points as the control list. ","This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"measurePoints","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Geometry Points as the measure list. ","This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"squareTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The tolerance for how close points can be to be the same point. Points who's distance is greater than this tolerance are considered to be separate points. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if all of the measurePoints are within the controlPoints list (independent of list order), false otherwise. ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"PointInSpace","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a BHoM Geometry Point that is in the provided space ",""],"inputs":[{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Environment Panels that represent a single space to get the point in ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["A point in the space ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"StoreyGeometry","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the storey geometry for a given level ",""],"inputs":[{"inputName":"level","namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isGeneric":"0","descriptionParts":["An Setting Out Level to get the geometry for ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."],"isRequired":1,"isInterface":0},{"inputName":"panelsAsSpaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A nested collection of Environment Panels representing spaces ","This is a List<List<Panel>>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["A BHoM Geometry Polyline outlining the geometry of the level ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Volume","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a volume from a collection of Environment Panels representing a space ",""],"inputs":[{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels representing a space ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["A volume for the space ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Azimuth","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the azimuth of a given environmental object ",""],"inputs":[{"inputName":"environmentObject","namespace":"BH.oM.Environment","memberName":"IEnvironmentObject","isGeneric":"0","descriptionParts":["Any object implementing the IEnvironmentObject interface that can have its azimuth queried ","This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"],"isRequired":1,"isInterface":1},{"inputName":"refVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["The reference vector for querying the azimuth from the object ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The azimuth of the Environment Object ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Azimuth","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the azimuth of a BHoM Geometry Polyline ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["A BHoM Geometry Polyline ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"refVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["The reference vector for querying the azimuth from the polyline ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The azimuth of the polyline ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Tilt","assemblyName":"Environment_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"environmentObject","namespace":"BH.oM.Environment","memberName":"IEnvironmentObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Tilt","assemblyName":"Environment_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Tilt","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the tilt of an Environment Object ",""],"inputs":[{"inputName":"environmentObject","namespace":"BH.oM.Environment","memberName":"IEnvironmentObject","isGeneric":"0","descriptionParts":["Any object implementing the IEnvironmentObject interface that can have its tilt queried ","This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"],"isRequired":1,"isInterface":1},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance for calculating discontinuity points, default is set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Angle tolerance for calculating discontinuity points, default is set to the value defined by BH.oM.Geometry.Tolerance.Angle ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The tilt of the Environment Object ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Tilt","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the tilt of a BHoM Geometry Polyline ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["The BHoM Geometry Polyline having its tilt queried ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance for calculating discontinuity points, default is set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Angle tolerance for calculating discontinuity points, default is set to the value defined by BH.oM.Geometry.Tolerance.Angle ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The tilt of the polyline ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Bounds","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the bounding box of an Environment Panel ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to get the bounding box of ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The bounding box of the panel ","This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Width","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the width of a generic Environment Object ",""],"inputs":[{"inputName":"environmentObject","namespace":"BH.oM.Environment","memberName":"IEnvironmentObject","isGeneric":"0","descriptionParts":["Any object implementing the IEnvironmentObject interface that can have its width queried ","This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The width of the environment object ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Width","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the width of an Environment Panel ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The width of the panel ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Width","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the width of an Environment Opening ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["An Environment Opening ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The width of the opening ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Width","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the width of a BHoM Geometry ICurve based on the bounding box of the curve ",""],"inputs":[{"inputName":"panelCurve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["BHoM Geometry ICurve ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The width of the curve based on the difference in XY values for its bounding box ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Absorptance","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the absorptance of a construction ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isGeneric":"0","descriptionParts":["A Construction object ","This is a BH.oM.Physical.Constructions.Construction"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The total absorptance of all materials on the construction ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Absorptance","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the absorptance of a layer ",""],"inputs":[{"inputName":"layer","namespace":"BH.oM.Physical.Constructions","memberName":"Layer","isGeneric":"0","descriptionParts":["A Layer object ","This is a BH.oM.Physical.Constructions.Layer: ","A layer object with given material and thickness"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The absorptance of the material on the layer ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Absorptance","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the absorptance of a material calculated as 1 minus the maximum emissivity (external and internal) ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["A Material object ","This is a BH.oM.Physical.Materials.Material"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The absorptance of the material ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"BottomLeft","assemblyName":"Environment_Engine.dll","descriptionParts":["Gets the bottom left most point of a panel when looking from within the space to the outside ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The Environment Panel to get the bottom left most point of ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels representing a single space ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The bottom left most point of the panel ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"BottomLeft","assemblyName":"Environment_Engine.dll","descriptionParts":["Gets the bottom left most point of a polyline when looking from within the space to the outside ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["The BHoM Geometry Polyline to get the bottom left most point of ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels representing a single space ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The bottom left most point of the panel ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"BottomRight","assemblyName":"Environment_Engine.dll","descriptionParts":["Gets the bottom right most point of a panel when looking from within the space to the outside ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The Environment Panel to get the bottom right most point of ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels representing a single space ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The bottom right most point of the panel ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"BottomRight","assemblyName":"Environment_Engine.dll","descriptionParts":["Gets the bottom right most point of a polyline when looking from within the space to the outside ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["The BHoM Geometry Polyline to get the bottom right most point of ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels representing a single space ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The bottom right most point of the panel ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"ClosedSpaces","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a nested collection of Environment Panels that represent fully closed spaces ",""],"inputs":[{"inputName":"panelsAsSpaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A nested collection of Environment Panels representing spaces ","This is a List<List<Panel>>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A nested collection of Environment Panels that represent fully closed spaces ","This is a List<List<Panel>>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"ConnectedSpaceName","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the name of the space the panels are enclosing ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The space name the panels are jointly connected to ","This is a String"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterByAdjacencies","assemblyName":"Environment_Engine.dll","descriptionParts":["Filters a list of panels based on the number of adjacencies they have ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A list of panels to be filtered ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"adjacencies","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of Adjacencies to filter by ","This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A list of panels which have the same number of adjacencies ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterOpeningsByElementID","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Openings that match the given element ID ",""],"inputs":[{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings ","This is a List<Opening>"],"isRequired":1,"isInterface":0},{"inputName":"elementID","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The Element ID to filter by ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Opening objects that match the element ID ","This is a List<Opening>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterOpeningsByElementID","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Openings that match the given element ID ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to query for openings ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"elementID","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The Element ID to filter by ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Opening objects that match the element ID ","This is a List<Opening>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterOpeningsByLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Opening that sit entirely on a given levels elevation ",""],"inputs":[{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings to filter ","This is a List<Opening>"],"isRequired":1,"isInterface":0},{"inputName":"searchLevel","namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isGeneric":"0","descriptionParts":["The Setting Out Level to search by ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings which match the given level ","This is a List<Opening>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterOpeningsByLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Openings that sit entirely on a given levels elevation ",""],"inputs":[{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings to filter ","This is a List<Opening>"],"isRequired":1,"isInterface":0},{"inputName":"searchLevel","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The level to search by ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings which match the given level ","This is a List<Opening>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterOpeningsByMaximumLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Openings where the maximum level of the opening matches the elevation of the given search level ",""],"inputs":[{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings to filter ","This is a List<Opening>"],"isRequired":1,"isInterface":0},{"inputName":"searchLevel","namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isGeneric":"0","descriptionParts":["The Setting Level to search by ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings where the maximum level meets the search level ","This is a List<Opening>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterOpeningsByMaximumLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Openings where the maximum level of the panel matches the elevation of the given search level ",""],"inputs":[{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings to filter ","This is a List<Opening>"],"isRequired":1,"isInterface":0},{"inputName":"searchLevel","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The level to search by ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings where the maximum level meets the search level ","This is a List<Opening>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterOpeningsByMinimumLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Openings where the minimum level of the Opening matches the elevation of the given search level ",""],"inputs":[{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings to filter ","This is a List<Opening>"],"isRequired":1,"isInterface":0},{"inputName":"searchLevel","namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isGeneric":"0","descriptionParts":["The Setting Out Level to search by ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings where the minimum level meets the search level ","This is a List<Opening>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterOpeningsByMinimumLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Openings where the minimum level of the Opening matches the elevation of the given search level ",""],"inputs":[{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Opening to filter ","This is a List<Opening>"],"isRequired":1,"isInterface":0},{"inputName":"searchLevel","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The level to search by ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Opening where the minimum level meets the search level ","This is a List<Opening>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterOpeningsByName","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Openings that match the given opening name ",""],"inputs":[{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings ","This is a List<Opening>"],"isRequired":1,"isInterface":0},{"inputName":"openingName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The Opening Name to filter by ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Opening objects that match the name ","This is a List<Opening>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterOpeningsByType","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Openings that match the provided type as the first output, and the openings which don't match the provided type as the second output ",""],"inputs":[{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings ","This is a List<Opening>"],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"BH.oM.Environment.Elements","memberName":"OpeningType","isGeneric":"0","descriptionParts":["An Opening Type to filter by from the Opening Type enum ","This is a BH.oM.Environment.Elements.OpeningType: ","The type of cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight) ","Enum values: ","-Undefined ","-CurtainWall ","-Door ","-Frame ","-Glazing ","-Hole ","-Rooflight ","-RooflightWithFrame ","-Window ","-WindowWithFrame ","-VehicleDoor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<BH.oM.Environment.Elements.Opening>, System.Collections.Generic.List<BH.oM.Environment.Elements.Opening>>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterPanelsByElementID","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels that match the given element ID ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"elementID","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The Element ID to filter by ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panel objects that match the element ID ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterPanelsByGeometry","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels that match the given geometry ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"searchGeometry","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The BHoM Geometry ICurve representation to search by ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panel where the external edges match the given search geometry ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterPanelsByLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels that sit entirely on a given levels elevation ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to filter ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"searchLevel","namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isGeneric":"0","descriptionParts":["The Setting Out Level to search by ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels which match the given level ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterPanelsByLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels that sit entirely on a given levels elevation ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to filter ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"searchLevel","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The level to search by ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels which match the given level ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterPanelsByMaximumLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels where the maximum level of the panel matches the elevation of the given search level ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to filter ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"searchLevel","namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isGeneric":"0","descriptionParts":["The Setting Level to search by ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels where the maximum level meets the search level ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterPanelsByMaximumLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels where the maximum level of the panel matches the elevation of the given search level ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to filter ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"searchLevel","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The level to search by ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels where the maximum level meets the search level ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterPanelsByMinimumLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels where the minimum level of the panel matches the elevation of the given search level ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to filter ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"searchLevel","namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isGeneric":"0","descriptionParts":["The Setting Out Level to search by ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels where the minimum level meets the search level ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterPanelsByMinimumLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels where the minimum level of the panel matches the elevation of the given search level ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to filter ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"searchLevel","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The level to search by ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels where the minimum level meets the search level ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterPanelsByName","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels that are match the given name ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the panel to filter by ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panel that match the given name ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterPanelsByTilt","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels that are match the given tilt ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"tilt","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The tilt to filter by ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panel that match the given tilt ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterPanelsByTiltRange","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels that are tilted between the given tilt range ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"minTilt","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The minimum tilt to filter by ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"maxTilt","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The maximum tilt to filter by ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panel that are between the given tilt range ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterPanelsNotByType","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels that DO NOT match a given Panel Type ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"BH.oM.Environment.Elements","memberName":"PanelType","isGeneric":"0","descriptionParts":["A Panel Type to filter by from the Panel Type enum ","This is a BH.oM.Environment.Elements.PanelType: ","The type of environmental surface (e.g. Wall, Floor, Roof) ","Enum values: ","-Undefined ","-Adiabatic ","-Air ","-Ceiling ","-CurtainWall ","-Floor ","-FloorExposed ","-FloorInternal ","-FloorRaised ","-Roof ","-Shade ","-SlabOnGrade ","-SolarPanel ","-UndergroundCeiling ","-UndergroundSlab ","-UndergroundWall ","-Wall ","-WallExternal ","-WallInternal"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panel that DO NOT match the given type ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterPanelsByType","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels that match the provided type as the first output, and the panels which don't match the provided type as the second output ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"BH.oM.Environment.Elements","memberName":"PanelType","isGeneric":"0","descriptionParts":["A Panel Type to filter by from the Panel Type enum ","This is a BH.oM.Environment.Elements.PanelType: ","The type of environmental surface (e.g. Wall, Floor, Roof) ","Enum values: ","-Undefined ","-Adiabatic ","-Air ","-Ceiling ","-CurtainWall ","-Floor ","-FloorExposed ","-FloorInternal ","-FloorRaised ","-Roof ","-Shade ","-SlabOnGrade ","-SolarPanel ","-UndergroundCeiling ","-UndergroundSlab ","-UndergroundWall ","-Wall ","-WallExternal ","-WallInternal"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<BH.oM.Environment.Elements.Panel>, System.Collections.Generic.List<BH.oM.Environment.Elements.Panel>>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterResultsByObjectID","assemblyName":"Environment_Engine.dll","descriptionParts":["Filter a collection of Environment MeshResult objects to those which match the given object ID ",""],"inputs":[{"inputName":"results","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Results.Mesh","memberName":"MeshResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment MeshResult objects to filter ","This is a List<MeshResult>"],"isRequired":1,"isInterface":0},{"inputName":"objectID","namespace":"System","memberName":"IComparable","isGeneric":"0","descriptionParts":["The Object ID to filter by ","This is a IComparable ","This can be of the following types: PullType, PushType, GraphLinkDirection, EventType, CallerUpdateCause, ParamKind, Frequency, RelationDirection, BayType, EvalueViewType, SeatingBlockType, StadiaType, ImageFormat, InterpolationMethod, Reduce, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Results.Mesh","memberName":"MeshResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Environment MeshResults which have the provided object ID ","This is a List<MeshResult>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterResultsByResultCase","assemblyName":"Environment_Engine.dll","descriptionParts":["Filter a collection of Environment MeshResult objects to those which match the given result case ",""],"inputs":[{"inputName":"results","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Results.Mesh","memberName":"MeshResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment MeshResult objects to filter ","This is a List<MeshResult>"],"isRequired":1,"isInterface":0},{"inputName":"resultCase","namespace":"System","memberName":"IComparable","isGeneric":"0","descriptionParts":["The Result Case to filter by ","This is a IComparable ","This can be of the following types: PullType, PushType, GraphLinkDirection, EventType, CallerUpdateCause, ParamKind, Frequency, RelationDirection, BayType, EvalueViewType, SeatingBlockType, StadiaType, ImageFormat, InterpolationMethod, Reduce, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Results.Mesh","memberName":"MeshResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Environment MeshResults which have the provided result case ","This is a List<MeshResult>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterResultsByResultType","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Simulation Results by Profile Result Type ",""],"inputs":[{"inputName":"results","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Results","memberName":"SimulationResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Simulation Results ","This is a List<SimulationResult>"],"isRequired":1,"isInterface":0},{"inputName":"resultType","namespace":"BH.oM.Environment.Results","memberName":"ProfileResultType","isGeneric":"0","descriptionParts":["The Profile Result Type filter ","This is a BH.oM.Environment.Results.ProfileResultType ","Enum values: ","-Undefined ","-ApertureFlowIn ","-ApertureFlowOut ","-ApertureOpening ","-CloudCover ","-CondensationExternal ","-CondensationInternal ","-CondensationInterstitial ","-ConductionExternal ","-ConductionExternalGlazing ","-ConductionExternalOpaque ","-ConductionInternal ","-ConvectionExternal ","-ConvectionInternal ","-GainAirMovement ","-GainEquipmentLatent ","-GainEquipmentSensible ","-GainInfiltrationVentilation ","-GainInternalSolar ","-...And more"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Results","memberName":"SimulationResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of filtered simulation results ","This is a List<SimulationResult>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterResultsByTypeUnitResultType","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Simulation Results that match both Simulation Result Type and Profile Result Unit and Profile Result Type ",""],"inputs":[{"inputName":"results","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Results","memberName":"SimulationResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Simulation Results ","This is a List<SimulationResult>"],"isRequired":1,"isInterface":0},{"inputName":"simulationType","namespace":"BH.oM.Environment.Results","memberName":"SimulationResultType","isGeneric":"0","descriptionParts":["The Simulation Result Type filter ","This is a BH.oM.Environment.Results.SimulationResultType ","Enum values: ","-Undefined ","-BuildingElementResult ","-BuildingResult ","-SpaceResult"],"isRequired":1,"isInterface":0},{"inputName":"unit","namespace":"BH.oM.Environment.Results","memberName":"ProfileResultUnit","isGeneric":"0","descriptionParts":["The Profile Result Unit filter ","This is a BH.oM.Environment.Results.ProfileResultUnit ","Enum values: ","-Undefined ","-Daily ","-Hourly ","-Value ","-Yearly"],"isRequired":1,"isInterface":0},{"inputName":"resultType","namespace":"BH.oM.Environment.Results","memberName":"ProfileResultType","isGeneric":"0","descriptionParts":["The Profile Result Type filter ","This is a BH.oM.Environment.Results.ProfileResultType ","Enum values: ","-Undefined ","-ApertureFlowIn ","-ApertureFlowOut ","-ApertureOpening ","-CloudCover ","-CondensationExternal ","-CondensationInternal ","-CondensationInterstitial ","-ConductionExternal ","-ConductionExternalGlazing ","-ConductionExternalOpaque ","-ConductionInternal ","-ConvectionExternal ","-ConvectionInternal ","-GainAirMovement ","-GainEquipmentLatent ","-GainEquipmentSensible ","-GainInfiltrationVentilation ","-GainInternalSolar ","-...And more"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Results","memberName":"SimulationResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of filtered simulation results ","This is a List<SimulationResult>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterResultsByType","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Simulation Results by Simulation Result Type ",""],"inputs":[{"inputName":"results","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Results","memberName":"SimulationResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Simulation Results ","This is a List<SimulationResult>"],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"BH.oM.Environment.Results","memberName":"SimulationResultType","isGeneric":"0","descriptionParts":["The Simulation Result Type filter ","This is a BH.oM.Environment.Results.SimulationResultType ","Enum values: ","-Undefined ","-BuildingElementResult ","-BuildingResult ","-SpaceResult"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Results","memberName":"SimulationResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of filtered simulation results ","This is a List<SimulationResult>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterResultsByTypeUnit","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Simulation Results that match both Simulation Result Type and Profile Result Unit ",""],"inputs":[{"inputName":"results","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Results","memberName":"SimulationResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Simulation Results ","This is a List<SimulationResult>"],"isRequired":1,"isInterface":0},{"inputName":"simulationType","namespace":"BH.oM.Environment.Results","memberName":"SimulationResultType","isGeneric":"0","descriptionParts":["The Simulation Result Type filter ","This is a BH.oM.Environment.Results.SimulationResultType ","Enum values: ","-Undefined ","-BuildingElementResult ","-BuildingResult ","-SpaceResult"],"isRequired":1,"isInterface":0},{"inputName":"unit","namespace":"BH.oM.Environment.Results","memberName":"ProfileResultUnit","isGeneric":"0","descriptionParts":["The Profile Result Unit filter ","This is a BH.oM.Environment.Results.ProfileResultUnit ","Enum values: ","-Undefined ","-Daily ","-Hourly ","-Value ","-Yearly"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Results","memberName":"SimulationResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of filtered simulation results ","This is a List<SimulationResult>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FilterResultsByUnit","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Simulation Results by Profile Result Unit ",""],"inputs":[{"inputName":"results","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Results","memberName":"SimulationResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Simulation Results ","This is a List<SimulationResult>"],"isRequired":1,"isInterface":0},{"inputName":"unit","namespace":"BH.oM.Environment.Results","memberName":"ProfileResultUnit","isGeneric":"0","descriptionParts":["The Profile Result Unit filter ","This is a BH.oM.Environment.Results.ProfileResultUnit ","Enum values: ","-Undefined ","-Daily ","-Hourly ","-Value ","-Yearly"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Results","memberName":"SimulationResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of filtered simulation results ","This is a List<SimulationResult>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FloorHeights","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the floor heights for a collection of levels, calculated as the difference between elevations in levels. Levels are sorted by their elevation prior to calculating the floor heights, and the output order will be from lowest elevation floor to highest ",""],"inputs":[{"inputName":"levels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of levels with elevations. The floor height will be calculated as the difference between two consecutive level elevations ","This is a List<Level>"],"isRequired":1,"isInterface":0},{"inputName":"roofHeight","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The height/elevation of the roof the building to provide the floor height for the top-most floor level provided ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of floor heights based on the elevation differences ","This is a List<Double>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FrameFactor","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the Frame Factor of an opening as a decimal representing the percentage of the opening which is made up of frame. Result is between 0 (0% frame) to 1 (100% frame) ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["The Environments opening to query the frame factor from ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The Frame Factor of the opening represented as a decimal ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Geometry","assemblyName":"Environment_Engine.dll","descriptionParts":["Gets the geometry of a Node as a Point. Method required for automatic display in UI packages ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Environment.Analysis","memberName":"Node","isGeneric":"0","descriptionParts":["Node to get the Point from ","This is a BH.oM.Environment.Analysis.Node: ","0D finite element for environmental analysis. Node class contains positional information and is used to build AnalysisGrids and provide links between model geometry and analytical results"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The geometry of the Node ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Geometry","assemblyName":"Environment_Engine.dll","descriptionParts":["Gets the geometry of an Edge as an ICurve ",""],"inputs":[{"inputName":"edge","namespace":"BH.oM.Environment.Elements","memberName":"Edge","isGeneric":"0","descriptionParts":["Edge to get the ICurve from ","This is a BH.oM.Environment.Elements.Edge: ","An environment object used to define an edge of an external boundary (e.g. the edge of an environmental panel or opening)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The geometry of the curve ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Group","assemblyName":"Environment_Engine.dll","descriptionParts":["Groups a collection of Environment Panels by their panel type ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<BH.oM.Environment.Elements.Panel>, System.Collections.Generic.List<BH.oM.Environment.Elements.Panel>, System.Collections.Generic.List<BH.oM.Environment.Elements.Panel>, System.Collections.Generic.List<BH.oM.Environment.Elements.Panel>, System.Collections.Generic.List<BH.oM.Environment.Elements.Panel>, System.Collections.Generic.List<BH.oM.Environment.Elements.Panel>, System.Collections.Generic.List<BH.oM.Environment.Elements.Panel>, System.Collections.Generic.List<BH.oM.Environment.Elements.Panel>, System.Collections.Generic.List<BH.oM.Environment.Elements.Panel>, System.Collections.Generic.List<BH.oM.Environment.Elements.Panel>>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Group","assemblyName":"Environment_Engine.dll","descriptionParts":["Groups a collection of Openings by their opening type ",""],"inputs":[{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Openings ","This is a List<Opening>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<BH.oM.Environment.Elements.Opening>, System.Collections.Generic.List<BH.oM.Environment.Elements.Opening>, System.Collections.Generic.List<BH.oM.Environment.Elements.Opening>, System.Collections.Generic.List<BH.oM.Environment.Elements.Opening>, System.Collections.Generic.List<BH.oM.Environment.Elements.Opening>, System.Collections.Generic.List<BH.oM.Environment.Elements.Opening>, System.Collections.Generic.List<BH.oM.Environment.Elements.Opening>, System.Collections.Generic.List<BH.oM.Environment.Elements.Opening>, System.Collections.Generic.List<BH.oM.Environment.Elements.Opening>, System.Collections.Generic.List<BH.oM.Environment.Elements.Opening>>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"HasMergeablePropertiesWith","assemblyName":"Environment_Engine.dll","descriptionParts":["Evaluates if the two elements non-geometrical data is equal to the point that they could be merged into one object. Environment Edges have no additional data other than their geometry, so this will always return true ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Environment.Elements","memberName":"Edge","isGeneric":"0","descriptionParts":["An Environment Edge to compare the properties of with an other Environment Edge ","This is a BH.oM.Environment.Elements.Edge: ","An environment object used to define an edge of an external boundary (e.g. the edge of an environmental panel or opening)"],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Environment.Elements","memberName":"Edge","isGeneric":"0","descriptionParts":["The Environment Edge to compare with the other Environment Edge. ","This is a BH.oM.Environment.Elements.Edge: ","An environment object used to define an edge of an external boundary (e.g. the edge of an environmental panel or opening)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the Objects non-geometrical property is equal to the point that they could be merged into one object ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"HasMergeablePropertiesWith","assemblyName":"Environment_Engine.dll","descriptionParts":["Evaluates if the two elements non-geometrical data is equal to the point that they could be merged into one object ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to compare the properties of with an other Environment Panel ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The Environment Panel to compare with the other Environment Panel. ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the Objects non-geometrical property is equal to the point that they could be merged into one object ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"HasMergeablePropertiesWith","assemblyName":"Environment_Engine.dll","descriptionParts":["Evaluates if the two elements non-geometrical data is equal to the point that they could be merged into one object ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["An Environment Opening to compare the properties of with an other Environment Opening ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["The Environment Opening to compare with the other Environment Opening. ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the Objects non-geometrical property is equal to the point that they could be merged into one object ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"HasMergeablePropertiesWith","assemblyName":"Environment_Engine.dll","descriptionParts":["Evaluates if the two elements non-geometrical data is equal to the point that they could be merged into one object. Environment Nodes are checked for their ID only ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Environment.Analysis","memberName":"Node","isGeneric":"0","descriptionParts":["An Environment Node to compare the properties of with an other Environment Node ","This is a BH.oM.Environment.Analysis.Node: ","0D finite element for environmental analysis. Node class contains positional information and is used to build AnalysisGrids and provide links between model geometry and analytical results"],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Environment.Analysis","memberName":"Node","isGeneric":"0","descriptionParts":["The Environment Node to compare with the other Environment Node ","This is a BH.oM.Environment.Analysis.Node: ","0D finite element for environmental analysis. Node class contains positional information and is used to build AnalysisGrids and provide links between model geometry and analytical results"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the Objects non-geometrical property is equal to the point that they could be merged into one object ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"HasMergeablePropertiesWith","assemblyName":"Environment_Engine.dll","descriptionParts":["Evaluates if the two elements non-geometrical data is equal to the point that they could be merged into one object ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Environment.Elements","memberName":"Space","isGeneric":"0","descriptionParts":["An Environment Space to compare the properties of with an other Environment Space ","This is a BH.oM.Environment.Elements.Space: ","A space object is an analytical depiction of a room defined by its environmental conditions (internal gains)"],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Environment.Elements","memberName":"Space","isGeneric":"0","descriptionParts":["The Environment Space to compare with the other Environment Space ","This is a BH.oM.Environment.Elements.Space: ","A space object is an analytical depiction of a room defined by its environmental conditions (internal gains)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the Objects non-geometrical property is equal to the point that they could be merged into one object ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"IsLeft","assemblyName":"Environment_Engine.dll","descriptionParts":["Determine whether a point falls on the left side of a line or not. The left side is defined as the left hand side of the line when standing on the start point and looking at the end point ",""],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["The line to determine directionality ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"check","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The point to check against ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the point is on the left hand side of the line. False if it is on the line or on the right hand side ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"MaterialComposition","assemblyName":"Environment_Engine.dll","descriptionParts":["Gets all the Materials a Panel is composed of and in which ratios ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The Panel to get the MaterialComposition from ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["The kind of matter the Panel is composed of and in which ratios ","This is a BH.oM.Physical.Materials.MaterialComposition: ","Defines the make up of an object through a list of Materials as relative proportions of the total solid volume.","There must be the same number of items in both lists, assigning a single Ratio for each Material."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"MaterialComposition","assemblyName":"Environment_Engine.dll","descriptionParts":["Gets all the Materials a Opening is composed of and in which ratios ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["The Opening to get the MaterialComposition from ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["The kind of matter the Opening is composed of and in which ratios ","This is a BH.oM.Physical.Materials.MaterialComposition: ","Defines the make up of an object through a list of Materials as relative proportions of the total solid volume.","There must be the same number of items in both lists, assigning a single Ratio for each Material."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"NewElement1D","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns an instance of an IElement1D from the given object ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["An Environmental Opening object ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The curve to clone ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IElement1D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["A 1D element object ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"NewElement1D","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns an instance of an IElement1D from the given object ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environmental Panel object ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The curve to clone ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IElement1D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["A 1D element object ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"NewElement1D","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns an instance of an IElement1D from the given object ",""],"inputs":[{"inputName":"space","namespace":"BH.oM.Environment.Elements","memberName":"Space","isGeneric":"0","descriptionParts":["An Environment Space object ","This is a BH.oM.Environment.Elements.Space: ","A space object is an analytical depiction of a room defined by its environmental conditions (internal gains)"],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The curve to clone ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IElement1D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["A 1D element object ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"NewInternalElement2D","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns an instance of an IElement2D from the given object ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environmental Panel object ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IElement2D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["A 2D element object ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"NotClosedSpaces","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a nested collection of Environment Panels that represent spaces which aren't fully closed ",""],"inputs":[{"inputName":"panelsAsSpaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A nested collection of Environment Panels representing spaces ","This is a List<List<Panel>>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A nested collection of Environment Panels that represent spaces which aren't fully closed ","This is a List<List<Panel>>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Cardinality","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the cardinal orientation of a given angle, where that angle is related to north at 0 radians ",""],"inputs":[{"inputName":"angleFromNorth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The angle to north in radians (+Ve is interpreted as clockwise from north at 0.0 radians) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"directions","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of cardinal directions into which angles shall be binned (This value should be one of 4, 8, 16 or 32, and is centred about 'north') ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The cardinal direction the angle represents ","This is a String"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"PointsInSpaces","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of BHoM Geometry Points that are in each space ",""],"inputs":[{"inputName":"panelsAsSpaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["The nested collection of Environment Panels that represent the spaces to points in ","This is a List<List<Panel>>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of points in each space ","This is a List<Point>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FindDuplicatePanels","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels that contain duplicates in the given collection ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to search in ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A nested collection of Environment Panels that are duplicates ","This is a List<List<Panel>>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"IsValidLocation","assemblyName":"Environment_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"location","namespace":"BH.oM.Environment.Climate","memberName":"Location","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Climate.Location: ","Defines a uniquely identifiable point on the Earth in standard global Latitude, Longitude and Elevation, coordinate system. Particularly useful for specifying local climate conditions for environmental analysis."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"DateTime","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the date time object from a Space Time ",""],"inputs":[{"inputName":"spaceTime","namespace":"BH.oM.Environment.Climate","memberName":"SpaceTime","isGeneric":"0","descriptionParts":["A space time object defining a point in space and time ","This is a BH.oM.Environment.Climate.SpaceTime: ","Represents a specific moment in time related to a specific location of Earth geometry. Used for obtaining solar positions for specific moments in time at specific points on Earth"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"DateTime","namespace":"System","isGeneric":"0","descriptionParts":["A C# DateTime object with the values from the SpaceTime object ","This is a DateTime"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"DateTime","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the date time object from a Time object ",""],"inputs":[{"inputName":"time","namespace":"BH.oM.Environment.Climate","memberName":"Time","isGeneric":"0","descriptionParts":["A Time object defining a point time for Environmental Analysis ","This is a BH.oM.Environment.Climate.Time: ","An environment object used to describe time for climate analysis"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"DateTime","namespace":"System","isGeneric":"0","descriptionParts":["A C# DateTime object with the values from the Time object ","This is a DateTime"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Level","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the Setting Out Level that the Environment Panel resides on ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to find the level from ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"levels","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Setting Out Levels to search from ","This is a IEnumerable<Level>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Level","namespace":"BH.oM.Geometry.SettingOut","isGeneric":"0","descriptionParts":["The Setting Out Level of the panel ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Level","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the Setting Out Level that the space (represented by a collection of Environment Panels) resides on ",""],"inputs":[{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels that represent a single space to find the level from ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"level","namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isGeneric":"0","descriptionParts":["The Setting Out Level to check against ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Level","namespace":"BH.oM.Geometry.SettingOut","isGeneric":"0","descriptionParts":["The Setting Out Level of the space if the space resides on this level, otherwise returns null if the space does not reside on this level ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Level","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the Setting Out Level that the space (represented by a collection of Environment Panels) resides on ",""],"inputs":[{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels that represent a single space to find the level from ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"levels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Setting Out Levels to search from ","This is a List<Level>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Level","namespace":"BH.oM.Geometry.SettingOut","isGeneric":"0","descriptionParts":["The Setting Out Level of the space ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Levels","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Setting Out Levels from a list of generic BHoM objects ",""],"inputs":[{"inputName":"bhomObjects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of generic BHoM objects ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Setting Out Level objects ","This is a List<Level>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"MaximumLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the maximum level of the given polyline based on the z axis ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["An Environment polyline to find the maximum level from ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The maximum level of the z axis of the polyline ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"MaximumLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the maximum level of the given panel based on the z axis ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to find the maximum level from ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The maximum level of the z axis of the panel ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"MaximumLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the maximum level of the given opening based on the z axis ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["An Environment Opening to find the maximum level from ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The maximum level of the z axis of the opening ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"MinimumLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the minimum level of the given polyline based on the z axis ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["An Environment polyline to find the minimum level from ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The minimum level of the z axis of the polyline ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"MinimumLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the minimum level of the given panel based on the z axis ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to find the minimum level from ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The minimum level of the z axis of the panel ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"MinimumLevel","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the minimum level of the given opening based on the z axis ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["An Environment Opening to find the minimum level from ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The minimum level of the z axis of the opening ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"OpeningsFromElements","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Openings from a collection of Environment Panels ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to query for openings ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Opening objects that match the element ID ","This is a List<Opening>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"OpeningsFromPhysical","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Openings queried from a collection of Physical Objects (windows, doors, etc.) ",""],"inputs":[{"inputName":"physicalOpenings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Elements","memberName":"IOpening","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of Physical Openings to query Environment Openings from ","This is a List<IOpening> ","This can be of the following types: Door, Void, Window"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Openings from Physical Objects ","This is a List<Opening>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"PanelByGuid","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a sinlge Environment Panel that matches the provided filter GUID ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels to filter ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"guid","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["The GUID to filter by ","This is a Guid"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["A single Environment Panel where the BHoM GUID is matching the provided GUID ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"PanelsContainingPoint","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels containing the given search point ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"searchPoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The BHoM Geometry Point to search by ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Set whether or not to accept points on the edge of panels, default false ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Set the distance tolerance for containing a point, default is equal to that given by BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panel where the external edges contain the given search point ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"PanelsFromPhysical","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels queried from a collection of Physical Objects (walls, floors, etc.) ",""],"inputs":[{"inputName":"physicalObjects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Elements","memberName":"ISurface","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of Physical Objects to query Environment Panels from ","This is a List<ISurface> ","This can be of the following types: Roof, Floor, Wall"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels from Physical Objects ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"SolidVolume","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns an Openings solid volume based on its area, and construction thickness ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The Panel to get the volume from ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The Panel solid volume ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"SolidVolume","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns an Openings solid volume based on its area, and construction thickness ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["The Opening to get the volume from ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The Opening solid volume ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"SpaceByName","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Spaces that match the given name ",""],"inputs":[{"inputName":"spaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Space","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Spaces ","This is a List<Space>"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name to filter by ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Space","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Space objects that match the name ","This is a List<Space>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"SpacesByElementID","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Spaces that match the given element ID ",""],"inputs":[{"inputName":"spaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Space","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Spaces ","This is a List<Space>"],"isRequired":1,"isInterface":0},{"inputName":"elementID","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The Element ID to filter by ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Space","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Space objects that match the element ID ","This is a List<Space>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"ToEdges","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Edges from a BHoM Geomtry Polyline ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["A BHoM Geometry ICurve to be split into Environment Edges ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Edge","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Edges ","This is a List<Edge>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"ToEdges","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Edges from a BHoM Geomtry Polyline ",""],"inputs":[{"inputName":"curves","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Geometry ICurve to be split into Environment Edges ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Edge","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Edges ","This is a List<Edge>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"InvalidPanels","assemblyName":"Environment_Engine.dll","descriptionParts":["Return a collection of panels which we identified as Invalid due to wrong data (checks: 1-external adj space, 2-shade check, 3-internal adj space, 4-internal two diff spaces, 5-area to small, 6-segment to short, 7-polyline closed, 8-polyline interesect ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of environment panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"panelArea","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["A min panel area to return warning, default=0.15 ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"panelEdgeLength","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["A minimum panel edge length for valid Panel, smaller value will return warning, default=0.15 ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A collection of panels which are invalid. Grouped in sublist for each of 8 checks that we perform, see description ","This is a List<List<Panel>>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"IsTransparent","assemblyName":"Environment_Engine.dll","descriptionParts":["Determines whether a material is transparent or not ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["A Physical Material ","This is a BH.oM.Physical.Materials.Material"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the material is transparent, false otherwise ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"IsTransparent","assemblyName":"Environment_Engine.dll","descriptionParts":["Determines whether a layer is transparent or not ",""],"inputs":[{"inputName":"layer","namespace":"BH.oM.Physical.Constructions","memberName":"Layer","isGeneric":"0","descriptionParts":["A Physical Layer containing a single material ","This is a BH.oM.Physical.Constructions.Layer: ","A layer object with given material and thickness"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the material on the layer is transparent, false otherwise ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"ToLines","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Lines representing an Environment Edge ",""],"inputs":[{"inputName":"edge","namespace":"BH.oM.Environment.Elements","memberName":"Edge","isGeneric":"0","descriptionParts":["An Environment Edge object ","This is a BH.oM.Environment.Elements.Edge: ","An environment object used to define an edge of an external boundary (e.g. the edge of an environmental panel or opening)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Geometry Line ","This is a List<Line>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"ToLines","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Lines representing a collection of Environment Edges ",""],"inputs":[{"inputName":"edges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Edge","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Edge objects to convert into a collection of lines ","This is a List<Edge>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Geometry Line ","This is a List<Line>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"ToLines","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the external boundary from an Environment Panel as a collection of BHoM Geometry Lines ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to obtain the external boundary from ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Geometry Line ","This is a List<Line>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"ToLines","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the external boundary from an Environment Opening as a collection of BHoM Geometry Lines ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["An Environment Opening to obtain the external boundary from ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Geometry Line ","This is a List<Line>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"ToLines","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the external boundary from a generic Environment Object ",""],"inputs":[{"inputName":"environmentObject","namespace":"BH.oM.Environment","memberName":"IEnvironmentObject","isGeneric":"0","descriptionParts":["Any object implementing the IEnvironmentObject interface that can have its boundaries extracted ","This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Geometry Line ","This is a List<Line>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Polyline","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a Polyline representation of an Environment Edge ",""],"inputs":[{"inputName":"edge","namespace":"BH.oM.Environment.Elements","memberName":"Edge","isGeneric":"0","descriptionParts":["An Environment Edge object ","This is a BH.oM.Environment.Elements.Edge: ","An environment object used to define an edge of an external boundary (e.g. the edge of an environmental panel or opening)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["BHoM Geometry Polyline ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Polyline","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a Polyline representation of a collection of Environment Edges ",""],"inputs":[{"inputName":"edges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Edge","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Edge objects to convert into a single polyline ","This is a List<Edge>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["BHoM Geometry Polyline ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Polyline","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the external boundary from an Environment Panel as a BHoM Geometry Polyline ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to obtain the external boundary from ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["BHoM Geometry Polyline ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Polyline","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the external boundary from an Environment Opening as a BHoM Geometry Polyline ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["An Environment Opening to obtain the external boundary from ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["BHoM Geometry Polyline ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Polyline","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the external boundary from a generic Environment Object ",""],"inputs":[{"inputName":"environmentObject","namespace":"BH.oM.Environment","memberName":"IEnvironmentObject","isGeneric":"0","descriptionParts":["Any object implementing the IEnvironmentObject interface that can have its boundaries extracted ","This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["BHoM Geometry Polyline ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"TopRight","assemblyName":"Environment_Engine.dll","descriptionParts":["Gets the top right most point of a panel when looking from within the space to the outside ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The Environment Panel to get the top right most point of ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels representing a single space ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The top right most point of the panel ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"TopRight","assemblyName":"Environment_Engine.dll","descriptionParts":["Gets the top right most point of a polyline when looking from within the space to the outside ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["The BHoM Geometry Polyline to get the bottom right most point of ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels representing a single space ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The top right most point of the panel ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"ToSpace","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels which are connected to the space name provided ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"spaceName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the space the panels should enclose ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels which have the given space name as a connected space ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"ToSpaces","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a nested collection of Environment Panels which are grouped by the spaces they are connected to ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A nested collection of Environment Panels grouped by the space they enclose ","This is a List<List<Panel>>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Buildings","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Buildings from a list of generic BHoM objects ",""],"inputs":[{"inputName":"bhomObjects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of generic BHoM objects ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Building","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Building objects ","This is a List<Building>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Roughness","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the average roughness of a construction ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isGeneric":"0","descriptionParts":["A Construction object ","This is a BH.oM.Physical.Constructions.Construction"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Roughness","namespace":"BH.oM.Environment.MaterialFragments","isGeneric":"0","descriptionParts":["The average roughness of the construction ","This is a BH.oM.Environment.MaterialFragments.Roughness: ","Required for some calculations, such as determining the convective heat transfer coefficient ","Enum values: ","-Undefined ","-VeryRough ","-MediumRough ","-Rough ","-Smooth ","-MediumSmooth ","-VerySmooth"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Roughness","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the numerical roughness of a material ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["A Material object ","This is a BH.oM.Physical.Materials.Material"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The numerical roughness of the material ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FindFragment","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns an instance of a BHoM Fragment if it exists on the object ",""],"inputs":[{"inputName":"environmentObject","namespace":"BH.oM.Environment","memberName":"IEnvironmentObject","isGeneric":"0","descriptionParts":["A generic Environment object ","This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"],"isRequired":1,"isInterface":1},{"inputName":"fragmentType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The type of fragment to be queried and returned ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"T","namespace":"BH.Engine.Environment","isGeneric":"0","descriptionParts":["The instance of that Fragment if it exists on the object, null otherwise ","This is a BH.Engine.Environment.T"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"MatchPointOn2Of3","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns whether two points match on 2 out of 3 axes ",""],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["A BHoM Geometry Point to compare against ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"comparePoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["A BHoM Geometry Point to compare with ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the two points match on 2 out of 3 axes, false otherwise ","This is a Boolean"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"FindMaterial","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns an instance of a given material type from a layer ",""],"inputs":[{"inputName":"layer","namespace":"BH.oM.Physical.Constructions","memberName":"Layer","isGeneric":"0","descriptionParts":["A Layer object ","This is a BH.oM.Physical.Constructions.Layer: ","A layer object with given material and thickness"],"isRequired":1,"isInterface":0},{"inputName":"materialType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The type of material to get from the layer ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"T","namespace":"BH.Engine.Environment","isGeneric":"0","descriptionParts":["The instance of that material type if it exists on the object, null otherwise ","This is a BH.Engine.Environment.T"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"ObjectsByFragment","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of objects contain the given fragment type ",""],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment","memberName":"IEnvironmentObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of generic Environment objects ","This is a List<IEnvironmentObject> ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"],"isRequired":1,"isInterface":0},{"inputName":"fragmentType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The type of fragment to be queried and returned ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment","memberName":"IEnvironmentObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of generic BHoM objects that contain the provided fragment type ","This is a List<IEnvironmentObject> ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Openings","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Openings from a list of generic BHoM objects ",""],"inputs":[{"inputName":"bhomObjects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of generic BHoM objects ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Opening objects ","This is a List<Opening>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Panels","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Panels from a list of generic BHoM objects ",""],"inputs":[{"inputName":"bhomObjects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of generic BHoM objects ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panel objects ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"RValue","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the RValue of a construction layer ",""],"inputs":[{"inputName":"layer","namespace":"BH.oM.Physical.Constructions","memberName":"Layer","isGeneric":"0","descriptionParts":["A Layer object ","This is a BH.oM.Physical.Constructions.Layer: ","A layer object with given material and thickness"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The rValue of the layer calculated as the layers thickness divided by the materials conductivity ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"UniqueConstructionName","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a unique name for a given IConstruction object based on the material names, and the construction name if the flag is set ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["A physical construction object ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1},{"inputName":"includeConstructionName","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Flag to determine whether or not the construction name itself should be included in the unique name. Default false ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["A unique name for the construction ","This is a String"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"UniqueObjectIDs","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of unique Object IDs from a collection of MeshResult objects ",""],"inputs":[{"inputName":"meshResults","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Results.Mesh","memberName":"MeshResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Mesh Results to obtain the unique object IDs from ","This is a List<MeshResult>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"IComparable","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The collection of unique object IDs from the Mesh Results ","This is a List<IComparable> ","This can be of the following types: PullType, PushType, GraphLinkDirection, EventType, CallerUpdateCause, ParamKind, Frequency, RelationDirection, BayType, EvalueViewType, SeatingBlockType, StadiaType, ImageFormat, InterpolationMethod, Reduce, and more..."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"UniqueResultCases","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of unique Result Cases from a collection of MeshResult objects ",""],"inputs":[{"inputName":"meshResults","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Results.Mesh","memberName":"MeshResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Mesh Results to obtain the unique result cases from ","This is a List<MeshResult>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"IComparable","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The collection of unique result cases from the Mesh Results ","This is a List<IComparable> ","This can be of the following types: PullType, PushType, GraphLinkDirection, EventType, CallerUpdateCause, ParamKind, Frequency, RelationDirection, BayType, EvalueViewType, SeatingBlockType, StadiaType, ImageFormat, InterpolationMethod, Reduce, and more..."]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"UniqueSpaceNames","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of space names the panels are connected to ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of space names the panels are connected to ","This is a List<String>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"AdjacentSpaces","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a nested collection of Environment Panels which contain the search panel ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to find within the search panels ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"panelsAsSpaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["The nested collection of Environment Panels that represent the spaces to search from ","This is a List<List<Panel>>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A nested collection of Environment Panels which contain the search panel ","This is a List<List<Panel>>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Area","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the surface area of an Environment Panel ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel object ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The area of the panel ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Area","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns the floor area of a space represented by Environment Panels ",""],"inputs":[{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels that represent a closed space ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The floor area of the space ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"Spaces","assemblyName":"Environment_Engine.dll","descriptionParts":["Returns a collection of Environment Spaces from a list of generic BHoM objects ",""],"inputs":[{"inputName":"bhomObjects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of generic BHoM objects ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Space","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Space objects ","This is a List<Space>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"CleanSpace","assemblyName":"Environment_Engine.dll","descriptionParts":["Removes panels which do not have a suitable connection to the space (i.e. panels with only 1 connection to the space) ",""],"inputs":[{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels representing a single space ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels representing a single space with incorrect panels removed ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"ClosedShellGeometry","assemblyName":"Environment_Engine.dll","descriptionParts":["Gets the closed shell geometry for a collection of panels representing a space ",""],"inputs":[{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels representing a single space ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Geometry Polylines which represent the shell of the space ","This is a List<Polyline>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"ConstructionByName","assemblyName":"Environment_Engine.dll","descriptionParts":["Gets a collection of constructions matching the given name ",""],"inputs":[{"inputName":"constructions","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of constructions ","This is a List<Construction>"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name to filter by ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of constructions which match the given name ","This is a List<Construction>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"CullDuplicates","assemblyName":"Environment_Engine.dll","descriptionParts":["Removes panels which are duplicates ",""],"inputs":[{"inputName":"panels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels with no duplicates ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Environment","className":"Query","memberName":"CullDuplicates","assemblyName":"Environment_Engine.dll","descriptionParts":["Removes panels which are duplicates from panels representing spaces ",""],"inputs":[{"inputName":"panelsAsSpaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["The nested collection of Environment Panels that represent the spaces to cull duplicates from ","This is a List<List<Panel>>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A nested collection of Environment Panels representing spaces with no duplicates ","This is a List<List<Panel>>"]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Create","memberName":"Diaphragm","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"BH.oM.Adapters.ETABS","memberName":"DiaphragmType","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.ETABS.DiaphragmType ","Enum values: ","-RigidDiaphragm ","-SemiRigidDiaphragm"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Diaphragm","namespace":"BH.oM.Adapters.ETABS.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.ETABS.Elements.Diaphragm"]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Create","memberName":"Pier","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Pier","namespace":"BH.oM.Adapters.ETABS.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.ETABS.Elements.Pier"]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Create","memberName":"Spandrel","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Spandrel","namespace":"BH.oM.Adapters.ETABS.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.ETABS.Elements.Spandrel"]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Compute","memberName":"UpgradeVersion","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"levels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Architecture.Elements","memberName":"Level","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Level>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Level>"]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Compute","memberName":"UpgradeVersion","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"level","namespace":"BH.oM.Architecture.Elements","memberName":"Level","isGeneric":"0","descriptionParts":["This is a BH.oM.Architecture.Elements.Level"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Level","namespace":"BH.oM.Geometry.SettingOut","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Modify","memberName":"SetAutoLengthOffset","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0},{"inputName":"autoLengthOffset","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Bar","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Modify","memberName":"SetAutoLengthOffset","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0},{"inputName":"autoLengthOffset","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":1,"isInterface":0},{"inputName":"rigidZoneFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Bar","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Modify","memberName":"SetDiaphragm","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"panel","namespace":"BH.oM.Structure.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."],"isRequired":1,"isInterface":0},{"inputName":"diaphragm","namespace":"BH.oM.Adapters.ETABS.Elements","memberName":"Diaphragm","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.ETABS.Elements.Diaphragm"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Modify","memberName":"SetInsertionPoint","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0},{"inputName":"barInsertionPoint","namespace":"BH.oM.Adapters.ETABS","memberName":"BarInsertionPoint","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.ETABS.BarInsertionPoint ","Enum values: ","-BottomLeft ","-BottomCenter ","-BottomRight ","-MiddleLeft ","-MiddleCenter ","-MiddleRight ","-TopLeft ","-TopCenter ","-TopRight ","-Centroid ","-ShearCenter"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Bar","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Modify","memberName":"SetInsertionPoint","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0},{"inputName":"barInsertionPoint","namespace":"BH.oM.Adapters.ETABS","memberName":"BarInsertionPoint","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.ETABS.BarInsertionPoint ","Enum values: ","-BottomLeft ","-BottomCenter ","-BottomRight ","-MiddleLeft ","-MiddleCenter ","-MiddleRight ","-TopLeft ","-TopCenter ","-TopRight ","-Centroid ","-ShearCenter"],"isRequired":0,"isInterface":0},{"inputName":"modifyStiffness","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Bar","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Modify","memberName":"SetPier","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"panel","namespace":"BH.oM.Structure.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."],"isRequired":1,"isInterface":0},{"inputName":"pier","namespace":"BH.oM.Adapters.ETABS.Elements","memberName":"Pier","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.ETABS.Elements.Pier"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Modify","memberName":"SetShellType","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ISurfaceProperty","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SurfaceProperties.ISurfaceProperty: ","Base interface for properties for 2D finite element structural objects such as Panels and FEMeshes. ","This can be of the following types: Ribbed, Waffle, ConstantThickness, LoadingPanelProperty"],"isRequired":1,"isInterface":1},{"inputName":"shellType","namespace":"BH.oM.Adapters.ETABS","memberName":"ShellType","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.ETABS.ShellType ","Enum values: ","-ShellThin ","-ShellThick ","-Membrane"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ISurfaceProperty","namespace":"BH.oM.Structure.SurfaceProperties","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SurfaceProperties.ISurfaceProperty: ","Base interface for properties for 2D finite element structural objects such as Panels and FEMeshes. ","This can be of the following types: Ribbed, Waffle, ConstantThickness, LoadingPanelProperty"]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Modify","memberName":"SetSpandrel","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"panel","namespace":"BH.oM.Structure.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."],"isRequired":1,"isInterface":0},{"inputName":"spandrel","namespace":"BH.oM.Adapters.ETABS.Elements","memberName":"Spandrel","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.ETABS.Elements.Spandrel"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Query","memberName":"AutoLengthOffset","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"AutoLengthOffset","namespace":"BH.oM.Adapters.ETABS.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.ETABS.Elements.AutoLengthOffset"]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Query","memberName":"CheckFlipBar","assemblyName":"Etabs_Engine.dll","descriptionParts":["Evaluates if the Bar would have its endpoints flipped on Push to ETABS in ETABS16. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Query","memberName":"Diaphragm","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"panel","namespace":"BH.oM.Structure.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Diaphragm","namespace":"BH.oM.Adapters.ETABS.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.ETABS.Elements.Diaphragm"]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Query","memberName":"ModifyStiffnessInsertionPoint","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Query","memberName":"InsertionPoint","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BarInsertionPoint","namespace":"BH.oM.Adapters.ETABS","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.ETABS.BarInsertionPoint ","Enum values: ","-BottomLeft ","-BottomCenter ","-BottomRight ","-MiddleLeft ","-MiddleCenter ","-MiddleRight ","-TopLeft ","-TopCenter ","-TopRight ","-Centroid ","-ShearCenter"]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Query","memberName":"Pier","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"panel","namespace":"BH.oM.Structure.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Pier","namespace":"BH.oM.Adapters.ETABS.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.ETABS.Elements.Pier"]}},{"namespace":"BH.Engine.Adapters.ETABS","className":"Query","memberName":"Spandrel","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"panel","namespace":"BH.oM.Structure.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Spandrel","namespace":"BH.oM.Adapters.ETABS.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.ETABS.Elements.Spandrel"]}},{"namespace":"BH.Engine.Adapters.ETABS.Structure","className":"Create","memberName":"MassSource","assemblyName":"Etabs_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"elementSelfWeight","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":1,"isInterface":0},{"inputName":"additionalMass","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":1,"isInterface":0},{"inputName":"loadCases","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Loadcase>"],"isRequired":0,"isInterface":0},{"inputName":"caseFactors","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Double>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"MassSource","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.MassSource"]}},{"namespace":"BH.Engine.Excel","className":"Query","memberName":"Explode","assemblyName":"Excel_Engine.dll","descriptionParts":["Get all properties from an object. WARNING This is an array formula and will take up more than one cell! ",""],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Objects to explode ","This is a List<Object>"],"isRequired":1,"isInterface":0},{"inputName":"includePropertyNames","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Include the name of the properties ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"goDeep","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Explode inner objects ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"transpose","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Transpose the resulting table (i.e. one object per column instead of per row) ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Facade","className":"Compute","memberName":"FacadeAreasByConstruction","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns total areas of each unique Construction contained in the provided elements (as per Construction name), as well as the total Frame area (Used for a panel containing openings with FameEdgeProperties). ",""],"inputs":[{"inputName":"elems","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Facade","memberName":"IFacadeObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["elements to find total areas for. ","This is a List<IFacadeObject> ","This can be of the following types: CurtainWall, Opening, Panel"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}]},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<System.Double>, System.Collections.Generic.List<System.String>, System.Double>"]}},{"namespace":"BH.Engine.Facade","className":"Compute","memberName":"ComponentAreas","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns frame and clear opening areas for an Opening. ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Facade.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["Opening to find areas for. ","This is a BH.oM.Facade.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Double, System.Double>"]}},{"namespace":"BH.Engine.Facade","className":"Compute","memberName":"EdgeAdjacencies","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns adjacent edges and elements at a provided frame edge for a collection of panels. ",""],"inputs":[{"inputName":"edge","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["Edge to find adjacencies at. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1},{"inputName":"elems","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["2D elements to use to find edge adjacencies (These should be panels and/or openings). ","This is a List<IElement2D> ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Tolerance is the minimum overlap amount required to consider adjacent. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<BH.oM.Dimensional.IElement1D>, System.Collections.Generic.List<BH.oM.Dimensional.IElement2D>>"]}},{"namespace":"BH.Engine.Facade","className":"Compute","memberName":"AdjacentElements","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns elements adjacent to a provided Element2D from a collection of elements. ",""],"inputs":[{"inputName":"elem","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["Element to find adjacencies at. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1},{"inputName":"refElems","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Elements to use to find element adjacencies. ","This is a List<IElement2D> ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Adjacents elements to the provided element. ","This is a List<IElement2D> ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."]}},{"namespace":"BH.Engine.Facade","className":"Compute","memberName":"AdjacentElements","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns elements adjacent to a provided Element1D from a collection of elements ",""],"inputs":[{"inputName":"elem","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["Element to find adjacencies at ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1},{"inputName":"refElems","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Elements to use to find element adjacencies ","This is a List<IElement2D> ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Adjacents elements to the provided element ","This is a List<IElement2D> ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."]}},{"namespace":"BH.Engine.Facade","className":"Compute","memberName":"UniqueAdjacencies","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns unique adjacent edge and element conditions for a collection of elements, based on their property names. ",""],"inputs":[{"inputName":"elems","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Facade elements to use to find unique edge adjacencies. ","This is a List<IElement2D> ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":0},{"inputName":"splitHorAndVert","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, matching horizontal and vertical adjacencies are counted as unique and labeled. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}]}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}]}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}]}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}]}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<System.String>, System.Collections.Generic.List<System.Collections.Generic.List<BH.oM.Dimensional.IElement1D>>, System.Collections.Generic.List<System.Collections.Generic.List<BH.oM.Dimensional.IElement2D>>, System.Collections.Generic.List<System.Collections.Generic.List<BH.oM.Dimensional.IElement1D>>, System.Collections.Generic.List<System.Collections.Generic.List<BH.oM.Dimensional.IElement2D>>>"]}},{"namespace":"BH.Engine.Facade","className":"Modify","memberName":"OffsetVariable","assemblyName":"Facade_Engine.dll","descriptionParts":["Creates an offset of a curve. Works only on planar curves ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"offsets","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Offset distances (Length must match count of curves in the PolyCurve). Positive value offsets outside of a curve. If normal is given then offsets to the right with normal pointing up and direction of a curve pointing forward ","This is a List<Double>"],"isRequired":1,"isInterface":0},{"inputName":"normal","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Normal of a plane for offset operation, not needed for closed curves ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"tangentExtensions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Resulting offset ","This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Facade","className":"Query","memberName":"AdjacencyID","assemblyName":"Facade_Engine.dll","descriptionParts":["Creates adjacency ID from adjacency elements. ",""],"inputs":[{"inputName":"edges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Adjacency edges. ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":0},{"inputName":"elems","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Adjacency elements. ","This is a List<IElement2D> ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated name of the adjacency. ","This is a String"]}},{"namespace":"BH.Engine.Facade","className":"Query","memberName":"Depth","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns total depth of a frame edge property ",""],"inputs":[{"inputName":"frameEdgeProp","namespace":"BH.oM.Facade.SectionProperties","memberName":"FrameEdgeProperty","isGeneric":"0","descriptionParts":["FrameEdgeProperty to get total profile width of ","This is a BH.oM.Facade.SectionProperties.FrameEdgeProperty: ","Frame edge (eg mullion, window jamb, curtain wall sill, etc) property with list of Profile Section properties that make up the mullion construction."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Total depth of FrameEdgeProperty ","This is a Double"]}},{"namespace":"BH.Engine.Facade","className":"Query","memberName":"FrameGeometry2D","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns 2D Geometry representing the frame's projected elevation extents ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Facade.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["The opening to get the frame geometry for ","This is a BH.oM.Facade.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The projected elevation extents of the frame ","This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Facade","className":"Query","memberName":"SimpleGeometry","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns a simple rectangular geometric representation a frame edge property ",""],"inputs":[{"inputName":"frameEdgeProp","namespace":"BH.oM.Facade.SectionProperties","memberName":"FrameEdgeProperty","isGeneric":"0","descriptionParts":["FrameEdgeProperty to get total profile width of ","This is a BH.oM.Facade.SectionProperties.FrameEdgeProperty: ","Frame edge (eg mullion, window jamb, curtain wall sill, etc) property with list of Profile Section properties that make up the mullion construction."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Simplified geometric representation of the FrameEdgeProperty ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Facade","className":"Query","memberName":"Width","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns total width of a frame edge property ",""],"inputs":[{"inputName":"frameEdgeProp","namespace":"BH.oM.Facade.SectionProperties","memberName":"FrameEdgeProperty","isGeneric":"0","descriptionParts":["FrameEdgeProperty to get total profile width of ","This is a BH.oM.Facade.SectionProperties.FrameEdgeProperty: ","Frame edge (eg mullion, window jamb, curtain wall sill, etc) property with list of Profile Section properties that make up the mullion construction."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Total width of FrameEdgeProperty ","This is a Double"]}},{"namespace":"BH.Engine.Facade","className":"Query","memberName":"WidthIntoOpening","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns total width of a frame edge property ",""],"inputs":[{"inputName":"frameEdgeProp","namespace":"BH.oM.Facade.SectionProperties","memberName":"FrameEdgeProperty","isGeneric":"0","descriptionParts":["FrameEdgeProperty to get total profile width of ","This is a BH.oM.Facade.SectionProperties.FrameEdgeProperty: ","Frame edge (eg mullion, window jamb, curtain wall sill, etc) property with list of Profile Section properties that make up the mullion construction."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Width of FrameEdgeProperty from Opening edge inboard ","This is a Double"]}},{"namespace":"BH.Engine.Facade","className":"Query","memberName":"IsAdjacent","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns if lines are adjacent ",""],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["First crv to check adjacency for ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["Second crv to check adjacency for ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Tolerance to apply to adjacency check ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if provided lines are adjacent ","This is a Boolean"]}},{"namespace":"BH.Engine.Facade","className":"Query","memberName":"IsAdjacentApprox","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns if lines are adjacent ",""],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["First crv to check adjacency for ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["Second crv to check adjacency for ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum overlap length to be considered adjacent (0 = curves only touching at endpoints are included) ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if provided lines are adjacent ","This is a Boolean"]}},{"namespace":"BH.Engine.Facade","className":"Query","memberName":"IIsAdjacent","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns if curves are adjacent ",""],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["First curve to check adjacency for ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["Second curve to check adjacency for ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum overlap length to be considered adjacent (0 = curves only touching at endpoints are included) ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if provided curves are adjacent ","This is a Boolean"]}},{"namespace":"BH.Engine.Facade","className":"Query","memberName":"IIsAdjacent","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns if curves are adjacent ",""],"inputs":[{"inputName":"elem1","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["First element to check adjacency for ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1},{"inputName":"elem2","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["Second element to check adjacency for ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum overlap length to be considered adjacent (0 = curves only touching at endpoints are included) ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if provided elements are adjacent ","This is a Boolean"]}},{"namespace":"BH.Engine.Facade","className":"Query","memberName":"IPrimaryPropertyName","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns the name of an elements primary defining construction property ",""],"inputs":[{"inputName":"elem","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["IElement2d to get construction property name for ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The name of the element's construction property ","This is a String"]}},{"namespace":"BH.Engine.Facade","className":"Query","memberName":"IPrimaryPropertyName","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns the name of an elements primary defining property ",""],"inputs":[{"inputName":"elem","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["IElement1d to get construction property name for ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The name of the element's construction property ","This is a String"]}},{"namespace":"BH.Engine.Facade","className":"Query","memberName":"PrimaryPropertyName","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns the name of a frameEdge's primary defining property ",""],"inputs":[{"inputName":"frameEdge","namespace":"BH.oM.Facade.Elements","memberName":"FrameEdge","isGeneric":"0","descriptionParts":["FrameEdges to get primary property name for ","This is a BH.oM.Facade.Elements.FrameEdge: ","A frame edge (eg mullion, window jamb, curtain wall sill, etc)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The name of the element's construction property ","This is a String"]}},{"namespace":"BH.Engine.Facade","className":"Query","memberName":"PrimaryPropertyName","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns the name of a frameEdge's primary defining property ",""],"inputs":[{"inputName":"edge","namespace":"BH.oM.Analytical.Elements","memberName":"IEdge","isGeneric":"0","descriptionParts":["edge to get primary property name for ","This is a BH.oM.Analytical.Elements.IEdge ","This can be of the following types: Edge, FrameEdge, Edge"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The name of the element's construction property ","This is a String"]}},{"namespace":"BH.Engine.Facade","className":"Query","memberName":"PrimaryPropertyName","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns the name of a panel's construction property ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Facade.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["Panel to get construction property name for ","This is a BH.oM.Facade.Elements.Panel: ","A facade object used to define planar surfaces such as walls"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The name of the element's construction property ","This is a String"]}},{"namespace":"BH.Engine.Facade","className":"Query","memberName":"PrimaryPropertyName","assemblyName":"Facade_Engine.dll","descriptionParts":["Returns the name of an opening's construction property ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Facade.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["Opening to get construction property name for ","This is a BH.oM.Facade.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The name of the element's construction property ","This is a String"]}},{"namespace":"BH.Engine.Facade","className":"Create","memberName":"Opening","assemblyName":"Facade_Engine.dll","descriptionParts":["Creates a facade Opening from a collection of curves forming a closed loop. ",""],"inputs":[{"inputName":"edges","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Closed curve defining the outline of the Opening. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["Construction applied to the Opening. ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":0,"isInterface":1},{"inputName":"frameEdgeProperty","namespace":"BH.oM.Facade.SectionProperties","memberName":"FrameEdgeProperty","isGeneric":"0","descriptionParts":["An optional FrameEdgeProperty to apply to all edges of the opening. ","This is a BH.oM.Facade.SectionProperties.FrameEdgeProperty: ","Frame edge (eg mullion, window jamb, curtain wall sill, etc) property with list of Profile Section properties that make up the mullion construction."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the opening to be created. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Opening","namespace":"BH.oM.Facade.Elements","isGeneric":"0","descriptionParts":["Created Opening. ","This is a BH.oM.Facade.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Rooflight)"]}},{"namespace":"BH.Engine.Facade","className":"Create","memberName":"Panel","assemblyName":"Facade_Engine.dll","descriptionParts":["Creates a Panel from its fundamental parts. ",""],"inputs":[{"inputName":"externalEdges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Facade.Elements","memberName":"FrameEdge","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Edge objects which defines the external boundary of the panel ",""],"isRequired":1,"isInterface":0},{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Facade.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of cutouts or holes in a building surface/panel (e.g. Window, Door, Rooflight) ",""],"isRequired":0,"isInterface":0},{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["A construction object providing layer and material information for the panel ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction ",""],"isRequired":0,"isInterface":1},{"inputName":"panelType","namespace":"BH.oM.Facade.Elements","memberName":"PanelType","isGeneric":"0","descriptionParts":["The type of Panel this is, eg an external wall or spandrel panel. ","This is a BH.oM.Facade.Elements.PanelType: ","The type of surface (e.g. AirGap, Internal Wall, External Wall, etc.) ","Enum values: ","-Undefined ","-AirGap ","-Shade ","-Spandrel ","-WallExternal"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created Panel. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Facade.Elements","isGeneric":"0","descriptionParts":["The created Panel. ","This is a BH.oM.Facade.Elements.Panel: ","A facade object used to define planar surfaces such as walls"]}},{"namespace":"BH.Engine.Facade","className":"Create","memberName":"Panel","assemblyName":"Facade_Engine.dll","descriptionParts":["Creates a Panel from a closed curve defining the outline, any number of closed curves defining openings, and an optional frame edge property to apply to all edges. ",""],"inputs":[{"inputName":"outline","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["A closed Curve defining the outline of the Panel. The ExternalEdges of the Panel will be the subparts of this curve, where each edge will corespond to one curve segment. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of closed curves representing the openings of the Panel. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":0},{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["A construction object providing layer and material information for the panel ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction ",""],"isRequired":0,"isInterface":1},{"inputName":"frameEdgeProperty","namespace":"BH.oM.Facade.SectionProperties","memberName":"FrameEdgeProperty","isGeneric":"0","descriptionParts":["The FrameEdgeProperty to apply to all edges of the panel. ","This is a BH.oM.Facade.SectionProperties.FrameEdgeProperty: ","Frame edge (eg mullion, window jamb, curtain wall sill, etc) property with list of Profile Section properties that make up the mullion construction."],"isRequired":0,"isInterface":0},{"inputName":"panelType","namespace":"BH.oM.Facade.Elements","memberName":"PanelType","isGeneric":"0","descriptionParts":["The type of Panel this is, eg an external wall or spandrel panel. ","This is a BH.oM.Facade.Elements.PanelType: ","The type of surface (e.g. AirGap, Internal Wall, External Wall, etc.) ","Enum values: ","-Undefined ","-AirGap ","-Shade ","-Spandrel ","-WallExternal"],"isRequired":0,"isInterface":0},{"inputName":"openingConstruction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":0,"isInterface":1},{"inputName":"openingFrameEdgeProperty","namespace":"BH.oM.Facade.SectionProperties","memberName":"FrameEdgeProperty","isGeneric":"0","descriptionParts":["The FrameEdgeProperty to apply to all edges of the openings. ","This is a BH.oM.Facade.SectionProperties.FrameEdgeProperty: ","Frame edge (eg mullion, window jamb, curtain wall sill, etc) property with list of Profile Section properties that make up the mullion construction."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created Panel. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Facade.Elements","isGeneric":"0","descriptionParts":["The created Panel. ","This is a BH.oM.Facade.Elements.Panel: ","A facade object used to define planar surfaces such as walls"]}},{"namespace":"BH.Engine.Facade","className":"Create","memberName":"Panel","assemblyName":"Facade_Engine.dll","descriptionParts":["Creates a Panel from a PlanarSurface, creating external edges from the ExternalBoundary and openings from the InternalBoundaries of the PlanarSurface. ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["A planar surface used to define the geometry of the panel, i.e. the external edges and the openings. ","This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isGeneric":"0","descriptionParts":["This is a BH.oM.Physical.Constructions.Construction"],"isRequired":0,"isInterface":0},{"inputName":"frameEdgeProperty","namespace":"BH.oM.Facade.SectionProperties","memberName":"FrameEdgeProperty","isGeneric":"0","descriptionParts":["This is a BH.oM.Facade.SectionProperties.FrameEdgeProperty: ","Frame edge (eg mullion, window jamb, curtain wall sill, etc) property with list of Profile Section properties that make up the mullion construction."],"isRequired":0,"isInterface":0},{"inputName":"panelType","namespace":"BH.oM.Facade.Elements","memberName":"PanelType","isGeneric":"0","descriptionParts":["The type of Panel this is, eg an external wall or spandrel panel. ","This is a BH.oM.Facade.Elements.PanelType: ","The type of surface (e.g. AirGap, Internal Wall, External Wall, etc.) ","Enum values: ","-Undefined ","-AirGap ","-Shade ","-Spandrel ","-WallExternal"],"isRequired":0,"isInterface":0},{"inputName":"openingConstruction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":0,"isInterface":1},{"inputName":"openingFrameEdgeProperty","namespace":"BH.oM.Facade.SectionProperties","memberName":"FrameEdgeProperty","isGeneric":"0","descriptionParts":["This is a BH.oM.Facade.SectionProperties.FrameEdgeProperty: ","Frame edge (eg mullion, window jamb, curtain wall sill, etc) property with list of Profile Section properties that make up the mullion construction."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created Panel. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Facade.Elements","isGeneric":"0","descriptionParts":["The created Panel. ","This is a BH.oM.Facade.Elements.Panel: ","A facade object used to define planar surfaces such as walls"]}},{"namespace":"BH.Engine.Adapters.File","className":"Compute","memberName":"CreateFolders","assemblyName":"File_Engine.dll","descriptionParts":["Creates Directories and subdirectories for the specified path, if they do not exist. E.g. `C:\folder2\folder1` will create both folder2 and folder1 if they do not exist. ",""],"inputs":[{"inputName":"parentFolder","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"active","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Adapters.File","className":"Compute","memberName":"NewFilenameIfExists","assemblyName":"File_Engine.dll","descriptionParts":["If the targetPath points to a file that exists, return the same filepath with appended `- Copy (i)`, where `i` is the first index pointing to a non existing file. ",""],"inputs":[{"inputName":"targetPath","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.File","className":"Compute","memberName":"DirectorySize","assemblyName":"File_Engine.dll","descriptionParts":["Returns the size of the directory. The calculation might take some time. ",""],"inputs":[{"inputName":"directory","namespace":"BH.oM.Adapters.File","memberName":"FSDirectory","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.FSDirectory: ","A FileSystem-hosted Directory. It can include the content of the Directory."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int64","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int64"]}},{"namespace":"BH.Engine.Adapters.File","className":"Convert","memberName":"FromFiling","assemblyName":"File_Engine.dll","descriptionParts":["Converts the provided Directory into a System.IO.DirectoryInfo.","Any `Content` property is lost in this conversion. ",""],"inputs":[{"inputName":"directory","namespace":"BH.oM.Adapters.File","memberName":"FSDirectory","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.FSDirectory: ","A FileSystem-hosted Directory. It can include the content of the Directory."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"DirectoryInfo","namespace":"System.IO","isGeneric":"0","descriptionParts":["This is a DirectoryInfo"]}},{"namespace":"BH.Engine.Adapters.File","className":"Convert","memberName":"FromFiling","assemblyName":"File_Engine.dll","descriptionParts":["Converts the provided File into a System.IO.FileInfo.","Any `Content` property is lost in this conversion. ",""],"inputs":[{"inputName":"file","namespace":"BH.oM.Adapters.File","memberName":"FSFile","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.FSFile: ","A FileSystem-hosted File. It can include the content of the File."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FileInfo","namespace":"System.IO","isGeneric":"0","descriptionParts":["This is a FileInfo"]}},{"namespace":"BH.Engine.Adapters.File","className":"Convert","memberName":"ToFileRequest","assemblyName":"File_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"fdr","namespace":"BH.oM.Adapters.File","memberName":"FileDirRequest","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.FileDirRequest: ","Used to query Directories or Files."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FileRequest","namespace":"BH.oM.Adapters.File","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.FileRequest: ","Used to query Files from a Parent directory."]}},{"namespace":"BH.Engine.Adapters.File","className":"Convert","memberName":"ToFiling","assemblyName":"File_Engine.dll","descriptionParts":["Converts the provided DirectoryInfo into a BH.oM.Adapters.Filing.Directory.","To populate its `Content` property you need to pull the Directory. ",""],"inputs":[{"inputName":"di","namespace":"System.IO","memberName":"DirectoryInfo","isGeneric":"0","descriptionParts":["This is a DirectoryInfo"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FSDirectory","namespace":"BH.oM.Adapters.File","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.FSDirectory: ","A FileSystem-hosted Directory. It can include the content of the Directory."]}},{"namespace":"BH.Engine.Adapters.File","className":"Convert","memberName":"ToFiling","assemblyName":"File_Engine.dll","descriptionParts":["Converts the provided FileInfo into a BH.oM.Adapters.Filing.File.","To populate its `Content` property you need to pull the file. ",""],"inputs":[{"inputName":"fi","namespace":"System.IO","memberName":"FileInfo","isGeneric":"0","descriptionParts":["This is a FileInfo"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FSFile","namespace":"BH.oM.Adapters.File","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.FSFile: ","A FileSystem-hosted File. It can include the content of the File."]}},{"namespace":"BH.Engine.Adapters.File","className":"Convert","memberName":"ToFiling","assemblyName":"File_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"iContainer","namespace":"BH.oM.Adapters.File","memberName":"IContainer","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.IContainer: ","Identifies a Resource (a File or Directory or other) that is locatable and holds some content. ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IFSContainer","namespace":"BH.oM.Adapters.File","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.IFSContainer: ","Identifies a FileSystem-hosted Resource (a File or Directory or other) that holds some content. ","This can be of the following types: FSDirectory, FSFile"]}},{"namespace":"BH.Engine.Adapters.File","className":"Convert","memberName":"ToFiling","assemblyName":"File_Engine.dll","descriptionParts":["Attempts conversion of a generic Resource to a File-system Resource. ",""],"inputs":[{"inputName":"iLocRes","namespace":"BH.oM.Adapters.File","memberName":"ILocatableResource","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.ILocatableResource: ","Identifies a general data Resource, whether a File or a Directory or other, that can be found at a certain location. ","This can be of the following types: Directory, File"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IFSContainer","namespace":"BH.oM.Adapters.File","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.IFSContainer: ","Identifies a FileSystem-hosted Resource (a File or Directory or other) that holds some content. ","This can be of the following types: FSDirectory, FSFile"]}},{"namespace":"BH.Engine.Adapters.File","className":"Create","memberName":"FileDirRequest","assemblyName":"File_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"fullPath","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"includeDirectories","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"includeFiles","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"searchSubdirectories","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"includeFileContents","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"FileDirRequest","namespace":"BH.oM.Adapters.File","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.FileDirRequest: ","Used to query Directories or Files."]}},{"namespace":"BH.Engine.Adapters.File","className":"Modify","memberName":"RelativiseUserPath","assemblyName":"File_Engine.dll","descriptionParts":["If an user path is specified – e.g. containing `C:\Users\SomeUser` – modifies SomeUser to match the current user. ",""],"inputs":[{"inputName":"path","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.File","className":"Modify","memberName":"RemoveContent","assemblyName":"File_Engine.dll","descriptionParts":["Remove content from a file. ",""],"inputs":[{"inputName":"file","namespace":"BH.oM.Adapters.File","memberName":"FSFile","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.FSFile: ","A FileSystem-hosted File. It can include the content of the File."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FSFile","namespace":"BH.oM.Adapters.File","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.FSFile: ","A FileSystem-hosted File. It can include the content of the File."]}},{"namespace":"BH.Engine.Adapters.File","className":"Modify","memberName":"AddContent","assemblyName":"File_Engine.dll","descriptionParts":["Add the input content to the specified oM.Adapters.Filing.File. ",""],"inputs":[{"inputName":"file","namespace":"BH.oM.Adapters.File","memberName":"FSFile","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.FSFile: ","A FileSystem-hosted File. It can include the content of the File."],"isRequired":1,"isInterface":0},{"inputName":"content","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FSFile","namespace":"BH.oM.Adapters.File","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.FSFile: ","A FileSystem-hosted File. It can include the content of the File."]}},{"namespace":"BH.Engine.Adapters.File","className":"Modify","memberName":"ChangeDirectory","assemblyName":"File_Engine.dll","descriptionParts":["Move a file or directory to a new parent directory. ",""],"inputs":[{"inputName":"fileOrDir","namespace":"BH.oM.Adapters.File","memberName":"IFSContainer","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.IFSContainer: ","Identifies a FileSystem-hosted Resource (a File or Directory or other) that holds some content. ","This can be of the following types: FSDirectory, FSFile"],"isRequired":1,"isInterface":1},{"inputName":"to","namespace":"BH.oM.Adapters.File","memberName":"FSDirectory","isGeneric":"0","descriptionParts":["The new parent Directory. ","This is a BH.oM.Adapters.File.FSDirectory: ","A FileSystem-hosted Directory. It can include the content of the Directory."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IFSContainer","namespace":"BH.oM.Adapters.File","isGeneric":"0","descriptionParts":["The moved file object. ","This is a BH.oM.Adapters.File.IFSContainer: ","Identifies a FileSystem-hosted Resource (a File or Directory or other) that holds some content. ","This can be of the following types: FSDirectory, FSFile"]}},{"namespace":"BH.Engine.Adapters.File","className":"Modify","memberName":"NormalisePath","assemblyName":"File_Engine.dll","descriptionParts":["Attempts to normalise a string Path. ",""],"inputs":[{"inputName":"path","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"enableWarning","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.File","className":"Modify","memberName":"IRename","assemblyName":"File_Engine.dll","descriptionParts":["Rename a file or directory. ",""],"inputs":[{"inputName":"fileOrDir","namespace":"BH.oM.Adapters.File","memberName":"IFSContainer","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.IFSContainer: ","Identifies a FileSystem-hosted Resource (a File or Directory or other) that holds some content. ","This can be of the following types: FSDirectory, FSFile"],"isRequired":1,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The new name. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IFSContainer","namespace":"BH.oM.Adapters.File","isGeneric":"0","descriptionParts":["The moved file object. ","This is a BH.oM.Adapters.File.IFSContainer: ","Identifies a FileSystem-hosted Resource (a File or Directory or other) that holds some content. ","This can be of the following types: FSDirectory, FSFile"]}},{"namespace":"BH.Engine.Adapters.File","className":"Modify","memberName":"Rename","assemblyName":"File_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"file","namespace":"BH.oM.Adapters.File","memberName":"FSFile","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.FSFile: ","A FileSystem-hosted File. It can include the content of the File."],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IFSContainer","namespace":"BH.oM.Adapters.File","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.IFSContainer: ","Identifies a FileSystem-hosted Resource (a File or Directory or other) that holds some content. ","This can be of the following types: FSDirectory, FSFile"]}},{"namespace":"BH.Engine.Adapters.File","className":"Modify","memberName":"Rename","assemblyName":"File_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"directory","namespace":"BH.oM.Adapters.File","memberName":"FSDirectory","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.FSDirectory: ","A FileSystem-hosted Directory. It can include the content of the Directory."],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IFSContainer","namespace":"BH.oM.Adapters.File","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.IFSContainer: ","Identifies a FileSystem-hosted Resource (a File or Directory or other) that holds some content. ","This can be of the following types: FSDirectory, FSFile"]}},{"namespace":"BH.Engine.Adapters.File","className":"Modify","memberName":"ProcessFileDirRequest","assemblyName":"File_Engine.dll","descriptionParts":["Get the contents of the file as a string, reading from its location. ",""],"inputs":[{"inputName":"fdr","namespace":"BH.oM.Adapters.File","memberName":"FileDirRequest","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.FileDirRequest: ","Used to query Directories or Files."],"isRequired":1,"isInterface":0},{"inputName":"wildcardPattern","namespace":"System.Management.Automation","memberName":"WildcardPattern&","isGeneric":"0","descriptionParts":["This is a WildcardPattern&"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["The contents of the file. ","This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.File","className":"Query","memberName":"TryGetRegexFromPath","assemblyName":"File_Engine.dll","descriptionParts":["Tells if a filename or path contains a Regex. Also parses for valid BHoM-regex operators, like the single asterisk `*`. ",""],"inputs":[{"inputName":"fullPath","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"regex","namespace":"System.Text.RegularExpressions","memberName":"Regex&","isGeneric":"0","descriptionParts":["This is a Regex&"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.File","className":"Query","memberName":"WildcardsToRegex","assemblyName":"File_Engine.dll","descriptionParts":["Replaces wildcards (such as '*') in the input string, in order to form a proper Regex string. ",""],"inputs":[{"inputName":"str","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.File","className":"Query","memberName":"SortOrder","assemblyName":"File_Engine.dll","descriptionParts":["Sorts the File-system resources following a given sorting order. ",""],"inputs":[{"inputName":"resources","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.File","memberName":"IFSInfo","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<IFSInfo> ","This can be of the following types: FSDirectory, FSFile"],"isRequired":1,"isInterface":0},{"inputName":"sortOrder","namespace":"BH.oM.Adapters.File","memberName":"SortOrder","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.SortOrder ","Enum values: ","-Default ","-ByName ","-BySize ","-ByCreationTime ","-ByLastModifiedTime"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.File","memberName":"IFSInfo","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<IFSInfo> ","This can be of the following types: FSDirectory, FSFile"]}},{"namespace":"BH.Engine.Adapters.File","className":"Query","memberName":"NestingDepth","assemblyName":"File_Engine.dll","descriptionParts":["Get the nesting depth of the input File or Directory, which is the total number of parent folders. ",""],"inputs":[{"inputName":"fileOrDir","namespace":"BH.oM.Adapters.File","memberName":"IFSInfo","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.IFSInfo: ","Identifies a FileSystem Resource with basic information attached.","Rehash of the .NET's base class 'FileSystemInfo' in BHoM flavour. ","This can be of the following types: FSDirectory, FSFile"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.Adapters.File","className":"Query","memberName":"PathCombine","assemblyName":"File_Engine.dll","descriptionParts":["Combines two paths. ",""],"inputs":[{"inputName":"path1","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"path2","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.File","className":"Query","memberName":"PathCombine","assemblyName":"File_Engine.dll","descriptionParts":["Combines multiple string paths. ",""],"inputs":[{"inputName":"paths","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.File","className":"Query","memberName":"IsExistingDir","assemblyName":"File_Engine.dll","descriptionParts":["Whether the string fullPath points to a Directory that exists. ",""],"inputs":[{"inputName":"fullPath","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if points to a Directory, false if it points to a File or if the Directory doesn't exist. ","This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.File","className":"Query","memberName":"IsExistingFile","assemblyName":"File_Engine.dll","descriptionParts":["Whether the string fullPath points to a File that exists. ",""],"inputs":[{"inputName":"fullPath","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if points to a File, false if it points to a Directory or if the file doesn't exist. ","This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.File","className":"Query","memberName":"IsAcyclic","assemblyName":"File_Engine.dll","descriptionParts":["Test whether the file hierarchy is acyclic, i.e. has no loops in it. ",""],"inputs":[{"inputName":"file","namespace":"BH.oM.Adapters.File","memberName":"IFSInfo","isGeneric":"0","descriptionParts":["The file to test. ","This is a BH.oM.Adapters.File.IFSInfo: ","Identifies a FileSystem Resource with basic information attached.","Rehash of the .NET's base class 'FileSystemInfo' in BHoM flavour. ","This can be of the following types: FSDirectory, FSFile"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Whether the file hierachy is Acyclic. ","This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.File","className":"Query","memberName":"IFullPath","assemblyName":"File_Engine.dll","descriptionParts":["Get the full path. If the input is a string path containing wildcard symbols, return only the upper portion of the path that doesn't have any. ",""],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.File","className":"Query","memberName":"Encoding","assemblyName":"File_Engine.dll","descriptionParts":["Try to get the encoding of the file. ",""],"inputs":[{"inputName":"file","namespace":"BH.oM.Adapters.File","memberName":"FSFile","isGeneric":"0","descriptionParts":["The file to get the encoding of. ","This is a BH.oM.Adapters.File.FSFile: ","A FileSystem-hosted File. It can include the content of the File."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Encoding","namespace":"System.Text","isGeneric":"0","descriptionParts":["The encoding of the file if it can be discovered, null if unknown. ","This is a Encoding"]}},{"namespace":"BH.Engine.Adapters.File","className":"Query","memberName":"ContentsAsString","assemblyName":"File_Engine.dll","descriptionParts":["Get the contents of the file as a string, reading from its location. ",""],"inputs":[{"inputName":"file","namespace":"BH.oM.Adapters.File","memberName":"FSFile","isGeneric":"0","descriptionParts":["The file to get the contents of. ","This is a BH.oM.Adapters.File.FSFile: ","A FileSystem-hosted File. It can include the content of the File."],"isRequired":1,"isInterface":0},{"inputName":"encoding","namespace":"BH.oM.Adapters.File","memberName":"Encodings","isGeneric":"0","descriptionParts":["The encoding to use to decode the data. If null (default) discovery will be attempted; defaults to UTF-8 if it can't be discovered. ","This is a BH.oM.Adapters.File.Encodings ","Enum values: ","-FromFile ","-ASCII ","-Unicode ","-UTF7 ","-UTF8 ","-UTF32 ","-BigEndianUnicode"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The contents of the file. ","This is a String"]}},{"namespace":"BH.Engine.Adapters.File","className":"Query","memberName":"ContentsAsByteArray","assemblyName":"File_Engine.dll","descriptionParts":["Get the contents of the file as a byteArray, reading from its location. ",""],"inputs":[{"inputName":"bhomFile","namespace":"BH.oM.Adapters.File","memberName":"FSFile","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.File.FSFile: ","A FileSystem-hosted File. It can include the content of the File."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Byte[]","namespace":"System","isGeneric":"0","descriptionParts":["The contents of the file. ","This is a Byte[]"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"BooleanDifference","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"refLine","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"BooleanDifference","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"lines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"],"isRequired":1,"isInterface":0},{"inputName":"refLines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"BooleanDifference","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"region","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"refRegions","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"BooleanDifference","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"region","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"refRegions","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"PolyCurve","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<PolyCurve>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"BooleanIntersection","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"boxes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"BoundingBox","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<BoundingBox>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"BooleanIntersection","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"refLine","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"BooleanIntersection","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"refLines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"BooleanIntersection","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"lines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"BooleanIntersection","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"region","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"refRegion","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"BooleanIntersection","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"regions","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"BooleanIntersection","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"region","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"refRegion","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"PolyCurve","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<PolyCurve>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"BooleanIntersection","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"regions","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"PolyCurve","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<PolyCurve>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"BooleanUnion","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"refLine","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"BooleanUnion","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"lines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"BooleanUnion","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"regions","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"BooleanUnion","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"regions","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"PolyCurve","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<PolyCurve>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"ClusterCollinear","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"lines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<Line>>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"FibonacciSphere","assemblyName":"Geometry_Engine.dll","descriptionParts":["Map a Fibonacci lattice onto the surface of a sphere and return the vectors to each equidistant sample point ",""],"inputs":[{"inputName":"nSamples","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Number of samples ","This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Vector","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<System.Double>, System.Collections.Generic.List<System.Double>, System.Collections.Generic.List<BH.oM.Geometry.Vector>>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"ClusterCoplanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"planes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Plane","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Plane>"],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Plane","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<Plane>>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"ClusterCoplanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curves","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<Polyline>>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"ClusterCoplanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curves","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"PolyCurve","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<PolyCurve>"],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"PolyCurve","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<PolyCurve>>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"IClusterCoplanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curves","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<ICurve>> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"ConvexHull","assemblyName":"Geometry_Engine.dll","descriptionParts":["Creates a Convex Hull from a list of points. Currently only works for points in the XY plane ",""],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CullDuplicates","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"maxDist","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CollapseToScaledPolyline","assemblyName":"Geometry_Engine.dll","descriptionParts":["Collapses a PolyCurve to a polyline where curved segments are split into Polyline segments for computations. Where their partitioning is based on both their curvature and size, ergo; shorter segment less partitions, very curved segment more partitions ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["The curve to collapse ","This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"relativeAngleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["relativeAngleTolerance is the angleTolerance for a unit circle, the tolerance value will vary by: toleranceScaleFactor over curvature ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"toleranceScaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["toleranceScaleFactor is the value that decides how much the angleTolerance varies due to curvature ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"maxDivisionsPerSegment","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The maximum number of segment each sub-curve can be broken into ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"scale","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["the radius of a baseline circle for the angle tolerance, smaller circles will have less segments and bigger more. Default of 0 means the program will determine an appropriate radius for the PolyCurve ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["A polyline approximating the provided curve ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"DistributeOutlines","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"outlines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<Polyline>>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"DistributeOutlines","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"outlines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<ICurve>> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"MarchingCubes","assemblyName":"Geometry_Engine.dll","descriptionParts":["Computes the contour meshes for the iso-values in the scalar field defined by the mesh and the values. ","The values are assumed to change linearly between vertices. ",""],"inputs":[{"inputName":"mesh3d","namespace":"BH.oM.Geometry","memberName":"Mesh3D","isGeneric":"0","descriptionParts":["Mesh which defines the positions of the values in the scalar field. ","This is a BH.oM.Geometry.Mesh3D: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces, Cells and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"vertexValues","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Value for of scalar field for each vertex in the mesh. ","This is a List<Double>"],"isRequired":1,"isInterface":0},{"inputName":"isoValues","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Values in the scalar field to produce the iso-meshes for. ","This is a List<Double>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Mesh","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Meshes on the iso-values of the scalar field defined by the mesh and values. ","This is a List<Mesh>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"Split","assemblyName":"Geometry_Engine.dll","descriptionParts":["Split an outer region by the cutting lines into a collection of closed contained regions within the outer region. ",""],"inputs":[{"inputName":"outerRegion","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["An outer region that will contain the closed regions generated. ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"cuttingLines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The lines to cut the outer region by. ","This is a List<Line>"],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Tolerance to use for distance measurment operations, default to BH.oM.Geometry.Tolerance.Distance. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["All coordinates of the geometry will be rounded to the number of decimal places specified. Default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Closed polygon regions contained within the outer region cut by the cutting lines. ","This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"SubMesh","assemblyName":"Geometry_Engine.dll","descriptionParts":["Create a mesh from selected faces of an existing mesh. ",""],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["Mesh to get a sub-section from. ","This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"faces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Face","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The faces of the old mesh to carry over to the new mesh. ","This is a List<Face>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Mesh composed of the faces and the vertices in those faces. ","This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"SubMesh","assemblyName":"Geometry_Engine.dll","descriptionParts":["Create a mesh from selected faces of an existing mesh. ",""],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["Mesh to get a sub-section from. ","This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"faces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Face","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The faces of the old mesh to carry over to the new mesh. ","This is a List<Face>"],"isRequired":1,"isInterface":0},{"inputName":"vertexRelatedData","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Geometry","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A list where each item is related to the vertex at the same index in the mesh. ","This is a List<T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Mesh","isInterface":"0","isGeneric":"0"},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Geometry","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Mesh, System.Collections.Generic.List<BH.Engine.Geometry.T>>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"MarchingSquares","assemblyName":"Geometry_Engine.dll","descriptionParts":["Computes contour lines of the iso-values in the scalar field defined by the mesh and the values. ","The values are assumed to change linearly between vertices. ",""],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["Mesh defining the positions of the values in the scalar field. ","This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"vertexValues","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The value for of scalar field for each vertex in the mesh. ","This is a List<Double>"],"isRequired":1,"isInterface":0},{"inputName":"isoValues","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Values in the scalar field to produce the iso-lines for. ","This is a List<Double>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["Lines covering the iso-values in the scalar field defined by the mesh and values. ","This is a List<List<Line>>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"WetBlanketInterpretation","assemblyName":"Geometry_Engine.dll","descriptionParts":["Takes a List of Polylines and creates a `squished` version with the same area at every X-location, and hence the same total area as well. Required for some calculations. ",""],"inputs":[{"inputName":"pLines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["the outermost Polyline must be counter-clockwise. Clockwise ones are holes within it. Both Polylines should be on the XY-plane. ","This is a List<Polyline>"],"isRequired":1,"isInterface":0},{"inputName":"tol","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The tolerance for considering two points as one. Note: resulting points will be moved to be on a multiple of the tolerance for its x-value. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["A single Polyline oriented counter clockwise with the same area as the sum of all the polylines. ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"IntSurfLine","assemblyName":"Geometry_Engine.dll","descriptionParts":["Integrates according to Green's Theorem between two points with x to the specified power on the XY-Plane. ",""],"inputs":[{"inputName":"a","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["the point to begin from. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"b","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["the point to end at. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"powX","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["the region will be evaluated under the function: x^(powX). ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"tol","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Calculated value. The region intergral calculated over a boundery, the line from a to b./nThe solution is only defined for closed counter-clockwise oriented regions, this can be achived by a sum of solutions.This value should only be used on its own with this in mind. ","This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"IIntegrateRegion","assemblyName":"Geometry_Engine.dll","descriptionParts":["Integrates a closed region with x to the specified power on the XY-Plane. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["Defined counter clockwise on the XY-Plane. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"powX","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The region will be evaluated under the function: x^(powX). ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"tol","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The tolerance for considering a line segment horizontal or vertical. /ni.e. (value at endpoint - value at startpoint) < tol. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Calculated value. ","This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"Eigenvalues","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"matrix","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double[]","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double[]"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"Eigenvectors","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"matrix","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector[]","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector[]"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"FitLine","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Point>"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"Join","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curves","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"PolyCurve","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<PolyCurve>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"PolyCurve","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<PolyCurve>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"Join","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"lines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"Join","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curves","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"IJoin","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curves","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"PolyCurve","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<PolyCurve>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"PointClustersDBSCAN","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"maxDist","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"minPointCount","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<Point>>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"RowEchelonForm","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"imatrix","namespace":"System","memberName":"Double[,]","isGeneric":"0","descriptionParts":["This is a Double[,]"],"isRequired":1,"isInterface":0},{"inputName":"reduced","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double[,]","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double[,]"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CountNonZeroRows","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"matrix","namespace":"System","memberName":"Double[,]","isGeneric":"0","descriptionParts":["This is a Double[,]"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"REFTolerance","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"matrix","namespace":"System","memberName":"Double[,]","isGeneric":"0","descriptionParts":["This is a Double[,]"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"SkewLineProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"line2","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Double, System.Double>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"SortAlongCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"SortAlongCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"SortAlongCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"SortAlongCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"SortAlongCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"ISortAlongCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"SortCollinear","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"CurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"ICurveProximity","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Point, BH.oM.Geometry.Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"FitPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"FitPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"FitPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"FitPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"FitPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"FitPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"FitPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"FitPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"FitPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Compute","memberName":"IFitPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"DomainBox","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"DomainBox","namespace":"BH.oM.Data.Collections","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Collections.DomainBox: ","A multidimensional domain, defined by the minimum and maximum values in each dimension, enclosing a hypercube."]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToMesh","assemblyName":"Geometry_Engine.dll","descriptionParts":["Converts a Mesh3D into a regular mesh, which removes all the information about the volumetric cells. ",""],"inputs":[{"inputName":"mesh3d","namespace":"BH.oM.Geometry","memberName":"Mesh3D","isGeneric":"0","descriptionParts":["Volumetric 3d mesh to convert. ","This is a BH.oM.Geometry.Mesh3D: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces, Cells and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["A regular mesh with the same vertices and faces as the Mesh3D. ","This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToPolyline","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToPolyline","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToPolyline","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"IToPolyline","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToNurbsCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToNurbsCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToNurbsCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ellipse","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToNurbsCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToNurbsCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToNurbsCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"IToNurbsCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Basis","assemblyName":"Geometry_Engine.dll","descriptionParts":["Creates a Vector Basis with three orthogonal Vectors. Will ensure that x and y-vectors are orthogonal. This means the y-vector of the basis might be different than the one provided/n x-vector is garantiued to stay the same. z-vector of basis will be calculated as x cross y. Method does not work for parallel vectors ",""],"inputs":[{"inputName":"x","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["x-vector of the basis. Basis is guaranteed to have a unit vector in this direction as its x-axis. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"y","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["y-vector of the basis. Method will ensure that this vector in orthogonal to the x-axis. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Basis","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["An orthogonal vector basis with all unit vectors ","This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Cone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"centre","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"radius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Cone","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Cone: ","A solid circular right angled cone"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"CartesianCoordinateSystem","assemblyName":"Geometry_Engine.dll","descriptionParts":["Creates a Cartesian CoordinateSystem. x and y will be unitised. If x and why are non-orthogonal, y will be made orthogonal to x, while x will be kept ",""],"inputs":[{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"x","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"y","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Cartesian","namespace":"BH.oM.Geometry.CoordinateSystem","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomCartesianCoordinateSystem","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Cartesian","namespace":"BH.oM.Geometry.CoordinateSystem","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomCartesianCoordinateSystem","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Cartesian","namespace":"BH.oM.Geometry.CoordinateSystem","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Cuboid","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"coordinateSystem","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"depth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Cuboid","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Cuboid: ","A polyhedron. Standard cuboid consisting of six right-angled quadrilateral faces."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Cylinder","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"centre","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"radius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Cylinder","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Cylinder: ","A solid circular right angled cylinder."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"DomainTree","assemblyName":"Geometry_Engine.dll","descriptionParts":["Creates a spatial data tree from the data. Useful for spatial queries in large data sets. ",""],"inputs":[{"inputName":"geometries","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Geometry","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The geometries to store in the data tree. ","This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"treeDegree","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Degree of the tree. Determinse the number of children each node of the tree can have. ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"leafSize","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Determinse the number of siblings a leaf node can have. ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"sampleSize","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of items used to determine how to split the collection. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"DomainTree","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Geometry","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A spatial data tree containing all the provvided geometries in its leaves. ","This is a BH.oM.Data.Collections.DomainTree<BH.Engine.Geometry.T>: ","A data tree which is traversed through DomainBoxes. Each node's DomainBox is assumed to be enclosed by its parent's DomainBox and to enclose its own data. All the tree's data is stored in its leaves."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomGeometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomGeometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomGeometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Mesh3D","assemblyName":"Geometry_Engine.dll","descriptionParts":["Explicitly create a Mesh3D. Only checks validity of list lengths. ",""],"inputs":[{"inputName":"vertices","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["All the point objects which define the mesh. ","This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"faces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Face","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Faces containing indices pointing to the vertices which define them. ","This is a List<Face>"],"isRequired":1,"isInterface":0},{"inputName":"cellRelation","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"CellRelation","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A parallel list to the faces detailing an indicative index for which cell they are connected to. ","This is a List<CellRelation>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh3D","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["A volumetric mesh. ","This is a BH.oM.Geometry.Mesh3D: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces, Cells and their Vertices."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Level","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"elevation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Level","namespace":"BH.oM.Geometry.SettingOut","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Level","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"elevation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Level","namespace":"BH.oM.Geometry.SettingOut","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"PlanarSurface","assemblyName":"Geometry_Engine.dll","descriptionParts":["Creates a PlanarSurface based on boundary curves. Only processing done by this method is checking (co)planarity and that the curves are closed. Internal edges will be assumed to be inside the External ",""],"inputs":[{"inputName":"externalBoundary","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The outer boundary curve of the surface. Needs to be closed and planar ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"internalBoundaries","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional internal boundary curves descibing any openings inside the external. All internal edges need to be closed and co-planar with the external edge ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PlanarSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Planar surface corresponding to the provided edge curves ","This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"PlanarSurface","assemblyName":"Geometry_Engine.dll","descriptionParts":["Distributes the edge curve and creates a set of boundary planar surfaces ",""],"inputs":[{"inputName":"boundaryCurves","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Boundary curves to be used. Non-planar and non-closed curves are ignored ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of planar surfaces created ","This is a List<PlanarSurface>"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Sphere","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"centre","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"radius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Sphere","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Sphere: ","Standard sphere defining the closed bounding surface of constant distance from a point, its Centre"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomSurface","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomSurface","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"closed","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"closed","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"from","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"closed","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"from","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"closed","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Torus","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"centre","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"radiusMajor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"radiusMinor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Torus","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Torus: ","A standard solid circular ring torus, formed as a surface of revolution of a circle about an axis."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Vector","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"x","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"y","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"z","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Vector","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"v","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Vector","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"a","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"b","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Vector","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"v","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomVector","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomVector","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomVectorInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"normalise","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomVectorInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"normalise","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Point","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"x","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"y","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"z","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Point","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"v","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"PointGrid","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"start","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"dir1","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"dir2","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"nbPts1","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"nbPts2","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<Point>>"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"PolySurface","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surfaces","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ISurface","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<ISurface> ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"PolySurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomPolySurface","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"minNbSurfaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxNbSurfaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PolySurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomPolySurface","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"minNbSurfaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxNbSurfaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PolySurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Pipe","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"centreline","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"radius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"capped","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Pipe","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomPipe","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Pipe","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomPipe","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Pipe","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomNurbsSurface","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"minNbCPs","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxNbCPs","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"NurbsSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Loft","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Loft","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomLoft","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"minNbCurves","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxNbCurves","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Loft","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomLoft","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"minNbCurves","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxNbCurves","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Loft","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Extrusion","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"capped","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Extrusion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomExtrusion","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Extrusion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomExtrusion","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Extrusion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"CompositeGeometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"elements","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"IGeometry","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<IGeometry> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"CompositeGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomCompositeGeometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"minNbParts","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxNbParts","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"CompositeGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomCompositeGeometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"minNbParts","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxNbParts","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"CompositeGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"BoundingBox","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"min","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"max","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"BoundingBox","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"centre","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"extent","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomBoundingBox","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomBoundingBox","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Mesh","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vertices","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Point>"],"isRequired":1,"isInterface":1},{"inputName":"faces","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Face","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Face>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomMesh","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"minNbCPs","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxNbCPs","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomMesh","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"minNbCPs","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxNbCPs","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Face","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"a","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"b","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"c","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"d","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Face","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Face: ","A triangular or quadrilateral shape forming the basis of a polygon Mesh. Defined by corner vertices referencing indices of a Point list. See BH.oM.Geometry.Mesh object for usage.","A value of -1 for the fourth vertex D indicates the Face is triangular."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Polyline","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Point>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Polyline","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"lines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomPolyline","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"minNbCPs","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxNbCPs","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomPolyline","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"minNbCPs","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxNbCPs","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomPolyline","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"from","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"minNbCPs","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxNbCPs","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomPolyline","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"from","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"minNbCPs","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxNbCPs","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"PolyCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomPolyCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"minNbCurves","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxNbCurves","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomPolyCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"minNbCurves","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxNbCurves","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"NurbsCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"controlPoints","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Point>"],"isRequired":1,"isInterface":1},{"inputName":"weights","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Double>"],"isRequired":1,"isInterface":1},{"inputName":"knots","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Double>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomNurbsCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0},{"inputName":"minNbCPs","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"maxNbCPs","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Line","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"start","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"end","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Line","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"start","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomLine","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomLine","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomLine","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"from","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomLine","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"from","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Ellipse","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"centre","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"radius1","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"radius2","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Ellipse","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Ellipse","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"centre","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis1","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"axis2","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"radius1","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"radius2","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Ellipse","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomEllipse","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Ellipse","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomEllipse","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Ellipse","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"IntegrationSlice","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"width","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"centre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"placement","namespace":"System","memberName":"Double[]","isGeneric":"0","descriptionParts":["This is a Double[]"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IntegrationSlice","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IntegrationSlice: ","Describes a discrete finite slice of an area. Used for numerical approximation of an integration."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"IntegrationSlices","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"edges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"increment","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"IntegrationSlice","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<IntegrationSlice>"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Arc","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"coordinateSystem","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0},{"inputName":"radius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"startAngle","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"endAngle","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Arc","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"start","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"middle","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"end","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"ArcByCentre","assemblyName":"Geometry_Engine.dll","descriptionParts":["Creates an arc by centre, start and end points. Only able to create arcs with angle < 180 degress ",""],"inputs":[{"inputName":"centre","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"start","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"end","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomArc","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomArc","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomArc","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"from","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomArc","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"from","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Circle","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"centre","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"radius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Circle","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Circle","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"centre","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"normal","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"radius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Circle","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Circle","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pt1","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"pt2","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"pt3","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Circle","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomCircle","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Circle","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomCircle","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Circle","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Plane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"normal","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Plane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"p1","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"p2","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"p3","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Quaternion","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"x","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"y","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"z","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"w","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Quaternion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Quaternion: ","A four-dimensional vector, useful in calculation of affine transformations in three-dimensional space. See also BH.oM.Geometry.TransformMatrix."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"Quaternion","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"angle","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Quaternion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Quaternion: ","A four-dimensional vector, useful in calculation of affine transformations in three-dimensional space. See also BH.oM.Geometry.TransformMatrix."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomQuaternion","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Quaternion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Quaternion: ","A four-dimensional vector, useful in calculation of affine transformations in three-dimensional space. See also BH.oM.Geometry.TransformMatrix."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomQuaternion","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Quaternion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Quaternion: ","A four-dimensional vector, useful in calculation of affine transformations in three-dimensional space. See also BH.oM.Geometry.TransformMatrix."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"TransformMatrix","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"q","namespace":"BH.oM.Geometry","memberName":"Quaternion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Quaternion: ","A four-dimensional vector, useful in calculation of affine transformations in three-dimensional space. See also BH.oM.Geometry.TransformMatrix."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TransformMatrix","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"TranslationMatrix","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TransformMatrix","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"IdentityMatrix","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"TransformMatrix","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RotationMatrix","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"centre","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"angle","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TransformMatrix","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"ScaleMatrix","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"refPoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TransformMatrix","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"ProjectionMatrix","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"TransformMatrix","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomMatrix","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"minVal","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"maxVal","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"TransformMatrix","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"RandomMatrix","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rnd","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0},{"inputName":"minVal","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"maxVal","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"TransformMatrix","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"OrientationMatrixGlobalToLocal","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"csTo","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TransformMatrix","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"OrientationMatrixLocalToGlobal","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"csFrom","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TransformMatrix","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."]}},{"namespace":"BH.Engine.Geometry","className":"Create","memberName":"OrientationMatrix","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"csFrom","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0},{"inputName":"csTo","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TransformMatrix","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"basis","namespace":"BH.oM.Geometry","memberName":"Basis","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space"],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Basis","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"coordinateSystem","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Cartesian","namespace":"BH.oM.Geometry.CoordinateSystem","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Circle","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ellipse","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Ellipse","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Extrusion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Loft","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Loft","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Pipe","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Pipe","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PlanarSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolySurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Mirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"group","namespace":"BH.oM.Geometry","memberName":"CompositeGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CompositeGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IMirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IMirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IMirror","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Normalise","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Normalise","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"q","namespace":"BH.oM.Geometry","memberName":"Quaternion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Quaternion: ","A four-dimensional vector, useful in calculation of affine transformations in three-dimensional space. See also BH.oM.Geometry.TransformMatrix."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Quaternion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Quaternion: ","A four-dimensional vector, useful in calculation of affine transformations in three-dimensional space. See also BH.oM.Geometry.TransformMatrix."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ellipse","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Extrusion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Loft","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Loft","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PlanarSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolySurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"group","namespace":"BH.oM.Geometry","memberName":"CompositeGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CompositeGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IProject","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IProject","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IProject","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"basis","namespace":"BH.oM.Geometry","memberName":"Basis","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space"],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Basis","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Circle","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Extrusion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Loft","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Loft","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Pipe","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Pipe","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PlanarSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolySurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"group","namespace":"BH.oM.Geometry","memberName":"CompositeGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CompositeGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Rotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"coordinate","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Cartesian","namespace":"BH.oM.Geometry.CoordinateSystem","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IRotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IRotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IRotate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"basis","namespace":"BH.oM.Geometry","memberName":"Basis","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space"],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Basis","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"coordinateSystem","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Cartesian","namespace":"BH.oM.Geometry.CoordinateSystem","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Extrusion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Loft","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Loft","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Pipe","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Pipe","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PlanarSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolySurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"solid","namespace":"BH.oM.Geometry","memberName":"BoundaryRepresentation","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundaryRepresentation: ","Solid representation defined by a collection of connected surfaces forming a closed volume"],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundaryRepresentation","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundaryRepresentation: ","Solid representation defined by a collection of connected surfaces forming a closed volume"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"group","namespace":"BH.oM.Geometry","memberName":"CompositeGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CompositeGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ITransform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ITransform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ITransform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ITransform","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"ISolid","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISolid: ","The interface for all three-dimensional geometrical objects ","This can be of the following types: BoundaryRepresentation, Cone, Cuboid, Cylinder, Sphere, Torus"],"isRequired":1,"isInterface":1},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"coordinateSystem","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Cartesian","namespace":"BH.oM.Geometry.CoordinateSystem","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Circle","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Extrusion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Loft","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Loft","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Pipe","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Pipe","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PlanarSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolySurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Translate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"group","namespace":"BH.oM.Geometry","memberName":"CompositeGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."],"isRequired":1,"isInterface":0},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CompositeGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ITranslate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ITranslate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ITranslate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Transpose","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TransformMatrix","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Triangulate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Orient","assemblyName":"Geometry_Engine.dll","descriptionParts":["Orients geometry from one coordinate sytem to another ",""],"inputs":[{"inputName":"geometry","namespace":"BH.Engine.Geometry","memberName":"T","isGeneric":"0","descriptionParts":["Geometry to be transformed ","This is a BH.Engine.Geometry.T"],"isRequired":1,"isInterface":0},{"inputName":"csFrom","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["Coordinate system in which geometry is now ","This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0},{"inputName":"csTo","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["Coordinate system in which we want geometry to be ","This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"T","namespace":"BH.Engine.Geometry","isGeneric":"0","descriptionParts":["Geometry in new coordinate system ","This is a BH.Engine.Geometry.T"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"CleanPolyline","assemblyName":"Geometry_Engine.dll","descriptionParts":["Returns a polyline that is cleaned by removing least significant vertices and short segments. This is designed for closed polylines only ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["The polyline you wish to clean by removing unnecessary points ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The tolerance of the angle that defines a straight line. Default is set to the value defined by BH.oM.Geometry.Tolerance.Angle ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"minimumSegmentLength","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The length of the smallest allowed segment. Segments smaller than this will be removed. Default is set to the value defined by BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The cleaned polyline ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"CollapseToPolyline","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"maxSegmentCount","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"CollapseToPolyline","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"maxSegmentCount","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"CollapseToPolyline","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"maxSegmentCount","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"CollapseToPolyline","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"maxSegmentCount","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"CollapseToPolyline","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"maxSegmentCount","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ICollapseToPolyline","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"maxSegmentCount","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"CullDuplicateLines","assemblyName":"Geometry_Engine.dll","descriptionParts":["Removes duplicate lines from the collection ",""],"inputs":[{"inputName":"lines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The nested collection of lines to cull duplicates from ","This is a List<Line>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of lines with no duplicates ","This is a List<Line>"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"RemoveLeastSignificantVertices","assemblyName":"Geometry_Engine.dll","descriptionParts":["Returns a polyline defined by the points which result in deviations from a straight line only. For example, if a polyline has 3 points in a straight line, the middle point is removed as part of this cleaning process ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["The polyline you wish to clean by removing unnecessary points ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"smallestAcceptableAngle","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The tolerance of the angle that defines a straight line. Default is set to the value defined by BH.oM.Geometry.Tolerance.Angle ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The cleaned polyline ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"RemoveShortSegments","assemblyName":"Geometry_Engine.dll","descriptionParts":["Returns a polyline that has short segments removed. For example, if the polyline has 2 points less than the minimumSegmentLength apart, then only one point will be retained and the short segment will be merged with the next segment ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["The polyline you wish to clean by removing short segments ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"minimumSegmentLength","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The tolerance of what a short segment is. Segments greater than this length will be kept, segments shorter will be cleaned (removed). Default is set to the value defined by BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The cleaned polyline ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IRoundCoordinates","assemblyName":"Geometry_Engine.dll","descriptionParts":["Modifies a BHoM IGeometry's coordinates to be rounded to the number of provided decimal places. ",""],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["The BHoM IGeometry to modify. ","This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The modified BHoM IGeometry. ","This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IRoundCoordinates","assemblyName":"Geometry_Engine.dll","descriptionParts":["Modifies a BHoM ICurve's coordinates to be rounded to the number of provided decimal places. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The BHoM ICurve to modify. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The modified BHoM ICurve. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"RoundCoordinates","assemblyName":"Geometry_Engine.dll","descriptionParts":["Modifies a BHoM Geometry Point to be rounded to the number of provided decimal places. ",""],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The BHoM Geometry Point to modify. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The modified BHoM Geometry Point. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"RoundCoordinates","assemblyName":"Geometry_Engine.dll","descriptionParts":["Modifies a BHoM Geometry Vector to be rounded to the number of provided decimal places. ",""],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["The BHoM Geometry Vector to modify. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The modified BHoM Geometry Vector. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"RoundCoordinates","assemblyName":"Geometry_Engine.dll","descriptionParts":["Modifies a BHoM Geometry Plane's Origin and Normal to be rounded to the number of provided decimal places. ",""],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["The BHoM Geometry Plane to modify. ","This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The modified BHoM Geometry Plane. ","This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"RoundCoordinates","assemblyName":"Geometry_Engine.dll","descriptionParts":["Modifies a BHoM Geometry Line's points to be rounded to the number of provided decimal places. ",""],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["The BHoM Geometry Line to modify. ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The modified BHoM Geometry Line. ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"RoundCoordinates","assemblyName":"Geometry_Engine.dll","descriptionParts":["Modifies a BHoM Geometry Arc's start and end coordinates to be rounded to the number of provided decimal places while maintaining the Arc's total angle. ",""],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["The BHoM Geometry Arc to modify. ","This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The modified BHoM Geometry Arc. ","This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"RoundCoordinates","assemblyName":"Geometry_Engine.dll","descriptionParts":["Modifies a BHoM Geometry Circle's centre and radius to be rounded to the number of provided decimal places. ",""],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["The BHoM Geometry Circle to modify. ","This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Circle","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The modified BHoM Geometry Circle. As Line if zero length. ","This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"RoundCoordinates","assemblyName":"Geometry_Engine.dll","descriptionParts":["Modifies a BHoM Geometry Ellipse's centre and radius to be rounded to the number of provided decimal places. ",""],"inputs":[{"inputName":"ellipse","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["The BHoM Geometry Ellipse to modify. ","This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Ellipse","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The modified BHoM Geometry Ellipse. As Line if zero length. ","This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"RoundCoordinates","assemblyName":"Geometry_Engine.dll","descriptionParts":["Modifies a BHoM Geometry Polyline's control points to be rounded to the number of provided decimal places. ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["The BHoM Geometry Polyline to modify. ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The modified BHoM Geometry Polyline. ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"RoundCoordinates","assemblyName":"Geometry_Engine.dll","descriptionParts":["Modifies a BHoM Geometry PolyCurve's curves to be rounded to the number of provided decimal places. ",""],"inputs":[{"inputName":"polycurve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["The BHoM Geometry PolyCurve to modify. ","This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The modified BHoM Geometry PolyCurve. ","This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"RoundCoordinates","assemblyName":"Geometry_Engine.dll","descriptionParts":["Modifies a BHoM Geometry NurbsCurve's control points to be rounded to the number of provided decimal places. ",""],"inputs":[{"inputName":"nurbscurve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["The BHoM Geometry NurbsCurve to modify. ","This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The modified BHoM Geometry NurbsCurve. ","This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"RoundCoordinates","assemblyName":"Geometry_Engine.dll","descriptionParts":["Modifies a BHoM Geometry PlanarSurface's defining curves to be rounded to the number of provided decimal places. ",""],"inputs":[{"inputName":"planarSurface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["The BHoM Geometry PlanarSurface to modify. ","This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PlanarSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The modified BHoM Geometry PlanarSurface. ","This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"RoundPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":["Modifies a BHoM Geometry Point to be rounded to the number of provided decimal places ",""],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The BHoM Geometry Point to modify ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6 ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The modified BHoM Geometry Point ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"SetGeometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"newPoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"SetGeometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"newCurve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"SetGeometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"newCurve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"SetGeometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"newCurve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"SetGeometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"newCurve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"SetGeometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"newCurve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"SetGeometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"newCurve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"SetGeometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"newCurve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"SetGeometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"grid","namespace":"BH.oM.Geometry.SettingOut","memberName":"Grid","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.SettingOut.Grid: ","An individual Grid 'line' - can be curved or free-form as well as simple linear line segments. ","Useful for coordination and setting out of spatial objects for transdisciplinary workflows."],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Grid","namespace":"BH.oM.Geometry.SettingOut","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.SettingOut.Grid: ","An individual Grid 'line' - can be curved or free-form as well as simple linear line segments. ","Useful for coordination and setting out of spatial objects for transdisciplinary workflows."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ISetGeometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"newCurve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Simplify","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Extend","assemblyName":"Geometry_Engine.dll","descriptionParts":["Extends curve by given lengths ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["Curve to extend ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"start","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of extension on the begining of a curve. Negative value will trim the curve ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"end","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of extension on the end of a curve. Negative value will trim the curve ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"tangentExtensions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["True - extends on tangent lines","False - extends by curve's shape ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Extended curve ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Extend","assemblyName":"Geometry_Engine.dll","descriptionParts":["Extends curve by given lengths ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["Curve to extend ","This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"start","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of extension on the begining of a curve. Negative value will trim the curve ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"end","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of extension on the end of a curve. Negative value will trim the curve ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"tangentExtensions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["True - extends on tangent lines","False - extends by curve's shape ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Extended curve ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Extend","assemblyName":"Geometry_Engine.dll","descriptionParts":["Extends curve by given lengths ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["Curve to extend ","This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"start","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of extension on the begining of a curve. Negative value will trim the curve ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"end","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of extension on the end of a curve. Negative value will trim the curve ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"tangentExtensions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["True - extends on tangent lines","False - extends by curve's shape ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Circle","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Extended curve ","This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Extend","assemblyName":"Geometry_Engine.dll","descriptionParts":["Extends curve by given lengths ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["Curve to extend ","This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"start","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of extension on the begining of a curve. Negative value will trim the curve ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"end","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of extension on the end of a curve. Negative value will trim the curve ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"tangentExtensions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["True - extends on tangent lines","False - extends by curve's shape ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Ellipse","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Extended curve ","This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Extend","assemblyName":"Geometry_Engine.dll","descriptionParts":["Extends curve by given lengths ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["Curve to extend ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"start","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of extension on the begining of a curve. Negative value will trim the curve ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"end","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of extension on the end of a curve. Negative value will trim the curve ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"tangentExtensions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["True - extends on tangent lines","False - extends by curve's shape ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Extended curve ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Extend","assemblyName":"Geometry_Engine.dll","descriptionParts":["Extends curve by given lengths ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["Curve to extend ","This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"start","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of extension on the begining of a curve. Negative value will trim the curve ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"end","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of extension on the end of a curve. Negative value will trim the curve ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"tangentExtensions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["True - extends on tangent lines","False - extends by curve's shape ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Extended curve ","This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IExtend","assemblyName":"Geometry_Engine.dll","descriptionParts":["Extends curve by given lengths ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["Curve to extend ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"start","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of extension on the begining of a curve. Negative value will trim the curve ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"end","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of extension on the end of a curve. Negative value will trim the curve ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"tangentExtensions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["True - extends on tangent lines","False - extends by curve's shape ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Extended curve ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Offset","assemblyName":"Geometry_Engine.dll","descriptionParts":["Creates an offset of a curve ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["Curve to offset ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"offset","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset distance. Positive value offsets to the right with normal pointing up and direction of a curve pointing forward ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"normal","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Normal of a plane for offset operation ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"tangentExtensions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, arc segments of a PolyCurve will be extend by a tangent line, if false - by arc ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Resulting offset ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Offset","assemblyName":"Geometry_Engine.dll","descriptionParts":["Creates an offset of a curve ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["Curve to offset ","This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"offset","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset distance. Positive value offsets outside of a curve. If normal is given then offsets to the right with normal pointing up and direction of a curve pointing forward ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"normal","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Normal of a plane for offset operation ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"tangentExtensions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, arc segments of a PolyCurve will be extend by a tangent line, if false - by arc ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Resulting offset ","This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Offset","assemblyName":"Geometry_Engine.dll","descriptionParts":["Creates an offset of a curve ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["Curve to offset ","This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"offset","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset distance. Positive value offsets outside of a curve. If normal is given then offsets to the right with normal pointing up and direction of a curve pointing forward ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"normal","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Normal of a plane for offset operation ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"tangentExtensions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, arc segments of a PolyCurve will be extend by a tangent line, if false - by arc ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Circle","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Resulting offset ","This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Offset","assemblyName":"Geometry_Engine.dll","descriptionParts":["Creates an offset of a curve. Works only on planar curves ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["Curve to offset ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"offset","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset distance. Positive value offsets outside of a curve. If normal is given then offsets to the right with normal pointing up and direction of a curve pointing forward ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"normal","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Normal of a plane for offset operation, not needed for closed curves ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"tangentExtensions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, arc segments of a PolyCurve will be extend by a tangent line, if false - by arc ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Resulting offset ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Offset","assemblyName":"Geometry_Engine.dll","descriptionParts":["Creates an offset of a curve. Works only on planar curves ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["Curve to offset ","This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"offset","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset distance. Positive value offsets outside of a curve. If normal is given then offsets to the right with normal pointing up and direction of a curve pointing forward ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"normal","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Normal of a plane for offset operation, not needed for closed curves ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"tangentExtensions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Resulting offset ","This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IOffset","assemblyName":"Geometry_Engine.dll","descriptionParts":["Creates an offset of a curve. Works only on planar curves ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["Curve to offset ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"offset","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset distance. Positive value offsets outside of a closed curve. If normal is given then offsets to the right with normal pointing up and direction of a curve pointing forward ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"normal","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Normal of a plane for offset operation, not needed for closed curves ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"tangentExtensions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, arc segments of a PolyCurve will be extend by a tangent line, if false - by arc ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Resulting offset ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Project","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"ToPlane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ellipse","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Extrusion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Loft","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Loft","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PlanarSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolySurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"group","namespace":"BH.oM.Geometry","memberName":"CompositeGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CompositeGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IProjectAlong","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Reverse","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Reverse","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Extrusion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Loft","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Loft","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Pipe","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Pipe","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PlanarSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolySurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"coordinate","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Cartesian","namespace":"BH.oM.Geometry.CoordinateSystem","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Scale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"group","namespace":"BH.oM.Geometry","memberName":"CompositeGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CompositeGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IScale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IScale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IScale","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"scaleVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"SplitAtPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Arc","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Arc>"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"SplitAtPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"SplitAtPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"SplitAtPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"PolyCurve","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<PolyCurve>"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"SplitAtPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"ISplitAtPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"MergedVertices","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"SortCurves","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Flip","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Flip","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Circle","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Flip","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Flip","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Flip","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Flip","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"IFlip","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Inflate","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0},{"inputName":"amount","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Modify","memberName":"Invert","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TransformMatrix","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IVolume","assemblyName":"Geometry_Engine.dll","descriptionParts":["Gets the enclosed volume of a solid. ",""],"inputs":[{"inputName":"solid","namespace":"BH.oM.Geometry","memberName":"ISolid","isGeneric":"0","descriptionParts":["The solid to query the volume from. ","This is a BH.oM.Geometry.ISolid: ","The interface for all three-dimensional geometrical objects ","This can be of the following types: BoundaryRepresentation, Cone, Cuboid, Cylinder, Sphere, Torus"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"CrossProduct","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"a","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"b","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"CrossProduct","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"a","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"b","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Product","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"q1","namespace":"BH.oM.Geometry","memberName":"Quaternion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Quaternion: ","A four-dimensional vector, useful in calculation of affine transformations in three-dimensional space. See also BH.oM.Geometry.TransformMatrix."],"isRequired":1,"isInterface":0},{"inputName":"q2","namespace":"BH.oM.Geometry","memberName":"Quaternion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Quaternion: ","A four-dimensional vector, useful in calculation of affine transformations in three-dimensional space. See also BH.oM.Geometry.TransformMatrix."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Quaternion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Quaternion: ","A four-dimensional vector, useful in calculation of affine transformations in three-dimensional space. See also BH.oM.Geometry.TransformMatrix."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Radius","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"SliceAt","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"edges","namespace":"System.Collections.Generic","memberName":"IList","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IList<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"location","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"width","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IntegrationSlice","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IntegrationSlice: ","Describes a discrete finite slice of an area. Used for numerical approximation of an integration."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"StartDir","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"StartDir","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"StartDir","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"StartDir","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"StartDir","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IStartDir","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"StartPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"StartPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"StartPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ellipse","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"StartPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"StartPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"StartPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"StartPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IStartPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtLength","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtLength","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtLength","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtLength","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtLength","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ITangentAtLength","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PlaneAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0},{"inputName":"u","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"v","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"t","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0},{"inputName":"u","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"v","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Vector","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Vector","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Geometry.Vector, BH.oM.Geometry.Vector>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ITangentAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ITangentAtPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"TangentAtPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Vertices","assemblyName":"Geometry_Engine.dll","descriptionParts":["Queries the indices of this face's vertices. ",""],"inputs":[{"inputName":"face","namespace":"BH.oM.Geometry","memberName":"Face","isGeneric":"0","descriptionParts":["The face to query. ","This is a BH.oM.Geometry.Face: ","A triangular or quadrilateral shape forming the basis of a polygon Mesh. Defined by corner vertices referencing indices of a Point list. See BH.oM.Geometry.Mesh object for usage.","A value of -1 for the fourth vertex D indicates the Face is triangular."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32[]","namespace":"System","isGeneric":"0","descriptionParts":["Array containing the indices of the face's vertecies. ","This is a Int32[]"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"UVCount","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surf","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Int32>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"SamplePoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"step","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"SamplePoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"number","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"SubParts","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"SubParts","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"SubParts","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ISurface","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ISurface> ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"SubParts","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Mesh","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Mesh>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"SubParts","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"group","namespace":"BH.oM.Geometry","memberName":"CompositeGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"IGeometry","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<IGeometry> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ISubParts","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"IGeometry","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<IGeometry> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ISubParts","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ISubParts","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ISurface","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<ISurface> ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsClosed","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsClosed","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsClosed","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsClosed","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ellipse","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsClosed","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsClosed","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsClosed","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IIsClosed","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsClosed","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsContaining","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"box1","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0},{"inputName":"box2","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsContaining","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0},{"inputName":"pt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsContaining","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0},{"inputName":"pts","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsContaining","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0},{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsContaining","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsContaining","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsContaining","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsContaining","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsContaining","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsContaining","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsContaining","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsContaining","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsContaining","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsContaining","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IIsContaining","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IIsContaining","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Point>"],"isRequired":1,"isInterface":1},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane1","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"plane2","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"coordinateSystem","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ellipse","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Loft","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Pipe","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"group","namespace":"BH.oM.Geometry","memberName":"CompositeGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IIsInPlane","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInRange","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"box1","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0},{"inputName":"box2","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInRange","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsInRange","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsParallel","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"v1","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"v2","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsParallel","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"line2","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Side","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Int32>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsSameSide","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"p1","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"p2","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsSameSide","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"IList","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IList<Point>"],"isRequired":1,"isInterface":1},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsValid","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsValid","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"v","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsValid","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsValid","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IIsValid","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PointAtX","assemblyName":"Geometry_Engine.dll","descriptionParts":["Gets the point at the global x-value for a line passing through point a and b ",""],"inputs":[{"inputName":"a","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["One of the points the line passes through ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"b","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["One of the points the line passes through ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"x","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The global x coordinate to evaluate the line at ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tol","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The tolerance for deciding the line is parallel to the Y-axis ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The Point at x on the line passing through the two points ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Volume","assemblyName":"Geometry_Engine.dll","descriptionParts":["Gets the enclosed volume created by the BoundaryRepresentation Surfaces. This value is retrieved from the immutable property stored on the object itself. ",""],"inputs":[{"inputName":"solid","namespace":"BH.oM.Geometry","memberName":"BoundaryRepresentation","isGeneric":"0","descriptionParts":["The solid BoundaryRepresentaion to query the volume from. ","This is a BH.oM.Geometry.BoundaryRepresentation: ","Solid representation defined by a collection of connected surfaces forming a closed volume"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Volume","assemblyName":"Geometry_Engine.dll","descriptionParts":["Calculates the analytical solid volume. ",""],"inputs":[{"inputName":"cone","namespace":"BH.oM.Geometry","memberName":"Cone","isGeneric":"0","descriptionParts":["The solid cone to query the volume from. ","This is a BH.oM.Geometry.Cone: ","A solid circular right angled cone"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Volume","assemblyName":"Geometry_Engine.dll","descriptionParts":["Calculates the analytical solid volume. ",""],"inputs":[{"inputName":"cuboid","namespace":"BH.oM.Geometry","memberName":"Cuboid","isGeneric":"0","descriptionParts":["The cuboid to query the volume from. ","This is a BH.oM.Geometry.Cuboid: ","A polyhedron. Standard cuboid consisting of six right-angled quadrilateral faces."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Volume","assemblyName":"Geometry_Engine.dll","descriptionParts":["Calculates the analytical solid volume. ",""],"inputs":[{"inputName":"cylinder","namespace":"BH.oM.Geometry","memberName":"Cylinder","isGeneric":"0","descriptionParts":["The cylinder to query the volume from. ","This is a BH.oM.Geometry.Cylinder: ","A solid circular right angled cylinder."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Volume","assemblyName":"Geometry_Engine.dll","descriptionParts":["Calculates the analytical solid volume. ",""],"inputs":[{"inputName":"sphere","namespace":"BH.oM.Geometry","memberName":"Sphere","isGeneric":"0","descriptionParts":["The sphere to query the volume from. ","This is a BH.oM.Geometry.Sphere: ","Standard sphere defining the closed bounding surface of constant distance from a point, its Centre"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Volume","assemblyName":"Geometry_Engine.dll","descriptionParts":["Calculates the analytical solid volume. ",""],"inputs":[{"inputName":"torus","namespace":"BH.oM.Geometry","memberName":"Torus","isGeneric":"0","descriptionParts":["The torus to query the volume from. ","This is a BH.oM.Geometry.Torus: ","A standard solid circular ring torus, formed as a surface of revolution of a circle about an axis."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Degree","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Determinant","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"matrix","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Direction","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Normal","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"face","namespace":"BH.oM.Geometry","memberName":"Face","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Face: ","A triangular or quadrilateral shape forming the basis of a polygon Mesh. Defined by corner vertices referencing indices of a Point list. See BH.oM.Geometry.Mesh object for usage.","A value of -1 for the fourth vertex D indicates the Face is triangular."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"DiscontinuityPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"DiscontinuityPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"DiscontinuityPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"DiscontinuityPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"DiscontinuityPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IDiscontinuityPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Distance","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"a","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"b","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"SquareDistance","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"a","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"b","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Distance","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"a","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"b","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"SquareDistance","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"a","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"b","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Distance","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Distance","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"infiniteSegment","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"SquareDistance","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"infiniteSegment","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Distance","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Distance","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Distance","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Distance","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Distance","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IDistance","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Edges","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Edges","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Edges","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"face","namespace":"BH.oM.Geometry","memberName":"Face","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Face: ","A triangular or quadrilateral shape forming the basis of a polygon Mesh. Defined by corner vertices referencing indices of a Point list. See BH.oM.Geometry.Mesh object for usage.","A value of -1 for the fourth vertex D indicates the Face is triangular."],"isRequired":1,"isInterface":0},{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Edges","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"EndDir","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"EndDir","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"EndDir","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"EndDir","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"EndDir","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IEndDir","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"EndPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"EndPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"EndPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ellipse","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"EndPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"EndPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"EndPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"EndPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IEndPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Extents","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ExternalEdges","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ExternalEdges","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Loft","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ExternalEdges","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Pipe","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ExternalEdges","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ExternalEdges","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ExternalEdges","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IExternalEdges","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"CurveIntegration","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"fx","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"from","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"to","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"centroid","namespace":"System","memberName":"Double&","isGeneric":"0","descriptionParts":["This is a Double&"],"isRequired":1,"isInterface":0},{"inputName":"increment","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"AreaIntegration","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"slices","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"IntegrationSlice","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<IntegrationSlice>"],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"from","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"to","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"centroid","namespace":"System","memberName":"Double&","isGeneric":"0","descriptionParts":["This is a Double&"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"AreaIntegration","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"slices","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"IntegrationSlice","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<IntegrationSlice>"],"isRequired":1,"isInterface":0},{"inputName":"constant","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"xPower","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"yPower","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"origin","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"AreaIntegration","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"slices","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"IntegrationSlice","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<IntegrationSlice>"],"isRequired":1,"isInterface":0},{"inputName":"constant","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"xPower","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"yPower","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"from","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"to","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"origin","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"AreaIntegration","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"slices","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"IntegrationSlice","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<IntegrationSlice>"],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"from","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"to","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"centroid","namespace":"System","memberName":"Double&","isGeneric":"0","descriptionParts":["This is a Double&"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"AreaIntegration","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"solid","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"IntegrationSlice","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<IntegrationSlice>"],"isRequired":1,"isInterface":0},{"inputName":"voids","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"IntegrationSlice","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<IntegrationSlice>"],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"from","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"to","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"centroid","namespace":"System","memberName":"Double&","isGeneric":"0","descriptionParts":["This is a Double&"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"InternalEdges","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"InternalEdges","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Pipe","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"InternalEdges","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"InternalEdges","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IInternalEdges","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Length","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"SquareLength","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Length","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Length","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Length","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"SquareLength","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Length","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Length","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ILength","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ElementNormal","assemblyName":"Geometry_Engine.dll","descriptionParts":["Gets the Normal/local Z-axis from a element ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The curve to evaluate the Normal from ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"orientationAngle","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["How much the normal is rotated about the curves axis in radians ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The Normal/local Z-axis of a element ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Normal","assemblyName":"Geometry_Engine.dll","descriptionParts":["Returns a vector normal to a given face of the mesh. ",""],"inputs":[{"inputName":"face","namespace":"BH.oM.Geometry","memberName":"Face","isGeneric":"0","descriptionParts":["The Face to get the normal to. ","This is a BH.oM.Geometry.Face: ","A triangular or quadrilateral shape forming the basis of a polygon Mesh. Defined by corner vertices referencing indices of a Point list. See BH.oM.Geometry.Mesh object for usage.","A value of -1 for the fourth vertex D indicates the Face is triangular."],"isRequired":1,"isInterface":0},{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["The Mesh containing the face to get the normal to. ","This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Vector normal to the given mesh face. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Normals","assemblyName":"Geometry_Engine.dll","descriptionParts":["Returns a list of vectors normal to each face of the mesh. ",""],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["The Mesh to get the normals to. ","This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Vector","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of vectors normal to the faces of a given mesh. ","This is a List<Vector>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Normals","assemblyName":"Geometry_Engine.dll","descriptionParts":["Returns a list of vectors normal to each face of the mesh. ",""],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh3D","isGeneric":"0","descriptionParts":["The Mesh3D to get the normals to. ","This is a BH.oM.Geometry.Mesh3D: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces, Cells and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Vector","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of vectors normal to the faces of a given mesh. ","This is a List<Vector>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Normal","assemblyName":"Geometry_Engine.dll","descriptionParts":["Returns a vector normal to the plane of a given curve, oriented according to the right hand rule. Works only for closed, planar curves. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["The Polyline to get the normal to. ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance used in geometry processing, default set to BH.oM.Geometry.Tolerance.Distance. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Vector normal to the plane of a curve. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Normal","assemblyName":"Geometry_Engine.dll","descriptionParts":["Returns a vector normal to the plane of a given curve, oriented according to the right hand rule. Works only for closed and planar curves. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["The PolyCurve to get the normal to. ","This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance used in geometry processing, default set to BH.oM.Geometry.Tolerance.Distance. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Vector normal to the plane of a curve. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Normal","assemblyName":"Geometry_Engine.dll","descriptionParts":["Returns a vector normal to the plane of a circle. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["The Circle to get the normal to. ","This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance used in geometry processing, default set to BH.oM.Geometry.Tolerance.Distance. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Vector normal to the plane of a curve. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Normal","assemblyName":"Geometry_Engine.dll","descriptionParts":["Returns a vector normal to the plane of an ellipse. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["The Ellipse to get the normal to. ","This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance used in geometry processing, default set to BH.oM.Geometry.Tolerance.Distance. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Vector normal to the plane of a curve. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Normal","assemblyName":"Geometry_Engine.dll","descriptionParts":["Returns a vector normal to the plane of an arc. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["The Arc to get the normal to. ","This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance used in geometry processing, default set to BH.oM.Geometry.Tolerance.Distance. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Vector normal to the plane of a curve. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Normal","assemblyName":"Geometry_Engine.dll","descriptionParts":["Returns a vector normal to the planar surface. ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["The PlanarSurface to get the normal to. ","This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Vector normal to the surface. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"INormal","assemblyName":"Geometry_Engine.dll","descriptionParts":["Interface method that returns a vector normal to the plane of any ICurve and oriented according to the right hand rule. Works only for closed and planar curves with an exception for single Arcs. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The ICurve to get the normal to. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance used in geometry processing, default set to BH.oM.Geometry.Tolerance.Distance. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Vector normal to the plane of a curve. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"INormals","assemblyName":"Geometry_Engine.dll","descriptionParts":["Interface method that returns the list of vectors normal to any IGeometry. ",""],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["The IGeometry to get the normal to. ","This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Vector","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of vectors normal to the given geometry. ","This is a List<Vector>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ParameterAtPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ParameterAtPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ParameterAtPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ParameterAtPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ParameterAtPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IParameterAtPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PlaneIntersection","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane1","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"plane2","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PlaneIntersection","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"boundingBox","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PlaneIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PlaneIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PlaneIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PlaneIntersection","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"useInfiniteLine","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PlaneIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"c","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"curveParameters","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"0","descriptionParts":["This is a List`1&"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PlaneIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PlaneIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IPlaneIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PointAtLength","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PointAtLength","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PointAtLength","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PointAtLength","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PointAtLength","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IPointAtLength","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PointAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"t","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PointAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"t","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PointAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"t","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PointAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"t","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PointAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PointAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PointAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0},{"inputName":"u","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"v","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IPointAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"t","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PointInRegion","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"DotProduct","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"a","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"b","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Loft","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Pipe","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pts","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"boxes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"BoundingBox","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<BoundingBox>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"group","namespace":"BH.oM.Geometry","memberName":"CompositeGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IBounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Centre","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Centre","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Centre","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Centres","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ClosestDistance","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ptsA","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Point>"],"isRequired":1,"isInterface":1},{"inputName":"ptsB","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Point>"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ClosestPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"cloud","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Point>"],"isRequired":1,"isInterface":1},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ClosestPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"points","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Point>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ClosestPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ClosestPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ClosestPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ClosestPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ClosestPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"infiniteSegment","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ClosestPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ClosestPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ClosestPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IClosestPoint","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ControlPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ControlPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ControlPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ControlPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ControlPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ControlPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ControlPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IControlPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsClockwise","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"normal","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsClockwise","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"normal","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsClockwise","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"viewPoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsClockwise","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"viewPoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsClockwise","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsClockwise","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IIsClockwise","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"axis","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsCollinear","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pts","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsCollinear","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"line2","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsCoplanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsCoplanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane1","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"plane2","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsCoplanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"planes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Plane","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Plane>"],"isRequired":1,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsCoplanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"line2","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsCoplanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsCoplanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IIsCoplanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsNurbsCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":["Queries if any part of the curve is a nurbs curve. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["Curve to query. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["true if any part of the curve is a nurbs curve. ","This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsLinear","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsLinear","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsLinear","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsLinear","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsLinear","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IIsLinear","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsOnCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"pt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsOnCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsOnCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsOnCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsOnCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsOnCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IIsOnCurve","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPeriodic","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPeriodic","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ellipse","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Loft","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Pipe","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"group","namespace":"BH.oM.Geometry","memberName":"CompositeGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IIsPlanar","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPolylinear","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPolylinear","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPolylinear","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPolylinear","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPolylinear","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IIsPolylinear","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsQuad","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"face","namespace":"BH.oM.Geometry","memberName":"Face","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Face: ","A triangular or quadrilateral shape forming the basis of a polygon Mesh. Defined by corner vertices referencing indices of a Point list. See BH.oM.Geometry.Mesh object for usage.","A value of -1 for the fourth vertex D indicates the Face is triangular."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsSelfIntersecting","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsSelfIntersecting","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsSelfIntersecting","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsSelfIntersecting","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsSelfIntersecting","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsSelfIntersecting","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IIsSelfIntersecting","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsVertical","assemblyName":"Geometry_Engine.dll","descriptionParts":["Evaluates whether a line is vertical from its start- and endpoints projected 2d-distance ",""],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["The line to determine the verticality of ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["If it is vertical, as defined in the wiki: https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions ","This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"LongestSegmentLength","assemblyName":"Geometry_Engine.dll","descriptionParts":["Returns the length of the longest segment from a BHoM Geometry Polyline ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["A BHoM Geometry Polyline ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The length of the longest segment ","This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"MeshIntersection","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"MeshIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"MeshIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IMeshIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"LineIntersection","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"line2","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"useInfiniteLines","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"LineIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"line2","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"useInfiniteLines","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"LineIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"lines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Line>"],"isRequired":1,"isInterface":0},{"inputName":"useInfiniteLine","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"LineIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"useInfiniteLine","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"LineIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"useInfiniteLine","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"LineIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"useInfiniteLine","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"LineIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"useInfiniteLine","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"LineIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ILineIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"useInfiniteLine","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"DerivativeFunction","assemblyName":"Geometry_Engine.dll","descriptionParts":["Gets the partial value derivatives of the B-spline Basis function for t value as normalised parameter. ",""],"inputs":[{"inputName":"knots","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Knot vector defining the basis function. ","This is a List<Double>"],"isRequired":1,"isInterface":0},{"inputName":"i","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Index the function is evaluated at. The value of the function is the sum of this functions value for all values of i. ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"n","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Degree of the of the basis function. Affects how many adjacent knots control the value. ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"t","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Parameter to evaluate the function at. Should be between 0 and 1. For values outside the range, the closest value will be used. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"k","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Degree of the derivation. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Value of the function for the specified index. The full value of the function should be a sum of all possible i's. ","This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"BasisFunction","assemblyName":"Geometry_Engine.dll","descriptionParts":["Gets the partial values of the B-spline basis function for t value as normalised parameter. ",""],"inputs":[{"inputName":"knots","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Knot vector defining the basis function. ","This is a List<Double>"],"isRequired":1,"isInterface":0},{"inputName":"i","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Index the function is evaluated at. The value of the function is the sum of this functions value for all values of i. ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"n","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Degree of the of the basis function. Affects how many adjacent knots control the value. ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"t","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Parameter to evaluate the function at. Should be between 0 and 1. For values outside the range, the closest value will be used. ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Value of the function for the specified index. The full value of the function should be a sum of all possible i's. ","This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Cells","assemblyName":"Geometry_Engine.dll","descriptionParts":["Gets the faces which defines each cell in the mesh3d. ",""],"inputs":[{"inputName":"mesh3d","namespace":"BH.oM.Geometry","memberName":"Mesh3D","isGeneric":"0","descriptionParts":["The Mesh3D to query the cells from. ","This is a BH.oM.Geometry.Mesh3D: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces, Cells and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Face","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["The cells of the Mesh3D defined as a list of faces for each cell. ","This is a List<List<Face>>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Centroid","assemblyName":"Geometry_Engine.dll","descriptionParts":["Queries the centre of area for a PlanarSurface. ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["The PlanarSurface to get the centre of area of. ","This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance used in geometry processing, default set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The Point at the centre of given PlanarSurface. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Centroid","assemblyName":"Geometry_Engine.dll","descriptionParts":["Queries the combined centre of area enclosed by a set of ICurves with an optional set of openings.","To give a correct result all input curves must be planar, coplanar, closed and non-self-intersecting.","Opening curves should also be inside of outline curves. ",""],"inputs":[{"inputName":"outlines","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Set of planar, coplanar, closed and non-self-intersecting ICurves to get the combined centre of area of. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Set of planar, coplanar, closed and non-self-intersecting ICurves illustrating openings in initial set of outlines. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance used in geometry processing, default set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The Point at the centre of given geometry. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Centroid","assemblyName":"Geometry_Engine.dll","descriptionParts":["Queries the centre of area enclosed by a closed, planar, non-self-intersecting Polyline. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["The Polyline to get the centre of area of. ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance used in geometry processing, default set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The Point at the centre of a region enclosed by given Polyline. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Centroid","assemblyName":"Geometry_Engine.dll","descriptionParts":["Queries the centre of area enclosed by a closed, planar, non-self-intersecting PolyCurve. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["The PolyCurve to get the centre of area of. ","This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance used in geometry processing, default set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The Point at the centre of area enclosed by given PolyCurve. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Centroid","assemblyName":"Geometry_Engine.dll","descriptionParts":["Queries the centre of area for an Ellipse. ",""],"inputs":[{"inputName":"ellipse","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["The Ellipse to get the centre of area of. ","This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance used in geometry processing, default set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The Point at the centre of given Ellipse. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Centroid","assemblyName":"Geometry_Engine.dll","descriptionParts":["Queries the centre of area for a Circle. ",""],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["The Circle to get the centre of area of. ","This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance used in geometry processing, default set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The Point at the centre of given Circle. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Centroid","assemblyName":"Geometry_Engine.dll","descriptionParts":["Queries the centre of area for a Line. ",""],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["The Line to get the centre of area of. ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance used in geometry processing, default set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The Point at the centre of given Line. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ICentroid","assemblyName":"Geometry_Engine.dll","descriptionParts":["Interface method that queries the centre of area for any ICurve. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The ICurve to get the centre of area of. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance used in geometry processing, default set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The Point at the centre of given ICurve. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ClosestPoints","assemblyName":"Geometry_Engine.dll","descriptionParts":["Find the closest n-points in a point cloud ",""],"inputs":[{"inputName":"clouds","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"samplePoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["Point about which to sample from the cloud ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"nPoints","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Number of near points to find ","This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}]},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<System.Int32>, System.Collections.Generic.List<System.Double>, System.Collections.Generic.List<BH.oM.Geometry.Point>>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"PrincipalCurvatureAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":["Principal curvature is the max and min curvature of the intersection curve between the surface and a plane formed by the span of the normal vector and the principal  direction. ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["Surface to evaluate. ","This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0},{"inputName":"u","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The parameter to evaluate at. Should be between 0 and 1. For values outside the range, the closest value will be used. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"v","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The parameter to evaluate at. Should be between 0 and 1. For values outside the range, the closest value will be used. ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Vector","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Vector","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Double, System.Double, BH.oM.Geometry.Vector, BH.oM.Geometry.Vector>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"CurveIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"CurveIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"CurveIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"CurveIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"CurveIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"CurveIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"CurveIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"CurveIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"CurveIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"CurveIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ICurveIntersections","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve1","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"curve2","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"CurvatureAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":["Curvature of the NurbsCurve at the parameter t, where t is a normalised parameter. Points towards the center of a fitted circle at the parameter with a magnitude equal to the inverse of the circles radius. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["Curve to evaluate. ","This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"t","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Parameter to evaluate at. Should be between 0 and 1. For values outside the range, the closest value will be used. ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Curvature of the NurbsCurve at the parameter t. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"CurvatureAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":["Evaluates the Gaussian and Mean curvature at the parameter. ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["Surface to evaluate. ","This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0},{"inputName":"u","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Parameter to evaluate at. Should be between 0 and 1. For values outside the range, the closest value will be used. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"v","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Parameter to evaluate at. Should be between 0 and 1. For values outside the range, the closest value will be used. ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Double, System.Double>"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"DerivativeAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":["Gets the vector which is the k'th derivative of the curve at the point of t, where t is a normalised parameter. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["Curve to evaluate. ","This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"t","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Parameter to evaluate at. Should be between 0 and 1. For values outside the range, the closest value will be used. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"k","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Degree of the derivation. ","This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Vector which is the k'th derivative of the curve at the point of t. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"DerivativeAtParameter","assemblyName":"Geometry_Engine.dll","descriptionParts":["Gets the vector which is the k'th derivative of the surface at the point of u, v, where u and v are normalised parameters. ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["Surface to evaluate. ","This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0},{"inputName":"u","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Parameter to evaluate at. Should be between 0 and 1. For values outside the range, the closest value will be used. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"v","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Parameter to evaluate at. Should be between 0 and 1. For values outside the range, the closest value will be used. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"k","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Degree of derivative for u. ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"l","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Degree of derivative for v. ","This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Vector which is the k'th derivative of the surface at the point of t. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"ExternalFaceMesh","assemblyName":"Geometry_Engine.dll","descriptionParts":["Query the Mesh which only consists of the external faces of the Mesh3D. ",""],"inputs":[{"inputName":"mesh3d","namespace":"BH.oM.Geometry","memberName":"Mesh3D","isGeneric":"0","descriptionParts":["The Mesh3D to query for its external face mesh. ","This is a BH.oM.Geometry.Mesh3D: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces, Cells and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["A mesh consistent of all the faces in the Mesh3D which were only connected to one cell. ","This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Geometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Geometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Geometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Geometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Geometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Geometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Geometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Geometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Geometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"grid","namespace":"BH.oM.Geometry.SettingOut","memberName":"Grid","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.SettingOut.Grid: ","An individual Grid 'line' - can be curved or free-form as well as simple linear line segments. ","Useful for coordination and setting out of spatial objects for transdisciplinary workflows."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IGeometry","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"GetLineSegment","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"pt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsPartiallyContaining","assemblyName":"Geometry_Engine.dll","descriptionParts":["Determines whether a polyline contains any of the points provided. True if at least 1 point is contained by the polyline. ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["A polyline container to determine the boundaries of being contained. ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of points to check whether any of them are contained by the polyline. ","This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"acceptOnEdge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Determine whether to accept a point on the edge of the polyline as being contained or not. Default false ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if at least one of the provided points is contained by the polyline, false if none of the points are. ","This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"basis","namespace":"BH.oM.Geometry","memberName":"Basis","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space"],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"Basis","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"coordinateSystem","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ellipse","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Loft","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"Loft","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Pipe","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"Pipe","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"face","namespace":"BH.oM.Geometry","memberName":"Face","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Face: ","A triangular or quadrilateral shape forming the basis of a polygon Mesh. Defined by corner vertices referencing indices of a Point list. See BH.oM.Geometry.Mesh object for usage.","A value of -1 for the fourth vertex D indicates the Face is triangular."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"Face","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Face: ","A triangular or quadrilateral shape forming the basis of a polygon Mesh. Defined by corner vertices referencing indices of a Point list. See BH.oM.Geometry.Mesh object for usage.","A value of -1 for the fourth vertex D indicates the Face is triangular."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"group","namespace":"BH.oM.Geometry","memberName":"CompositeGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"CompositeGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IIsEqual","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1},{"inputName":"other","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"coordinateSystem","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Cartesian","namespace":"BH.oM.Geometry.CoordinateSystem","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Circle","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ellipse","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Ellipse","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Extrusion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Loft","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Loft","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PlanarSurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"Pipe","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Pipe","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolySurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"face","namespace":"BH.oM.Geometry","memberName":"Face","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Face: ","A triangular or quadrilateral shape forming the basis of a polygon Mesh. Defined by corner vertices referencing indices of a Point list. See BH.oM.Geometry.Mesh object for usage.","A value of -1 for the fourth vertex D indicates the Face is triangular."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Face","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Face: ","A triangular or quadrilateral shape forming the basis of a polygon Mesh. Defined by corner vertices referencing indices of a Point list. See BH.oM.Geometry.Mesh object for usage.","A value of -1 for the fourth vertex D indicates the Face is triangular."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"group","namespace":"BH.oM.Geometry","memberName":"CompositeGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CompositeGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"quaternion","namespace":"BH.oM.Geometry","memberName":"Quaternion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Quaternion: ","A four-dimensional vector, useful in calculation of affine transformations in three-dimensional space. See also BH.oM.Geometry.TransformMatrix."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Quaternion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Quaternion: ","A four-dimensional vector, useful in calculation of affine transformations in three-dimensional space. See also BH.oM.Geometry.TransformMatrix."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TransformMatrix","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"basis","namespace":"BH.oM.Geometry","memberName":"Basis","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Basis","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Clone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"trim","namespace":"BH.oM.Geometry","memberName":"SurfaceTrim","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.SurfaceTrim: ","A pair of curves representing the boundary of a trimmed surface in both global X, Y, Z coordinates (Curve3d) as well as local surface U, V parameter space (Curve2d).","A Surface Trim is immutable to ensure compatiblity of both curves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SurfaceTrim","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.SurfaceTrim: ","A pair of curves representing the boundary of a trimmed surface in both global X, Y, Z coordinates (Curve3d) as well as local surface U, V parameter space (Curve2d).","A Surface Trim is immutable to ensure compatiblity of both curves."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IClone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IClone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IClone","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Angle","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"v1","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"v2","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Angle","assemblyName":"Geometry_Engine.dll","descriptionParts":["Calculates the counterclockwise angle between two vectors in a plane ",""],"inputs":[{"inputName":"v1","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"v2","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"p","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Angle","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"SignedAngle","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"a","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"b","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"normal","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Angle","assemblyName":"Geometry_Engine.dll","descriptionParts":["Gets the smallest angle between three points between 0 and pi radians. Angle is 0 if the three points form a straight line. The order of points is crucial to the calculation, as the points will imagine a line is connecting them in the order provided ",""],"inputs":[{"inputName":"firstPt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The first Point of the three to calculate the angle between ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"secondPt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The second point of the three to calculate the angle between ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"thirdPt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The third point of the three to calculate the angle between ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The smallest angle between the three points in radians ","This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"IArea","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Area","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Area","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Area","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Area","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Area","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Area","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Area","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pSurf","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Area","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pSurf","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Area","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"v1","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"v2","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Average","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Point>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Average","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vs","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Vector","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Vector>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"coordinateSystem","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"boundingBox","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ellipse","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry","className":"Query","memberName":"Bounds","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Geometry.SettingOut","className":"Create","memberName":"Grid","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Grid","namespace":"BH.oM.Geometry.SettingOut","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.SettingOut.Grid: ","An individual Grid 'line' - can be curved or free-form as well as simple linear line segments. ","Useful for coordination and setting out of spatial objects for transdisciplinary workflows."]}},{"namespace":"BH.Engine.Geometry.SettingOut","className":"Create","memberName":"Grid","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Grid","namespace":"BH.oM.Geometry.SettingOut","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.SettingOut.Grid: ","An individual Grid 'line' - can be curved or free-form as well as simple linear line segments. ","Useful for coordination and setting out of spatial objects for transdisciplinary workflows."]}},{"namespace":"BH.Engine.Geometry.SettingOut","className":"Create","memberName":"Grid","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Grid","namespace":"BH.oM.Geometry.SettingOut","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.SettingOut.Grid: ","An individual Grid 'line' - can be curved or free-form as well as simple linear line segments. ","Useful for coordination and setting out of spatial objects for transdisciplinary workflows."]}},{"namespace":"BH.Engine.Geometry.SettingOut","className":"Create","memberName":"Grid","assemblyName":"Geometry_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Grid","namespace":"BH.oM.Geometry.SettingOut","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.SettingOut.Grid: ","An individual Grid 'line' - can be curved or free-form as well as simple linear line segments. ","Useful for coordination and setting out of spatial objects for transdisciplinary workflows."]}},{"namespace":"BH.Engine.Graphics","className":"Convert","memberName":"ToRenderMesh","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"RenderMesh","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMesh"]}},{"namespace":"BH.Engine.Graphics","className":"Convert","memberName":"ColourFromObject","assemblyName":"Graphics_Engine.dll","descriptionParts":["Converts an object to a Color, first by casting the input object, secondly, if the object is a string attempts to extract ARGB values or html string. ",""],"inputs":[{"inputName":"colourObject","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["The object to convert. ","This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Color","namespace":"System.Drawing","isGeneric":"0","descriptionParts":["Colour extracted from the object or Color.Black if the conversion fails. ","This is a Color"]}},{"namespace":"BH.Engine.Graphics","className":"Convert","memberName":"ToSVGString","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"svgStyle","namespace":"BH.oM.Graphics","memberName":"SVGStyle","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.SVGStyle"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Graphics","className":"Convert","memberName":"ToSVGString","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"svgObject","namespace":"BH.oM.Graphics","memberName":"SVGObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.SVGObject"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Graphics","className":"Convert","memberName":"ToSVGString","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"svgDocument","namespace":"BH.oM.Graphics","memberName":"SVGDocument","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.SVGDocument"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Graphics","className":"Convert","memberName":"IToSVGString","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Graphics","className":"Convert","memberName":"ToSVGString","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Graphics","className":"Convert","memberName":"ToSVGString","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Graphics","className":"Convert","memberName":"ToSVGString","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Graphics","className":"Convert","memberName":"ToSVGString","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Graphics","className":"Convert","memberName":"ToSVGString","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ellipse","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Graphics","className":"Convert","memberName":"ToSVGString","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Graphics","className":"Convert","memberName":"ToSVGString","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"nurbCurve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Graphics","className":"Convert","memberName":"ToDataList","assemblyName":"Graphics_Engine.dll","descriptionParts":["Attempts to convert an object to a collection of objects. ",""],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of objects, empty if the conversion was not possible. ","This is a List<Object>"]}},{"namespace":"BH.Engine.Graphics","className":"Create","memberName":"IMarker","assemblyName":"Graphics_Engine.dll","descriptionParts":["Create a marker object. ",""],"inputs":[{"inputName":"marker","namespace":"BH.oM.Graphics.Components","memberName":"IMarker","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.Components.IMarker: ","Interface for arrow head markers. ","This can be of the following types: BasicArrowMarker"],"isRequired":1,"isInterface":1},{"inputName":"end","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["Point where the marker is attached. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Vector representing the direction of the marker. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["COllection of curves to represent the marker. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Graphics","className":"Create","memberName":"Marker","assemblyName":"Graphics_Engine.dll","descriptionParts":["Create a basic arrow marker object. ",""],"inputs":[{"inputName":"marker","namespace":"BH.oM.Graphics.Components","memberName":"BasicArrowMarker","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.Components.BasicArrowMarker: ","Basic arrow head marker."],"isRequired":1,"isInterface":0},{"inputName":"end","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["Point where the marker is attached. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Vector representing the direction of the marker. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["COllection of curves to represent the marker. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Graphics","className":"Create","memberName":"Marker","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"markerr","namespace":"BH.oM.Graphics.Components","memberName":"IMarker","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.Components.IMarker: ","Interface for arrow head markers. ","This can be of the following types: BasicArrowMarker"],"isRequired":1,"isInterface":1},{"inputName":"end","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Graphics","className":"Create","memberName":"Gradient","assemblyName":"Graphics_Engine.dll","descriptionParts":["Creates a colour gradient with colour values corresponding to values between 0 and 1. ",""],"inputs":[{"inputName":"colors","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System.Drawing","memberName":"Color","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Color>"],"isRequired":1,"isInterface":1},{"inputName":"positions","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Decimal","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A corresponding list of positions for the coloured markers between 0 and 1. ","This is a IEnumerable<Decimal>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Gradient","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["A colour Gradient. ","This is a BH.oM.Graphics.Gradient"]}},{"namespace":"BH.Engine.Graphics","className":"Create","memberName":"Gradient","assemblyName":"Graphics_Engine.dll","descriptionParts":["Creates a default colour gradient with colour values corresponding to values between 0 and 1 ",""],"inputs":[],"outputs":{"memberName":"Gradient","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["Default colour Gradient ","This is a BH.oM.Graphics.Gradient"]}},{"namespace":"BH.Engine.Graphics","className":"Create","memberName":"IScale","assemblyName":"Graphics_Engine.dll","descriptionParts":["Create a scale based on an input domain and out range. ",""],"inputs":[{"inputName":"domain","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The configuration properties for the box representation. ","This is a List<Object>"],"isRequired":1,"isInterface":0},{"inputName":"range","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Dataset of a BH.oM.Analytical.Elements.Graph where Graph.Entities are one element of type BHoMGroup in Dataset.Data and Graph.Relations are another element of type BHoMGroup in Dataset.Data. ","This is a List<Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IScale","namespace":"BH.oM.Graphics.Scales","isGeneric":"0","descriptionParts":["The created scale. ","This is a BH.oM.Graphics.Scales.IScale: ","Base interface for all graphics scales. ","This can be of the following types: ScaleLinear, ScaleOrdinal"]}},{"namespace":"BH.Engine.Graphics","className":"Create","memberName":"SVGStyle","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"strokeWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"strokeColor","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"fillColor","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"strokeOpacity","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"fillOpacity","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"strokeDash","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Double>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SVGStyle","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.SVGStyle"]}},{"namespace":"BH.Engine.Graphics","className":"Create","memberName":"SVGObject","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"shapes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"IGeometry","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<IGeometry> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":0},{"inputName":"style","namespace":"BH.oM.Graphics","memberName":"SVGStyle","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.SVGStyle"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SVGObject","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.SVGObject"]}},{"namespace":"BH.Engine.Graphics","className":"Create","memberName":"SVGDocument","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"svgObjects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Graphics","memberName":"SVGObject","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<SVGObject>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SVGDocument","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.SVGDocument"]}},{"namespace":"BH.Engine.Graphics","className":"Create","memberName":"SVGDocument","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"svgObjects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Graphics","memberName":"SVGObject","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<SVGObject>"],"isRequired":1,"isInterface":0},{"inputName":"canvas","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SVGDocument","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.SVGDocument"]}},{"namespace":"BH.Engine.Graphics","className":"Modify","memberName":"IRepresentationFragment","assemblyName":"Graphics_Engine.dll","descriptionParts":["Adds representation fragments to IBHoMObjects. ",""],"inputs":[{"inputName":"component","namespace":"BH.oM.Graphics.Components","memberName":"IComponent","isGeneric":"0","descriptionParts":["The configuration properties for the representation. ","This is a BH.oM.Graphics.Components.IComponent: ","Interface for all component objects. ","This can be of the following types: Links, Boxes"],"isRequired":1,"isInterface":1},{"inputName":"dataset","namespace":"BH.oM.Data.Library","memberName":"Dataset","isGeneric":"0","descriptionParts":["Dataset of a BH.oM.Analytical.Elements.Graph where Graph.Entities are one element of type BHoMGroup in Dataset.Data and Graph.Relations are another element of type BHoMGroup in Dataset.Data. ","This is a BH.oM.Data.Library.Dataset"],"isRequired":1,"isInterface":0},{"inputName":"viewConfig","namespace":"BH.oM.Graphics.Views","memberName":"ViewConfig","isGeneric":"0","descriptionParts":["The configuration properties for the view. ","This is a BH.oM.Graphics.Views.ViewConfig: ","Configuration properties for view objects."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Graphics","className":"Modify","memberName":"RepresentationFragment","assemblyName":"Graphics_Engine.dll","descriptionParts":["Adds box representation fragments to IBHoMObjects. ",""],"inputs":[{"inputName":"component","namespace":"BH.oM.Graphics.Components","memberName":"Boxes","isGeneric":"0","descriptionParts":["The configuration properties for the box representation. ","This is a BH.oM.Graphics.Components.Boxes: ","Rectangular box configuration for representation of entity boundaries."],"isRequired":1,"isInterface":0},{"inputName":"dataset","namespace":"BH.oM.Data.Library","memberName":"Dataset","isGeneric":"0","descriptionParts":["Dataset of a BH.oM.Analytical.Elements.Graph where Graph.Entities are one element of type BHoMGroup in Dataset.Data. ","This is a BH.oM.Data.Library.Dataset"],"isRequired":1,"isInterface":0},{"inputName":"viewConfig","namespace":"BH.oM.Graphics.Views","memberName":"ViewConfig","isGeneric":"0","descriptionParts":["The configuration properties for the view. ","This is a BH.oM.Graphics.Views.ViewConfig: ","Configuration properties for view objects."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Graphics","className":"Modify","memberName":"IView","assemblyName":"Graphics_Engine.dll","descriptionParts":["Modifies a dataset by adding representation fragments to define a view of the data. ",""],"inputs":[{"inputName":"view","namespace":"BH.oM.Graphics.Views","memberName":"IView","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.Views.IView: ","Base interface for all graphics view objects. ","This can be of the following types: DependencyChart, ViewConfig"],"isRequired":1,"isInterface":1},{"inputName":"dataset","namespace":"BH.oM.Data.Library","memberName":"Dataset","isGeneric":"0","descriptionParts":["Dataset to generate a view of. ","This is a BH.oM.Data.Library.Dataset"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Graphics","className":"Modify","memberName":"View","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"view","namespace":"BH.oM.Graphics.Views","memberName":"IView","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.Views.IView: ","Base interface for all graphics view objects. ","This can be of the following types: DependencyChart, ViewConfig"],"isRequired":1,"isInterface":1},{"inputName":"dataset","namespace":"BH.oM.Data.Library","memberName":"Dataset","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Library.Dataset"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Graphics","className":"Modify","memberName":"View","assemblyName":"Graphics_Engine.dll","descriptionParts":["Modifies a dataset by adding representation fragments to define a view of the data. ",""],"inputs":[{"inputName":"view","namespace":"BH.oM.Graphics.Views","memberName":"DependencyChart","isGeneric":"0","descriptionParts":["The configuration properties for the view representation. ","This is a BH.oM.Graphics.Views.DependencyChart: ","Scale for mapping from a discrete domain and range."],"isRequired":1,"isInterface":0},{"inputName":"dataset","namespace":"BH.oM.Data.Library","memberName":"Dataset","isGeneric":"0","descriptionParts":["Dataset of a BH.oM.Analytical.Elements.Graph where Graph.Entities are one element of type BHoMGroup in Dataset.Data and Graph.Relations are another element of type BHoMGroup in Dataset.Data. ","This is a BH.oM.Data.Library.Dataset"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Graphics","className":"Query","memberName":"Color","assemblyName":"Graphics_Engine.dll","descriptionParts":["Gets a color from a gradient at the spacified position between 0 and 1 ",""],"inputs":[{"inputName":"gradient","namespace":"BH.oM.Graphics","memberName":"Gradient","isGeneric":"0","descriptionParts":["The gradient to Query a Color from ","This is a BH.oM.Graphics.Gradient"],"isRequired":1,"isInterface":0},{"inputName":"val","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number between 0 and 1 to use for interpolation of the markers colors ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Color","namespace":"System.Drawing","isGeneric":"0","descriptionParts":["The Color at the specified position ","This is a Color"]}},{"namespace":"BH.Engine.Graphics","className":"Query","memberName":"Color","assemblyName":"Graphics_Engine.dll","descriptionParts":["Gets a color from a gradient at the spacified position scaled between from and to ",""],"inputs":[{"inputName":"gradient","namespace":"BH.oM.Graphics","memberName":"Gradient","isGeneric":"0","descriptionParts":["The gradient to Query a Color from ","This is a BH.oM.Graphics.Gradient"],"isRequired":1,"isInterface":0},{"inputName":"val","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number between 'from' and 'to' to use for interpolation of the markers colors ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"from","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The lower bound of 'val's rescaling to 0 to 1 ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"to","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The upper bound of 'val's rescaling to 0 to 1 ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Color","namespace":"System.Drawing","isGeneric":"0","descriptionParts":["The Color at the specified position ","This is a Color"]}},{"namespace":"BH.Engine.Graphics","className":"Query","memberName":"Bounds","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"svg","namespace":"BH.oM.Graphics","memberName":"SVGObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.SVGObject"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Graphics","className":"Query","memberName":"Bounds","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"svg","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Graphics","memberName":"SVGObject","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<SVGObject>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Graphics","className":"Query","memberName":"Bounds","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"svg","namespace":"BH.oM.Graphics","memberName":"SVGDocument","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.SVGDocument"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Graphics","className":"Query","memberName":"Bounds","assemblyName":"Graphics_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"svg","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Graphics","memberName":"SVGDocument","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<SVGDocument>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Graphics","className":"Query","memberName":"IsNumericType","assemblyName":"Graphics_Engine.dll","descriptionParts":["Query and object to see if it is a numeric type. ",""],"inputs":[{"inputName":"o","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Boolean indicating if the object is numeric. ","This is a Boolean"]}},{"namespace":"BH.Engine.Graphics.Scales","className":"Query","memberName":"IScale","assemblyName":"Graphics_Engine.dll","descriptionParts":["Given a value in the input domain, returns the corresponding value in the output range of a scale. ",""],"inputs":[{"inputName":"scale","namespace":"BH.oM.Graphics.Scales","memberName":"IScale","isGeneric":"0","descriptionParts":["The scale to query. ","This is a BH.oM.Graphics.Scales.IScale: ","Base interface for all graphics scales. ","This can be of the following types: ScaleLinear, ScaleOrdinal"],"isRequired":1,"isInterface":1},{"inputName":"value","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["A value in the input domain. ","This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["The value from output range. ","This is a Object"]}},{"namespace":"BH.Engine.Graphics.Scales","className":"Query","memberName":"Scale","assemblyName":"Graphics_Engine.dll","descriptionParts":["Given a value in the input domain, returns the corresponding value in the output range of a scale. ",""],"inputs":[{"inputName":"scale","namespace":"BH.oM.Graphics.Scales","memberName":"ScaleLinear","isGeneric":"0","descriptionParts":["The scale to query. ","This is a BH.oM.Graphics.Scales.ScaleLinear: ","Scale for mapping a continuous, quantitative input domain to a continuous output range."],"isRequired":1,"isInterface":0},{"inputName":"value","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["A value in the input domain. ","This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["The value from output range. ","This is a Object"]}},{"namespace":"BH.Engine.Graphics.Scales","className":"Query","memberName":"Scale","assemblyName":"Graphics_Engine.dll","descriptionParts":["Given a value in the input domain, returns the corresponding value in the output range of a scale. ",""],"inputs":[{"inputName":"scale","namespace":"BH.oM.Graphics.Scales","memberName":"ScaleOrdinal","isGeneric":"0","descriptionParts":["The scale to query. ","This is a BH.oM.Graphics.Scales.ScaleOrdinal: ","Scale for mapping from a discrete input domain to a discrete output range."],"isRequired":1,"isInterface":0},{"inputName":"value","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["A value in the input domain. ","This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["The value from output range. ","This is a Object"]}},{"namespace":"BH.Engine.Graphics.Scales","className":"Query","memberName":"Scale","assemblyName":"Graphics_Engine.dll","descriptionParts":["Given a value in the input domain, returns the corresponding value in the output range of a scale. ",""],"inputs":[{"inputName":"scale","namespace":"BH.oM.Graphics.Scales","memberName":"IScale","isGeneric":"0","descriptionParts":["The scale to query. ","This is a BH.oM.Graphics.Scales.IScale: ","Base interface for all graphics scales. ","This can be of the following types: ScaleLinear, ScaleOrdinal"],"isRequired":1,"isInterface":1},{"inputName":"value","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["A value in the input domain. ","This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["The value from output range. ","This is a Object"]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"ToNodeParam","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"param","namespace":"Grasshopper.Kernel","memberName":"IGH_Param","isGeneric":"0","descriptionParts":["This is a IGH_Param ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"parentId","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["This is a Guid"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"INodeParam","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.INodeParam: ","Interface common to all syntax nodes parameters ","This can be of the following types: DataParam, ReceiverParam"]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"ToReceiverParam","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"param","namespace":"Grasshopper.Kernel","memberName":"IGH_Param","isGeneric":"0","descriptionParts":["This is a IGH_Param ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"parentId","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["This is a Guid"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ReceiverParam","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.ReceiverParam: ","Input of a syntax node."]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"ToDataParam","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"param","namespace":"Grasshopper.Kernel","memberName":"IGH_Param","isGeneric":"0","descriptionParts":["This is a IGH_Param ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"parentId","namespace":"System","memberName":"Guid","isGeneric":"0","descriptionParts":["This is a Guid"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"DataParam","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.DataParam: ","Output of a syntax node."]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"IToNode","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"component","namespace":"Grasshopper.Kernel","memberName":"GH_Component","isGeneric":"0","descriptionParts":["This is a GH_Component"],"isRequired":1,"isInterface":0},{"inputName":"selectedItem","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":0,"isInterface":0},{"inputName":"callerTypeName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"INode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"IToNode","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"component","namespace":"Grasshopper.Kernel","memberName":"GH_Param","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Grasshopper","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a GH_Param<T>"],"isRequired":1,"isInterface":0},{"inputName":"choices","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":0,"isInterface":0},{"inputName":"selectedItem","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"INode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"ToNode","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"component","namespace":"Grasshopper.Kernel","memberName":"GH_Component","isGeneric":"0","descriptionParts":["This is a GH_Component"],"isRequired":1,"isInterface":0},{"inputName":"method","namespace":"System.Reflection","memberName":"MethodInfo","isGeneric":"0","descriptionParts":["This is a MethodInfo"],"isRequired":1,"isInterface":0},{"inputName":"callerTypeName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"INode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"ToNode","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"component","namespace":"Grasshopper.Kernel","memberName":"GH_Component","isGeneric":"0","descriptionParts":["This is a GH_Component"],"isRequired":1,"isInterface":0},{"inputName":"constructor","namespace":"System.Reflection","memberName":"ConstructorInfo","isGeneric":"0","descriptionParts":["This is a ConstructorInfo"],"isRequired":1,"isInterface":0},{"inputName":"callerTypeName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ConstructorNode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.ConstructorNode: ","A syntax node representing a call to a constructor."]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"ToNode","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"component","namespace":"Grasshopper.Kernel","memberName":"GH_Component","isGeneric":"0","descriptionParts":["This is a GH_Component"],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"callerTypeName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"INode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"ToNode","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"component","namespace":"Grasshopper.Kernel","memberName":"GH_Component","isGeneric":"0","descriptionParts":["This is a GH_Component"],"isRequired":1,"isInterface":0},{"inputName":"callerTypeName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"INode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"ToNode","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"component","namespace":"Grasshopper.Kernel","memberName":"GH_Component","isGeneric":"0","descriptionParts":["This is a GH_Component"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"INode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"ToNode","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"component","namespace":"Grasshopper.Kernel.Special","memberName":"GH_ValueList","isGeneric":"0","descriptionParts":["This is a GH_ValueList"],"isRequired":1,"isInterface":0},{"inputName":"choices","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0},{"inputName":"selectedItem","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"INode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"ToNode","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"component","namespace":"Grasshopper.Kernel.Special","memberName":"GH_Panel","isGeneric":"0","descriptionParts":["This is a GH_Panel"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"INode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"ToNode","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"component","namespace":"Grasshopper.Kernel.Special","memberName":"GH_NumberSlider","isGeneric":"0","descriptionParts":["This is a GH_NumberSlider"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"INode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"ToNode","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"component","namespace":"Grasshopper.Kernel.Special","memberName":"GH_BooleanToggle","isGeneric":"0","descriptionParts":["This is a GH_BooleanToggle"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"INode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"ToNode","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"component","namespace":"Grasshopper.Kernel","memberName":"GH_Param","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Grasshopper","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a GH_Param<T>"],"isRequired":1,"isInterface":0},{"inputName":"choices","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":0,"isInterface":0},{"inputName":"selectedItem","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"INode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"ToNode","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"component","namespace":"Grasshopper.Kernel","memberName":"GH_Param","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Grasshopper","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a GH_Param<T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"INode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"ToNodeGroup","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"group","namespace":"Grasshopper.Kernel.Special","memberName":"GH_Group","isGeneric":"0","descriptionParts":["This is a GH_Group"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NodeGroup","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.NodeGroup: ","A group of syntax nodes referenced by their Guid."]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"ToType","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"typeString","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Type","namespace":"System","isGeneric":"0","descriptionParts":["This is a Type"]}},{"namespace":"BH.Engine.Grasshopper","className":"Convert","memberName":"ToRhino","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"x","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Grasshopper","className":"Create","memberName":"DataTree","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"data","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"IEnumerable","isInterface":"1","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Grasshopper","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<IEnumerable<T>>"],"isRequired":1,"isInterface":0},{"inputName":"iteration","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"DataTree","namespace":"Grasshopper","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Grasshopper","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a DataTree<T>"]}},{"namespace":"BH.Engine.Grasshopper","className":"Create","memberName":"DataTree","assemblyName":"Grasshopper_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"data","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"IEnumerable","isInterface":"1","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Grasshopper","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<IEnumerable<T>>"],"isRequired":1,"isInterface":0},{"inputName":"iteration","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"paths","namespace":"System.Collections.Generic","memberName":"IList","isGeneric":"1","inheritances":[{"namespace":"Grasshopper.Kernel.Data","memberName":"GH_Path","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IList<GH_Path>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"DataTree","namespace":"Grasshopper","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Grasshopper","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a DataTree<T>"]}},{"namespace":"BH.Engine.Adapters.GSA","className":"Create","memberName":"GSAConfig","assemblyName":"GSA_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"steelDesign","namespace":"BH.oM.Adapters.GSA","memberName":"SteelDesignSpecification","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.GSA.SteelDesignSpecification ","Enum values: ","-Eurocode1993 ","-ASCI"],"isRequired":0,"isInterface":0},{"inputName":"concreteDesign","namespace":"BH.oM.Adapters.GSA","memberName":"ConcreteDesignSpecification","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.GSA.ConcreteDesignSpecification ","Enum values: ","-Eurocode1992 ","-ACI"],"isRequired":0,"isInterface":0},{"inputName":"country","namespace":"BH.oM.Adapters.GSA","memberName":"Country","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.GSA.Country ","Enum values: ","-Undefined ","-UK ","-US ","-Germany ","-NL ","-France ","-Italy ","-Denmark ","-Singapore"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GSAConfig","namespace":"BH.oM.Adapters.GSA","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.GSA.GSAConfig: ","Configurations specific for an Adapter Action (Push, Pull, etc).","Consider that your tookit might have a more specific implementation available. Try to look for [your toolkit name]ActionConfig."]}},{"namespace":"BH.Engine.Adapters.GSA","className":"Query","memberName":"GSAId","assemblyName":"GSA_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"BHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.Adapters.GSA","className":"Modify","memberName":"SetGSAId","assemblyName":"GSA_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"BHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"id","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Adapters.GSA","className":"Modify","memberName":"SetAnalysisType","assemblyName":"GSA_Engine.dll","descriptionParts":["Sets the analysis type and stage for a LoadCombination ",""],"inputs":[{"inputName":"loadcombination","namespace":"BH.oM.Structure.Loads","memberName":"LoadCombination","isGeneric":"0","descriptionParts":["The load combination to set stage and analysis type for. ","This is a BH.oM.Structure.Loads.LoadCombination: ","Load combination class to set up combination of factored Loadcases."],"isRequired":1,"isInterface":0},{"inputName":"analysisType","namespace":"BH.oM.Adapters.GSA","memberName":"AnalysisType","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.GSA.AnalysisType: ","Controls which type of analysis solver used for a Loadcombination. ","Enum values: ","-LinearStatic: Standard linear static solver. ","-NonLinearStatic: Full non linear solver making use of the dynamic relaxtion solver. ","-FormFinding: Formfinding, using dynamic relaxtion, updating geometry and pre-stress values of the model. ","-SoapFilm: Formfinding, using dynamic relaxtion, updating geometry to match specified pre-stress."],"isRequired":0,"isInterface":0},{"inputName":"stage","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The stage number for the combination to be run on. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LoadCombination","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The loadcombination with set analysis type and stage. ","This is a BH.oM.Structure.Loads.LoadCombination: ","Load combination class to set up combination of factored Loadcases."]}},{"namespace":"BH.Engine.Adapters.HTTP","className":"Compute","memberName":"GetRequest","assemblyName":"HTTP_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"uri","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.HTTP","className":"Compute","memberName":"MakeRequestAsync","assemblyName":"HTTP_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"request","namespace":"BH.oM.Adapters.HTTP","memberName":"GetRequest","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.HTTP.GetRequest"],"isRequired":1,"isInterface":0},{"inputName":"client","namespace":"System.Net.Http","memberName":"HttpClient","isGeneric":"0","descriptionParts":["This is a HttpClient"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Task","namespace":"System.Threading.Tasks","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Task<String>"]}},{"namespace":"BH.Engine.Adapters.HTTP","className":"Compute","memberName":"MakeRequest","assemblyName":"HTTP_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"request","namespace":"BH.oM.Adapters.HTTP","memberName":"GetRequest","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.HTTP.GetRequest"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.HTTP","className":"Compute","memberName":"MakeRequestBinary","assemblyName":"HTTP_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"request","namespace":"BH.oM.Adapters.HTTP","memberName":"GetRequest","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.HTTP.GetRequest"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Byte[]","namespace":"System","isGeneric":"0","descriptionParts":["This is a Byte[]"]}},{"namespace":"BH.Engine.Adapters.HTTP","className":"Convert","memberName":"ToUrlString","assemblyName":"HTTP_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"request","namespace":"BH.oM.Adapters.HTTP","memberName":"GetRequest","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.HTTP.GetRequest"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.HTTP","className":"Convert","memberName":"ToUrlString","assemblyName":"HTTP_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"baseUrl","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"parameters","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<String, Object>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.HTTP","className":"Convert","memberName":"ToUrlString","assemblyName":"HTTP_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"data","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<String, Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.HTTP","className":"Convert","memberName":"ToUrlString","assemblyName":"HTTP_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"BH.oM.Base","memberName":"CustomObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.CustomObject"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.HTTP","className":"Create","memberName":"GetRequest","assemblyName":"HTTP_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"baseUrl","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"headers","namespace":"BH.oM.Base","memberName":"CustomObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.CustomObject"],"isRequired":0,"isInterface":0},{"inputName":"parameters","namespace":"BH.oM.Base","memberName":"CustomObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.CustomObject"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GetRequest","namespace":"BH.oM.Adapters.HTTP","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.HTTP.GetRequest"]}},{"namespace":"BH.Engine.Adapters.HTTP","className":"Create","memberName":"HTTPAdapterConfig","assemblyName":"HTTP_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"secondsToTimeout","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"HTTPConfig","namespace":"BH.oM.Adapters.HTTP","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.HTTP.HTTPConfig: ","Configurations specific for an Adapter Action (Push, Pull, etc).","Consider that your tookit might have a more specific implementation available. Try to look for [your toolkit name]ActionConfig."]}},{"namespace":"BH.Engine.Humans","className":"Create","memberName":"Head","assemblyName":"Humans_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"eyeRefLocation","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"viewDirection","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Head","namespace":"BH.oM.Humans.BodyParts","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.BodyParts.Head"]}},{"namespace":"BH.Engine.Humans","className":"Create","memberName":"pairOfEyes","assemblyName":"Humans_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"viewDirection","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PairOfEyes","namespace":"BH.oM.Humans.BodyParts","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.BodyParts.PairOfEyes"]}},{"namespace":"BH.Engine.Humans","className":"Create","memberName":"Employee","assemblyName":"Humans_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"email","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Employee","namespace":"BH.oM.Humans","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.Employee"]}},{"namespace":"BH.Engine.Humans","className":"Create","memberName":"Eye","assemblyName":"Humans_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"Eye","namespace":"BH.oM.Humans.BodyParts","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.BodyParts.Eye"]}},{"namespace":"BH.Engine.Humans","className":"Create","memberName":"Human","assemblyName":"Humans_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Human","namespace":"BH.oM.Humans","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.Human"]}},{"namespace":"BH.Engine.Humans","className":"Create","memberName":"Skeleton","assemblyName":"Humans_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"trackingPoints","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Humans","memberName":"JointName","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<JointName, Point>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Skeleton","namespace":"BH.oM.Humans","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.Skeleton"]}},{"namespace":"BH.Engine.Humans","className":"Query","memberName":"TrackingLines","assemblyName":"Humans_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"skeleton","namespace":"BH.oM.Humans","memberName":"Skeleton","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.Skeleton"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<String, Line>"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Create","memberName":"Audience","assemblyName":"Humans_Engine.dll","descriptionParts":["Copy an audience ",""],"inputs":[{"inputName":"audienceToCopy","namespace":"BH.oM.Humans.ViewQuality","memberName":"Audience","isGeneric":"0","descriptionParts":["Audience to copy ","This is a BH.oM.Humans.ViewQuality.Audience"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Audience","namespace":"BH.oM.Humans.ViewQuality","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.ViewQuality.Audience"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Create","memberName":"AvalueSettings","assemblyName":"Humans_Engine.dll","descriptionParts":["Define the settings for an AvalueAnalysis ",""],"inputs":[{"inputName":"conetype","namespace":"BH.oM.Humans.ViewQuality","memberName":"ViewConeEnum","isGeneric":"0","descriptionParts":["Type of view cone ","This is a BH.oM.Humans.ViewQuality.ViewConeEnum ","Enum values: ","-StaticConeArea ","-DynamicConeArea ","-ViewFrameArea ","-Undefined"],"isRequired":1,"isInterface":0},{"inputName":"calcOcclusion","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Evalaute occulsion of the playing area by the spectators in front ","This is a Boolean"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"AvalueSettings","namespace":"BH.oM.Humans.ViewQuality","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.ViewQuality.AvalueSettings"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Create","memberName":"EyePositionParameters","assemblyName":"Humans_Engine.dll","descriptionParts":["Create a default set of eye position parameters ",""],"inputs":[{"inputName":"scale","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional input to scale from default values ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"EyePositionParameters","namespace":"BH.oM.Humans.ViewQuality","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.ViewQuality.EyePositionParameters"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Create","memberName":"EyePositionParameters","assemblyName":"Humans_Engine.dll","descriptionParts":["Create a custom set of eye position parameters ",""],"inputs":[{"inputName":"wheelChairEyePositionX","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Horizontal seated eye postion on super riser row ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"wheelChairEyePositionZ","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Vertical seated eye postion on super riser row ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"eyePositionX","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Horizontal seated eye postion on standard row ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"eyePositionZ","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Vertical seated eye postion on standard row ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"standingEyePositionX","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Horizontal standing eye postion on standard row ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"standingEyePositionZ","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Vertical standing eye postion on standard row ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"EyePositionParameters","namespace":"BH.oM.Humans.ViewQuality","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.ViewQuality.EyePositionParameters"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Create","memberName":"ViewConeType","assemblyName":"Humans_Engine.dll","descriptionParts":["Define the method used to set the ViewConen ",""],"inputs":[{"inputName":"typeNum","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["0 = StaticConeArea,1 = DynamicConeArea,2  = ViewFrameArea,3 = Undefined ","This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ViewConeEnum","namespace":"BH.oM.Humans.ViewQuality","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.ViewQuality.ViewConeEnum ","Enum values: ","-StaticConeArea ","-DynamicConeArea ","-ViewFrameArea ","-Undefined"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Create","memberName":"CvalueSettings","assemblyName":"Humans_Engine.dll","descriptionParts":["Define the settings for an CvalueAnalysis ",""],"inputs":[{"inputName":"ctype","namespace":"BH.oM.Humans.ViewQuality","memberName":"CvalueFocalMethodEnum","isGeneric":"0","descriptionParts":["Method type for finding focal points ","This is a BH.oM.Humans.ViewQuality.CvalueFocalMethodEnum ","Enum values: ","-OffsetThroughCorners ","-Closest ","-Perpendicular ","-Undefined"],"isRequired":1,"isInterface":0},{"inputName":"defaultC","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Default Cvalue assigned to points with no spectators in front ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"CvalueSettings","namespace":"BH.oM.Humans.ViewQuality","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.ViewQuality.CvalueSettings"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Create","memberName":"CvalueFocalMethod","assemblyName":"Humans_Engine.dll","descriptionParts":["Define the method used to find Cvalue focal points ",""],"inputs":[{"inputName":"typeNum","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["0 = OffsetThroughCorners,1 = Closest,2 = Perpendicular,3 = Undefined ","This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CvalueFocalMethodEnum","namespace":"BH.oM.Humans.ViewQuality","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.ViewQuality.CvalueFocalMethodEnum ","Enum values: ","-OffsetThroughCorners ","-Closest ","-Perpendicular ","-Undefined"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Create","memberName":"EvalueSettings","assemblyName":"Humans_Engine.dll","descriptionParts":["Define the settings for an EvalueAnalysis ",""],"inputs":[{"inputName":"viewtype","namespace":"BH.oM.Humans.ViewQuality","memberName":"EvalueViewEnum","isGeneric":"0","descriptionParts":["Method type for defining Spectator view direction ","This is a BH.oM.Humans.ViewQuality.EvalueViewEnum ","Enum values: ","-ToPoint: Specifies the direction used to evalaute Evalue, ToPoint uses the ActivivtyArea FocalPoint to define view direction ","-PerpendicularToRow ","-Undefined"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"EvalueSettings","namespace":"BH.oM.Humans.ViewQuality","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.ViewQuality.EvalueSettings"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Create","memberName":"EvalueViewType","assemblyName":"Humans_Engine.dll","descriptionParts":["Define the method used to set the Spectator view direction ",""],"inputs":[{"inputName":"typeNum","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["0 = ToPoint,1 = PerpendicularToRow,2  = Undefined ","This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"EvalueViewEnum","namespace":"BH.oM.Humans.ViewQuality","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.ViewQuality.EvalueViewEnum ","Enum values: ","-ToPoint: Specifies the direction used to evalaute Evalue, ToPoint uses the ActivivtyArea FocalPoint to define view direction ","-PerpendicularToRow ","-Undefined"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Create","memberName":"ViewCone","assemblyName":"Humans_Engine.dll","descriptionParts":["Create a ViewCone ",""],"inputs":[{"inputName":"up","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Vertical Vector for the ViewCone ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"horiz","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Horizontal Vector for the ViewCone ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"origin","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["Origin point for the ViewCone ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":0,"isInterface":0},{"inputName":"scale","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Scaling the head outline if not using metres ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"conetype","namespace":"BH.oM.Humans.ViewQuality","memberName":"ViewConeEnum","isGeneric":"0","descriptionParts":["Type of ViewCone to use ","This is a BH.oM.Humans.ViewQuality.ViewConeEnum ","Enum values: ","-StaticConeArea ","-DynamicConeArea ","-ViewFrameArea ","-Undefined"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ViewCone","namespace":"BH.oM.Humans.ViewQuality","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.ViewQuality.ViewCone"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Create","memberName":"Spectator","assemblyName":"Humans_Engine.dll","descriptionParts":["Create a Spectator ",""],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["Point defining the Eye location ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"viewDirection","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Vector defining the Eye view directions ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"createHeadOutline","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Should we generate the 2d head outline for this Spectator ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"scale","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Scaling the head outline if not using metres ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Spectator","namespace":"BH.oM.Humans.ViewQuality","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.ViewQuality.Spectator"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Create","memberName":"GetHeadOutline","assemblyName":"Humans_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"head","namespace":"BH.oM.Humans.BodyParts","memberName":"Head","isGeneric":"0","descriptionParts":["This is a BH.oM.Humans.BodyParts.Head"],"isRequired":1,"isInterface":0},{"inputName":"scale","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Query","memberName":"AvalueAnalysis","assemblyName":"Humans_Engine.dll","descriptionParts":["Evaulate Avalues for a single Audience ",""],"inputs":[{"inputName":"audience","namespace":"BH.oM.Humans.ViewQuality","memberName":"Audience","isGeneric":"0","descriptionParts":["Audience to evalaute ","This is a BH.oM.Humans.ViewQuality.Audience"],"isRequired":1,"isInterface":0},{"inputName":"settings","namespace":"BH.oM.Humans.ViewQuality","memberName":"AvalueSettings","isGeneric":"0","descriptionParts":["AvalueSettings to configure the evaluation ","This is a BH.oM.Humans.ViewQuality.AvalueSettings"],"isRequired":1,"isInterface":0},{"inputName":"activityArea","namespace":"BH.oM.Architecture.Theatron","memberName":"ActivityArea","isGeneric":"0","descriptionParts":["ActivityArea to use in the evaluation ","This is a BH.oM.Architecture.Theatron.ActivityArea"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Humans.ViewQuality","memberName":"Avalue","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Avalue>"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Query","memberName":"AvalueAnalysis","assemblyName":"Humans_Engine.dll","descriptionParts":["Evaulate Avalues for a List of Audience ",""],"inputs":[{"inputName":"audience","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Humans.ViewQuality","memberName":"Audience","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Audience to evalaute ","This is a List<Audience>"],"isRequired":1,"isInterface":0},{"inputName":"settings","namespace":"BH.oM.Humans.ViewQuality","memberName":"AvalueSettings","isGeneric":"0","descriptionParts":["AvalueSettings to configure the evaluation ","This is a BH.oM.Humans.ViewQuality.AvalueSettings"],"isRequired":1,"isInterface":0},{"inputName":"activityArea","namespace":"BH.oM.Architecture.Theatron","memberName":"ActivityArea","isGeneric":"0","descriptionParts":["ActivityArea to use in the evaluation ","This is a BH.oM.Architecture.Theatron.ActivityArea"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Humans.ViewQuality","memberName":"Avalue","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<Avalue>>"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Query","memberName":"CvalueAnalysis","assemblyName":"Humans_Engine.dll","descriptionParts":["Evaulate Cvalues for a single Audience ",""],"inputs":[{"inputName":"audience","namespace":"BH.oM.Humans.ViewQuality","memberName":"Audience","isGeneric":"0","descriptionParts":["Audience to evalaute ","This is a BH.oM.Humans.ViewQuality.Audience"],"isRequired":1,"isInterface":0},{"inputName":"settings","namespace":"BH.oM.Humans.ViewQuality","memberName":"CvalueSettings","isGeneric":"0","descriptionParts":["CvalueSettings to configure the evaluation ","This is a BH.oM.Humans.ViewQuality.CvalueSettings"],"isRequired":1,"isInterface":0},{"inputName":"focalPolyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["Polyline to be used for defining focal points ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Humans.ViewQuality","memberName":"Cvalue","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Cvalue>"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Query","memberName":"CvalueAnalysis","assemblyName":"Humans_Engine.dll","descriptionParts":["Evaulate Cvalues for a List of Audience ",""],"inputs":[{"inputName":"audience","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Humans.ViewQuality","memberName":"Audience","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Audience to evalaute ","This is a List<Audience>"],"isRequired":1,"isInterface":0},{"inputName":"settings","namespace":"BH.oM.Humans.ViewQuality","memberName":"CvalueSettings","isGeneric":"0","descriptionParts":["CvalueSettings to configure the evaluation ","This is a BH.oM.Humans.ViewQuality.CvalueSettings"],"isRequired":1,"isInterface":0},{"inputName":"focalPolyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["Polyline to be used for defining focal points ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Humans.ViewQuality","memberName":"Cvalue","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<Cvalue>>"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Query","memberName":"EvalueAnalysis","assemblyName":"Humans_Engine.dll","descriptionParts":["Evaulate Evalues for a single Audience ",""],"inputs":[{"inputName":"audience","namespace":"BH.oM.Humans.ViewQuality","memberName":"Audience","isGeneric":"0","descriptionParts":["Audience to evalaute ","This is a BH.oM.Humans.ViewQuality.Audience"],"isRequired":1,"isInterface":0},{"inputName":"settings","namespace":"BH.oM.Humans.ViewQuality","memberName":"EvalueSettings","isGeneric":"0","descriptionParts":["EvalueSettings to configure the evaluation ","This is a BH.oM.Humans.ViewQuality.EvalueSettings"],"isRequired":1,"isInterface":0},{"inputName":"activityArea","namespace":"BH.oM.Architecture.Theatron","memberName":"ActivityArea","isGeneric":"0","descriptionParts":["ActivityArea to use in the evaluation ","This is a BH.oM.Architecture.Theatron.ActivityArea"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Humans.ViewQuality","memberName":"Evalue","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Evalue>"]}},{"namespace":"BH.Engine.Humans.ViewQuality","className":"Query","memberName":"EvalueAnalysis","assemblyName":"Humans_Engine.dll","descriptionParts":["Evaulate Evalues for a List of Audience ",""],"inputs":[{"inputName":"audience","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Humans.ViewQuality","memberName":"Audience","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Audience to evalaute ","This is a List<Audience>"],"isRequired":1,"isInterface":0},{"inputName":"settings","namespace":"BH.oM.Humans.ViewQuality","memberName":"EvalueSettings","isGeneric":"0","descriptionParts":["EvalueSettings to configure the evaluation ","This is a BH.oM.Humans.ViewQuality.EvalueSettings"],"isRequired":1,"isInterface":0},{"inputName":"activityArea","namespace":"BH.oM.Architecture.Theatron","memberName":"ActivityArea","isGeneric":"0","descriptionParts":["ActivityArea to use in the evaluation ","This is a BH.oM.Architecture.Theatron.ActivityArea"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Humans.ViewQuality","memberName":"Evalue","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<Evalue>>"]}},{"namespace":"BH.Engine.Adapters.iAuditor","className":"Compute","memberName":"BearerToken","assemblyName":"iAuditor_Engine.dll","descriptionParts":["Returns a bearer token for the CarbonQueryDatabase system from the provided username and password ",""],"inputs":[{"inputName":"username","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Your username for the system ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"password","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Your password for the system - case sensitive, do not share scripts with this saved ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The bearer token to use the database system or the full response string if there was an error ","This is a String"]}},{"namespace":"BH.Engine.Adapters.iAuditor","className":"Create","memberName":"IAuditorRequest","assemblyName":"iAuditor_Engine.dll","descriptionParts":["Create a GetRequest for iAuditor ",""],"inputs":[{"inputName":"apiCommand","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The iAuditor REST API command to create a GetRequest with ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"bearerToken","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The iAuditor bearerToken (this can be acquired using Compute BearerToken with your EC3 username and password) ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"parameters","namespace":"BH.oM.Base","memberName":"CustomObject","isGeneric":"0","descriptionParts":["An optional CustomObject with properties representing parameters to create the GetRequest with (ie count, name_like, etc) ","This is a BH.oM.Base.CustomObject"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GetRequest","namespace":"BH.oM.Adapters.HTTP","isGeneric":"0","descriptionParts":["A GetRequest with CarbonQueryDatabase specific headers and uri ","This is a BH.oM.Adapters.HTTP.GetRequest"]}},{"namespace":"BH.Engine.Adapters.IES","className":"Convert","memberName":"ToIES","assemblyName":"IES_Engine.dll","descriptionParts":["Convert a BHoM Environment Opening to an IES string representation of an opening for GEM format - this is for vertical openings (openings on walls) ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["The BHoM Environment Opening to convert ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0},{"inputName":"hostPanel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The panels representing a single space which hosts this opening, used to check the orientation of the opening ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"settingsIES","namespace":"BH.oM.IES.Settings","memberName":"SettingsIES","isGeneric":"0","descriptionParts":["The IES settings to use with the IES adapter ","This is a BH.oM.IES.Settings.SettingsIES: ","Create a SettingsIES object for use with the IES Adapter"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The string representation for IES GEM format ","This is a List<String>"]}},{"namespace":"BH.Engine.Adapters.IES","className":"Convert","memberName":"ToIES","assemblyName":"IES_Engine.dll","descriptionParts":["Convert a BHoM Environment Opening to an IES string representation of an opening for GEM format - this is for horizontal openings (openings on roofs and floors) ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["The BHoM Environment Opening to convert ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0},{"inputName":"hostPanel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"settingsIES","namespace":"BH.oM.IES.Settings","memberName":"SettingsIES","isGeneric":"0","descriptionParts":["The IES settings to use with the IES adapter ","This is a BH.oM.IES.Settings.SettingsIES: ","Create a SettingsIES object for use with the IES Adapter"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The string representation for IES GEM format ","This is a List<String>"]}},{"namespace":"BH.Engine.Adapters.IES","className":"Convert","memberName":"FromIES","assemblyName":"IES_Engine.dll","descriptionParts":["Convert an IES string representation of an opening to a BHoM Environment Opening ",""],"inputs":[{"inputName":"openingPts","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The string representations of coordinates that make up the opening ","This is a List<String>"],"isRequired":1,"isInterface":0},{"inputName":"openingType","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The IES representation of the opening type ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"settingsIES","namespace":"BH.oM.IES.Settings","memberName":"SettingsIES","isGeneric":"0","descriptionParts":["The IES settings to use with the IES adapter ","This is a BH.oM.IES.Settings.SettingsIES: ","Create a SettingsIES object for use with the IES Adapter"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Opening","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["The BHoM Environment Opening converted from IES GEM format ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"]}},{"namespace":"BH.Engine.Adapters.IES","className":"Convert","memberName":"ToIES","assemblyName":"IES_Engine.dll","descriptionParts":["Convert a BHoM Opening Type to an IES string representation for GEM format ",""],"inputs":[{"inputName":"type","namespace":"BH.oM.Environment.Elements","memberName":"OpeningType","isGeneric":"0","descriptionParts":["The BHoM Opening Type to convert ","This is a BH.oM.Environment.Elements.OpeningType: ","The type of cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight) ","Enum values: ","-Undefined ","-CurtainWall ","-Door ","-Frame ","-Glazing ","-Hole ","-Rooflight ","-RooflightWithFrame ","-Window ","-WindowWithFrame ","-VehicleDoor"],"isRequired":1,"isInterface":0},{"inputName":"settingsIES","namespace":"BH.oM.IES.Settings","memberName":"SettingsIES","isGeneric":"0","descriptionParts":["The IES settings to use with the IES adapter ","This is a BH.oM.IES.Settings.SettingsIES: ","Create a SettingsIES object for use with the IES Adapter"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The IES string representation of the BHoM opening type ","This is a String"]}},{"namespace":"BH.Engine.Adapters.IES","className":"Convert","memberName":"FromIESOpeningType","assemblyName":"IES_Engine.dll","descriptionParts":["Convert an IES string representation of a Opening Type to a BHoM Opening Type ",""],"inputs":[{"inputName":"iesOpeningType","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The IES string representation of an opening type ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"settingsIES","namespace":"BH.oM.IES.Settings","memberName":"SettingsIES","isGeneric":"0","descriptionParts":["The IES settings to use with the IES adapter ","This is a BH.oM.IES.Settings.SettingsIES: ","Create a SettingsIES object for use with the IES Adapter"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"OpeningType","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["The BHoM Opening Type ","This is a BH.oM.Environment.Elements.OpeningType: ","The type of cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight) ","Enum values: ","-Undefined ","-CurtainWall ","-Door ","-Frame ","-Glazing ","-Hole ","-Rooflight ","-RooflightWithFrame ","-Window ","-WindowWithFrame ","-VehicleDoor"]}},{"namespace":"BH.Engine.Adapters.IES","className":"Convert","memberName":"ToIESShading","assemblyName":"IES_Engine.dll","descriptionParts":["Convert a collection of BHoM Environment Panels that represent shading elements into the IES string representation for GEM format ",""],"inputs":[{"inputName":"panelsAsShade","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of BHoM Environment Panels that represent shading elements ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"settingsIES","namespace":"BH.oM.IES.Settings","memberName":"SettingsIES","isGeneric":"0","descriptionParts":["The IES settings to use with the IES adapter ","This is a BH.oM.IES.Settings.SettingsIES: ","Create a SettingsIES object for use with the IES Adapter"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IES string representation of shade for GEM ","This is a List<String>"]}},{"namespace":"BH.Engine.Adapters.IES","className":"Convert","memberName":"ToIES","assemblyName":"IES_Engine.dll","descriptionParts":["Convert a collection of BHoM Environment Panels that represent a single volumetric space into the IES string representation for GEM format ",""],"inputs":[{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of BHoM Environment Panels that represent a space ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"settingsIES","namespace":"BH.oM.IES.Settings","memberName":"SettingsIES","isGeneric":"0","descriptionParts":["The IES settings to use with the IES adapter ","This is a BH.oM.IES.Settings.SettingsIES: ","Create a SettingsIES object for use with the IES Adapter"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IES string representation of the space for GEM ","This is a List<String>"]}},{"namespace":"BH.Engine.Adapters.IES","className":"Convert","memberName":"FromIES","assemblyName":"IES_Engine.dll","descriptionParts":["Convert an IES string representation of a space into a collection of BHoM Environment Panels ",""],"inputs":[{"inputName":"iesSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IES representation of a space ","This is a List<String>"],"isRequired":1,"isInterface":0},{"inputName":"settingsIES","namespace":"BH.oM.IES.Settings","memberName":"SettingsIES","isGeneric":"0","descriptionParts":["The IES settings to use with the IES adapter ","This is a BH.oM.IES.Settings.SettingsIES: ","Create a SettingsIES object for use with the IES Adapter"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["BHoM Environment Space ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Adapters.IES","className":"Convert","memberName":"ToIES","assemblyName":"IES_Engine.dll","descriptionParts":["Convert a BHoM Geometry Point into an IES string representation for GEM files ",""],"inputs":[{"inputName":"pt","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["BHoM Geometry Point to convert ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"settingsIES","namespace":"BH.oM.IES.Settings","memberName":"SettingsIES","isGeneric":"0","descriptionParts":["The IES settings to use with the IES adapter ","This is a BH.oM.IES.Settings.SettingsIES: ","Create a SettingsIES object for use with the IES Adapter"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The IES string representation of the point ","This is a String"]}},{"namespace":"BH.Engine.Adapters.IES","className":"Convert","memberName":"FromIES","assemblyName":"IES_Engine.dll","descriptionParts":["Convert an IES point representation to a BHoM point ",""],"inputs":[{"inputName":"iesPt","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The IES string representation of a point to convert ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"settingsIES","namespace":"BH.oM.IES.Settings","memberName":"SettingsIES","isGeneric":"0","descriptionParts":["The IES settings to use with the IES adapter ","This is a BH.oM.IES.Settings.SettingsIES: ","Create a SettingsIES object for use with the IES Adapter"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["A BHoM Geometry Point ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Adapters.IES","className":"Create","memberName":"SettingsIES","assemblyName":"IES_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"planarTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Set tolarance for planar surfaces ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SettingsIES","namespace":"BH.oM.IES.Settings","isGeneric":"0","descriptionParts":["This is a BH.oM.IES.Settings.SettingsIES: ","Create a SettingsIES object for use with the IES Adapter"]}},{"namespace":"BH.Engine.Adapters.IES","className":"Create","memberName":"SettingsIES","assemblyName":"IES_Engine.dll","descriptionParts":["Create a SettingsIES object for use with the IES Adapter ",""],"inputs":[{"inputName":"planarTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Set tolarance for planar surfaces ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Set how many decimal places coordinates should have on export ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SettingsIES","namespace":"BH.oM.IES.Settings","isGeneric":"0","descriptionParts":["The IES settings to use with the IES adapter for pull and push ","This is a BH.oM.IES.Settings.SettingsIES: ","Create a SettingsIES object for use with the IES Adapter"]}},{"namespace":"BH.Engine.Adapters.IES","className":"Modify","memberName":"RepairOpening","assemblyName":"IES_Engine.dll","descriptionParts":["The openings when converted from IES do not have the right coordinates for 3D space, this method will repair them. ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["The broken environment opening pulled from IES. ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0},{"inputName":"host","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The host panel for the opening. ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of panels defining the space around the opening. ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Opening","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["The repaired environment opening. ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"]}},{"namespace":"BH.Engine.Adapters.IES","className":"Modify","memberName":"RepairOpening","assemblyName":"IES_Engine.dll","descriptionParts":["The openings when converted from IES do not have the right coordinates for 3D space, this method will repair them. This method is for horizontal openings (openings on roofs and floors) ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["The broken environment opening pulled from IES. ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0},{"inputName":"hostPanel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The host panel for the opening. ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"hostType","namespace":"BH.oM.Environment.Elements","memberName":"PanelType","isGeneric":"0","descriptionParts":["Determines whether the host panel is the floor of the space it is part of, or the ceiling. ","This is a BH.oM.Environment.Elements.PanelType: ","The type of environmental surface (e.g. Wall, Floor, Roof) ","Enum values: ","-Undefined ","-Adiabatic ","-Air ","-Ceiling ","-CurtainWall ","-Floor ","-FloorExposed ","-FloorInternal ","-FloorRaised ","-Roof ","-Shade ","-SlabOnGrade ","-SolarPanel ","-UndergroundCeiling ","-UndergroundSlab ","-UndergroundWall ","-Wall ","-WallExternal ","-WallInternal"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Opening","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["The repaired environment opening. ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"]}},{"namespace":"BH.Engine.Adapters.IES","className":"Query","memberName":"Polyline","assemblyName":"IES_Engine.dll","descriptionParts":["Get a 2d polyline representation of a BHoM BoundingBox ",""],"inputs":[{"inputName":"box","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["The BHoM bounding box ","This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The 2d polyline representation of the box ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.LadybugTools","className":"Convert","memberName":"FromHoneybeeSurface","assemblyName":"LadybugTools_Engine.dll","descriptionParts":["Converts a Honeybee Surface object into an Environments Panel or Opening depending on the Honeybee Surface type.","If the Honeybee Surface is a Window type, then it will convert to an Environments Opening, otherwise it will convert to an Environments Panel. If the Honeybee Surface is an AirWall type then it will convert to an Environments Panel which contains an Opening with the same edges, and the Opening will be set as the Hole type.","Providing a collection of Honeybee Surfaces will return a collection of Environment objects, which may be mixed as Panels and Openings depending on the types.","You can filter out Panels from Openings using the Panels(List<IBHoMObject>) and Openings(List<IBHoMObject>) query methods in the Environment Engine. ",""],"inputs":[{"inputName":"honeybeeSrf","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["A Honeybee Surface object from the Honeybee Plus libraries ","This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnvironmentObject","namespace":"BH.oM.Environment","isGeneric":"0","descriptionParts":["Either an Environment Panel or an Environment Opening depending on the Honeybee Surface type. ","This is a BH.oM.Environment.IEnvironmentObject ","This can be of the following types: Profile, Thermostat, Building, BoundaryZone, Mesh, Edge, Opening, Panel, Space, Location, Time, Sun"]}},{"namespace":"BH.Engine.Library","className":"Convert","memberName":"ToText","assemblyName":"Library_Engine.dll","descriptionParts":["Extract all set properties from a source and generates a line separated string of the information. ",""],"inputs":[{"inputName":"source","namespace":"BH.oM.Data.Library","memberName":"Source","isGeneric":"0","descriptionParts":["Source to turn to text information. ","This is a BH.oM.Data.Library.Source"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["Text representation of the source. ","This is a String"]}},{"namespace":"BH.Engine.Library","className":"Query","memberName":"AllLibraryPathNames","assemblyName":"Library_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"]}},{"namespace":"BH.Engine.Library","className":"Query","memberName":"Datasets","assemblyName":"Library_Engine.dll","descriptionParts":["Gets the full Dataset(s) from the library, containing source information and Data ",""],"inputs":[{"inputName":"libraryName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the Dataset(s) to extract ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Library","memberName":"Dataset","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The datasets extracted from the library ","This is a List<Dataset>"]}},{"namespace":"BH.Engine.Library","className":"Query","memberName":"GeneralDisclaimer","assemblyName":"Library_Engine.dll","descriptionParts":["General disclaimer for all BHoM Datasets. ",""],"inputs":[],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Library","className":"Query","memberName":"Library","assemblyName":"Library_Engine.dll","descriptionParts":["Gets the content of the Datasets from the library ",""],"inputs":[{"inputName":"libraryName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the Dataset(s) to extract ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The data from the Dataset(s) ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Library","className":"Query","memberName":"LibraryNames","assemblyName":"Library_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"]}},{"namespace":"BH.Engine.Library","className":"Query","memberName":"LibraryTree","assemblyName":"Library_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"Tree","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Data.Collections.Tree<System.String>"]}},{"namespace":"BH.Engine.Library","className":"Query","memberName":"Names","assemblyName":"Library_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"libraryName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"]}},{"namespace":"BH.Engine.Library","className":"Query","memberName":"Match","assemblyName":"Library_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"libraryName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"objectName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"removeWhiteSpace","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"ignoreCase","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IBHoMObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Library","className":"Query","memberName":"Match","assemblyName":"Library_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"libraryName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"propertyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"value","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Library","className":"Query","memberName":"PartialMatch","assemblyName":"Library_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"libraryName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"objectName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"removeWhiteSpace","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"ignoreCase","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Library","className":"Query","memberName":"RefreshLibraries","assemblyName":"Library_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Library","className":"Query","memberName":"Source","assemblyName":"Library_Engine.dll","descriptionParts":["Gets source informations for Datasets matching the Library name ",""],"inputs":[{"inputName":"libraryName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the Dataset(s) to extract source information from ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Library","memberName":"Source","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The source of the Dataset(s) ","This is a List<Source>"]}},{"namespace":"BH.Engine.Library","className":"Query","memberName":"SourceAndDisclaimer","assemblyName":"Library_Engine.dll","descriptionParts":["Extracts the source information, if available, from a library and returns a compiled version of the source information and a general disclaimer the dataset. ",""],"inputs":[{"inputName":"libraryName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the Dataset(s) to extract source information from ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["Text representation of the source and general disclaimer of the data. ","This is a String"]}},{"namespace":"BH.Engine.Library","className":"Query","memberName":"StringMatch","assemblyName":"Library_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0},{"inputName":"propertyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"value","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"BenchmarkVariance","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Calculates the percentage change of kgCO2 between a proposed, user-created building and a baseline building based on a defined building type. ",""],"inputs":[{"inputName":"projectEmbodiedCarbon","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Combined kgCO2 per building. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"projectArea","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Total area of the building, including all floor surface area in m2. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"embodiedCarbonBenchmarkTypeDataset","namespace":"BH.oM.LifeCycleAssessment","memberName":"BuildingBenchmarkingData","isGeneric":"0","descriptionParts":["Benchmark kgCO2/m2 per building type based on program benchmark dataset. ","This is a BH.oM.LifeCycleAssessment.BuildingBenchmarkingData"],"isRequired":1,"isInterface":0},{"inputName":"embodiedCarbonBenchmarkStructureDataset","namespace":"BH.oM.LifeCycleAssessment","memberName":"BuildingBenchmarkingData","isGeneric":"0","descriptionParts":["Benchmark kgCO2/m2 per building structure based on structural benchmark dataset. ","This is a BH.oM.LifeCycleAssessment.BuildingBenchmarkingData"],"isRequired":1,"isInterface":0},{"inputName":"typeWeighting","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Subjective weighting of program type benchmark results. Used in LCA to prioritize different CO2 dataset assumptions. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"structureWeighting","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Subjective weighting of structure type benchmark results. Used in LCA to prioritize different CO2 dataset assumptions. ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Percentage variance between current project being evaluated and benchmark datasets, e.g. -30% for a building that is 30% less than the benchmark. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"AcidificationPotential","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Calculates the AcidificationPotential of a BHoM Object based on a Mass-based QuantityType Environmental Product Declaration dataset. ",""],"inputs":[{"inputName":"elementM","namespace":"BH.oM.Dimensional","memberName":"IElementM","isGeneric":"0","descriptionParts":["The IElementM Object to calculate the acidification potential. ","This is a BH.oM.Dimensional.IElementM: ","Enables Mass based operations to be performed on elements with materiality","Ensures the material composition of a physical object is represented, defined as proportions of discrete types of material forming the object's total solid volume.","Objects implementing this Interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.","Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":1,"isInterface":1},{"inputName":"epd","namespace":"BH.oM.LifeCycleAssessment.MaterialFragments","memberName":"IEnvironmentalProductDeclarationData","isGeneric":"0","descriptionParts":["A BHoM Environmental Product Declaration object with a valid value for acidification potential. ","This is a BH.oM.LifeCycleAssessment.MaterialFragments.IEnvironmentalProductDeclarationData ","This can be of the following types: SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Acidification, measured in kgSO2e, refers to emissions which increase the H+ ions in the environment causing a decrease in pH. Potential effects include fish mortality, forest decline, and the deterioration of building materials. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"AcidificationPotential","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Calculates the acidification potential from volume, density, and embodied Sulfer Dioxide quantities. These quantities may be provided within Environmental Product Declaration documentation. ",""],"inputs":[{"inputName":"volume","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Provide material volume in m^3. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"density","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Provide material density in kg/m^3. This value may be available within an EPD Dataset. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"embodiedSulfurDioxide","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Amount of embodied kg SO2/m^3 equivalent. Refer to EPD dataset for corresponding input metric. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The consequence of acids being emitted to the atmosphere and subsequently deposited in surface soils and waters measured in kg/SO2e. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"EutrophicationPotential","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Calculates the Eutrophication Potential  from volume, density, and embodied Phosphate quantities. These quantities may be provided within Environmental Product Declaration documentation. ",""],"inputs":[{"inputName":"volume","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Provide material volume in m^3.  ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"density","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Provide material density in kg/m^3. This value may be available within an EPD Dataset. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"embodiedPhosphate","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Amount of embodied kg PO4/m^3 equivalent. Refer to EPD dataset for corresponding input metric. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The pollution state of aquatic ecosystems in which the over-fertilization of water and soil has turned into an increased growth of biomass measured in kg/PO4e. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"DepletionOfAbioticResources","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Calculates the depletion of abiotic resources from volume, density, and embodied Antimony quantities. These quantities may be provided within Environmental Product Declaration documentation. ",""],"inputs":[{"inputName":"volume","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Provide material volume in m^3. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"density","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Provide material density in kg/m^3. This value may be available within an EPD Dataset. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"embodiedAntimony","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Amount of embodied kg SB/m^3 equivalent. These values can be referenced in typical EPD data as 'Depletion of Abiotic Resource Elements, non Fossil Fuel. Refer to EPD dataset for corresponding input metric.' ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The amount of depletion of non-renewable material resources measured in Sb (Antimony). ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"DepletionOfAbioticResourcesFossilFuels","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Calculates the depletion of abiotic resources fossil fuels from volume, density, and embodied Methyl Jasmonate quantities. These quantities may be provided within Environmental Product Declaration documentation. ",""],"inputs":[{"inputName":"volume","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Provide material volume in m^3. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"density","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Provide material density in kg/m^3. This value may be available within an EPD Dataset. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"embodiedMethylJasmonate","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Amount of embodied kg MJ/m^3 equivalent. These values can also be referenced within typical EPD data as 'Depletion of Abiotic Resources Fossil Fuels' or 'Primary Energy Demand'. Refer to EPD dataset for corresponding input metric. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The amount of depletion of non-renewable, fossil fuel material resources measured in kg/MJ. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"GlobalWarmingPotential","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Calculates the global warming potential from volume, density, and embodied Carbon quantities. These quantities may be provided within Environmental Product Declaration documentation. ",""],"inputs":[{"inputName":"volume","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Provide material volume in m^3. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"density","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Provide material density in kg/m^3. This value may be available within an EPD Dataset. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"embodiedCarbon","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Amount of kg CO2/m^3 equivalent. These values can also be referenced within typical EPD data as 'Global Warming Potential' or 'Embodied Carbon'. Refer to EPD dataset for corresponding input metric. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["How much heat a greenhouse gas traps in the atmosphere up to a specific time horizon, relative to carbon dioxide measured in kg/CO2e. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"OzoneDepletionPotential","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Calculates the Ozone Depletion Potential from volume, density, and embodied Trichlorofluoromethane quantities. These quantities may be provided within Environmental Product Declaration documentation. ",""],"inputs":[{"inputName":"volume","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Provide material volume in m^3. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"density","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Provide material density in kg/m^3. This value may be available within an EPD Dataset. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"embodiedTrichlorofluoromethane","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Amount of kg CFC-11/m^3 equivalent. Refer to EPD dataset for corresponding input metric. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The relative amount of degradation to the ozone layer measured in kg/CFC-11e. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"PhotochemicalOzoneCreationPotential","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Calculates the Photochemical Ozone Creation Potential from volume, density, and embodied Trioxygen quantities. These quantities may be provided within Environmental Product Declaration documentation. ",""],"inputs":[{"inputName":"volume","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Provide material volume in m^3. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"density","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Provide material density in kg/m^3. This value may be available within an EPD Dataset. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"embodiedTrioxygen","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Amount of kg O3/m^3 equivalent. Refer to EPD dataset for corresponding input metric. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The relative abilities of volatile organic compounds (VOCs) to produce ground level ozone (or Ethene) measured in kg/O3e. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"OzoneDepletionPotential","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Calculates the OzoneDepletionPotential of a BHoM Object based on a Mass-based QuantityType Environmental Product Declaration dataset. ",""],"inputs":[{"inputName":"elementM","namespace":"BH.oM.Dimensional","memberName":"IElementM","isGeneric":"0","descriptionParts":["The IElementM Object to calculate the OzoneDepletionPotential. ","This is a BH.oM.Dimensional.IElementM: ","Enables Mass based operations to be performed on elements with materiality","Ensures the material composition of a physical object is represented, defined as proportions of discrete types of material forming the object's total solid volume.","Objects implementing this Interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.","Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":1,"isInterface":1},{"inputName":"epd","namespace":"BH.oM.LifeCycleAssessment.MaterialFragments","memberName":"IEnvironmentalProductDeclarationData","isGeneric":"0","descriptionParts":["A BHoM Environmental Product Declaration object with a valid value for OzoneDepletionPotential. ","This is a BH.oM.LifeCycleAssessment.MaterialFragments.IEnvironmentalProductDeclarationData ","This can be of the following types: SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Ozone Depletion Potential, measured in kg CFC-11 equivalents, refers to emissions which contribute to the depletion of the stratospheric ozone layer. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"EutrophicationPotential","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Calculates the EutrophicationPotential of a BHoM Object based on a Mass-based QuantityType Environmental Product Declaration dataset. ",""],"inputs":[{"inputName":"elementM","namespace":"BH.oM.Dimensional","memberName":"IElementM","isGeneric":"0","descriptionParts":["The IElementM Object to calculate the EutrophicationPotential. ","This is a BH.oM.Dimensional.IElementM: ","Enables Mass based operations to be performed on elements with materiality","Ensures the material composition of a physical object is represented, defined as proportions of discrete types of material forming the object's total solid volume.","Objects implementing this Interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.","Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":1,"isInterface":1},{"inputName":"epd","namespace":"BH.oM.LifeCycleAssessment.MaterialFragments","memberName":"IEnvironmentalProductDeclarationData","isGeneric":"0","descriptionParts":["A BHoM Environmental Product Declaration object with a valid value for EutrophicationPotential. ","This is a BH.oM.LifeCycleAssessment.MaterialFragments.IEnvironmentalProductDeclarationData ","This can be of the following types: SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Eutrophication, measured in kg N equivalents, refers to emissions of nutrients like nitrogen and phosphorus causing overfertilization, leading to overgrowth of biomass that depresses oxygen levels and suffocates ecosystems. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"DepletionOfAbioticResourcesFossilFuels","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Calculates the DepletionOfAbioticResourcesFossilFuels of a BHoM Object based on a Mass-based QuantityType Environmental Product Declaration dataset. ",""],"inputs":[{"inputName":"elementM","namespace":"BH.oM.Dimensional","memberName":"IElementM","isGeneric":"0","descriptionParts":["The IElementM Object to calculate the DepletionOfAbioticResourcesFossilFuels. ","This is a BH.oM.Dimensional.IElementM: ","Enables Mass based operations to be performed on elements with materiality","Ensures the material composition of a physical object is represented, defined as proportions of discrete types of material forming the object's total solid volume.","Objects implementing this Interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.","Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":1,"isInterface":1},{"inputName":"epd","namespace":"BH.oM.LifeCycleAssessment.MaterialFragments","memberName":"IEnvironmentalProductDeclarationData","isGeneric":"0","descriptionParts":["A BHoM Environmental Product Declaration object with a valid value for DepletionOfAbioticResourcesFossilFuels. ","This is a BH.oM.LifeCycleAssessment.MaterialFragments.IEnvironmentalProductDeclarationData ","This can be of the following types: SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Depletion of non-renewable Abiotic Resources (fossil fuels) measured in Methyl Jasmonate. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"DepletionOfAbioticResources","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Calculates the DepletionOfAbioticResources of a BHoM Object based on a Mass-based QuantityType Environmental Product Declaration dataset. ",""],"inputs":[{"inputName":"elementM","namespace":"BH.oM.Dimensional","memberName":"IElementM","isGeneric":"0","descriptionParts":["The IElementM Object to calculate the DepletionOfAbioticResources. ","This is a BH.oM.Dimensional.IElementM: ","Enables Mass based operations to be performed on elements with materiality","Ensures the material composition of a physical object is represented, defined as proportions of discrete types of material forming the object's total solid volume.","Objects implementing this Interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.","Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":1,"isInterface":1},{"inputName":"epd","namespace":"BH.oM.LifeCycleAssessment.MaterialFragments","memberName":"IEnvironmentalProductDeclarationData","isGeneric":"0","descriptionParts":["A BHoM Environmental Product Declaration object with a valid value for DepletionOfAbioticResources. ","This is a BH.oM.LifeCycleAssessment.MaterialFragments.IEnvironmentalProductDeclarationData ","This can be of the following types: SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Depletion of Abiotic Resources refers to non-renewable resources such as minerals, clay, and peat measured in kg Sb (antimony) equivalent. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"GlobalWarmingPotential","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Calculates the GlobalWarmingPotential of a BHoM Object based on a Mass-based QuantityType Environmental Product Declaration dataset. ",""],"inputs":[{"inputName":"elementM","namespace":"BH.oM.Dimensional","memberName":"IElementM","isGeneric":"0","descriptionParts":["The IElementM Object to calculate the GlobalWarmingPotential. ","This is a BH.oM.Dimensional.IElementM: ","Enables Mass based operations to be performed on elements with materiality","Ensures the material composition of a physical object is represented, defined as proportions of discrete types of material forming the object's total solid volume.","Objects implementing this Interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.","Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":1,"isInterface":1},{"inputName":"epd","namespace":"BH.oM.LifeCycleAssessment.MaterialFragments","memberName":"IEnvironmentalProductDeclarationData","isGeneric":"0","descriptionParts":["A BHoM Environmental Product Declaration object with a valid value for GlobalWarmingPotential. ","This is a BH.oM.LifeCycleAssessment.MaterialFragments.IEnvironmentalProductDeclarationData ","This can be of the following types: SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Global Warming Potential, expressed in kgCO2e, refers to the emissions of carbon dioxide, methane and other gases that contribute to the greenhouse effect and global warming. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"PhotochemicalOzoneCreationPotential","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Calculates the PhotochemicalOzoneCreationPotential of a BHoM Object based on a Mass-based QuantityType Environmental Product Declaration dataset. ",""],"inputs":[{"inputName":"elementM","namespace":"BH.oM.Dimensional","memberName":"IElementM","isGeneric":"0","descriptionParts":["The IElementM Object to calculate the PhotochemicalOzoneCreationPotential. ","This is a BH.oM.Dimensional.IElementM: ","Enables Mass based operations to be performed on elements with materiality","Ensures the material composition of a physical object is represented, defined as proportions of discrete types of material forming the object's total solid volume.","Objects implementing this Interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.","Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":1,"isInterface":1},{"inputName":"epd","namespace":"BH.oM.LifeCycleAssessment.MaterialFragments","memberName":"IEnvironmentalProductDeclarationData","isGeneric":"0","descriptionParts":["A BHoM Environmental Product Declaration object with a valid value for PhotochemicalOzoneCreationPotential. ","This is a BH.oM.LifeCycleAssessment.MaterialFragments.IEnvironmentalProductDeclarationData ","This can be of the following types: SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Photochemical Ozone Creation Potential, measured in kgO3 equivalents, refers to emissions which contribute to the formation of ground-level smog. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"EvaluateEnvironmentalProductDeclarationByArea","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["This method calculates the quantity of a supplied metric by querying Environmental Impact Metrics from the EPD materialFragment and the object's area. ",""],"inputs":[{"inputName":"elementM","namespace":"BH.oM.Dimensional","memberName":"IElementM","isGeneric":"0","descriptionParts":["An IElementM object used to calculate EPD metric. ","This is a BH.oM.Dimensional.IElementM: ","Enables Mass based operations to be performed on elements with materiality","Ensures the material composition of a physical object is represented, defined as proportions of discrete types of material forming the object's total solid volume.","Objects implementing this Interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.","Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":0,"isInterface":1},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["Filter the provided EnvironmentalProductDeclaration by selecting one of the provided metrics for calculation. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GlobalWarmingPotentialResult","namespace":"BH.oM.LifeCycleAssessment.Results","isGeneric":"0","descriptionParts":["The total quantity of the desired metric based on the EnvironmentalProductDeclarationField. ","This is a BH.oM.LifeCycleAssessment.Results.GlobalWarmingPotentialResult: ","Gives the total GlobalWarmingPotential of an object based on its EnvironmentalProductDeclaration."]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"EvaluateEnvironmentalProductDeclarationByVolume","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["This method calculates the quantity of a supplied metric by querying Environmental Impact Metrics from the EPD materialFragment and the object's volume. ",""],"inputs":[{"inputName":"elementM","namespace":"BH.oM.Dimensional","memberName":"IElementM","isGeneric":"0","descriptionParts":["An IElementM object used to calculate EPD metric. ","This is a BH.oM.Dimensional.IElementM: ","Enables Mass based operations to be performed on elements with materiality","Ensures the material composition of a physical object is represented, defined as proportions of discrete types of material forming the object's total solid volume.","Objects implementing this Interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.","Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":0,"isInterface":1},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["Filter the provided EnvironmentalProductDeclaration by selecting one of the provided metrics for calculation. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GlobalWarmingPotentialResult","namespace":"BH.oM.LifeCycleAssessment.Results","isGeneric":"0","descriptionParts":["The total quantity of the desired metric based on the EnvironmentalProductDeclarationField. ","This is a BH.oM.LifeCycleAssessment.Results.GlobalWarmingPotentialResult: ","Gives the total GlobalWarmingPotential of an object based on its EnvironmentalProductDeclaration."]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"EvaluateEnvironmentalProductDeclarationByMass","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["This method calculates the quantity of a supplied metric by querying Environmental Impact Metrics from the EPD materialFragment and the object's mass. ",""],"inputs":[{"inputName":"elementM","namespace":"BH.oM.Dimensional","memberName":"IElementM","isGeneric":"0","descriptionParts":["An IElementM object used to calculate EPD metric. ","This is a BH.oM.Dimensional.IElementM: ","Enables Mass based operations to be performed on elements with materiality","Ensures the material composition of a physical object is represented, defined as proportions of discrete types of material forming the object's total solid volume.","Objects implementing this Interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.","Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":0,"isInterface":1},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["Filter the provided EnvironmentalProductDeclaration by selecting one of the provided metrics for calculation. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GlobalWarmingPotentialResult","namespace":"BH.oM.LifeCycleAssessment.Results","isGeneric":"0","descriptionParts":["The total quantity of the desired metric based on the EnvironmentalProductDeclarationField. ","This is a BH.oM.LifeCycleAssessment.Results.GlobalWarmingPotentialResult: ","Gives the total GlobalWarmingPotential of an object based on its EnvironmentalProductDeclaration."]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"EvaluateLifeCycleAssessment","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["This method calls the appropriate compute method per object within a Life Cycle Assessment. ",""],"inputs":[{"inputName":"lca","namespace":"BH.oM.LifeCycleAssessment","memberName":"ProjectLifeCycleAssessment","isGeneric":"0","descriptionParts":["This is a complete Life Cycle Assessment object with its appropriate nested scope objects for which the evaluation will occur. ","This is a BH.oM.LifeCycleAssessment.ProjectLifeCycleAssessment: ","The Life Cycle Assessment Scope object intends to provide a means of reporting all of the project criteria (name, area, type, location) as well as the objects that the study encompassed (structural slabs, foundation walls, etc) along with their properties for the Enviornmental Product Declarations they used (when using SetProperty), their densities and volumes. This object may be used for studies at any stage of development and can serve as a true means of 'apples to apples' comparison when catalogued."],"isRequired":1,"isInterface":0},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["This is the desired field you would like to evaluate. Notice that not all material datasets will contain information for all metrics. A holistic GWP evaluation is currently the only standard evaluation possible with all provided datasets. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LifeCycleAssessmentResult","namespace":"BH.oM.LifeCycleAssessment.Results","isGeneric":"0","descriptionParts":["The LifeCycleElementResult that contains project data, total results, and results per element. ","This is a BH.oM.LifeCycleAssessment.Results.LifeCycleAssessmentResult: ","Result class for a LifeCycleAssessment of a whole project. This is used to get the total quantity in terms of embodied carbon, acidification, etc. for a whole project."]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"EvaluateLifeCycleAssessmentScope","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["This method calls the appropriate compute method per object within the StructuresScope and returns results. ",""],"inputs":[{"inputName":"structuresScope","namespace":"BH.oM.LifeCycleAssessment","memberName":"StructuresScope","isGeneric":"0","descriptionParts":["This is a life cycle assessment scope object which contains all specified objects along with their associated EPD MaterialFragment data. ","This is a BH.oM.LifeCycleAssessment.StructuresScope: ","The Structures Scope object provides a template for expected objects commonly assessed within Life Cycle Assessments. Please provide as many objects with their corresponding Environmental Product Declaration data for the most accurate Life Cycle Assessment."],"isRequired":1,"isInterface":0},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["This is the desired field you would like to evaluate. Notice that not all material datasets will contain information for all metrics. A holistic GWP evaluation is currently the only standard evaluation possible with all provided datasets. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.LifeCycleAssessment.Results","memberName":"LifeCycleAssessmentElementResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The LifeCycleElementResult that contains structures scope specific data, total results, and results per element. ","This is a List<LifeCycleAssessmentElementResult>"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"EvaluateLifeCycleAssessmentScope","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["This method calls the appropriate compute method per object within the FoundationsScope and returns results. ",""],"inputs":[{"inputName":"foundationsScope","namespace":"BH.oM.LifeCycleAssessment","memberName":"FoundationsScope","isGeneric":"0","descriptionParts":["This is a life cycle assessment scope object which contains all specified objects along with their associated EPD MaterialFragment data. ","This is a BH.oM.LifeCycleAssessment.FoundationsScope: ","The Foundations Scope object provides a template for expected objects commonly assessed within Life Cycle Assessments. Please provide as many objects with their corresponding Environmental Product Declaration data for the most accurate Life Cycle Assessment."],"isRequired":1,"isInterface":0},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["This is the desired field you would like to evaluate. Notice that not all material datasets will contain information for all metrics. A holistic GWP evaluation is currently the only standard evaluation possible with all provided datasets. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.LifeCycleAssessment.Results","memberName":"LifeCycleAssessmentElementResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The LifeCycleElementResult that contains foundations scope specific data, total results, and results per element. ","This is a List<LifeCycleAssessmentElementResult>"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"EvaluateLifeCycleAssessmentScope","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["This method calls the appropriate compute method per object within the EnclosuresScope and returns results. ",""],"inputs":[{"inputName":"enclosuresScope","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnclosuresScope","isGeneric":"0","descriptionParts":["This is a life cycle assessment scope object which contains all specified objects along with their associated EPD MaterialFragment data. ","This is a BH.oM.LifeCycleAssessment.EnclosuresScope: ","The Enclosures Scope object provides a template for expected objects commonly assessed within Life Cycle Assessments. Please provide as many objects with their corresponding Environmental Product Declaration data for the most accurate Life Cycle Assessment."],"isRequired":1,"isInterface":0},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["This is the desired field you would like to evaluate. Notice that not all material datasets will contain information for all metrics. A holistic GWP evaluation is currently the only standard evaluation possible with all provided datasets. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.LifeCycleAssessment.Results","memberName":"LifeCycleAssessmentElementResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The LifeCycleElementResult that contains enclosures scope specific data, total results, and results per element. ","This is a List<LifeCycleAssessmentElementResult>"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"EvaluateLifeCycleAssessmentScope","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["This method calls the appropriate compute method per object within the MEPScope and returns results. ",""],"inputs":[{"inputName":"mepScope","namespace":"BH.oM.LifeCycleAssessment","memberName":"MEPScope","isGeneric":"0","descriptionParts":["This is a life cycle assessment scope object which contains all specified objects along with their associated EPD MaterialFragment data. ","This is a BH.oM.LifeCycleAssessment.MEPScope: ","The MEP Scope object provides a template for expected objects to be assessed within this Life Cycle Assessments. Please provide as many objects with their corresponding Environmental Product Declaration data for the most accurate Life Cycle Assessment"],"isRequired":1,"isInterface":0},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["This is the desired field you would like to evaluate. Notice that not all material datasets will contain information for all metrics. A holistic GWP evaluation is currently the only standard evaluation possible with all provided datasets. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.LifeCycleAssessment.Results","memberName":"LifeCycleAssessmentElementResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The LifeCycleElementResult that contains MEP scope specific data, total results, and results per element. ","This is a List<LifeCycleAssessmentElementResult>"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"EvaluateLifeCycleAssessmentScope","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["This method calls the appropriate compute method per object within the TenantImprovementScope and returns results. ",""],"inputs":[{"inputName":"tenantImprovementScope","namespace":"BH.oM.LifeCycleAssessment","memberName":"TenantImprovementScope","isGeneric":"0","descriptionParts":["This is a life cycle assessment scope object which contains all specified objects along with their associated EPD MaterialFragment data. ","This is a BH.oM.LifeCycleAssessment.TenantImprovementScope: ","The Tenant Improvement Scope object provides a template for expected objects to be assessed within this Life Cycle Assessments. Note that this category is not commonly assessed, but will provide for higher quality results. Please provide as many objects with their corresponding Environmental Product Declaration data for the most accurate Life Cycle Assessment."],"isRequired":1,"isInterface":0},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["This is the desired field you would like to evaluate. Notice that not all material datasets will contain information for all metrics. A holistic GWP evaluation is currently the only standard evaluation possible with all provided datasets. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.LifeCycleAssessment.Results","memberName":"LifeCycleAssessmentElementResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The LifeCycleElementResult that contains Tenant Improvement scope specific data, total results, and results per element. ","This is a List<LifeCycleAssessmentElementResult>"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"ReinforcementVolume","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Returns reinforcement volume. ",""],"inputs":[{"inputName":"concreteVolume","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Volume of concrete building element m^3. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"percentageReinforcement","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Expects a number between 0 and 100 for percentage conversion. Percentage reinforcement within concrete building element m^3. ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Percentage reinforcement within concrete building element m^3. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"GlazingVolume","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Returns glazing volume from the properties of a surface object. ",""],"inputs":[{"inputName":"glazingArea","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Volume of concrete building element m^3. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"glazingThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Volume of reinforcement within concrete building element m^3. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"numberOfPanes","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Volume of reinforcement within concrete building element m^3. ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Percentage reinforcement within concrete building element m^3. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"ConcreteVolume","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Returns concrete volume. ",""],"inputs":[{"inputName":"concreteVolume","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Gross volume of concrete building element m^3. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"reinforcementVolume","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Percentage reinforcement within concrete building element m^3. ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Actual volume of concrete building element less any reinforcement in m^3. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Compute","memberName":"EvaluateEnvironmentalProductDeclarationPerObject","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["This method calculates the results of any selected metric within an Environmental Product Declaration. For example for an EPD of QuantityType Volume, results will reflect the objects volume * EPD Field metric. ",""],"inputs":[{"inputName":"elementM","namespace":"BH.oM.Dimensional","memberName":"IElementM","isGeneric":"0","descriptionParts":["This is a BHoM object used to calculate EPD metric. This obj must have an EPD MaterialFragment applied to the object. ","This is a BH.oM.Dimensional.IElementM: ","Enables Mass based operations to be performed on elements with materiality","Ensures the material composition of a physical object is represented, defined as proportions of discrete types of material forming the object's total solid volume.","Objects implementing this Interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.","Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":1,"isInterface":1},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["Filter the provided EnvironmentalProductDeclaration by selecting one of the provided metrics for calculation. This method also accepts multiple fields simultaneously. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LifeCycleAssessmentElementResult","namespace":"BH.oM.LifeCycleAssessment.Results","isGeneric":"0","descriptionParts":["A LifeCycleElementResult that contains the LifeCycleAssessment data for the input object. ","This is a BH.oM.LifeCycleAssessment.Results.LifeCycleAssessmentElementResult: ","Base class for a LifeCycleAssessment of a single object. This contains the total quantity of global warming potential, acidification potential, etc. for a whole project."]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"GetQuantityTypeValue","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Query the QuantityTypeValue from any Environmental Product Declaration MaterialFragmment. ",""],"inputs":[{"inputName":"epd","namespace":"BH.oM.LifeCycleAssessment.MaterialFragments","memberName":"IEnvironmentalProductDeclarationData","isGeneric":"0","descriptionParts":["The EPD Object to query. ","This is a BH.oM.LifeCycleAssessment.MaterialFragments.IEnvironmentalProductDeclarationData ","This can be of the following types: SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The quantityTypeValue property from the EPD. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"GetQuantityTypeValue","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Query the QuantityTypeValue from any object with a valid construction with Environmental Product Declaration MaterialFragmments. ",""],"inputs":[{"inputName":"elementM","namespace":"BH.oM.Dimensional","memberName":"IElementM","isGeneric":"0","descriptionParts":["The IElementM Object to query. ","This is a BH.oM.Dimensional.IElementM: ","Enables Mass based operations to be performed on elements with materiality","Ensures the material composition of a physical object is represented, defined as proportions of discrete types of material forming the object's total solid volume.","Objects implementing this Interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.","Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The quantityTypeValue property from the IElementM. ","This is a List<Double>"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"MaterialEndOfLifeTreatment","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Returns End of Life processing information contained within an EPD dataset. ",""],"inputs":[{"inputName":"epd","namespace":"BH.oM.LifeCycleAssessment.MaterialFragments","memberName":"IEnvironmentalProductDeclarationData","isGeneric":"0","descriptionParts":["Environmental Product Declaration of a specific material from an EPD Dataset. ","This is a BH.oM.LifeCycleAssessment.MaterialFragments.IEnvironmentalProductDeclarationData ","This can be of the following types: SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["End of Life treatment per material. This includes all data collected for LCA stages C1-C4 within a provided EPD dataset. ","This is a String"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"GetFragmentDensity","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Query an Environmental Product Declaration MaterialFragment to return it's Density property value. ",""],"inputs":[{"inputName":"epd","namespace":"BH.oM.LifeCycleAssessment.MaterialFragments","memberName":"IEnvironmentalProductDeclarationData","isGeneric":"0","descriptionParts":["The EPD object to query. ","This is a BH.oM.LifeCycleAssessment.MaterialFragments.IEnvironmentalProductDeclarationData ","This can be of the following types: SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Density value queried from the EPD MaterialFragment. ","This is a Density [kg/m³] (as a Double)"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"GetFragmentQuantityType","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Query the QuantityType value from any IEnvironmentalProductDeclarationData object. ",""],"inputs":[{"inputName":"epd","namespace":"BH.oM.LifeCycleAssessment.MaterialFragments","memberName":"IEnvironmentalProductDeclarationData","isGeneric":"0","descriptionParts":["IEnvironmentalProductDeclarationData object from which to query. ","This is a BH.oM.LifeCycleAssessment.MaterialFragments.IEnvironmentalProductDeclarationData ","This can be of the following types: SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"QuantityType","namespace":"BH.oM.LifeCycleAssessment","isGeneric":"0","descriptionParts":["The quantityType value from the provided IEPD. ","This is a BH.oM.LifeCycleAssessment.QuantityType ","Enum values: ","-Undefined ","-Area ","-Item ","-Length ","-Mass ","-Volume"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"GetFragmentQuantityType","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Query the QuantityType value from any IElementM object's Fragments. ",""],"inputs":[{"inputName":"elementM","namespace":"BH.oM.Dimensional","memberName":"IElementM","isGeneric":"0","descriptionParts":["The IElementM object from which to query the EPD's QuantityType value. ","This is a BH.oM.Dimensional.IElementM: ","Enables Mass based operations to be performed on elements with materiality","Ensures the material composition of a physical object is represented, defined as proportions of discrete types of material forming the object's total solid volume.","Objects implementing this Interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.","Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"QuantityType","namespace":"BH.oM.LifeCycleAssessment","isGeneric":"0","descriptionParts":["The quantityType value from the provided IEPD. ","This is a BH.oM.LifeCycleAssessment.QuantityType ","Enum values: ","-Undefined ","-Area ","-Item ","-Length ","-Mass ","-Volume"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"IsValid","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Query a StructuresScope object to see if it contains any data. ",""],"inputs":[{"inputName":"structuresScope","namespace":"BH.oM.LifeCycleAssessment","memberName":"StructuresScope","isGeneric":"0","descriptionParts":["The StructuresScope object used within your LCA to query. ","This is a BH.oM.LifeCycleAssessment.StructuresScope: ","The Structures Scope object provides a template for expected objects commonly assessed within Life Cycle Assessments. Please provide as many objects with their corresponding Environmental Product Declaration data for the most accurate Life Cycle Assessment."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the object contains data, False if the object does not contain data. ","This is a Boolean"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"IsValid","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Query a FoundationsScope object to see if it contains any data. ",""],"inputs":[{"inputName":"foundationsScope","namespace":"BH.oM.LifeCycleAssessment","memberName":"FoundationsScope","isGeneric":"0","descriptionParts":["The FoundationsScope object used within your LCA to query. ","This is a BH.oM.LifeCycleAssessment.FoundationsScope: ","The Foundations Scope object provides a template for expected objects commonly assessed within Life Cycle Assessments. Please provide as many objects with their corresponding Environmental Product Declaration data for the most accurate Life Cycle Assessment."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the object contains data, False if the object does not contain data. ","This is a Boolean"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"IsValid","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Query a EnclosuresScope object to see if it contains any data. ",""],"inputs":[{"inputName":"enclosuresScope","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnclosuresScope","isGeneric":"0","descriptionParts":["The EnclosuresScope object used within your LCA to query. ","This is a BH.oM.LifeCycleAssessment.EnclosuresScope: ","The Enclosures Scope object provides a template for expected objects commonly assessed within Life Cycle Assessments. Please provide as many objects with their corresponding Environmental Product Declaration data for the most accurate Life Cycle Assessment."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the object contains data, False if the object does not contain data. ","This is a Boolean"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"IsValid","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Query a MEPScope object to see if it contains any data. ",""],"inputs":[{"inputName":"mepScope","namespace":"BH.oM.LifeCycleAssessment","memberName":"MEPScope","isGeneric":"0","descriptionParts":["The MEPScope object to query. ","This is a BH.oM.LifeCycleAssessment.MEPScope: ","The MEP Scope object provides a template for expected objects to be assessed within this Life Cycle Assessments. Please provide as many objects with their corresponding Environmental Product Declaration data for the most accurate Life Cycle Assessment"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the object contains any data, False if the object does not contain any data. ","This is a Boolean"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"IsValid","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Query a TenantImprovementScope object to see if it contains any data. ",""],"inputs":[{"inputName":"tiScope","namespace":"BH.oM.LifeCycleAssessment","memberName":"TenantImprovementScope","isGeneric":"0","descriptionParts":["The TenantImprovementScope object used within your LCA to query. ","This is a BH.oM.LifeCycleAssessment.TenantImprovementScope: ","The Tenant Improvement Scope object provides a template for expected objects to be assessed within this Life Cycle Assessments. Note that this category is not commonly assessed, but will provide for higher quality results. Please provide as many objects with their corresponding Environmental Product Declaration data for the most accurate Life Cycle Assessment."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the object contains data, False if the object does not contain data. ","This is a Boolean"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"EnvironmentalProductDeclaration","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"epd","namespace":"BH.oM.LifeCycleAssessment.MaterialFragments","memberName":"IEnvironmentalProductDeclarationData","isGeneric":"0","descriptionParts":["This is a BH.oM.LifeCycleAssessment.MaterialFragments.IEnvironmentalProductDeclarationData ","This can be of the following types: SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration"],"isRequired":1,"isInterface":1},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"GetEvaluationValue","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Return a sum of all Material Fragment values from a specified EnvironmentalProductDeclarationField within any EPD object. ",""],"inputs":[{"inputName":"epd","namespace":"BH.oM.LifeCycleAssessment.MaterialFragments","memberName":"IEnvironmentalProductDeclarationData","isGeneric":"0","descriptionParts":["Environmental Product Declaration to query the field value from. ","This is a BH.oM.LifeCycleAssessment.MaterialFragments.IEnvironmentalProductDeclarationData ","This can be of the following types: SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration"],"isRequired":1,"isInterface":1},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["Specific metric to query from provided Environmental Product Declarations. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The Environmental Impact metric value for the specified field. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"GetEvaluationValue","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Returns the Environmental Impact metric value for the specified field input from the Environmental Product Declaration found within the MaterialComposition of an object. ",""],"inputs":[{"inputName":"elementM","namespace":"BH.oM.Dimensional","memberName":"IElementM","isGeneric":"0","descriptionParts":["An IElementM object with a MaterialProperty from which to query the desired metric. ","This is a BH.oM.Dimensional.IElementM: ","Enables Mass based operations to be performed on elements with materiality","Ensures the material composition of a physical object is represented, defined as proportions of discrete types of material forming the object's total solid volume.","Objects implementing this Interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.","Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":1,"isInterface":1},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["Specific metric to query from provided Environmental Product Declarations. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The Environmental Impact metric value for the specified field. ","This is a List<Double>"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"GetEvaluationValue","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Return a sum of all Material Fragment values from a specified EnvironmentalProductDeclarationField within any Life Cycle Assessment Scope object to be used within a ProjectLifeCycleAssessment. ",""],"inputs":[{"inputName":"lcaScope","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["Scope to extract Environmental Product Declaration field value from. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["Specific metric to query from provided Environmental Product Declarations. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The Environmental Impact metric value for the specified field. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"GetEvaluationValueStructuresScope","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Return a sum of all Material Fragment values from a specified EnvironmentalProductDeclarationField within any StructuresScope object to be used within a ProjectLifeCycleAssessment. ",""],"inputs":[{"inputName":"structuresScope","namespace":"BH.oM.LifeCycleAssessment","memberName":"StructuresScope","isGeneric":"0","descriptionParts":["Scope to extract Environmental Product Declaration field value from. ","This is a BH.oM.LifeCycleAssessment.StructuresScope: ","The Structures Scope object provides a template for expected objects commonly assessed within Life Cycle Assessments. Please provide as many objects with their corresponding Environmental Product Declaration data for the most accurate Life Cycle Assessment."],"isRequired":1,"isInterface":0},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["Specific metric to query from provided Environmental Product Declarations. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The Environmental Impact metric value for the specified field. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"GetEvaluationValueFoundationsScope","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Return a sum of all Material Fragment values from a specified EnvironmentalProductDeclarationField within any FoundationsScope object to be used within a ProjectLifeCycleAssessment. ",""],"inputs":[{"inputName":"foundationsScope","namespace":"BH.oM.LifeCycleAssessment","memberName":"FoundationsScope","isGeneric":"0","descriptionParts":["Scope to extract Environmental Product Declaration field value from. ","This is a BH.oM.LifeCycleAssessment.FoundationsScope: ","The Foundations Scope object provides a template for expected objects commonly assessed within Life Cycle Assessments. Please provide as many objects with their corresponding Environmental Product Declaration data for the most accurate Life Cycle Assessment."],"isRequired":1,"isInterface":0},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["Specific metric to query from provided Environmental Product Declarations. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The Environmental Impact metric value for the specified field. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"GetEvaluationValueEnclosuresScope","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Return a sum of all Material Fragment values from a specified EnvironmentalProductDeclarationField within any EnclosuresScope object to be used within a ProjectLifeCycleAssessment. ",""],"inputs":[{"inputName":"enclosuresScope","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnclosuresScope","isGeneric":"0","descriptionParts":["Scope to extract Environmental Product Declaration field value from. ","This is a BH.oM.LifeCycleAssessment.EnclosuresScope: ","The Enclosures Scope object provides a template for expected objects commonly assessed within Life Cycle Assessments. Please provide as many objects with their corresponding Environmental Product Declaration data for the most accurate Life Cycle Assessment."],"isRequired":1,"isInterface":0},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["Specific metric to query from provided Environmental Product Declarations. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The Environmental Impact metric value for the specified field. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"GetEvaluationValueMEPScope","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Return a sum of all Material Fragment values from a specified EnvironmentalProductDeclarationField within any MEPScope object to be used within a ProjectLifeCycleAssessment. ",""],"inputs":[{"inputName":"mepScope","namespace":"BH.oM.LifeCycleAssessment","memberName":"MEPScope","isGeneric":"0","descriptionParts":["Scope to extract Environmental Product Declaration field value from. ","This is a BH.oM.LifeCycleAssessment.MEPScope: ","The MEP Scope object provides a template for expected objects to be assessed within this Life Cycle Assessments. Please provide as many objects with their corresponding Environmental Product Declaration data for the most accurate Life Cycle Assessment"],"isRequired":1,"isInterface":0},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["Specific metric to query from provided Environmental Product Declarations. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The Environmental Impact metric value for the specified field. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"GetEvaluationValueTenantImprovementScope","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Return a sum of all Material Fragment values from a specified EnvironmentalProductDeclarationField within any TenantImprovementScope object to be used within a ProjectLifeCycleAssessment. ",""],"inputs":[{"inputName":"tenantImprovementScope","namespace":"BH.oM.LifeCycleAssessment","memberName":"TenantImprovementScope","isGeneric":"0","descriptionParts":["Scope to extract Environmental Product Declaration field value from. ","This is a BH.oM.LifeCycleAssessment.TenantImprovementScope: ","The Tenant Improvement Scope object provides a template for expected objects to be assessed within this Life Cycle Assessments. Note that this category is not commonly assessed, but will provide for higher quality results. Please provide as many objects with their corresponding Environmental Product Declaration data for the most accurate Life Cycle Assessment."],"isRequired":1,"isInterface":0},{"inputName":"field","namespace":"BH.oM.LifeCycleAssessment","memberName":"EnvironmentalProductDeclarationField","isGeneric":"0","descriptionParts":["Specific metric to query from provided Environmental Product Declarations. ","This is a BH.oM.LifeCycleAssessment.EnvironmentalProductDeclarationField: ","This enum provides several evaluation fields that are commonly assessed within standard Environmental Product Declarations. You may provide single or multiple EPD Field selections for evaluation within the EvaluateEnvironmentalProductDeclaration compute method. ","Enum values: ","-Undefined ","-AcidificationPotential ","-DepletionOfAbioticResourcesFossilFuels ","-EutrophicationPotential ","-GlobalWarmingPotential ","-OzoneDepletionPotential ","-PhotochemicalOzoneCreationPotential"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The Environmental Impact metric value for the specified field. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Query","memberName":"TotalGlobalWarmingPotential","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Query the total global warming potential, or GWP from any LifeCycleAssessmentElementResult data. This is typically evaluated by kgCO2e or kg of Carbon Dioxide equivalent. ",""],"inputs":[{"inputName":"gwpResults","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.LifeCycleAssessment.Results","memberName":"LifeCycleAssessmentElementResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Supply a valid GlobalWarmingPotentialResult from a scope evaluation. ","This is a List<LifeCycleAssessmentElementResult>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The combined amount of kgCO2e of the objects provided. ","This is a Double"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Convert","memberName":"ToBuildingBenchmarkingData","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"BH.oM.Base","memberName":"CustomObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.CustomObject"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BuildingBenchmarkingData","namespace":"BH.oM.LifeCycleAssessment","isGeneric":"0","descriptionParts":["This is a BH.oM.LifeCycleAssessment.BuildingBenchmarkingData"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Convert","memberName":"ToHealthProductDeclarationData","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"BH.oM.Base","memberName":"CustomObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.CustomObject"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"HealthProductDeclaration","namespace":"BH.oM.LifeCycleAssessment","isGeneric":"0","descriptionParts":["This is a BH.oM.LifeCycleAssessment.HealthProductDeclaration"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Convert","memberName":"ToEnvironmentalProductDeclarationData","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"BH.oM.Base","memberName":"CustomObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.CustomObject"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"EnvironmentalProductDeclaration","namespace":"BH.oM.LifeCycleAssessment.MaterialFragments","isGeneric":"0","descriptionParts":["This is a BH.oM.LifeCycleAssessment.MaterialFragments.EnvironmentalProductDeclaration"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Convert","memberName":"ToSectorEnvironmentalProductDeclarationData","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"BH.oM.Base","memberName":"CustomObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.CustomObject"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SectorEnvironmentalProductDeclaration","namespace":"BH.oM.LifeCycleAssessment.MaterialFragments","isGeneric":"0","descriptionParts":["This is a BH.oM.LifeCycleAssessment.MaterialFragments.SectorEnvironmentalProductDeclaration"]}},{"namespace":"BH.Engine.LifeCycleAssessment","className":"Create","memberName":"LifeCycleAssessmentScope","assemblyName":"LifeCycleAssessment_Engine.dll","descriptionParts":["Creates a Duct object. Material that flows through this Duct can be established at the system level. ",""],"inputs":[{"inputName":"additionalNotes","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Additional notes should convey project design constraints (eg design for seismic activity) that could affect the overall embodied carbon. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"biogenicCarbon","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Biogenic Carbon is a true/false that indicates that the project contains materials that originated from a biological source (trees, soil), these materials have the ability sequester/store carbon. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"buildingLifespan","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The assumed lifespan of the building being evaluated.  These values are for categorisation purposes only and will not effect the overall results. ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"constructionScopeNew","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Identifies the overall construction scope for the project. Set True if New Construction exists within your project. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"constructionScopeRenovation","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Identifies the overall construction scope for the project. Set True if Renovation exists within your project. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"contactName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The Contact Name denotes the person/people who performed the LCA study. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"gravityStructuralMaterial","namespace":"BH.oM.LifeCycleAssessment","memberName":"GravityStructuralMaterial","isGeneric":"0","descriptionParts":["The primary structural system providing gravity support for the building. ","This is a BH.oM.LifeCycleAssessment.GravityStructuralMaterial ","Enum values: ","-Undefined ","-GravitySteelFrame ","-GravityConcrete ","-GravityMassTimber ","-GravityHybrid ","-GravityConcreteMasonryUnit ","-GravityLightGaugeSteel"],"isRequired":0,"isInterface":0},{"inputName":"lateralStructuralMaterial","namespace":"BH.oM.LifeCycleAssessment","memberName":"LateralStructuralMaterial","isGeneric":"0","descriptionParts":["The primary structural system providing lateral support for the building. ","This is a BH.oM.LifeCycleAssessment.LateralStructuralMaterial ","Enum values: ","-Undefined ","-LateralConcrete ","-LateralConcreteMasonryUnit ","-LateralSheathedWalls ","-LateralSteel"],"isRequired":0,"isInterface":0},{"inputName":"levelOfDevelopment","namespace":"BH.oM.LifeCycleAssessment","memberName":"LevelOfDevelopment","isGeneric":"0","descriptionParts":["Typically a term utilised in BIM practices to clearly identify the scope of work being account for. Equivalents for LOD classifications can offen times be linked to design and construction phases common to the projects locale. ","This is a BH.oM.LifeCycleAssessment.LevelOfDevelopment ","Enum values: ","-Undefined ","-LOD100 ","-LOD200 ","-LOD300 ","-LOD350 ","-LOD400 ","-LOD500"],"isRequired":0,"isInterface":0},{"inputName":"lifeCycleAssessmentPhases","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.LifeCycleAssessment","memberName":"LifeCycleAssessmentPhases","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a list of life cycle assessment phases to be accounted for within this assessment. These values are for categorisation purposes only and will not effect the overall results. ","This is a List<LifeCycleAssessmentPhases>"],"isRequired":0,"isInterface":0},{"inputName":"projectType","namespace":"BH.oM.LifeCycleAssessment","memberName":"ProjectType","isGeneric":"0","descriptionParts":["A general classification of the buildings primary function. This value is for categorisation purposes only and will not effect the overall results. ","This is a BH.oM.LifeCycleAssessment.ProjectType ","Enum values: ","-Undefined ","-Stadium ","-Office ","-Residential ","-HigherEducation ","-Cultural ","-Transit ","-Healthcare ","-Hospitality ","-Commercial"],"isRequired":0,"isInterface":0},{"inputName":"projectName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The Project Name denotes the name of the project for reporting purposes. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"projectArea","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The Project Area (m2) denotes the more precise project area which will allow assessment of kgCO2eq/m2 metrics. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"seismicDesignCategory","namespace":"BH.oM.LifeCycleAssessment","memberName":"SeismicDesignCategory","isGeneric":"0","descriptionParts":["Seismic Design Category is a classification assigned to a structure based on it's occupancy category, and the severity of the design earthquake ground motion. These categories are currently in reference to ASCE 7-05. ","This is a BH.oM.LifeCycleAssessment.SeismicDesignCategory: ","Seismic Design Category is a classification assigned to a structure based on it's occupancy category, and the severity of the design earthquake ground motion. These categories are in reference to ASCE 7-05. ","Enum values: ","-Undefined ","-A ","-B ","-C ","-D ","-E ","-F"],"isRequired":0,"isInterface":0},{"inputName":"windSpeedCategory","namespace":"BH.oM.LifeCycleAssessment","memberName":"WindSpeedCategory","isGeneric":"0","descriptionParts":["Wind speed category is in reference to the Beaufort Scale of wind speeds. Values are arranged from 0-12 equivalent, 0 being Calm and 12 being Hurricane, and are used only to represent an average site-based, wind condition. Specific informaion on categorisation can be found at https://www.spc.noaa.gov/faq/tornado/beaufort.html ","This is a BH.oM.LifeCycleAssessment.WindSpeedCategory: ","Wind speed category is in reference to the Beaufort Scale of wind speeds, and are used only to represent an average site-based, wind condition. Specific information on categorisation can be found at https://www.spc.noaa.gov/faq/tornado/beaufort.html ","Enum values: ","-Undefined ","-Calm ","-FreshBreeze ","-Gale ","-GentleBreeze ","-Hurricane ","-LightAir ","-LightBreeze ","-ModerateBreeze ","-NearGale ","-Storm ","-StrongBreeze ","-StrongGale ","-ViolentStorm"],"isRequired":0,"isInterface":0},{"inputName":"location","namespace":"BH.oM.Environment.Climate","memberName":"Location","isGeneric":"0","descriptionParts":["Provide the projects geographic location for database organisation purposes. This value is for categorisation purposes only and will not effect the overall results. ","This is a BH.oM.Environment.Climate.Location: ","Defines a uniquely identifiable point on the Earth in standard global Latitude, Longitude and Elevation, coordinate system. Particularly useful for specifying local climate conditions for environmental analysis."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LifeCycleAssessmentScope","namespace":"BH.oM.LifeCycleAssessment","isGeneric":"0","descriptionParts":["A duct object is a passageway which conveys material (typically air) ","This is a BH.oM.LifeCycleAssessment.LifeCycleAssessmentScope: ","The Life Cycle Assessment Scope object intends to provide a means of reporting all of the project criteria (name, area, type, location). This object may be used for studies at any stage of development and can serve as a true means of 'apples to apples' comparison when catalogued. The information provided within this object is utilised for database construction and organisation only, therefore all values will not effect the overall life cycle assessment results."]}},{"namespace":"BH.Engine.Adapters.Lusas","className":"Create","memberName":"MeshSettings1D","assemblyName":"Lusas_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"splitMethod","namespace":"BH.oM.Adapters.Lusas","memberName":"Split1D","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Lusas.Split1D ","Enum values: ","-Divisions ","-Length ","-Automatic"],"isRequired":1,"isInterface":0},{"inputName":"splitParameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"MeshSettings1D","namespace":"BH.oM.Adapters.Lusas.Fragments","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Lusas.Fragments.MeshSettings1D"]}},{"namespace":"BH.Engine.Adapters.Lusas","className":"Create","memberName":"LibrarySettings","assemblyName":"Lusas_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"sectionLibrary","namespace":"BH.oM.Adapters.Lusas","memberName":"SectionLibrary","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Lusas.SectionLibrary ","Enum values: ","-UK_Sections ","-EU_Sections"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LibrarySettings","namespace":"BH.oM.Adapters.Lusas","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Lusas.LibrarySettings"]}},{"namespace":"BH.Engine.Adapters.Lusas","className":"Create","memberName":"LusasConfig","assemblyName":"Lusas_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"librarySettings","namespace":"BH.oM.Adapters.Lusas","memberName":"LibrarySettings","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Lusas.LibrarySettings"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LusasConfig","namespace":"BH.oM.Adapters.Lusas","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Lusas.LusasConfig"]}},{"namespace":"BH.Engine.Adapters.Lusas","className":"Create","memberName":"MeshSettings2D","assemblyName":"Lusas_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"splitMethod","namespace":"BH.oM.Adapters.Lusas","memberName":"Split2D","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Lusas.Split2D ","Enum values: ","-Divisions ","-Size ","-Automatic"],"isRequired":1,"isInterface":0},{"inputName":"xDivisions","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"yDivisions","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"size","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"MeshSettings2D","namespace":"BH.oM.Adapters.Lusas.Fragments","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Lusas.Fragments.MeshSettings2D"]}},{"namespace":"BH.Engine.Adapters.Lusas","className":"Query","memberName":"CheckIllegalCharacters","assemblyName":"Lusas_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"objectName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.Lusas","className":"Query","memberName":"GetDistinctPoints","assemblyName":"Lusas_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Point>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point>"]}},{"namespace":"BH.Engine.Adapters.Lusas","className":"Query","memberName":"GetDistinctEdges","assemblyName":"Lusas_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"edges","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Edge","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Edge>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Edge","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Edge>"]}},{"namespace":"BH.Engine.Adapters.Lusas","className":"Modify","memberName":"RemovePrefix","assemblyName":"Lusas_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"forRemoval","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.MachineLearning","className":"Convert","memberName":"FromDType","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Type","namespace":"System","isGeneric":"0","descriptionParts":["This is a Type"]}},{"namespace":"BH.Engine.MachineLearning","className":"Convert","memberName":"IToPython","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.MachineLearning","className":"Convert","memberName":"ToPython","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tensor","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.MachineLearning","className":"Convert","memberName":"ToPython","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"list","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Object>"],"isRequired":1,"isInterface":1},{"inputName":"dtype","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.MachineLearning","className":"Convert","memberName":"ToPython","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"listOfLists","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"IEnumerable","isInterface":"1","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a IEnumerable<IEnumerable<Object>>"],"isRequired":1,"isInterface":1},{"inputName":"dtype","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.MachineLearning","className":"Convert","memberName":"ToPython","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"model","namespace":"BH.oM.MachineLearning","memberName":"LinearRegression","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.LinearRegression"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.MachineLearning","className":"Convert","memberName":"ToPython","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"scaler","namespace":"BH.oM.MachineLearning","memberName":"MinMaxScaler","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.MinMaxScaler"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.MachineLearning","className":"Convert","memberName":"ToPython","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"scaler","namespace":"BH.oM.MachineLearning","memberName":"StandardScaler","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.StandardScaler"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.MachineLearning","className":"Convert","memberName":"ToPython","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"transformer","namespace":"BH.oM.MachineLearning","memberName":"PolynomialFeatures","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.PolynomialFeatures"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.MachineLearning","className":"Convert","memberName":"ToPython","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"regressor","namespace":"BH.oM.MachineLearning","memberName":"SupportVectorRegression","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.SupportVectorRegression"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.MachineLearning","className":"Convert","memberName":"ToPython","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"regressor","namespace":"BH.oM.MachineLearning","memberName":"LogisticRegression","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.LogisticRegression"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.MachineLearning","className":"Convert","memberName":"ToList","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tensor","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Double>"]}},{"namespace":"BH.Engine.MachineLearning","className":"Convert","memberName":"ToDType","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.MachineLearning","className":"Modify","memberName":"AsType","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tensor","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0},{"inputName":"dtype","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.MachineLearning","className":"Modify","memberName":"AsType","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tensor","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0},{"inputName":"dtype","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.MachineLearning","className":"Query","memberName":"Error","assemblyName":"MachineLearning_Engine.dll","descriptionParts":["Finds the The coefficient of determination R^2 of the given regression model. ",""],"inputs":[{"inputName":"model","namespace":"BH.oM.MachineLearning","memberName":"LinearRegression","isGeneric":"0","descriptionParts":["The linear regressor model used for inference. ","This is a BH.oM.MachineLearning.LinearRegression"],"isRequired":1,"isInterface":0},{"inputName":"x","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["Training data as a list of 2-elements list. ","This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0},{"inputName":"y","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["Target values as a list of 2-elements list. ","This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["The coefficient of determination R^2 of the prediction. ","This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.MachineLearning","className":"Query","memberName":"Error","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"model","namespace":"BH.oM.MachineLearning","memberName":"LogisticRegression","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.LogisticRegression"],"isRequired":1,"isInterface":0},{"inputName":"x","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0},{"inputName":"y","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.MachineLearning","className":"Query","memberName":"DType","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tensor","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Type","namespace":"System","isGeneric":"0","descriptionParts":["This is a Type"]}},{"namespace":"BH.Engine.MachineLearning","className":"Query","memberName":"Coefficients","assemblyName":"MachineLearning_Engine.dll","descriptionParts":["Expose the attributes for the given regression model. ",""],"inputs":[{"inputName":"model","namespace":"BH.oM.MachineLearning","memberName":"LinearRegression","isGeneric":"0","descriptionParts":["The linear regressor model used for inference. ","This is a BH.oM.MachineLearning.LinearRegression"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.MachineLearning","memberName":"Tensor","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.MachineLearning","memberName":"Tensor","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.MachineLearning.Tensor, BH.oM.MachineLearning.Tensor>"]}},{"namespace":"BH.Engine.MachineLearning","className":"Query","memberName":"Import","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"module","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.MachineLearning","className":"Query","memberName":"GetAttribute","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tensor","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0},{"inputName":"attribute","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.MachineLearning","className":"Query","memberName":"Shape","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tensor","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"]}},{"namespace":"BH.Engine.MachineLearning","className":"Query","memberName":"Size","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tensor","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.MachineLearning","className":"Create","memberName":"Tensor","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"collection","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Object>"],"isRequired":1,"isInterface":1},{"inputName":"dtype","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.MachineLearning","className":"Create","memberName":"Tensor","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"collection","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"IEnumerable","isInterface":"1","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a IEnumerable<IEnumerable<Object>>"],"isRequired":1,"isInterface":1},{"inputName":"dtype","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.MachineLearning.Vision","className":"Compute","memberName":"FindContours","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"image","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0},{"inputName":"level","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.MachineLearning.Vision","className":"Compute","memberName":"SegmentImage","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"imagePath","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"gpu","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.MachineLearning.Vision","className":"Compute","memberName":"RecogniseObject","assemblyName":"MachineLearning_Engine.dll","descriptionParts":["Returns the type of object in the image, e.g. an apple ",""],"inputs":[{"inputName":"imagePath","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"gpu","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The probabilities (score) for each class. Use the Query.ImageClasses() method to match  ","This is a String"]}},{"namespace":"BH.Engine.MachineLearning.Vision","className":"Compute","memberName":"DetectObjects","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"imagePath","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"gpu","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"scoreThreshold","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.MachineLearning.Vision","className":"Compute","memberName":"DrawDetection","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"imagePath","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"detection","namespace":"Python.Runtime","memberName":"PyObject","isGeneric":"0","descriptionParts":["This is a PyObject"],"isRequired":1,"isInterface":0},{"inputName":"minAccuracy","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.MachineLearning.Text","className":"Compute","memberName":"Summarise","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"text","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.MachineLearning.Text","className":"Compute","memberName":"Answer","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"question","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"context","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.MachineLearning.Text","className":"Compute","memberName":"SentimentAnalysis","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"text","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.MachineLearning.Structured","className":"Compute","memberName":"LogisticRegression","assemblyName":"MachineLearning_Engine.dll","descriptionParts":["Finds the slope and the intercept of a linear function that best fits the given set of bidimensional data. ",""],"inputs":[{"inputName":"x","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["Training data as a list of 2-elements list. ","This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0},{"inputName":"y","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["Target values as a list of 2-elements list. ","This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LogisticRegression","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["The ordinary least squares linear regression with the given data. ","This is a BH.oM.MachineLearning.LogisticRegression"]}},{"namespace":"BH.Engine.MachineLearning.Structured","className":"Compute","memberName":"Infer","assemblyName":"MachineLearning_Engine.dll","descriptionParts":["Projects the given input using a linear regression model. ",""],"inputs":[{"inputName":"model","namespace":"BH.oM.MachineLearning","memberName":"LogisticRegression","isGeneric":"0","descriptionParts":["The linear regressor model used for inference. ","This is a BH.oM.MachineLearning.LogisticRegression"],"isRequired":1,"isInterface":0},{"inputName":"x","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["Data to project on. ","This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["The projected output for the given data using the linear model. ","This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.MachineLearning.Structured","className":"Compute","memberName":"SupportVectorRegression","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"x","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0},{"inputName":"y","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0},{"inputName":"kernel","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"degree","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"regularisation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SupportVectorRegression","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.SupportVectorRegression"]}},{"namespace":"BH.Engine.MachineLearning.Structured","className":"Compute","memberName":"Infer","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"model","namespace":"BH.oM.MachineLearning","memberName":"SupportVectorRegression","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.SupportVectorRegression"],"isRequired":1,"isInterface":0},{"inputName":"x","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.MachineLearning.Structured","className":"Compute","memberName":"LinearRegression","assemblyName":"MachineLearning_Engine.dll","descriptionParts":["Finds the slope and the intercept of a linear function that best fits the given set of bidimensional data. ",""],"inputs":[{"inputName":"x","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["Training data as a list of 2-elements list. ","This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0},{"inputName":"y","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["Target values as a list of 2-elements list. ","This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LinearRegression","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["The ordinary least squares linear regression with the given data. ","This is a BH.oM.MachineLearning.LinearRegression"]}},{"namespace":"BH.Engine.MachineLearning.Structured","className":"Compute","memberName":"Infer","assemblyName":"MachineLearning_Engine.dll","descriptionParts":["Projects the given input using a linear regression model. ",""],"inputs":[{"inputName":"model","namespace":"BH.oM.MachineLearning","memberName":"LinearRegression","isGeneric":"0","descriptionParts":["The linear regressor model used for inference. ","This is a BH.oM.MachineLearning.LinearRegression"],"isRequired":1,"isInterface":0},{"inputName":"x","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["Data to project on. ","This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["The projected output for the given data using the linear model. ","This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.MachineLearning.Preprocessing","className":"Compute","memberName":"PolynomialFeatures","assemblyName":"MachineLearning_Engine.dll","descriptionParts":["Create a trnasformer for polynomial and interaction features of the data. ",""],"inputs":[{"inputName":"degree","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The degree of the polynomial features. Default as 2. ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"interaction_only","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PolynomialFeatures","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["The transformer for the polynomial and interaction features of the data. ","This is a BH.oM.MachineLearning.PolynomialFeatures"]}},{"namespace":"BH.Engine.MachineLearning.Preprocessing","className":"Compute","memberName":"Infer","assemblyName":"MachineLearning_Engine.dll","descriptionParts":["Generate polynomial and interaction features of the data. ",""],"inputs":[{"inputName":"transformer","namespace":"BH.oM.MachineLearning","memberName":"PolynomialFeatures","isGeneric":"0","descriptionParts":["The transformer for the polynomial and interaction features of the given data. ","This is a BH.oM.MachineLearning.PolynomialFeatures"],"isRequired":1,"isInterface":0},{"inputName":"x","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["Data to be transformed. ","This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["The polynomial and interaction features of the data. ","This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.MachineLearning.Preprocessing","className":"Compute","memberName":"StandardScaler","assemblyName":"MachineLearning_Engine.dll","descriptionParts":["Rescale the data with standard scaler. ",""],"inputs":[{"inputName":"x","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["Data to be rescaled. ","This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"StandardScaler","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["The estimated scaler for the standard scale transformation. ","This is a BH.oM.MachineLearning.StandardScaler"]}},{"namespace":"BH.Engine.MachineLearning.Preprocessing","className":"Compute","memberName":"Infer","assemblyName":"MachineLearning_Engine.dll","descriptionParts":["Rescale the data with a given standard scaler. ",""],"inputs":[{"inputName":"scaler","namespace":"BH.oM.MachineLearning","memberName":"StandardScaler","isGeneric":"0","descriptionParts":["The given scaler for the standard scale transformation. ","This is a BH.oM.MachineLearning.StandardScaler"],"isRequired":1,"isInterface":0},{"inputName":"x","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["Data to be rescaled. ","This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["The rescaled data after the given standard scale transformation. ","This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.MachineLearning.Preprocessing","className":"Compute","memberName":"InferInverse","assemblyName":"MachineLearning_Engine.dll","descriptionParts":["Inverse transformation of data with the given scaler. ",""],"inputs":[{"inputName":"scaler","namespace":"BH.oM.MachineLearning","memberName":"StandardScaler","isGeneric":"0","descriptionParts":["The standard scaler used for inverse transformation. ","This is a BH.oM.MachineLearning.StandardScaler"],"isRequired":1,"isInterface":0},{"inputName":"x","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["Data to be inverse-transformed. ","This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["The inverse transformed data using the standard scaler. ","This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.MachineLearning.Preprocessing","className":"Compute","memberName":"MinMaxScaler","assemblyName":"MachineLearning_Engine.dll","descriptionParts":["Rescale the data to a given range between 0 and 1. ",""],"inputs":[{"inputName":"x","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["Data to be rescaled. ","This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MinMaxScaler","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["The estimated scaler for the min-max scale transformation. ","This is a BH.oM.MachineLearning.MinMaxScaler"]}},{"namespace":"BH.Engine.MachineLearning.Preprocessing","className":"Compute","memberName":"Infer","assemblyName":"MachineLearning_Engine.dll","descriptionParts":["Rescale the data with a given min-max scaler. ",""],"inputs":[{"inputName":"scaler","namespace":"BH.oM.MachineLearning","memberName":"MinMaxScaler","isGeneric":"0","descriptionParts":["The given scaler for the min-max scale transformation. ","This is a BH.oM.MachineLearning.MinMaxScaler"],"isRequired":1,"isInterface":0},{"inputName":"x","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["Data to be rescaled. ","This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["The rescaled data with a range between o and 1. ","This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.MachineLearning.Preprocessing","className":"Compute","memberName":"InferInverse","assemblyName":"MachineLearning_Engine.dll","descriptionParts":["Inverse transformation of data with the given scaler. ",""],"inputs":[{"inputName":"scaler","namespace":"BH.oM.MachineLearning","memberName":"MinMaxScaler","isGeneric":"0","descriptionParts":["The min-max scaler used for inverse transformation. ","This is a BH.oM.MachineLearning.MinMaxScaler"],"isRequired":1,"isInterface":0},{"inputName":"x","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["Data to be inverse-transformed. ","This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["The inverse transformed data using the min-max scaler. ","This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.MachineLearning.Datasets","className":"Compute","memberName":"LoadCsv","assemblyName":"MachineLearning_Engine.dll","descriptionParts":["Reads a csv file and loads it into a Tensor primitive. ",""],"inputs":[{"inputName":"path","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The path to the csv file. If using a relative path, the root will be C:/ProgramData/BHoM ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"separator","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The separator character of the csv, e,g, a tsv. Use \t for tabs. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"hasHeaders","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["True if the first line of the csv is a headers line, false otherwise. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}]},{"namespace":"BH.oM.MachineLearning","memberName":"Tensor","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Collections.Generic.List<System.String>, BH.oM.MachineLearning.Tensor>"]}},{"namespace":"BH.Engine.MachineLearning.Base","className":"Compute","memberName":"InstallMachineLearningToolkit","assemblyName":"MachineLearning_Engine.dll","descriptionParts":["Install the python bindings of the Machine Learning Toolkit. This includes standard machine learning packages ","as the BHoM methods developed in python. Note that this depends on the Python_Toolkit. ",""],"inputs":[{"inputName":"run","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Starts the installation of the toolkit if true. Stays idle otherwise. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"force","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If the toolkit is already installed it forces a reinstall of all the packages. It does not force a reinstall of Python. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Boolean","isInterface":"0","isGeneric":"0"},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Boolean, System.Collections.Generic.List<System.String>>"]}},{"namespace":"BH.Engine.MachineLearning.Base","className":"Compute","memberName":"Invoke","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"nameSpace","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"method","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"args","namespace":"System","memberName":"Object[]","isGeneric":"0","descriptionParts":["This is a Object[]"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.MachineLearning.Base","className":"Compute","memberName":"Invoke","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"nameSpace","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"method","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"kwargs","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<String, Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.MachineLearning.Base","className":"Compute","memberName":"InvokeNumpy","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"args","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Object>"],"isRequired":0,"isInterface":1},{"inputName":"kwargs","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<String, Object>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.MachineLearning.Base","className":"Compute","memberName":"InvokeNumpy","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"method","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"args","namespace":"System","memberName":"Object[]","isGeneric":"0","descriptionParts":["This is a Object[]"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.MachineLearning.Charts","className":"Compute","memberName":"PlotDiurnal","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"annualValues","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Double>"],"isRequired":1,"isInterface":0},{"inputName":"savePath","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"grouping","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"months","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Int32>"],"isRequired":0,"isInterface":0},{"inputName":"title","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"unit","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"color","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"toneColor","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"transparency","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"run","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.MachineLearning.Charts","className":"Compute","memberName":"PlotFrequency","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"values","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Double>"],"isRequired":1,"isInterface":0},{"inputName":"savePath","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"title","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"unit","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"vRange","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Double>"],"isRequired":0,"isInterface":0},{"inputName":"bins","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"color","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"toneColor","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"transparency","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"run","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.MachineLearning.Charts","className":"Compute","memberName":"PlotHeatmap","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"annualValues","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Double>"],"isRequired":1,"isInterface":0},{"inputName":"savePath","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"title","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"unit","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"vRange","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Double>"],"isRequired":0,"isInterface":0},{"inputName":"cmap","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"toneColor","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"invertY","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"transparency","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"run","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.MachineLearning.Charts","className":"Compute","memberName":"PlotUTCI","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"annualValues","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Double>"],"isRequired":1,"isInterface":0},{"inputName":"savePath","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"detailed","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"title","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"toneColor","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"invertY","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"transparency","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"run","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.MachineLearning.Charts","className":"Compute","memberName":"PlotImage","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"image","namespace":"BH.oM.MachineLearning.Vision","memberName":"Image","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Vision.Image"],"isRequired":1,"isInterface":0},{"inputName":"height","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"width","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"grayscale","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.MachineLearning.Charts","className":"Compute","memberName":"PlotImage","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tensor","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0},{"inputName":"height","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"width","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"grayscale","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.MachineLearning.Audio","className":"Compute","memberName":"PlayAudio","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"audioTensor","namespace":"BH.oM.MachineLearning","memberName":"Tensor","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"],"isRequired":1,"isInterface":0},{"inputName":"rate","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"run","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.MachineLearning.Audio","className":"Compute","memberName":"RecogniseSpeech","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"wavFile","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"run","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.MachineLearning.Audio","className":"Compute","memberName":"SynthesiseSpeech","assemblyName":"MachineLearning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"text","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"gpu","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Tensor","namespace":"BH.oM.MachineLearning","isGeneric":"0","descriptionParts":["This is a BH.oM.MachineLearning.Tensor"]}},{"namespace":"BH.Engine.Matter","className":"Compute","memberName":"AggregateMaterialComposition","assemblyName":"Matter_Engine.dll","descriptionParts":["Calculates an aggregate MaterialComposition from a collection of elements. ",""],"inputs":[{"inputName":"elements","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElementM","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The elements to iterate over in generation of the MaterialCombination. ","This is a IEnumerable<IElementM> ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["A MaterialComposition containing the unique materials across all elements and their relative proportions. ","This is a BH.oM.Physical.Materials.MaterialComposition: ","Defines the make up of an object through a list of Materials as relative proportions of the total solid volume.","There must be the same number of items in both lists, assigning a single Ratio for each Material."]}},{"namespace":"BH.Engine.Matter","className":"Compute","memberName":"AggregateMaterialComposition","assemblyName":"Matter_Engine.dll","descriptionParts":["Calculates an aggregate MaterialComposition from a collection individual MaterialCompositions and their relative ratios. ",""],"inputs":[{"inputName":"materialCompositions","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Materials","memberName":"MaterialComposition","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The individual MaterialCompositions to aggregate together. ","This is a IEnumerable<MaterialComposition>"],"isRequired":1,"isInterface":1},{"inputName":"ratios","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The relative volumetric based ratios of each MaterialComposition. The number of ratios must match the number of MaterialCompositions. ","This is a Ratio [-] (as a IEnumerable<Double>)"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["A MaterialComposition incorporating the provided materials from each individual MaterialComposition and newly calculated ratios, factoring both the input ratio values and the individual Material ratios in the existing MaterialCompositions. ","This is a BH.oM.Physical.Materials.MaterialComposition: ","Defines the make up of an object through a list of Materials as relative proportions of the total solid volume.","There must be the same number of items in both lists, assigning a single Ratio for each Material."]}},{"namespace":"BH.Engine.Matter","className":"Create","memberName":"MaterialComposition","assemblyName":"Matter_Engine.dll","descriptionParts":["Creates a MaterialComposition for a collection of Materials given their ratios. ",""],"inputs":[{"inputName":"materials","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Materials","memberName":"Material","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The discrete Materials the MaterialComposition is comprised of. ","This is a IEnumerable<Material>"],"isRequired":1,"isInterface":1},{"inputName":"ratios","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The ratios of each material based on their relative volumes. The number of ratios must match the number of materials.The ratio sum will be normalised as required, to ensure the total equates to one. ","This is a Ratio [-] (as a IEnumerable<Double>)"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["A material composition composed of the provided materials and ratios scaled so that their sum equals one. ","This is a BH.oM.Physical.Materials.MaterialComposition: ","Defines the make up of an object through a list of Materials as relative proportions of the total solid volume.","There must be the same number of items in both lists, assigning a single Ratio for each Material."]}},{"namespace":"BH.Engine.Matter","className":"Create","memberName":"MaterialComposition","assemblyName":"Matter_Engine.dll","descriptionParts":["Creates a homogeneous MaterialComposition from a single Material. ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["This material will be the only Material in the Composition. ","This is a BH.oM.Physical.Materials.Material"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["A single Material MaterialComposition with a ratio of one. ","This is a BH.oM.Physical.Materials.MaterialComposition: ","Defines the make up of an object through a list of Materials as relative proportions of the total solid volume.","There must be the same number of items in both lists, assigning a single Ratio for each Material."]}},{"namespace":"BH.Engine.Matter","className":"Create","memberName":"MaterialComposition","assemblyName":"Matter_Engine.dll","descriptionParts":["Creates a homogeneous MaterialComposition from a single IMaterialProperties. Sets the Material's name as the IMaterialProperties' name. ",""],"inputs":[{"inputName":"materialProperty","namespace":"BH.oM.Physical.Materials","memberName":"IMaterialProperties","isGeneric":"0","descriptionParts":["This material will be the only Material in the Composition. ","This is a BH.oM.Physical.Materials.IMaterialProperties ","This can be of the following types: GasMaterial, SolidMaterial, SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration, InsulationMaterial, LiningMaterial, Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["A single Material MaterialComposition with a ratio of one. ","This is a BH.oM.Physical.Materials.MaterialComposition: ","Defines the make up of an object through a list of Materials as relative proportions of the total solid volume.","There must be the same number of items in both lists, assigning a single Ratio for each Material."]}},{"namespace":"BH.Engine.Matter","className":"Modify","memberName":"MapMaterial","assemblyName":"Matter_Engine.dll","descriptionParts":["Adds a IMaterialFragment to a material based on the mapping defined by the keys and materialFragments. ","i.e. The materialFragment on index 3 will be added to the Material with the same name as the key at index 3. ",""],"inputs":[{"inputName":"materials","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Materials","memberName":"Material","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The Materials to Modify, will be evaluated based on their name. ","This is a IEnumerable<Material>"],"isRequired":1,"isInterface":1},{"inputName":"keys","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The key is the name of the Material to be affected. The keys index in this list relates to the index of a materialFragment to add in the other list. ","Empty keys means that its related materialFragment will be disgarded. ","This is a List<String>"],"isRequired":1,"isInterface":0},{"inputName":"materialFragments","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Materials","memberName":"IMaterialProperties","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The materialFragments to add to the Materials, the order of which relates to the keys. ","This is a List<IMaterialProperties> ","This can be of the following types: GasMaterial, SolidMaterial, SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration, InsulationMaterial, LiningMaterial, Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Materials","memberName":"Material","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Materials with modified list of properties. Materials whos names did not appear among the keys are unaffected. ","This is a IEnumerable<Material>"]}},{"namespace":"BH.Engine.Matter","className":"Query","memberName":"Density","assemblyName":"Matter_Engine.dll","descriptionParts":["Returns the density of a Material though querying each of the individual IMaterialProperties.","The density is based on properties with an exact matching name.","If inconsistent density values are found on multiple different IMaterialProperties, no result will be returned. ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["The material to query density from. ","This is a BH.oM.Physical.Materials.Material"],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["A specific type of IMaterialProperties to limit the search to. Set a preferred type here if multiple IMaterialProperties have densities. ","This is a Type"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The ratio tolerance for considering the value of the densities as equal.","Compares to the differance between min and max over their mean. ","This is a Ratio [-] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The density of the material. Additional info on how the value has been acquired is recorded in the warning ","This is a Density [kg/m³] (as a Double)"]}},{"namespace":"BH.Engine.Matter","className":"Query","memberName":"Mass","assemblyName":"Matter_Engine.dll","descriptionParts":["Evaluates the mass of an object based its Solid Volume and Density.","Requires a single consistent value of Density to be provided across all MaterialProperties of a given element. ",""],"inputs":[{"inputName":"elementM","namespace":"BH.oM.Dimensional","memberName":"IElementM","isGeneric":"0","descriptionParts":["The element to evaluate the mass of ","This is a BH.oM.Dimensional.IElementM: ","Enables Mass based operations to be performed on elements with materiality","Ensures the material composition of a physical object is represented, defined as proportions of discrete types of material forming the object's total solid volume.","Objects implementing this Interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.","Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The physical mass of the element ","This is a Mass [kg] (as a Double)"]}},{"namespace":"BH.Engine.Matter","className":"Query","memberName":"IMaterialComposition","assemblyName":"Matter_Engine.dll","descriptionParts":["Gets the unique Materials along with their relative proportions defining an object's make-up. ",""],"inputs":[{"inputName":"elementM","namespace":"BH.oM.Dimensional","memberName":"IElementM","isGeneric":"0","descriptionParts":["The element to get the MaterialComposition from. ","This is a BH.oM.Dimensional.IElementM: ","Enables Mass based operations to be performed on elements with materiality","Ensures the material composition of a physical object is represented, defined as proportions of discrete types of material forming the object's total solid volume.","Objects implementing this Interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.","Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["The kind of matter the element is composed of and in which ratios. ","This is a BH.oM.Physical.Materials.MaterialComposition: ","Defines the make up of an object through a list of Materials as relative proportions of the total solid volume.","There must be the same number of items in both lists, assigning a single Ratio for each Material."]}},{"namespace":"BH.Engine.Matter","className":"Query","memberName":"ISolidVolume","assemblyName":"Matter_Engine.dll","descriptionParts":["Returns an element's solid volume ",""],"inputs":[{"inputName":"elementM","namespace":"BH.oM.Dimensional","memberName":"IElementM","isGeneric":"0","descriptionParts":["The element to get the volume from ","This is a BH.oM.Dimensional.IElementM: ","Enables Mass based operations to be performed on elements with materiality","Ensures the material composition of a physical object is represented, defined as proportions of discrete types of material forming the object's total solid volume.","Objects implementing this Interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.","Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Opening, Panel, CurtainWall, Opening, Panel, AirTerminal, LightFixture, CableTray, Duct, Pipe, FlowSystem, WireSegment, Wire, VolumeDamper, Bracing, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The element's solid material volume. ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.MEP","className":"Compute","memberName":"PlumbingFixtureWaterDemandPerDay","assemblyName":"MEP_Engine.dll","descriptionParts":["Calculates the plumbing fixture water demand per day using the plumbing fixture flows and the building occupancy. ",""],"inputs":[{"inputName":"occupancy","namespace":"BH.oM.Architecture.Elements","memberName":"Occupancy","isGeneric":"0","descriptionParts":["The BHoM Object which contains the building's occupancy by gender. This method requires the object's occupancy percentages to be set. ","This is a BH.oM.Architecture.Elements.Occupancy"],"isRequired":1,"isInterface":0},{"inputName":"fixtureFlow","namespace":"BH.oM.MEP.Fixtures","memberName":"IFixtureFlow","isGeneric":"0","descriptionParts":["A fixtureFlow object that describes fixture usage in volume and duration. ","This is a BH.oM.MEP.Fixtures.IFixtureFlow: ","Base interface for all Fixture Flow objects. These objects are capable of containing a material or element that flows through the object. ","This can be of the following types: PlumbingFixtureFlow"],"isRequired":1,"isInterface":1},{"inputName":"fixtureUsage","namespace":"BH.oM.MEP.Fixtures","memberName":"IFixtureUsage","isGeneric":"0","descriptionParts":["A commercial or residential fixtureUsage object that describes occupancy-specific usage per fixture type. ","This is a BH.oM.MEP.Fixtures.IFixtureUsage: ","Base interface for all Fixture objects. These objects are capable of containing a material or element that flows through the object. ","This can be of the following types: ResidentialFixtureUsage, CommercialFixtureUsage"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The amount of water in m^3 used on a daily basis by plumbing fixtures. ","This is a Double"]}},{"namespace":"BH.Engine.MEP","className":"Create","memberName":"Duct","assemblyName":"MEP_Engine.dll","descriptionParts":["Creates a Duct object. Material that flows through this Duct can be established at the system level. ",""],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["A line that determines the Duct's length and direction. ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"flowRate","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The volume of fluid being conveyed by the Duct per second (m3/s). ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"sectionProperty","namespace":"BH.oM.MEP.System.SectionProperties","memberName":"DuctSectionProperty","isGeneric":"0","descriptionParts":["Provide a ductSectionProperty to prepare a composite Duct section for accurate capacity and spatial quality. ","This is a BH.oM.MEP.System.SectionProperties.DuctSectionProperty"],"isRequired":0,"isInterface":0},{"inputName":"orientationAngle","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is the Duct's planometric orientation angle (the rotation around its central axis created about the profile centroid). ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Duct","namespace":"BH.oM.MEP.System","isGeneric":"0","descriptionParts":["A duct object is a passageway which conveys material (typically air). ","This is a BH.oM.MEP.System.Duct: ","A duct object is a passageway which conveys material (typically air)"]}},{"namespace":"BH.Engine.MEP","className":"Create","memberName":"CableTraySectionProperty","assemblyName":"MEP_Engine.dll","descriptionParts":["Creates a composite Cable Tray sectionProfile. ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["A base ShapeProfile upon which to base the composite section. ","This is a BH.oM.Physical.Materials.Material"],"isRequired":1,"isInterface":0},{"inputName":"sectionProfile","namespace":"BH.oM.MEP.System.SectionProperties","memberName":"SectionProfile","isGeneric":"0","descriptionParts":["A base ShapeProfile upon which to base the composite section. ","This is a BH.oM.MEP.System.SectionProperties.SectionProfile"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"CableTraySectionProperty","namespace":"BH.oM.MEP.System.SectionProperties","isGeneric":"0","descriptionParts":["Cable Tray Section property used to provide accurate Cable Tray assembly and capacities. ","This is a BH.oM.MEP.System.SectionProperties.CableTraySectionProperty"]}},{"namespace":"BH.Engine.MEP","className":"Create","memberName":"DuctSectionProperty","assemblyName":"MEP_Engine.dll","descriptionParts":["Creates a composite Duct sectionProfile including interior lining and exterior insulation. ",""],"inputs":[{"inputName":"sectionProfile","namespace":"BH.oM.MEP.System.SectionProperties","memberName":"SectionProfile","isGeneric":"0","descriptionParts":["A base ShapeProfile upon which to base the composite section. ","This is a BH.oM.MEP.System.SectionProperties.SectionProfile"],"isRequired":1,"isInterface":0},{"inputName":"ductMaterial","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["Material properties for the Duct object. ","This is a BH.oM.Physical.Materials.Material"],"isRequired":0,"isInterface":0},{"inputName":"insulationMaterial","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["Material properties for the insulation material, or material that wraps the exterior of the Duct object. ","This is a BH.oM.Physical.Materials.Material"],"isRequired":0,"isInterface":0},{"inputName":"liningMaterial","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["Material properties for the lining material that wraps the inside surface of the Duct object. This is the layer that is in direct contact with interior flowing material. ","This is a BH.oM.Physical.Materials.Material"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"DuctSectionProperty","namespace":"BH.oM.MEP.System.SectionProperties","isGeneric":"0","descriptionParts":["Duct Section property used to provide accurate duct assembly and capacities. ","This is a BH.oM.MEP.System.SectionProperties.DuctSectionProperty"]}},{"namespace":"BH.Engine.MEP","className":"Create","memberName":"Pipe","assemblyName":"MEP_Engine.dll","descriptionParts":["Creates a Pipe object. Material that flows through this Pipe can be established at the system level. ",""],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["A line that determines the Pipe's length and direction. ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"flowRate","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The volume of fluid being conveyed by the Pipe per second (m3/s). ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"sectionProperty","namespace":"BH.oM.MEP.System.SectionProperties","memberName":"PipeSectionProperty","isGeneric":"0","descriptionParts":["Provide a pipeSectionProperty to prepare a composite Pipe section for accurate capacity and spatial quality. ","This is a BH.oM.MEP.System.SectionProperties.PipeSectionProperty"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Pipe","namespace":"BH.oM.MEP.System","isGeneric":"0","descriptionParts":["A pipe object is a passageway which conveys material (water, waste, glycol). ","This is a BH.oM.MEP.System.Pipe: ","A pipe object is a passageway which conveys material (water, waste, glycol)"]}},{"namespace":"BH.Engine.MEP","className":"Create","memberName":"PipeSectionProperty","assemblyName":"MEP_Engine.dll","descriptionParts":["Creates a composite Pipe sectionProfile including interior lining and exterior insulation. ",""],"inputs":[{"inputName":"sectionProfile","namespace":"BH.oM.MEP.System.SectionProperties","memberName":"SectionProfile","isGeneric":"0","descriptionParts":["A base ShapeProfile upon which to base the composite section. ","This is a BH.oM.MEP.System.SectionProperties.SectionProfile"],"isRequired":1,"isInterface":0},{"inputName":"pipeMaterial","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["Material properties for the Pipe object. ","This is a BH.oM.Physical.Materials.Material"],"isRequired":0,"isInterface":0},{"inputName":"insulationMaterial","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["Material properties for the insulation material, or material that wraps the exterior of the Pipe object. ","This is a BH.oM.Physical.Materials.Material"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PipeSectionProperty","namespace":"BH.oM.MEP.System.SectionProperties","isGeneric":"0","descriptionParts":["Pipe Section property used to provide accurate pipe assembly and capacities. ","This is a BH.oM.MEP.System.SectionProperties.PipeSectionProperty"]}},{"namespace":"BH.Engine.MEP","className":"Create","memberName":"SectionProfile","assemblyName":"MEP_Engine.dll","descriptionParts":["Creates a composite section profile from the desired ShapeProfile. The composition is inclusive of interior Lining and exterior Insulation thicknesses. ",""],"inputs":[{"inputName":"boxProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"BoxProfile","isGeneric":"0","descriptionParts":["A Box ShapeProfile to base the composite SectionProfile. ","This is a BH.oM.Spatial.ShapeProfiles.BoxProfile: ","Rectangular hollow profile with constant thickness and optional corner radii."],"isRequired":1,"isInterface":0},{"inputName":"liningThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness for the interior duct lining to be added to the overall section profile. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"insulationThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness for the exterior duct insulation to be added to the overall section profile. ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SectionProfile","namespace":"BH.oM.MEP.System.SectionProperties","isGeneric":"0","descriptionParts":["A Box section profile that consists of the Element, Insulation, and Lining profiles. ","This is a BH.oM.MEP.System.SectionProperties.SectionProfile"]}},{"namespace":"BH.Engine.MEP","className":"Create","memberName":"SectionProfile","assemblyName":"MEP_Engine.dll","descriptionParts":["Creates a composite section profile from the desired ShapeProfile. The composition is inclusive of interior Lining and exterior Insulation thicknesses. ",""],"inputs":[{"inputName":"tubeProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"TubeProfile","isGeneric":"0","descriptionParts":["A base ShapeProfile to base the composite SectionProfile. Currently only BoxProfiles and TubeProfiles are supported. ","This is a BH.oM.Spatial.ShapeProfiles.TubeProfile: ","Circular hollow profile."],"isRequired":1,"isInterface":0},{"inputName":"liningThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness for the interior duct lining to be added to the overall section profile. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"insulationThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness for the exterior duct insulation to be added to the overall section profile. ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SectionProfile","namespace":"BH.oM.MEP.System.SectionProperties","isGeneric":"0","descriptionParts":["A Tube section profile that consists of the Element, Insulation, and Lining profiles. ","This is a BH.oM.MEP.System.SectionProperties.SectionProfile"]}},{"namespace":"BH.Engine.MEP","className":"Create","memberName":"WireSegment","assemblyName":"MEP_Engine.dll","descriptionParts":["Creates a Wire object. Material that flows through this Pipe can be established at the system level. ",""],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["A line that determines the Wire's length and direction. ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"flowRate","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The volume of fluid being conveyed by the Wire per second (m3/s). ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"sectionProperty","namespace":"BH.oM.MEP.System.SectionProperties","memberName":"WireSectionProperty","isGeneric":"0","descriptionParts":["Provide a pipeSectionProperty to prepare a composite Wire section for accurate capacity and spatial quality. ","This is a BH.oM.MEP.System.SectionProperties.WireSectionProperty"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"WireSegment","namespace":"BH.oM.MEP.System","isGeneric":"0","descriptionParts":["Wire object to work within an MEP systems. ","This is a BH.oM.MEP.System.WireSegment: ","An object containing a collection of Wires to work within an MEP systems."]}},{"namespace":"BH.Engine.MEP","className":"Create","memberName":"WireSectionProperty","assemblyName":"MEP_Engine.dll","descriptionParts":["Creates a composite Wire sectionProfile including interior lining and exterior insulation. ",""],"inputs":[{"inputName":"sectionProfile","namespace":"BH.oM.MEP.System.SectionProperties","memberName":"SectionProfile","isGeneric":"0","descriptionParts":["A base ShapeProfile upon which to base the composite section. ","This is a BH.oM.MEP.System.SectionProperties.SectionProfile"],"isRequired":1,"isInterface":0},{"inputName":"conductiveMaterial","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["Material properties for the Wire object. ","This is a BH.oM.Physical.Materials.Material"],"isRequired":0,"isInterface":0},{"inputName":"insulationMaterial","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["Material properties for the insulation material, or material that wraps the exterior of the Wire object. ","This is a BH.oM.Physical.Materials.Material"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"WireSectionProperty","namespace":"BH.oM.MEP.System.SectionProperties","isGeneric":"0","descriptionParts":["Wire Section property used to provide accurate wire assembly and capacities. ","This is a BH.oM.MEP.System.SectionProperties.WireSectionProperty"]}},{"namespace":"BH.Engine.MEP","className":"Modify","memberName":"SetGeometry","assemblyName":"MEP_Engine.dll","descriptionParts":["Updates geometry of an IFlow Object by updating the positions of its end Nodes. ",""],"inputs":[{"inputName":"flowObj","namespace":"BH.oM.MEP.System","memberName":"IFlow","isGeneric":"0","descriptionParts":["The IFlow Object to update. ","This is a BH.oM.MEP.System.IFlow: ","Base interface for all flow-based objects. These objects are capable of containing a material or element that flows through the object. ","This can be of the following types: CableTray, Duct, Pipe, WireSegment"],"isRequired":1,"isInterface":1},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The new centerline curve of the pipe. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IFlow","namespace":"BH.oM.MEP.System","isGeneric":"0","descriptionParts":["The IFlow Object with updated geometry. ","This is a BH.oM.MEP.System.IFlow: ","Base interface for all flow-based objects. These objects are capable of containing a material or element that flows through the object. ","This can be of the following types: CableTray, Duct, Pipe, WireSegment"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"Centreline","assemblyName":"MEP_Engine.dll","descriptionParts":["Returns the centreline of any IFlow object as the line between the StartPoint and EndPoint. No offsets or similar is accounted for. ",""],"inputs":[{"inputName":"flowObj","namespace":"BH.oM.MEP.System","memberName":"IFlow","isGeneric":"0","descriptionParts":["The IFlow object to get the centreline from. ","This is a BH.oM.MEP.System.IFlow: ","Base interface for all flow-based objects. These objects are capable of containing a material or element that flows through the object. ","This can be of the following types: CableTray, Duct, Pipe, WireSegment"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The centreline of the IFlow object. ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"ICircularEquivalentDiameter","assemblyName":"MEP_Engine.dll","descriptionParts":["Returns the Circular Equivalent Diameter for elements that are non-circular, equivalent in length, fluid resistance and airflow. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["Shape profile to query the Circular Equivalent Diameter. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Circular Equivalent Diameter for element section profiles that are non-circular, equivalent in length, fluid resistance and airflow. ","This is a Double"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"CircularEquivalentDiameter","assemblyName":"MEP_Engine.dll","descriptionParts":["Returns the Circular Equivalent Diameter for elements that are non-circular, equivalent in length, fluid resistance and airflow. ",""],"inputs":[{"inputName":"box","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"BoxProfile","isGeneric":"0","descriptionParts":["Box Shape profile to query the Circular Equivalent Diameter. ","This is a BH.oM.Spatial.ShapeProfiles.BoxProfile: ","Rectangular hollow profile with constant thickness and optional corner radii."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Circular Equivalent Diameter for element section profiles that are non-circular, equivalent in length, fluid resistance and airflow. ","This is a Double"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"CircularEquivalentDiameter","assemblyName":"MEP_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"profile","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"FaceAreaByVelocity","assemblyName":"MEP_Engine.dll","descriptionParts":["Returns the height and width of the equipment based on the inputs of AirVelocityAcrossCoil and TotalAirFlow. ",""],"inputs":[{"inputName":"mepEquipmentObject","namespace":"BH.oM.MEP.Equipment","memberName":"AirHandlingUnit","isGeneric":"0","descriptionParts":["MEP object that contains properties for AirVelocityAcrossCoil and TotalAirFlow. ","This is a BH.oM.MEP.Equipment.AirHandlingUnit: ","Air Handling Units are devices which house fans, filter, coils, and energy wheels which produce heated and cooled fresh/partially recirculated air to a building"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is the width OR the length (they are the same value), since the method is taking the square root of the airflow divided by the velocity. ","This is a Double"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"Geometry","assemblyName":"MEP_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"flowObj","namespace":"BH.oM.MEP.System","memberName":"IFlow","isGeneric":"0","descriptionParts":["This is a BH.oM.MEP.System.IFlow: ","Base interface for all flow-based objects. These objects are capable of containing a material or element that flows through the object. ","This can be of the following types: CableTray, Duct, Pipe, WireSegment"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"HydraulicDiameter","assemblyName":"MEP_Engine.dll","descriptionParts":["Returns the Hydraulic Diameter for any IProfile that are non-circular (ie the equivalent diameter for flow based equations if the duct were to be circular). ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["IProfile used to define the element's cross section shape. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1},{"inputName":"area","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Area of the IProfile used to define the section of the element. ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Hydraulic Diameter allows you to calculate the round equivalent hydraulic diameter for a non-round duct (rectangular/square). ","This is a Double"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"Length","assemblyName":"MEP_Engine.dll","descriptionParts":["Query the length of any IFlow Object. ",""],"inputs":[{"inputName":"flowObj","namespace":"BH.oM.MEP.System","memberName":"IFlow","isGeneric":"0","descriptionParts":["Any IFlow object to extract length. ","This is a BH.oM.MEP.System.IFlow: ","Base interface for all flow-based objects. These objects are capable of containing a material or element that flows through the object. ","This can be of the following types: CableTray, Duct, Pipe, WireSegment"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Linear length of the IFlow object. ","This is a Double"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"CompositeSolidVolumes","assemblyName":"MEP_Engine.dll","descriptionParts":["Queries the solid volume of a Duct by multiplying the section profile's solid area by the element's length. ",""],"inputs":[{"inputName":"duct","namespace":"BH.oM.MEP.System","memberName":"Duct","isGeneric":"0","descriptionParts":["The Duct to query solid volume. ","This is a BH.oM.MEP.System.Duct: ","A duct object is a passageway which conveys material (typically air)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Double, System.Double, System.Double>"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"CompositeSolidVolumes","assemblyName":"MEP_Engine.dll","descriptionParts":["Queries the solid volume of a Pipe by multiplying the section profile's solid area by the element's length. ",""],"inputs":[{"inputName":"pipe","namespace":"BH.oM.MEP.System","memberName":"Pipe","isGeneric":"0","descriptionParts":["The Pipe to query solid volume. ","This is a BH.oM.MEP.System.Pipe: ","A pipe object is a passageway which conveys material (water, waste, glycol)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Double, System.Double, System.Double>"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"CompositeSolidVolumes","assemblyName":"MEP_Engine.dll","descriptionParts":["Queries the solid volume of a Wire by multiplying the section profile's solid area by the element's length. ",""],"inputs":[{"inputName":"wire","namespace":"BH.oM.MEP.System","memberName":"WireSegment","isGeneric":"0","descriptionParts":["The Wire to query solid volume. ","This is a BH.oM.MEP.System.WireSegment: ","An object containing a collection of Wires to work within an MEP systems."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Double, System.Double, System.Double>"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"MaterialComposition","assemblyName":"MEP_Engine.dll","descriptionParts":["Gets all the Materials a Duct is composed of and in which ratios ",""],"inputs":[{"inputName":"duct","namespace":"BH.oM.MEP.System","memberName":"Duct","isGeneric":"0","descriptionParts":["The Duct to get the MaterialComposition from ","This is a BH.oM.MEP.System.Duct: ","A duct object is a passageway which conveys material (typically air)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["The kind of matter the Duct is composed of and in which ratios ","This is a Ratio [-] (as a BH.oM.Physical.Materials.MaterialComposition)"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"MaterialComposition","assemblyName":"MEP_Engine.dll","descriptionParts":["Gets all the Materials a pipe is composed of and in which ratios ",""],"inputs":[{"inputName":"pipe","namespace":"BH.oM.MEP.System","memberName":"Pipe","isGeneric":"0","descriptionParts":["The pipe to get the MaterialComposition from ","This is a BH.oM.MEP.System.Pipe: ","A pipe object is a passageway which conveys material (water, waste, glycol)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["The kind of matter the Duct is composed of and in which ratios ","This is a Ratio [-] (as a BH.oM.Physical.Materials.MaterialComposition)"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"MaterialComposition","assemblyName":"MEP_Engine.dll","descriptionParts":["Gets all the Materials a wire is composed of and in which ratios ",""],"inputs":[{"inputName":"wire","namespace":"BH.oM.MEP.System","memberName":"WireSegment","isGeneric":"0","descriptionParts":["The wire to get the MaterialComposition from ","This is a BH.oM.MEP.System.WireSegment: ","An object containing a collection of Wires to work within an MEP systems."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["The kind of matter the Duct is composed of and in which ratios ","This is a Ratio [-] (as a BH.oM.Physical.Materials.MaterialComposition)"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"MaterialComposition","assemblyName":"MEP_Engine.dll","descriptionParts":["Gets all the Materials a cableTray is composed of and in which ratios ",""],"inputs":[{"inputName":"cableTray","namespace":"BH.oM.MEP.System","memberName":"CableTray","isGeneric":"0","descriptionParts":["The cableTray to get the MaterialComposition from ","This is a BH.oM.MEP.System.CableTray: ","A Cable Tray object is a passageway which conveys material (typically cables)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["The kind of matter the Duct is composed of and in which ratios ","This is a Ratio [-] (as a BH.oM.Physical.Materials.MaterialComposition)"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"SolidVolume","assemblyName":"MEP_Engine.dll","descriptionParts":["Queries the solid volume of a Duct by multiplying the section profile's solid area by the element's length. Note this element contains a composite section and this query method returns a single summed value. If you want precise values per section profile, please use CompositeSolidVolumes. ",""],"inputs":[{"inputName":"duct","namespace":"BH.oM.MEP.System","memberName":"Duct","isGeneric":"0","descriptionParts":["The Duct to query solid volume. ","This is a BH.oM.MEP.System.Duct: ","A duct object is a passageway which conveys material (typically air)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Combined SolidVolume of the Element's SectionProfiles. ","This is a Double"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"SolidVolume","assemblyName":"MEP_Engine.dll","descriptionParts":["Queries the solid volume of a Pipe by multiplying the section profile's solid area by the element's length. Note this element contains a composite section and this query method returns a single summed value. If you want precise values per section profile, please use CompositeSolidVolumes. ",""],"inputs":[{"inputName":"pipe","namespace":"BH.oM.MEP.System","memberName":"Pipe","isGeneric":"0","descriptionParts":["The Pipe to query solid volume. ","This is a BH.oM.MEP.System.Pipe: ","A pipe object is a passageway which conveys material (water, waste, glycol)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Combined SolidVolume of the Element's SectionProfiles. ","This is a Double"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"SolidVolume","assemblyName":"MEP_Engine.dll","descriptionParts":["Queries the solid volume of a WireSegment by multiplying the section profile's solid area by the element's length. Note this element contains a composite section and this query method returns a single summed value. If you want precise values per section profile, please use CompositeSolidVolumes. ",""],"inputs":[{"inputName":"wireSegment","namespace":"BH.oM.MEP.System","memberName":"WireSegment","isGeneric":"0","descriptionParts":["The WireSegment to query solid volume. ","This is a BH.oM.MEP.System.WireSegment: ","An object containing a collection of Wires to work within an MEP systems."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Combined SolidVolume of the Element's SectionProfiles. ","This is a Double"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"SolidVolume","assemblyName":"MEP_Engine.dll","descriptionParts":["Queries the solid volume of a WireSegment by multiplying the section profile's solid area by the element's length. Note this element contains a composite section and this query method returns a single summed value. If you want precise values per section profile, please use CompositeSolidVolumes. ",""],"inputs":[{"inputName":"cableTray","namespace":"BH.oM.MEP.System","memberName":"CableTray","isGeneric":"0","descriptionParts":["This is a BH.oM.MEP.System.CableTray: ","A Cable Tray object is a passageway which conveys material (typically cables)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Combined SolidVolume of the Element's SectionProfiles. ","This is a Double"]}},{"namespace":"BH.Engine.Adapters.MidasCivil","className":"Compute","memberName":"FEMeshToPanel","assemblyName":"MidasCivil_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Structure.Elements","memberName":"FEMesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."]}},{"namespace":"BH.Engine.Adapters.MidasCivil","className":"Compute","memberName":"CombineTextFiles","assemblyName":"MidasCivil_Engine.dll","descriptionParts":["Combines all text files specified by type in to a single MidasCivilText (MCT) to be loaded in to MidasCivil ",""],"inputs":[{"inputName":"filePath","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The same filepath used for the adapter (pointing to an mcb file) ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"types","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["BHoM object types to specify the text files to be combined. A null value will combine all text files. ","This is a List<Type>"],"isRequired":0,"isInterface":0},{"inputName":"active","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Execute the method ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Was the execution successful? ","This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Convert","memberName":"ToJson","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"tag","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Convert","memberName":"ToJson","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"tag","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"timestamp","namespace":"System","memberName":"DateTime","isGeneric":"0","descriptionParts":["This is a DateTime"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Convert","memberName":"ToBson","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"tag","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"timestamp","namespace":"System","memberName":"DateTime","isGeneric":"0","descriptionParts":["This is a DateTime"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BsonDocument","namespace":"MongoDB.Bson","isGeneric":"0","descriptionParts":["This is a BsonDocument"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Convert","memberName":"ToBson","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"tag","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BsonDocument","namespace":"MongoDB.Bson","isGeneric":"0","descriptionParts":["This is a BsonDocument"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Convert","memberName":"FromBson","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"document","namespace":"MongoDB.Bson","memberName":"BsonDocument","isGeneric":"0","descriptionParts":["This is a BsonDocument"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Convert","memberName":"IToMongoQuery","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"query","namespace":"BH.oM.Data.Requests","memberName":"IRequest","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Requests.IRequest ","This can be of the following types: BatchRequest, CustomRequest, FilterRequest, LogicalAndRequest, LogicalNotRequest, LogicalOrRequest, SelectionRequest, PierAndSpandrelForceRequest, RemoveRequest, FileContentRequest, DirectoryRequest, FileRequest, FileDirRequest, GetRequest, CollectionNames, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"BsonDocument","namespace":"MongoDB.Bson","isGeneric":"0","descriptionParts":["This is a BsonDocument"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Convert","memberName":"ToMongoQuery","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"query","namespace":"BH.oM.Data.Requests","memberName":"CustomRequest","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Requests.CustomRequest"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BsonDocument","namespace":"MongoDB.Bson","isGeneric":"0","descriptionParts":["This is a BsonDocument"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Convert","memberName":"ToMongoQuery","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"query","namespace":"BH.oM.Data.Requests","memberName":"FilterRequest","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Requests.FilterRequest"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BsonDocument","namespace":"MongoDB.Bson","isGeneric":"0","descriptionParts":["This is a BsonDocument"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Convert","memberName":"ToMongoQuery","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"query","namespace":"BH.oM.Data.Requests","memberName":"IResultRequest","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Requests.IResultRequest ","This can be of the following types: PierAndSpandrelForceRequest, BarResultRequest, GlobalResultRequest, MeshResultRequest, NodeResultRequest"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"BsonDocument","namespace":"MongoDB.Bson","isGeneric":"0","descriptionParts":["This is a BsonDocument"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Compute","memberName":"MongoAddField","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"key","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"items","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Compute","memberName":"MongoMatchList","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"key","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"filter","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Compute","memberName":"MongoAbsVal","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"item","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Compute","memberName":"MongoAnd","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"operands","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Compute","memberName":"MongoCleanVariable","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"cleanMe","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0},{"inputName":"outputObject","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Compute","memberName":"MongoGroup","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"groupBy","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"],"isRequired":1,"isInterface":0},{"inputName":"projectForward","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Compute","memberName":"MongoCrossRef","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"otherColl","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"props2Match","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"],"isRequired":1,"isInterface":0},{"inputName":"props2Return","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"],"isRequired":1,"isInterface":0},{"inputName":"ouputname","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Compute","memberName":"MongoMin","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mongoArrayName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Compute","memberName":"MongoProject","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"filter","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Compute","memberName":"MongoMax","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mongoArrayName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Compute","memberName":"MongoSum","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"operands","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Compute","memberName":"MongoDivision","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"numerator","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"denominator","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Compute","memberName":"MongoProduct","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"operands","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Compute","memberName":"MongoPower","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"base","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"exponent","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Compute","memberName":"MongoSubtraction","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"a","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"b","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Compute","memberName":"MongoMatchDomain","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"key","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0},{"inputName":"upperbound","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0},{"inputName":"lowerbound","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"]}},{"namespace":"BH.Engine.Adapters.Mongo","className":"Compute","memberName":"MongoListItem","assemblyName":"Mongo_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mongoArrayName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"index","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Convert","memberName":"ToLatLonNode","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Convert a Point in Universal Transverse Mercator coordinates to a Node. ",""],"inputs":[{"inputName":"utmpoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"zone","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Universal Transverse Mercator zone. ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"southernHemi","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Is the Point in the Southern hemisphere? ","This is a Boolean"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Node","namespace":"BH.oM.Adapters.OpenStreetMap","isGeneric":"0","descriptionParts":["Converted Point as a Node. ","This is a BH.oM.Adapters.OpenStreetMap.Node: ","A node is one of the core elements in the OpenStreetMap data model. It consists of a single point in space defined by its latitude, longitude and node id."]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Convert","memberName":"ToUTM","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Convert latitude and longitude to Universal Transverse Mercator coordinates ",""],"inputs":[{"inputName":"lat","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The latitude, in the range -90.0 to 90.0 with up to 7 decimal places. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"lon","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The longitude, in the range -180.0 to 180.0 with up to 7 decimal places. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"gridZone","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Optional Universal Transverse Mercator zone to allow locking conversion to a single zone. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double[]","namespace":"System","isGeneric":"0","descriptionParts":["Array of two doubles as easting and northing (x,y) ","This is a Double[]"]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Convert","memberName":"ToElementContainer","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Create an OpenStreetMap_oM ElementContainer from JSON formatted query result. ",""],"inputs":[{"inputName":"openStreetMapQueryJSONResult","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["string formatted as JSON. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ElementContainer","namespace":"BH.oM.Adapters.OpenStreetMap","isGeneric":"0","descriptionParts":["ElementContainer containing the objects defined in the JSON formatted query result. ","This is a BH.oM.Adapters.OpenStreetMap.ElementContainer: ","Container for OpenStreetMap elements returned from a query."]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Convert","memberName":"ToElementContainer","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Create an OpenStreetMap_oM ElementContainer from HTTP Pull results. ",""],"inputs":[{"inputName":"queryResults","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"CustomObject","isInterface":"0","isGeneric":"0"}],"descriptionParts":["results from the HTTP_Adapter. ","This is a List<CustomObject>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ElementContainer","namespace":"BH.oM.Adapters.OpenStreetMap","isGeneric":"0","descriptionParts":["ElementContainer containing the objects defined in the results from the HTTP_Adapter. ","This is a BH.oM.Adapters.OpenStreetMap.ElementContainer: ","Container for OpenStreetMap elements returned from a query."]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Convert","memberName":"ToQLString","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Convert an element to an Overpass API Overpass QL string. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Adapters.OpenStreetMap","memberName":"IOpenStreetMapElement","isGeneric":"0","descriptionParts":["The element to convert. ","This is a BH.oM.Adapters.OpenStreetMap.IOpenStreetMapElement: ","Interface for OpenStreetMap elements. ","This can be of the following types: Node, Relation, Way"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["Overpass QL string. ","This is a String"]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Convert","memberName":"ToQLString","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Convert a dictionary of keyValues to an Overpass API Overpass QL tag string. ",""],"inputs":[{"inputName":"keyValues","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The Dictionary to convert. ","This is a Dictionary<String, String>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["Overpass QL string. ","This is a String"]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Convert","memberName":"ToQLString","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Convert a region to an Overpass API Overpass QL region string. ",""],"inputs":[{"inputName":"region","namespace":"BH.oM.Adapters.OpenStreetMap","memberName":"IOpenStreetMapRegion","isGeneric":"0","descriptionParts":["The region to convert. ","This is a BH.oM.Adapters.OpenStreetMap.IOpenStreetMapRegion: ","Interface for all search regions. ","This can be of the following types: BoundingBox, CentreRadius, LineStringRadius, Polygon, TaggedArea"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["Overpass QL string. ","This is a String"]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Convert","memberName":"ToUTMPoint","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Convert an OpenStreetMap Node to a Point in Universal Transverse Mercator coordinates. ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Adapters.OpenStreetMap","memberName":"Node","isGeneric":"0","descriptionParts":["OpenStreetMap Node to convert. ","This is a BH.oM.Adapters.OpenStreetMap.Node: ","A node is one of the core elements in the OpenStreetMap data model. It consists of a single point in space defined by its latitude, longitude and node id."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Converted Node as a Point. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Convert","memberName":"ToUTMPoint","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Convert latitude and longitude to a Point in Universal Transverse Mercator coordinates. ",""],"inputs":[{"inputName":"lat","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The latitude, in the range -90.0 to 90.0 with up to 7 decimal places. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"lon","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The longitude, in the range -180.0 to 180.0 with up to 7 decimal places. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"gridZone","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Optional Universal Transverse Mercator zone to allow locking conversion to a single zone. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Converted Node as a Point. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Convert","memberName":"ToUTMZone","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Convert longitude to Universal Transverse Mercator zone. ",""],"inputs":[{"inputName":"longitude","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The longitude to convert, in the range -180.0 to 180.0 with up to 7 decimal places. ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["Universal transverse Mercator zone. ","This is a Int32"]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Convert","memberName":"ToUTMZone","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Convert longitude of a Node to Universal Transverse Mercator zone. ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Adapters.OpenStreetMap","memberName":"Node","isGeneric":"0","descriptionParts":["The node to convert. ","This is a BH.oM.Adapters.OpenStreetMap.Node: ","A node is one of the core elements in the OpenStreetMap data model. It consists of a single point in space defined by its latitude, longitude and node id."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["Universal transverse Mercator zone. ","This is a Int32"]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Convert","memberName":"ToUTMZone","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Convert all nodes in a Way to single, averaged Universal Transverse Mercator zone. ",""],"inputs":[{"inputName":"way","namespace":"BH.oM.Adapters.OpenStreetMap","memberName":"Way","isGeneric":"0","descriptionParts":["The way to convert. ","This is a BH.oM.Adapters.OpenStreetMap.Way: ","A Way is an ordered list of nodes which normally also has at least one tag or is included within a Relation."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["Universal transverse Mercator zone. ","This is a Int32"]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Convert","memberName":"ToUTMZone","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Convert all nodes in a collection of Ways to single, averaged Universal Transverse Mercator zone. ",""],"inputs":[{"inputName":"ways","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.OpenStreetMap","memberName":"Way","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The ways to convert. ","This is a List<Way>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["Universal Transverse Mercator zone. ","This is a Int32"]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Convert","memberName":"ToUTMPolyline","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Convert an OpenStreetMap Way to a Polyline in Universal Transverse Mercator coordinates. ",""],"inputs":[{"inputName":"way","namespace":"BH.oM.Adapters.OpenStreetMap","memberName":"Way","isGeneric":"0","descriptionParts":["OpenStreetMap Way to convert. ","This is a BH.oM.Adapters.OpenStreetMap.Way: ","A Way is an ordered list of nodes which normally also has at least one tag or is included within a Relation."],"isRequired":1,"isInterface":0},{"inputName":"gridZone","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Optional Universal Transverse Mercator zone to allow locking conversion to a single zone. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Converted Way as a Polyline. ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Create","memberName":"Node","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Create an OpenStreetMap Node from geographic coordinates. ",""],"inputs":[{"inputName":"latitude","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The latitude of the Node, in the range -90.0 to 90.0 with up to 7 decimal places. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"longitude","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The longitude of the Node, in the range -180.0 to 180.0 with up to 7 decimal places. ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Node","namespace":"BH.oM.Adapters.OpenStreetMap","isGeneric":"0","descriptionParts":["OpenStreetMap Node. ","This is a BH.oM.Adapters.OpenStreetMap.Node: ","A node is one of the core elements in the OpenStreetMap data model. It consists of a single point in space defined by its latitude, longitude and node id."]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Create","memberName":"Node","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Create an OpenStreetMap Relation for use as a search objective.See https://wiki.openstreetmap.org/wiki/Map_Features for documentation of all map features. ",""],"inputs":[{"inputName":"keyvalues","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The geographic attributes that you are searching for. ","This is a Dictionary<String, String>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Node","namespace":"BH.oM.Adapters.OpenStreetMap","isGeneric":"0","descriptionParts":["OpenStreetMap Node. ","This is a BH.oM.Adapters.OpenStreetMap.Node: ","A node is one of the core elements in the OpenStreetMap data model. It consists of a single point in space defined by its latitude, longitude and node id."]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Create","memberName":"QueryBuilder","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Create the OpenStreetMap query from a region to search within and the elements to search for. ",""],"inputs":[{"inputName":"region","namespace":"BH.oM.Adapters.OpenStreetMap","memberName":"IOpenStreetMapRegion","isGeneric":"0","descriptionParts":["The region to search. ","This is a BH.oM.Adapters.OpenStreetMap.IOpenStreetMapRegion: ","Interface for all search regions. ","This can be of the following types: BoundingBox, CentreRadius, LineStringRadius, Polygon, TaggedArea"],"isRequired":1,"isInterface":1},{"inputName":"elements","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.OpenStreetMap","memberName":"IOpenStreetMapElement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The elements to search for. ","This is a List<IOpenStreetMapElement> ","This can be of the following types: Node, Relation, Way"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"QueryBuilder","namespace":"BH.oM.Adapters.OpenStreetMap","isGeneric":"0","descriptionParts":["The QueryBuilder. ","This is a BH.oM.Adapters.OpenStreetMap.QueryBuilder: ","A QueryBuilder constructs the OpenStreetMap query from a set of regions to search within and elements to search for."]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Create","memberName":"Relation","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Create an OpenStreetMap Relation for use as a search objective.See https://wiki.openstreetmap.org/wiki/Map_Features for documentation of all map features. ",""],"inputs":[{"inputName":"keyvalues","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The geographic attributes that you are searching for. ","This is a Dictionary<String, String>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Relation","namespace":"BH.oM.Adapters.OpenStreetMap","isGeneric":"0","descriptionParts":["OpenStreetMap Relation. ","This is a BH.oM.Adapters.OpenStreetMap.Relation: ","A relation is a group of elements (Members) used to model logical (and usually local) or geographic relationships between objects."]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Create","memberName":"Way","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Create an OpenStreetMap Way for use as a search objective.See https://wiki.openstreetmap.org/wiki/Map_Features for documentation of all map features. ",""],"inputs":[{"inputName":"keyvalues","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The geographic attributes that you are searching for. ","This is a Dictionary<String, String>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Way","namespace":"BH.oM.Adapters.OpenStreetMap","isGeneric":"0","descriptionParts":["OpenStreetMap Way. ","This is a BH.oM.Adapters.OpenStreetMap.Way: ","A Way is an ordered list of nodes which normally also has at least one tag or is included within a Relation."]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Query","memberName":"AverageNode","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Calculate the average node an OpenStreetMap Way. ",""],"inputs":[{"inputName":"way","namespace":"BH.oM.Adapters.OpenStreetMap","memberName":"Way","isGeneric":"0","descriptionParts":["OpenStreetMap Way. ","This is a BH.oM.Adapters.OpenStreetMap.Way: ","A Way is an ordered list of nodes which normally also has at least one tag or is included within a Relation."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Node","namespace":"BH.oM.Adapters.OpenStreetMap","isGeneric":"0","descriptionParts":["Single average node. ","This is a BH.oM.Adapters.OpenStreetMap.Node: ","A node is one of the core elements in the OpenStreetMap data model. It consists of a single point in space defined by its latitude, longitude and node id."]}},{"namespace":"BH.Engine.Adapters.OpenStreetMap","className":"Query","memberName":"Area","assemblyName":"OpenStreetMap_Engine.dll","descriptionParts":["Calculate the area of an OpenStreetMap way in metres. ",""],"inputs":[{"inputName":"way","namespace":"BH.oM.Adapters.OpenStreetMap","memberName":"Way","isGeneric":"0","descriptionParts":["OpenStreetMap Way for area query. ","This is a BH.oM.Adapters.OpenStreetMap.Way: ","A Way is an ordered list of nodes which normally also has at least one tag or is included within a Relation."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Area of the way in metres. ","This is a Double"]}},{"namespace":"BH.Engine.Environment","className":"Modify","memberName":"AddMaterialProperties","assemblyName":"Physical_Engine.dll","descriptionParts":["Assign a new set of material properties to a material ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["A material to add properties to ","This is a BH.oM.Physical.Materials.Material"],"isRequired":1,"isInterface":0},{"inputName":"newProperties","namespace":"BH.oM.Physical.Materials","memberName":"IMaterialProperties","isGeneric":"0","descriptionParts":["The properties to add to the material ","This is a BH.oM.Physical.Materials.IMaterialProperties ","This can be of the following types: GasMaterial, SolidMaterial, SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration, InsulationMaterial, LiningMaterial, Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Material","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["The updated Material ","This is a BH.oM.Physical.Materials.Material"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Bracing","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates a physical Bracing element. To generate elements compatible with structural packages, have a look at the Bar class ",""],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The centre line geometry of the Bracing ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"property","namespace":"BH.oM.Physical.FramingProperties","memberName":"IFramingElementProperty","isGeneric":"0","descriptionParts":["The property of the bracing, containing its profile, orientation and materiality ","This is a BH.oM.Physical.FramingProperties.IFramingElementProperty ","This can be of the following types: ConstantFramingProperty"],"isRequired":1,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the bracing, default empty string ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Bracing","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["The created physical Bracing ","This is a BH.oM.Physical.Elements.Bracing"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Cable","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates a physical Cable element. To generate elements compatible with structural packages, have a look at the Bar class ",""],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The centre line geometry of the Cable ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"property","namespace":"BH.oM.Physical.FramingProperties","memberName":"IFramingElementProperty","isGeneric":"0","descriptionParts":["The property of the cable, containing its profile, orientation and materiality ","This is a BH.oM.Physical.FramingProperties.IFramingElementProperty ","This can be of the following types: ConstantFramingProperty"],"isRequired":1,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the cable, default empty string ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Cable","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["The created physical Cable ","This is a BH.oM.Physical.Elements.Cable"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Column","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates a physical Column element. To generate elements compatible with structural packages, have a look at the Bar class ",""],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The centre line geometry of the Column ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"property","namespace":"BH.oM.Physical.FramingProperties","memberName":"IFramingElementProperty","isGeneric":"0","descriptionParts":["The property of the column, containing its profile, orientation and materiality ","This is a BH.oM.Physical.FramingProperties.IFramingElementProperty ","This can be of the following types: ConstantFramingProperty"],"isRequired":1,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the column, default empty string ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Column","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["The created physical column ","This is a BH.oM.Physical.Elements.Column"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Column","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates a physical Column element. To generate elements compatible with structural packages, have a look at the Bar class ",""],"inputs":[{"inputName":"basePoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The basePoint geometry of the Column ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"property","namespace":"BH.oM.Physical.FramingProperties","memberName":"IFramingElementProperty","isGeneric":"0","descriptionParts":["The property of the column, containing its profile, orientation and materiality ","This is a BH.oM.Physical.FramingProperties.IFramingElementProperty ","This can be of the following types: ConstantFramingProperty"],"isRequired":1,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the column, default empty string ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Column","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["The created physical column ","This is a BH.oM.Physical.Elements.Column"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"NewElement1D","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates a valid IElement1D which can be assigned to the ISurface. ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Physical.Elements","memberName":"ISurface","isGeneric":"0","descriptionParts":["The 2-dimensional element which a corresponding valid IElement1D is to be gotten from. ","This is a BH.oM.Physical.Elements.ISurface ","This can be of the following types: Roof, Floor, Wall"],"isRequired":1,"isInterface":1},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The geometrical location of the new IElement1D as a ICurve. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IElement1D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["a valid IElement1D of a type which can be assigned to the ISurface. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"NewElement1D","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates a valid IElement1D which can be assigned to the IOpening. ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Physical.Elements","memberName":"IOpening","isGeneric":"0","descriptionParts":["The 2-dimensional element which a corresponding valid IElement1D is to be gotten from. ","This is a BH.oM.Physical.Elements.IOpening ","This can be of the following types: Door, Void, Window"],"isRequired":1,"isInterface":1},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The geometrical location of the new IElement1D as a ICurve. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IElement1D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["a valid IElement1D of a type which can be assigned to the IOpening. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"NewInternalElement2D","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates a valid IElement2D which can be assigned as an internal element to the ISurface ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Physical.Elements","memberName":"ISurface","isGeneric":"0","descriptionParts":["The 2-dimensional element which a valid corresponding internal element is to be gotten from ","This is a BH.oM.Physical.Elements.ISurface ","This can be of the following types: Roof, Floor, Wall"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IElement2D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["a Void which can be assigned as an internal element to a ISurface ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Pile","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates a physical Pile element. To generate elements compatible with structural packages, have a look at the Bar class ",""],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The centre line geometry of the Pile ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"property","namespace":"BH.oM.Physical.FramingProperties","memberName":"IFramingElementProperty","isGeneric":"0","descriptionParts":["The property of the pile, containing its profile, orientation and materiality ","This is a BH.oM.Physical.FramingProperties.IFramingElementProperty ","This can be of the following types: ConstantFramingProperty"],"isRequired":1,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the pile, default empty string ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Pile","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["The created physical Pile ","This is a BH.oM.Physical.Elements.Pile"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Stirrup","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates a physical reinforcement element. Calculates BendRadius automatically value is based on Eurocode 1992-1-1. ","For diameters less than or equal to 0.016m inner bend diameter will be equal 4 times the stirrups's diameter and 7 times for bar diameters greater than 0.016m. ","Note that in values in Eurocode refers to the inner bend diameter and Stirrup in BHoM defines centerline radius, why values will be adjusted to account for this. ",""],"inputs":[{"inputName":"centreCurve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["Centreline of the Reinforcing bar in three-dimensional space. When the BendRadius is sufficient for any kinks in the rebar, this can be defined as a polyline, ommiting any arcs in corners. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline ",""],"isRequired":1,"isInterface":1},{"inputName":"diameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["This is a BH.oM.Physical.Materials.Material ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Stirrup","namespace":"BH.oM.Physical.Reinforcement","isGeneric":"0","descriptionParts":["The created physical Primary Reinforcing bar. ","This is a BH.oM.Physical.Reinforcement.Stirrup: ","Defining shear reinforcement for framing elements."]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"PrimaryReinforcingBar","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates a physical reinforcement element. Calculates BendRadius automatically value is based on Eurocode 1992-1-1. ","For diameters less than or equal to 0.016m inner bend diameter will be equal 4 times the stirrups's diameter and 7 times for bar diameters greater than 0.016m. ","Note that in values in Eurocode refers to the inner bend diameter and PrimaryReinforcingBar in BHoM defines centerline radius, why values will be adjusted to account for this. ",""],"inputs":[{"inputName":"centreCurve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["Centreline of the Reinforcing bar in three-dimensional space. When the BendRadius is sufficient for any kinks in the rebar, this can be defined as a polyline, ommiting any arcs in corners. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline ",""],"isRequired":1,"isInterface":1},{"inputName":"diameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["This is a BH.oM.Physical.Materials.Material ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PrimaryReinforcingBar","namespace":"BH.oM.Physical.Reinforcement","isGeneric":"0","descriptionParts":["The created physical Primary Reinforcing bar. ","This is a BH.oM.Physical.Reinforcement.PrimaryReinforcingBar: ","Defining reinforcement running along the element."]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Roof","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates physical roof based on given construction and edges ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["Construction of the roof ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1},{"inputName":"edges","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["External edges of the roof (Profile - planar closed curve) ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Roof","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["A physical roof ","This is a BH.oM.Physical.Elements.Roof"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Roof","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates a physical Roof element. For elements for structral analytical applications look at BH.oM.Structure.Elements.Panel. For elements for environmental analytical applications look at BH.oM.Environments.Elements.Panel ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["Construction representing the thickness and materiality of the Roof ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1},{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["Location surface which represents the outer geometry of the Roof. Should not contain any openings ","This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1},{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Elements","memberName":"IOpening","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Openings of the Roof. Could be simple voids or more detailed obejcts ","This is a List<IOpening> ","This can be of the following types: Door, Void, Window"],"isRequired":0,"isInterface":0},{"inputName":"offset","namespace":"BH.oM.Physical.Elements","memberName":"Offset","isGeneric":"0","descriptionParts":["Represents the positioning of the construction in relation to the location surface of the Roof ","This is a BH.oM.Physical.Elements.Offset ","Enum values: ","-Undefined ","-Centre ","-InnerEdge ","-OuterEdge"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the roof, default empty string ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Roof","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["The created physical Roof ","This is a BH.oM.Physical.Elements.Roof"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Roof","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates physical roof based on given construction, external and internal edges ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["Construction of the roof ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1},{"inputName":"edges","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["External edges of the roof (Profile - planar closed curve) ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"internalEdges","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Internal edges of openings etc. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Roof","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["A physical roof ","This is a BH.oM.Physical.Elements.Roof"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Beam","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates a physical Beam element. To generate elements compatible with structural packages, have a look at the Bar class ",""],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The centre line geometry of the beam ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"property","namespace":"BH.oM.Physical.FramingProperties","memberName":"IFramingElementProperty","isGeneric":"0","descriptionParts":["The property of the beam, containing its profile, orientation and materiality ","This is a BH.oM.Physical.FramingProperties.IFramingElementProperty ","This can be of the following types: ConstantFramingProperty"],"isRequired":1,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the beam, default empty string ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Beam","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["The created physical beam ","This is a BH.oM.Physical.Elements.Beam"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Construction","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns a Construction object ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the construction, default empty string ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"layers","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Constructions","memberName":"Layer","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of layers the construction is made up of, default null ","This is a List<Layer>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Construction","namespace":"BH.oM.Physical.Constructions","isGeneric":"0","descriptionParts":["A Construction object containing a collection of layers of materials ","This is a BH.oM.Physical.Constructions.Construction"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"ConstantFramingProperty","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates a constant framing property to be used with the FramingElements. This property will represent a constant section across the full length of the element ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["Profile of the cross section of the proeprty ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1},{"inputName":"material","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["Material of the profile ","This is a BH.oM.Physical.Materials.Material"],"isRequired":1,"isInterface":0},{"inputName":"orientationAngle","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Defines the rotation of the section around the axis of the element ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the constant framing property, default empty string ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ConstantFramingProperty","namespace":"BH.oM.Physical.FramingProperties","isGeneric":"0","descriptionParts":["This is a BH.oM.Physical.FramingProperties.ConstantFramingProperty"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Floor","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates a physical floor element. For elements for structral analytical applications look at BH.oM.Structure.Elements.Panel. For elements for environmental analytical applications look at BH.oM.Environments.Elements.Panel ",""],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["Location surface which represents the outer geometry of the floor. Should not contain any openings ","This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1},{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["Construction representing the thickness and materiality of the floor ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1},{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Elements","memberName":"IOpening","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Openings of the floor. Could be simple voids or more detailed obejcts ","This is a List<IOpening> ","This can be of the following types: Door, Void, Window"],"isRequired":0,"isInterface":0},{"inputName":"offset","namespace":"BH.oM.Physical.Elements","memberName":"Offset","isGeneric":"0","descriptionParts":["Represents the positioning of the construction in relation to the location surface of the floor ","This is a BH.oM.Physical.Elements.Offset ","Enum values: ","-Undefined ","-Centre ","-InnerEdge ","-OuterEdge"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the floor, default empty string ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Floor","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["The created physical floor ","This is a BH.oM.Physical.Elements.Floor"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Floor","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates physical floor based on given construction and external edges ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isGeneric":"0","descriptionParts":["Construction of the floor ","This is a BH.oM.Physical.Constructions.Construction"],"isRequired":1,"isInterface":0},{"inputName":"edges","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["External edges of the floor (Profile - planar closed curve) ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Floor","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["A physical floor ","This is a BH.oM.Physical.Elements.Floor"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Floor","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates physical floor based on given construction, external and internal edges ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isGeneric":"0","descriptionParts":["Construction of the floor ","This is a BH.oM.Physical.Constructions.Construction"],"isRequired":1,"isInterface":0},{"inputName":"edges","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["External edges of the floor (Profile - planar closed curve) ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"internalEdges","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Internal edges of openings ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Floor","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["A physical floor ","This is a BH.oM.Physical.Elements.Floor"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Wall","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates physical wall based on given construction, bottom curve and height ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["Construction of the wall ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1},{"inputName":"bottomEdge","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["Curve representing bottom edge of the wall ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Wall height ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Wall","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["A physical wall ","This is a BH.oM.Physical.Elements.Wall"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Wall","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates a physical Wall element. For elements for structral analytical applications look at BH.oM.Structure.Elements.Panel. For elements for environmental analytical applications look at BH.oM.Environments.Elements.Panel ",""],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["Base line of the wall ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Height of the wall ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["Construction representing the thickness and materiality of the Wall ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1},{"inputName":"offset","namespace":"BH.oM.Physical.Elements","memberName":"Offset","isGeneric":"0","descriptionParts":["Represents the positioning of the construction in relation to the location surface of the Wall ","This is a BH.oM.Physical.Elements.Offset ","Enum values: ","-Undefined ","-Centre ","-InnerEdge ","-OuterEdge"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the wall, default empty string ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Wall","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["The created physical Wall ","This is a BH.oM.Physical.Elements.Wall"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Wall","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates physical wall object ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["Construction of the wall ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1},{"inputName":"edges","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["External edges of the wall (Profile - planar closed curve) ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"internalEdges","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Internal edges of wall (profile) ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Wall","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["A physical wall ","This is a BH.oM.Physical.Elements.Wall"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Wall","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates a physical Wall element. For elements for structral analytical applications look at BH.oM.Structure.Elements.Panel. For elements for environmental analytical applications look at BH.oM.Environments.Elements.Panel ",""],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["Location surface which represents the outer geometry of the Wall. Should not contain any openings ","This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1},{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["Construction representing the thickness and materiality of the Wall ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1},{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Elements","memberName":"IOpening","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Openings of the Wall. Could be simple voids or more detailed obejcts ","This is a List<IOpening> ","This can be of the following types: Door, Void, Window"],"isRequired":0,"isInterface":0},{"inputName":"offset","namespace":"BH.oM.Physical.Elements","memberName":"Offset","isGeneric":"0","descriptionParts":["Represents the positioning of the construction in relation to the location surface of the Wall ","This is a BH.oM.Physical.Elements.Offset ","Enum values: ","-Undefined ","-Centre ","-InnerEdge ","-OuterEdge"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the wall, default empty string ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Wall","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["The created physical Wall ","This is a BH.oM.Physical.Elements.Wall"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Wall","assemblyName":"Physical_Engine.dll","descriptionParts":["Creates physical wall object ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["Construction of the wall ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1},{"inputName":"edges","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["External edges of the wall (Profile - planar closed curve) ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Wall","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["A physical wall ","This is a BH.oM.Physical.Elements.Wall"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Layer","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns a Layer object ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the layer, default empty string ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["The material this layer is made up of, default null ","This is a BH.oM.Physical.Materials.Material"],"isRequired":0,"isInterface":0},{"inputName":"thickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The thickness of this material layer in meters, default 0.0 ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Layer","namespace":"BH.oM.Physical.Constructions","isGeneric":"0","descriptionParts":["A Layer object providing an instantiated use of a material with a given thickness ","This is a BH.oM.Physical.Constructions.Layer: ","A layer object with given material and thickness"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Material","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns a Material object ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the material, default empty string ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"properties","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Materials","memberName":"IMaterialProperties","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of the specific properties of the material to be created, default null ","This is a List<IMaterialProperties> ","This can be of the following types: GasMaterial, SolidMaterial, SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration, InsulationMaterial, LiningMaterial, Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Material","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["A Material object ","This is a BH.oM.Physical.Materials.Material"]}},{"namespace":"BH.Engine.Physical","className":"Create","memberName":"Material","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns a Material object ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Physical.Materials","memberName":"IMaterialProperties","isGeneric":"0","descriptionParts":["The specific property of the material to be created, its name will be carried over to the Material ","This is a BH.oM.Physical.Materials.IMaterialProperties ","This can be of the following types: GasMaterial, SolidMaterial, SectorEnvironmentalProductDeclaration, EnvironmentalProductDeclaration, InsulationMaterial, LiningMaterial, Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Material","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["A Material object ","This is a BH.oM.Physical.Materials.Material"]}},{"namespace":"BH.Engine.Physical","className":"Modify","memberName":"SetInternalElements2D","assemblyName":"Physical_Engine.dll","descriptionParts":["Replace the internal 2D elements of a ISurface. ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Physical.Elements","memberName":"ISurface","isGeneric":"0","descriptionParts":["The ISurface to replace the internal elements of. ","This is a BH.oM.Physical.Elements.ISurface ","This can be of the following types: Roof, Floor, Wall"],"isRequired":1,"isInterface":1},{"inputName":"internalElements2D","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["New internal elements, will replace any existing ones. ","This is a List<IElement2D> ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["The ISurface with new internal elements. ","This is a BH.oM.Physical.Elements.ISurface ","This can be of the following types: Roof, Floor, Wall"]}},{"namespace":"BH.Engine.Physical","className":"Modify","memberName":"SetOutlineElements1D","assemblyName":"Physical_Engine.dll","descriptionParts":["Set the location surface of an ISurface as a PlanarSurface by providing a list of IElements1D. ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Physical.Elements","memberName":"ISurface","isGeneric":"0","descriptionParts":["The ISurface to set the location surface of. ","This is a BH.oM.Physical.Elements.ISurface ","This can be of the following types: Roof, Floor, Wall"],"isRequired":1,"isInterface":1},{"inputName":"outlineElements1D","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["One dimensional elements defining the external boundery geometry, ISurface has no edge properties and all IElements1D will be treated as their geometry. They must be closed and planar. ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["The ISurface with new location surface. ","This is a BH.oM.Physical.Elements.ISurface ","This can be of the following types: Roof, Floor, Wall"]}},{"namespace":"BH.Engine.Physical","className":"Modify","memberName":"SetOutlineElements1D","assemblyName":"Physical_Engine.dll","descriptionParts":["Set the location surface of an IOpening as a PlanarSurface by providing a list of IElements1D. ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Physical.Elements","memberName":"IOpening","isGeneric":"0","descriptionParts":["The IOpening to set the location surface of. ","This is a BH.oM.Physical.Elements.IOpening ","This can be of the following types: Door, Void, Window"],"isRequired":1,"isInterface":1},{"inputName":"outlineElements1D","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["One dimensional elements defining the external boundery geometry, IOpening has no edge properties and all IElements1D will be treated as their geometry. They must be closed and planar. ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IOpening","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["The IOpening with new location surface. ","This is a BH.oM.Physical.Elements.IOpening ","This can be of the following types: Door, Void, Window"]}},{"namespace":"BH.Engine.Physical","className":"Modify","memberName":"SetGeometry","assemblyName":"Physical_Engine.dll","descriptionParts":["Replaces the location curve of the IFramingElement with the provided curve. ",""],"inputs":[{"inputName":"framingElement","namespace":"BH.oM.Physical.Elements","memberName":"IFramingElement","isGeneric":"0","descriptionParts":["The framingElement to modify the location curve of. ","This is a BH.oM.Physical.Elements.IFramingElement ","This can be of the following types: Bracing, Pile, Column, Cable, Beam"],"isRequired":1,"isInterface":1},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The new location of the IFramingElement as a ICurve. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IFramingElement","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["The IFramingElement with modified location curve. ","This is a BH.oM.Physical.Elements.IFramingElement ","This can be of the following types: Bracing, Pile, Column, Cable, Beam"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"IAverageProfileArea","assemblyName":"Physical_Engine.dll","descriptionParts":["Gets the average cross-section area of a IFramingElementProperty in such a way that multiplying with the length of the element would give the volume ",""],"inputs":[{"inputName":"framingProperty","namespace":"BH.oM.Physical.FramingProperties","memberName":"IFramingElementProperty","isGeneric":"0","descriptionParts":["The framingProperty to evaluate the average area of ","This is a BH.oM.Physical.FramingProperties.IFramingElementProperty ","This can be of the following types: ConstantFramingProperty"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The average cross-section area of a IFramingElementProperty ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"AverageProfileArea","assemblyName":"Physical_Engine.dll","descriptionParts":["Gets the average cross-section area of a ConstantFramingProperty in such a way that multiplying with the length of the element would give the volume ",""],"inputs":[{"inputName":"framingProperty","namespace":"BH.oM.Physical.FramingProperties","memberName":"ConstantFramingProperty","isGeneric":"0","descriptionParts":["The framingProperty to evaluate the average area of ","This is a BH.oM.Physical.FramingProperties.ConstantFramingProperty"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The average cross-section area of a ConstantFramingProperty ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"ConstructionByName","assemblyName":"Physical_Engine.dll","descriptionParts":["Gets a collection of constructions matching the given name ",""],"inputs":[{"inputName":"constructions","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of constructions ","This is a List<Construction>"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name to filter by ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of constructions which match the given name ","This is a List<Construction>"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"BottomCentreline","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns the bottom centreline of an IFramingElement. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Physical.Elements","memberName":"IFramingElement","isGeneric":"0","descriptionParts":["The IFramingElement to query the bottom centreline of. ","This is a BH.oM.Physical.Elements.IFramingElement ","This can be of the following types: Bracing, Pile, Column, Cable, Beam"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The bottom centreline of the IFramingElement. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"BoundingBoxCentreline","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns the centreline of an IFramingElement's bounding box. The bounding box is aligned to the local coordinate system of the IFramingElement. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Physical.Elements","memberName":"IFramingElement","isGeneric":"0","descriptionParts":["The IFramingElement to query the bounding box centreline of. ","This is a BH.oM.Physical.Elements.IFramingElement ","This can be of the following types: Bracing, Pile, Column, Cable, Beam"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The bounding box centreline of the IFramingElement. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"Mass","assemblyName":"Physical_Engine.dll","descriptionParts":["Evaluates the mass of an object based its Solid Volume and Density.","Requires a single consistent value of Density to be provided across all MaterialProperties of a given element. ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Physical.Elements","memberName":"IOpening","isGeneric":"0","descriptionParts":["The element to evaluate the mass of ","This is a BH.oM.Physical.Elements.IOpening ","This can be of the following types: Door, Void, Window"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The physical mass of the element ","This is a Mass [kg] (as a Double)"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"TopCentreline","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns the top centreline of an IFramingElement. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Physical.Elements","memberName":"IFramingElement","isGeneric":"0","descriptionParts":["The IFramingElement to query the top centreline of. ","This is a BH.oM.Physical.Elements.IFramingElement ","This can be of the following types: Bracing, Pile, Column, Cable, Beam"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The top centreline of the IFramingElement. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"ExternalPolyline","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns the External Polyline representation of a physical object (e.g. wall or window) ",""],"inputs":[{"inputName":"physicalObject","namespace":"BH.oM.Physical","memberName":"IPhysical","isGeneric":"0","descriptionParts":["A physical object to query the polyline representation of ","This is a BH.oM.Physical.IPhysical ","This can be of the following types: MaterialComposition, Material, Construction, Layer, Bracing, Pile, Column, Cable, Roof, Floor, Door, Beam, SolidBulk, Wall, Void, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["BHoM Geometry Polyline ","This is a List<Polyline>"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"ExternalPolyline","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns the External Polyline representation of a physical object that represents a solid impassable object (e.g. wall or roof) ",""],"inputs":[{"inputName":"physicalObject","namespace":"BH.oM.Physical.Elements","memberName":"ISurface","isGeneric":"0","descriptionParts":["A physical object to query the polyline representation of ","This is a BH.oM.Physical.Elements.ISurface ","This can be of the following types: Roof, Floor, Wall"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["BHoM Geometry Polyline ","This is a List<Polyline>"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"ExternalPolyline","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns the External Polyline representation of a physical object that represents an opening (e.g. window or door) ",""],"inputs":[{"inputName":"physicalOpening","namespace":"BH.oM.Physical.Elements","memberName":"IOpening","isGeneric":"0","descriptionParts":["A physical opening to query the polyline representation of ","This is a BH.oM.Physical.Elements.IOpening ","This can be of the following types: Door, Void, Window"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["BHoM Geometry Polyline ","This is a List<Polyline>"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"HasMergeablePropertiesWith","assemblyName":"Physical_Engine.dll","descriptionParts":["Evaluates if the two IFramingElements' non-geometrical data is equal to the point that they could be merged into one object. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Physical.Elements","memberName":"IFramingElement","isGeneric":"0","descriptionParts":["An IFramingElement to compare the properties of with an other IFramingElement. ","This is a BH.oM.Physical.Elements.IFramingElement ","This can be of the following types: Bracing, Pile, Column, Cable, Beam"],"isRequired":1,"isInterface":1},{"inputName":"other","namespace":"BH.oM.Physical.Elements","memberName":"IFramingElement","isGeneric":"0","descriptionParts":["The IFramingElement to compare with the other IFramingElement. ","This is a BH.oM.Physical.Elements.IFramingElement ","This can be of the following types: Bracing, Pile, Column, Cable, Beam"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the IFramingElements' non-geometrical property is equal to the point that they could be merged into one object. ","This is a Boolean"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"HasMergeablePropertiesWith","assemblyName":"Physical_Engine.dll","descriptionParts":["Evaluates if the two ISurface non-geometrical data is equal to the point that they could be merged into one object. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Physical.Elements","memberName":"ISurface","isGeneric":"0","descriptionParts":["An ISurface to compare the properties of with an other ISurface. ","This is a BH.oM.Physical.Elements.ISurface ","This can be of the following types: Roof, Floor, Wall"],"isRequired":1,"isInterface":1},{"inputName":"other","namespace":"BH.oM.Physical.Elements","memberName":"ISurface","isGeneric":"0","descriptionParts":["The ISurface to compare with the other ISurface. ","This is a BH.oM.Physical.Elements.ISurface ","This can be of the following types: Roof, Floor, Wall"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the ISurfaces' non-geometrical property is equal to the point that they could be merged into one object. ","This is a Boolean"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"HasMergeablePropertiesWith","assemblyName":"Physical_Engine.dll","descriptionParts":["Evaluates if the two IOpenings' non-geometrical data is equal to the point that they could be merged into one object. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Physical.Elements","memberName":"IOpening","isGeneric":"0","descriptionParts":["An IOpening to compare the properties of with an other IOpening. ","This is a BH.oM.Physical.Elements.IOpening ","This can be of the following types: Door, Void, Window"],"isRequired":1,"isInterface":1},{"inputName":"other","namespace":"BH.oM.Physical.Elements","memberName":"IOpening","isGeneric":"0","descriptionParts":["The IOpening to compare with the other IOpening. ","This is a BH.oM.Physical.Elements.IOpening ","This can be of the following types: Door, Void, Window"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the IOpenings' non-geometrical property is equal to the point that they could be merged into one object. ","This is a Boolean"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"InternalElements2D","assemblyName":"Physical_Engine.dll","descriptionParts":["Gets the internal 2D elements of an ISurface. ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Physical.Elements","memberName":"ISurface","isGeneric":"0","descriptionParts":["The ISurface to get the internal elements from. ","This is a BH.oM.Physical.Elements.ISurface ","This can be of the following types: Roof, Floor, Wall"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The IOpenings of the ISurface. ","This is a List<IElement2D> ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"MaterialComposition","assemblyName":"Physical_Engine.dll","descriptionParts":["Gets all the Materials a IFramingElement is composed of and in which ratios ",""],"inputs":[{"inputName":"framingElement","namespace":"BH.oM.Physical.Elements","memberName":"IFramingElement","isGeneric":"0","descriptionParts":["The IFramingElement to get the MaterialComposition from ","This is a BH.oM.Physical.Elements.IFramingElement ","This can be of the following types: Bracing, Pile, Column, Cable, Beam"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["The kind of matter the IFramingElement is composed of and in which ratios ","This is a BH.oM.Physical.Materials.MaterialComposition: ","Defines the make up of an object through a list of Materials as relative proportions of the total solid volume.","There must be the same number of items in both lists, assigning a single Ratio for each Material."]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"MaterialComposition","assemblyName":"Physical_Engine.dll","descriptionParts":["Gets all the Materials a ISurface is composed of and in which ratios ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Physical.Elements","memberName":"ISurface","isGeneric":"0","descriptionParts":["The ISurface to get the MaterialComposition from ","This is a BH.oM.Physical.Elements.ISurface ","This can be of the following types: Roof, Floor, Wall"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["The kind of matter the ISurface is composed of and in which ratios ","This is a BH.oM.Physical.Materials.MaterialComposition: ","Defines the make up of an object through a list of Materials as relative proportions of the total solid volume.","There must be the same number of items in both lists, assigning a single Ratio for each Material."]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"MaterialComposition","assemblyName":"Physical_Engine.dll","descriptionParts":["Gets all the Materials an IOpening is composed of and in which ratios ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Physical.Elements","memberName":"IOpening","isGeneric":"0","descriptionParts":["The IOpening to get the MaterialComposition from ","This is a BH.oM.Physical.Elements.IOpening ","This can be of the following types: Door, Void, Window"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["The kind of matter the IOpening is composed of and in which ratios ","This is a BH.oM.Physical.Materials.MaterialComposition: ","Defines the make up of an object through a list of Materials as relative proportions of the total solid volume.","There must be the same number of items in both lists, assigning a single Ratio for each Material."]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"MaterialComposition","assemblyName":"Physical_Engine.dll","descriptionParts":["Gets all the Materials a SolidBulk is composed of and in which ratios ",""],"inputs":[{"inputName":"solidBulk","namespace":"BH.oM.Physical.Elements","memberName":"SolidBulk","isGeneric":"0","descriptionParts":["The SolidBulk to get the MaterialComposition from ","This is a BH.oM.Physical.Elements.SolidBulk"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["The kind of matter the SolidBulk is composed of and in which ratios ","This is a Ratio [-] (as a BH.oM.Physical.Materials.MaterialComposition)"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"MaterialComposition","assemblyName":"Physical_Engine.dll","descriptionParts":["Gets all the Materials a ExplicitBulk is composed of and in which ratios ",""],"inputs":[{"inputName":"explicitBulk","namespace":"BH.oM.Physical.Elements","memberName":"ExplicitBulk","isGeneric":"0","descriptionParts":["The ExplicitBulk to get the MaterialComposition from ","This is a BH.oM.Physical.Elements.ExplicitBulk"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["The kind of matter the ExplicitBulk is composed of and in which ratios ","This is a Ratio [-] (as a BH.oM.Physical.Materials.MaterialComposition)"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"IMaterialComposition","assemblyName":"Physical_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"prop","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["This is a BH.oM.Physical.Materials.MaterialComposition: ","Defines the make up of an object through a list of Materials as relative proportions of the total solid volume.","There must be the same number of items in both lists, assigning a single Ratio for each Material."]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"OutlineElements1D","assemblyName":"Physical_Engine.dll","descriptionParts":["Gets the external outline elements of an ISurface. ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Physical.Elements","memberName":"ISurface","isGeneric":"0","descriptionParts":["The ISurface to get the external outline elements from. ","This is a BH.oM.Physical.Elements.ISurface ","This can be of the following types: Roof, Floor, Wall"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The curves defining the external boundery of the ISurface. ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"OutlineElements1D","assemblyName":"Physical_Engine.dll","descriptionParts":["Gets the external outline elements of an IOpening. ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Physical.Elements","memberName":"IOpening","isGeneric":"0","descriptionParts":["The IOpening to get the external outline elements from. ","This is a BH.oM.Physical.Elements.IOpening ","This can be of the following types: Door, Void, Window"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The curves defining the external boundery of the IOpening. ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"InternalPolyline","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns the Internal Polyline representation of a physical object (e.g. wall or window) ",""],"inputs":[{"inputName":"physicalObject","namespace":"BH.oM.Physical","memberName":"IPhysical","isGeneric":"0","descriptionParts":["A physical object to query the polyline representation of ","This is a BH.oM.Physical.IPhysical ","This can be of the following types: MaterialComposition, Material, Construction, Layer, Bracing, Pile, Column, Cable, Roof, Floor, Door, Beam, SolidBulk, Wall, Void, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["BHoM Geometry Polyline ","This is a List<Polyline>"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"InternalPolyline","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns the Internal Polyline representation of a physical object that represents a solid impassable object (e.g. wall or roof) ",""],"inputs":[{"inputName":"physicalObject","namespace":"BH.oM.Physical.Elements","memberName":"ISurface","isGeneric":"0","descriptionParts":["A physical object to query the polyline representation of ","This is a BH.oM.Physical.Elements.ISurface ","This can be of the following types: Roof, Floor, Wall"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["BHoM Geometry Polyline ","This is a List<Polyline>"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"InternalPolyline","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns the Internal Polyline representation of a physical object that represents an opening (e.g. window or door) ",""],"inputs":[{"inputName":"physicalOpening","namespace":"BH.oM.Physical.Elements","memberName":"IOpening","isGeneric":"0","descriptionParts":["A physical opening to query the polyline representation of ","This is a BH.oM.Physical.Elements.IOpening ","This can be of the following types: Door, Void, Window"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["BHoM Geometry Polyline ","This is a List<Polyline>"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"Normal","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns the normal of a FramingElement, which would be the Z-axis in the local coordinate syetem ",""],"inputs":[{"inputName":"framingElement","namespace":"BH.oM.Physical.Elements","memberName":"IFramingElement","isGeneric":"0","descriptionParts":["The FramingElement to evaluate the normal of ","This is a BH.oM.Physical.Elements.IFramingElement ","This can be of the following types: Bracing, Pile, Column, Cable, Beam"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The FramingElements normal vector ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"Doors","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns a collection of Physical Doors from a list of generic BHoM objects ",""],"inputs":[{"inputName":"bhomObjects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of generic BHoM objects ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Elements","memberName":"Door","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Physical Door objects ","This is a List<Door>"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"Floors","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns a collection of Physical Floors from a list of generic BHoM objects ",""],"inputs":[{"inputName":"bhomObjects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of generic BHoM objects ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Elements","memberName":"Floor","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Physical Floor objects ","This is a List<Floor>"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"Geometry","assemblyName":"Physical_Engine.dll","descriptionParts":["Gets the centreline geometry from the framing element ",""],"inputs":[{"inputName":"framingElement","namespace":"BH.oM.Physical.Elements","memberName":"IFramingElement","isGeneric":"0","descriptionParts":["This is a BH.oM.Physical.Elements.IFramingElement ","This can be of the following types: Bracing, Pile, Column, Cable, Beam"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The centre line curve of the framing element ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"Geometry","assemblyName":"Physical_Engine.dll","descriptionParts":["Gets the defining surface geometry from the ISurface, the elements physical extents are further defined by its Offset ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Physical.Elements","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Physical.Elements.ISurface ","This can be of the following types: Roof, Floor, Wall"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The defining location surface geometry of the ISurface with its openings represented ","This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"Polyline","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns a Polyline representation of a physical object (e.g. wall or window) ",""],"inputs":[{"inputName":"physicalObject","namespace":"BH.oM.Physical","memberName":"IPhysical","isGeneric":"0","descriptionParts":["A physical object to query the polyline representation of ","This is a BH.oM.Physical.IPhysical ","This can be of the following types: MaterialComposition, Material, Construction, Layer, Bracing, Pile, Column, Cable, Roof, Floor, Door, Beam, SolidBulk, Wall, Void, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["BHoM Geometry Polyline ","This is a List<Polyline>"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"Polyline","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns a Polyline representation of a physical object that represents a solid impassable object (e.g. wall or roof) ",""],"inputs":[{"inputName":"physicalObject","namespace":"BH.oM.Physical.Elements","memberName":"ISurface","isGeneric":"0","descriptionParts":["A physical object to query the polyline representation of ","This is a BH.oM.Physical.Elements.ISurface ","This can be of the following types: Roof, Floor, Wall"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["BHoM Geometry Polyline ","This is a List<Polyline>"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"Polyline","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns a Polyline representation of a physical object that represents an opening (e.g. window or door) ",""],"inputs":[{"inputName":"physicalOpening","namespace":"BH.oM.Physical.Elements","memberName":"IOpening","isGeneric":"0","descriptionParts":["A physical opening to query the polyline representation of ","This is a BH.oM.Physical.Elements.IOpening ","This can be of the following types: Door, Void, Window"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["BHoM Geometry Polyline ","This is a List<Polyline>"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"Roofs","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns a collection of Physical Roofs from a list of generic BHoM objects ",""],"inputs":[{"inputName":"bhomObjects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of generic BHoM objects ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Elements","memberName":"Roof","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Physical Roof objects ","This is a List<Roof>"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"SolidVolume","assemblyName":"Physical_Engine.dll","descriptionParts":["Gets an IFramingElement's solid volume from the average area and length ",""],"inputs":[{"inputName":"framingElement","namespace":"BH.oM.Physical.Elements","memberName":"IFramingElement","isGeneric":"0","descriptionParts":["the IFramingElement to get the volume from ","This is a BH.oM.Physical.Elements.IFramingElement ","This can be of the following types: Bracing, Pile, Column, Cable, Beam"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The IFramingElement's solid material volume. ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"SolidVolume","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns an ISurface's solid volume based on thickness and area.ISurfaces with offsets other than Centre are not fully supported. ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Physical.Elements","memberName":"ISurface","isGeneric":"0","descriptionParts":["the ISurface to get the volume from ","This is a BH.oM.Physical.Elements.ISurface ","This can be of the following types: Roof, Floor, Wall"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The ISurface's solid material volume. ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"SolidVolume","assemblyName":"Physical_Engine.dll","descriptionParts":["Return the total volume of SolidBulk. ",""],"inputs":[{"inputName":"solidBulk","namespace":"BH.oM.Physical.Elements","memberName":"SolidBulk","isGeneric":"0","descriptionParts":["Solid geometric elements that have a MaterialComposition. ","This is a BH.oM.Physical.Elements.SolidBulk"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The combined volume of SolidBulk. ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"SolidVolume","assemblyName":"Physical_Engine.dll","descriptionParts":["Return the total volume of ExplicitBulk. ",""],"inputs":[{"inputName":"explicitBulk","namespace":"BH.oM.Physical.Elements","memberName":"ExplicitBulk","isGeneric":"0","descriptionParts":["Elements containing Volume and MaterialComposition properties. ","This is a BH.oM.Physical.Elements.ExplicitBulk"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The combined volume of ExplicitBulk. ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"SolidVolume","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns an IOpening's solid volume based on thickness and area. ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Physical.Elements","memberName":"IOpening","isGeneric":"0","descriptionParts":["This is a BH.oM.Physical.Elements.IOpening ","This can be of the following types: Door, Void, Window"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The window's solid material volume. ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"IThickness","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns the thickness of a generic construction ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["A generic Construction object ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The total thickness of the generic construction as a sum of all its layers ","This is a Double"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"Thickness","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns the thickness of a construction ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isGeneric":"0","descriptionParts":["A Construction object ","This is a BH.oM.Physical.Constructions.Construction"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The total thickness of the construction as a sum of all its layers ","This is a Double"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"UniqueConstructions","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns a collection of unique constructions from a list of construction objects ",""],"inputs":[{"inputName":"constructions","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Constructions ","This is a List<Construction>"],"isRequired":1,"isInterface":0},{"inputName":"includeConstructionName","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Flag to determine whether or not to use the construction name as a parameter of uniqueness. Default false ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of unique Construction objects ","This is a List<Construction>"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"Walls","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns a collection of Physical Walls from a list of generic BHoM objects ",""],"inputs":[{"inputName":"bhomObjects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of generic BHoM objects ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Elements","memberName":"Wall","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Physical Wall objects ","This is a List<Wall>"]}},{"namespace":"BH.Engine.Physical","className":"Query","memberName":"Windows","assemblyName":"Physical_Engine.dll","descriptionParts":["Returns a collection of Physical Windows from a list of generic BHoM objects ",""],"inputs":[{"inputName":"bhomObjects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of generic BHoM objects ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Elements","memberName":"Window","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Physical Window objects ","This is a List<Window>"]}},{"namespace":"BH.Engine.Planning","className":"Create","memberName":"CodeAssembly","assemblyName":"Planning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"repo","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CodeAssembly","namespace":"BH.oM.Planning","isGeneric":"0","descriptionParts":["This is a BH.oM.Planning.CodeAssembly"]}},{"namespace":"BH.Engine.Planning","className":"Create","memberName":"Commit","assemblyName":"Planning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Commit","namespace":"BH.oM.Planning","isGeneric":"0","descriptionParts":["This is a BH.oM.Planning.Commit"]}},{"namespace":"BH.Engine.Planning","className":"Create","memberName":"Issue","assemblyName":"Planning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"repoName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"number","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"title","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"labels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Issue","namespace":"BH.oM.Planning","isGeneric":"0","descriptionParts":["This is a BH.oM.Planning.Issue"]}},{"namespace":"BH.Engine.Planning","className":"Create","memberName":"Issue","assemblyName":"Planning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"repoName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"number","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"title","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"labels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"],"isRequired":0,"isInterface":0},{"inputName":"milestone","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"creator","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"assignees","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Issue","namespace":"BH.oM.Planning","isGeneric":"0","descriptionParts":["This is a BH.oM.Planning.Issue"]}},{"namespace":"BH.Engine.Planning","className":"Create","memberName":"Label","assemblyName":"Planning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"colour","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Label","namespace":"BH.oM.Planning","isGeneric":"0","descriptionParts":["This is a BH.oM.Planning.Label"]}},{"namespace":"BH.Engine.Planning","className":"Create","memberName":"Milestone","assemblyName":"Planning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"dueOn","namespace":"System","memberName":"DateTimeOffset","isGeneric":"0","descriptionParts":["This is a DateTimeOffset"],"isRequired":1,"isInterface":0},{"inputName":"state","namespace":"BH.oM.Planning","memberName":"ItemState","isGeneric":"0","descriptionParts":["This is a BH.oM.Planning.ItemState ","Enum values: ","-Open ","-Closed"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Milestone","namespace":"BH.oM.Planning","isGeneric":"0","descriptionParts":["This is a BH.oM.Planning.Milestone"]}},{"namespace":"BH.Engine.Planning","className":"Create","memberName":"Milestone","assemblyName":"Planning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"year","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"month","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"day","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"description","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"state","namespace":"BH.oM.Planning","memberName":"ItemState","isGeneric":"0","descriptionParts":["This is a BH.oM.Planning.ItemState ","Enum values: ","-Open ","-Closed"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Milestone","namespace":"BH.oM.Planning","isGeneric":"0","descriptionParts":["This is a BH.oM.Planning.Milestone"]}},{"namespace":"BH.Engine.Planning","className":"Create","memberName":"Repository","assemblyName":"Planning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Repository","namespace":"BH.oM.Planning","isGeneric":"0","descriptionParts":["This is a BH.oM.Planning.Repository"]}},{"namespace":"BH.Engine.Programming","className":"Compute","memberName":"IPopulateTypes","assemblyName":"Programming_Engine.dll","descriptionParts":["Automatically set the DataType and default value of all parameters of the input syntax node. ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Programming","memberName":"INode","isGeneric":"0","descriptionParts":["syntax node to modify ","This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"INode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["Modified node ","This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"]}},{"namespace":"BH.Engine.Programming","className":"Compute","memberName":"PopulateTypes","assemblyName":"Programming_Engine.dll","descriptionParts":["Automatically set the DataType and default value of all parameters of the syntax nodes inside the cluster. ",""],"inputs":[{"inputName":"content","namespace":"BH.oM.Programming","memberName":"ClusterContent","isGeneric":"0","descriptionParts":["cluster content to modify ","This is a BH.oM.Programming.ClusterContent: ","Content of a Cluster syntax node."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ClusterContent","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["Modified node ","This is a BH.oM.Programming.ClusterContent: ","Content of a Cluster syntax node."]}},{"namespace":"BH.Engine.Programming","className":"Compute","memberName":"PopulateTypes","assemblyName":"Programming_Engine.dll","descriptionParts":["Automatically set the DataType and default value of all parameters of the input method node. ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Programming","memberName":"MethodNode","isGeneric":"0","descriptionParts":["method node to modify ","This is a BH.oM.Programming.MethodNode: ","A syntax node representing a call to a method."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MethodNode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["Modified node ","This is a BH.oM.Programming.MethodNode: ","A syntax node representing a call to a method."]}},{"namespace":"BH.Engine.Programming","className":"Compute","memberName":"PopulateTypes","assemblyName":"Programming_Engine.dll","descriptionParts":["Automatically set the DataType and default value of all parameters of the input constructor node. ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Programming","memberName":"ConstructorNode","isGeneric":"0","descriptionParts":["constructor node to modify ","This is a BH.oM.Programming.ConstructorNode: ","A syntax node representing a call to a constructor."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ConstructorNode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["Modified node ","This is a BH.oM.Programming.ConstructorNode: ","A syntax node representing a call to a constructor."]}},{"namespace":"BH.Engine.Programming","className":"Compute","memberName":"PopulateTypes","assemblyName":"Programming_Engine.dll","descriptionParts":["Automatically set the DataType and default value of all parameters of the input initialiser node. ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Programming","memberName":"InitialiserNode","isGeneric":"0","descriptionParts":["initialiser node to modify ","This is a BH.oM.Programming.InitialiserNode: ","A syntax node representing the initialisation of an object. ","In C#, this would be equivalent to something like 'new Point {X = x, Y = y }'"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"InitialiserNode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["Modified node ","This is a BH.oM.Programming.InitialiserNode: ","A syntax node representing the initialisation of an object. ","In C#, this would be equivalent to something like 'new Point {X = x, Y = y }'"]}},{"namespace":"BH.Engine.Programming","className":"Compute","memberName":"PopulateTypes","assemblyName":"Programming_Engine.dll","descriptionParts":["Automatically set the DataType and default value of all parameters of the input type node. ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Programming","memberName":"TypeNode","isGeneric":"0","descriptionParts":["type node to modify ","This is a BH.oM.Programming.TypeNode: ","A syntax node representing the creation of an object Type."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TypeNode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["Modified node ","This is a BH.oM.Programming.TypeNode: ","A syntax node representing the creation of an object Type."]}},{"namespace":"BH.Engine.Programming","className":"Create","memberName":"LoopNode","assemblyName":"Programming_Engine.dll","descriptionParts":["Returns a LoopNode to be used in a BHoM Syntax Tree. ",""],"inputs":[{"inputName":"content","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Programming","memberName":"INode","isInterface":"1","isGeneric":"0"}],"descriptionParts":["List of syntax nodes to include in the loop. ","This is a List<INode> ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"],"isRequired":1,"isInterface":0},{"inputName":"description","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Description of what this loop is doing. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LoopNode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.LoopNode: ","A syntax node corresponding to a code loop."]}},{"namespace":"BH.Engine.Programming","className":"Create","memberName":"BlockNode","assemblyName":"Programming_Engine.dll","descriptionParts":["Returns a BlockNode to be used in a BHoM Syntax Tree. ",""],"inputs":[{"inputName":"content","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Programming","memberName":"INode","isInterface":"1","isGeneric":"0"}],"descriptionParts":["List of syntax nodes to include in the group. ","This is a List<INode> ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"],"isRequired":1,"isInterface":0},{"inputName":"description","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Description covering the set of nodes including in this block. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BlockNode","namespace":"BH.oM.Programming","isGeneric":"0","descriptionParts":["This is a BH.oM.Programming.BlockNode: ","Represents a group of syntax nodes covered by a common description. This is equivalent to a block of code inside a method."]}},{"namespace":"BH.Engine.Programming","className":"Query","memberName":"IDataTypePerParam","assemblyName":"Programming_Engine.dll","descriptionParts":["Collect the data type for each parameter in the input syntax node. ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Programming","memberName":"INode","isGeneric":"0","descriptionParts":["syntax node to extract data types from ","This is a BH.oM.Programming.INode: ","Interface common to all syntax nodes ","This can be of the following types: BlockNode, ClusterNode, ConstructorNode, CustomObjectNode, ExplodeNode, GetPropertyNode, InitialiserNode, LibraryNode, LoopNode, MethodNode, ParamNode, SetPropertyNode, TypeNode"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Dictionary with parameter ids as keys and their type as value ","This is a Dictionary<Guid, Type>"]}},{"namespace":"BH.Engine.Programming","className":"Query","memberName":"DataTypePerParam","assemblyName":"Programming_Engine.dll","descriptionParts":["Collect the data type for each parameter of each syntax node inside the cluster. ",""],"inputs":[{"inputName":"content","namespace":"BH.oM.Programming","memberName":"ClusterContent","isGeneric":"0","descriptionParts":["cluster content to extract data types from ","This is a BH.oM.Programming.ClusterContent: ","Content of a Cluster syntax node."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Guid","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Dictionary with parameter ids as keys and their type as value ","This is a Dictionary<Guid, Type>"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"DensityHumidityRatio","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates density from dry-bulb temperature and humidity ratio. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"humidityRatio","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["humidity ratio (kg_water/kg_dryair) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["pressure (Pa) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["density(kg/m3) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"DensityRelativeHumidity","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates density from dry-bulb temperature and relative humidity. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"relativeHumidity","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["relative humidity (%) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["pressure (Pa) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["density (kg/m3) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"DensityWetBulbTemperature","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates density from dry-bulb temperature and wet-bulb temperature. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"wetBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["wet-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["pressure (Pa) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["density (kg/m3) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"DewPointHumidityRatio","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates wet-bulb temperature from dry-bulb temperature and humidity ratio. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"humidityRatio","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["humidity ratio (kg_water/kg_dryair) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["pressure (Pa) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["dew point temperature (C) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"DewPointRelativeHumidity","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates dew point temperature from dry-bulb temperature and relative humidity. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"relativeHumidity","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["relative humidity (%) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["pressure (Pa) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["dew point temperature (C) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"DewPointWetBulbTemperature","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates dew point temperature from dry-bulb temperature and wet-bulb temperature. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"wetBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["wet-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["pressure (Pa) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["dew point temperature (C) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"EnthalpyHumidityRatio","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates enthalpy from dry-bulb temperature and humidity ratio. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"humidityRatio","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["humidity ratio (kg_water/kg_dryair) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["enthalpy (J/kg) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"EnthalpyRelativeHumidity","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates enthalpy from dry-bulb temperature and relative humidity. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"relativeHumidity","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["relative humidity (%) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["pressure (Pa) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["enthalpy (J/kg) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"EnthalpyWetBulbTemperature","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates enthalpy from dry-bulb temperature and wet-bulb temperature. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"wetBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["wet-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["pressure (Pa) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["enthalpy (J/kg) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"HumidityRatioRelativeHumidity","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates humidity ratio from dry-bulb temperature and relative humidity. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"relativeHumidity","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["relative humidity (%) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["pressure (Pa) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["humidity ratio (kg_water/kg_dryair) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"HumidityRatioWetBulbTemperature","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates humidity ratio from dry-bulb temperature and wet-bulb temperature. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"wetBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["wet-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["pressure (Pa) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["humidity ratio (kg_water/kg_dryair) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"PartialVapourPressure","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates saturation pressure over liquid water for the temperature range -100C to 200C. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["saturation pressure (Pa) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"PressureAtAltitude","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates atmospheric pressure as a function of altitude. ",""],"inputs":[{"inputName":"altitude","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["altitude (m) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["atmospheric pressure (Pa) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"RelativeHumidityHumidityRatio","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates relative humidity from dry-bulb temperature and humidity ratio. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"humidityRatio","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["humidity ratio (kg_water/kg_dryair) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["pressure (Pa) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["relative humidity (%) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"RelativeHumidityWetBulbTemperature","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates relative humidity from dry-bulb temperature and wet-bulb temperature. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"wetBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["wet-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["pressure (Pa) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["relative humidity (%) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"SpecificVolumeHumidityRatio","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates specific volume from dry-bulb temperature and humidity ratio. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"humidityRatio","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["humidity ratio (kg_water/kg_dryair) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["pressure (Pa) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["specificVolume(m3/kg) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"SpecificVolumeRelativeHumidity","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates specific volume from dry-bulb temperature and relative humidity. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"relativeHumidity","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["relative humidity (%) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["pressure (Pa) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["specific volume(m3/kg) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"SpecificVolumeWetBulbTemperature","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates specific volume from dry-bulb temperature and wet-bulb temperature. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"wetBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["wet-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["pressure (Pa) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["specific volume(m3/kg) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"TemperatureAtAltitude","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates temperature as a function of altitude. ",""],"inputs":[{"inputName":"altitude","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["altitude (m) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["temperature (C) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"TemperatureEnthalpyHumidityRatio","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates temperature as a function of enthalpy. ",""],"inputs":[{"inputName":"enthalpy","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["enthalpy (J/kg) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"humidityRatio","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["humidity ratio (g/g) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["temperature (C) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"WetBulbHumidityRatio","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates wet-bulb temperature from dry-bulb temperature and humidity ratio. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"humidityRatio","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["humidity ratio (kg_water/kg_dryair) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["pressure (Pa) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["wet-bulb temperature (C) ","This is a Double"]}},{"namespace":"BH.Engine.Psychrometrics","className":"Compute","memberName":"WetBulbTemperatureRelativeHumidity","assemblyName":"Psychrometrics_Engine.dll","descriptionParts":["Calculates wet-bulb temperature from dry-bulb temperature and relative humidity. ",""],"inputs":[{"inputName":"dryBulbTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["dry-bulb temperature (C) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"relativeHumidity","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["relative humidity (%) ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["pressure (Pa) ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["wet-bulb temperature (C) ","This is a Double"]}},{"namespace":"BH.Engine.Python","className":"Compute","memberName":"Init","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"parameters","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<String, Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.Python","className":"Compute","memberName":"DownloadPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Python","className":"Compute","memberName":"SetPythonHome","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Python","className":"Compute","memberName":"InstallPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"force","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Python","className":"Compute","memberName":"InstallPip","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Python","className":"Compute","memberName":"InstallPythonToolkit","assemblyName":"Python_Engine.dll","descriptionParts":["Installs the necessary pre-requisites to use the Python Toolkit fully. This will install Python 3.7 to your system, to the C:/ProgramData/BHoM folder.","This can take several minutes to complete ",""],"inputs":[{"inputName":"run","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["When you are ready to install Python, set this to true. Until this is set to true, this component will not run ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"force","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If you have previously installed a version of Python Toolkit, you may need to force the component to run a new install. This can happen if your system loses files. This is set to false by default, which means if we can detect a previous Python install on your system we will not install Python this time. Set this to true to ignore this check ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Boolean","isInterface":"0","isGeneric":"0"},{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<System.Boolean, System.Collections.Generic.List<System.String>>"]}},{"namespace":"BH.Engine.Python","className":"Compute","memberName":"PipInstall","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"module_name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"version","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"force","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"findLinks","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"verbose","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Python","className":"Compute","memberName":"RunCommand","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"command","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"hideWindows","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"startDirectory","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Python","className":"Compute","memberName":"RunCommandAsync","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"command","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"hideWindows","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"startDirectory","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Python","className":"Compute","memberName":"JupyterLab","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"port","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"directory","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"start","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Python","className":"Compute","memberName":"Invoke","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"module","namespace":"Python.Runtime","memberName":"PyObject","isGeneric":"0","descriptionParts":["This is a PyObject"],"isRequired":1,"isInterface":0},{"inputName":"method","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"args","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<String, Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.Python","className":"Compute","memberName":"Invoke","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"module","namespace":"Python.Runtime","memberName":"PyObject","isGeneric":"0","descriptionParts":["This is a PyObject"],"isRequired":1,"isInterface":0},{"inputName":"method","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"args","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Object>"],"isRequired":1,"isInterface":1},{"inputName":"kwargs","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<String, Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"IFromPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"Python.Runtime","memberName":"PyObject","isGeneric":"0","descriptionParts":["This is a PyObject"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"FromPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"Python.Runtime","memberName":"PyObject","isGeneric":"0","descriptionParts":["This is a PyObject"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"T","namespace":"BH.Engine.Python","isGeneric":"0","descriptionParts":["This is a BH.Engine.Python.T"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"FromPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"integer","namespace":"Python.Runtime","memberName":"PyInt","isGeneric":"0","descriptionParts":["This is a PyInt"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int32"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"FromPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"integer64","namespace":"Python.Runtime","memberName":"PyLong","isGeneric":"0","descriptionParts":["This is a PyLong"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int64","namespace":"System","isGeneric":"0","descriptionParts":["This is a Int64"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"FromPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"floatingPoint","namespace":"Python.Runtime","memberName":"PyFloat","isGeneric":"0","descriptionParts":["This is a PyFloat"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"FromPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"text","namespace":"Python.Runtime","memberName":"PyString","isGeneric":"0","descriptionParts":["This is a PyString"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"FromPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pyDict","namespace":"Python.Runtime","memberName":"PyDict","isGeneric":"0","descriptionParts":["This is a PyDict"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<Object, Object>"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"FromPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"input","namespace":"Python.Runtime","memberName":"PyTuple","isGeneric":"0","descriptionParts":["This is a PyTuple"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"FromPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"input","namespace":"Python.Runtime","memberName":"PyList","isGeneric":"0","descriptionParts":["This is a PyList"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"FromPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"input","namespace":"Python.Runtime","memberName":"PyIter","isGeneric":"0","descriptionParts":["This is a PyIter"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"IToPyTuple","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyTuple","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyTuple"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPyTuple","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"input","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Python","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"PyTuple","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyTuple"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPyTuple","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"input","namespace":"BH.Engine.Python","memberName":"T[]","isGeneric":"0","descriptionParts":["This is a BH.Engine.Python.T[]"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyTuple","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyTuple"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPyTuple","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"input","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Python","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyTuple","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyTuple"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"IToPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"integer","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyInt","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyInt"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"integer64","namespace":"System","memberName":"Int64","isGeneric":"0","descriptionParts":["This is a Int64"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyLong","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyLong"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"floatingPoint","namespace":"System","memberName":"Single","isGeneric":"0","descriptionParts":["This is a Single"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyFloat","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyFloat"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"floatingPoint","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyFloat","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyFloat"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"text","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyString","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyString"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"boolean","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"input","namespace":"BH.Engine.Python","memberName":"T[]","isGeneric":"0","descriptionParts":["This is a BH.Engine.Python.T[]"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyList","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyList"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"input","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Python","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<T>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyList","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyList"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"input","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Python","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"PyList","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyList"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"input","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"IEnumerable","isInterface":"1","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Python","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a IEnumerable<IEnumerable<T>>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"PyList","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyList"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"input","namespace":"BH.Engine.Python","memberName":"T[,]","isGeneric":"0","descriptionParts":["This is a BH.Engine.Python.T[,]"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyList","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyList"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"input","namespace":"BH.Engine.Python","memberName":"T[][]","isGeneric":"0","descriptionParts":["This is a BH.Engine.Python.T[][]"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyList","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyList"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"dict","namespace":"System.Collections.Generic","memberName":"Dictionary","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<String, Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyDict","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyDict"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"input","namespace":"System","memberName":"ValueTuple","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a ValueTuple<Int32>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyTuple","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyTuple"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"input","namespace":"System","memberName":"ValueTuple","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a ValueTuple<Int32, Int32>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyTuple","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyTuple"]}},{"namespace":"BH.Engine.Python","className":"Convert","memberName":"ToPython","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"input","namespace":"System","memberName":"ValueTuple","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a ValueTuple<Int32, Int32, Int32>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyTuple","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyTuple"]}},{"namespace":"BH.Engine.Python","className":"Query","memberName":"EmbeddedPythonHome","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Python","className":"Query","memberName":"Import","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"moduleName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PyObject","namespace":"Python.Runtime","isGeneric":"0","descriptionParts":["This is a PyObject"]}},{"namespace":"BH.Engine.Python","className":"Query","memberName":"IsPythonInstalled","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Python","className":"Query","memberName":"IsPipInstalled","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Python","className":"Query","memberName":"IsModuleInstalled","assemblyName":"Python_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"module","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.RAM","className":"Create","memberName":"CreateContourLoadSet","assemblyName":"RAM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"loadSet","namespace":"BH.oM.Adapters.RAM","memberName":"UniformLoadSet","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.RAM.UniformLoadSet"],"isRequired":1,"isInterface":0},{"inputName":"contour","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ContourLoadSet","namespace":"BH.oM.Adapters.RAM","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.RAM.ContourLoadSet"]}},{"namespace":"BH.Engine.Adapters.RAM","className":"Create","memberName":"CreateRAMUniformLoadSet","assemblyName":"RAM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"sdl","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"cdl","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"liveLoad","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"llType","namespace":"BH.oM.Adapters.RAM","memberName":"RAMLiveLoadTypes","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.RAM.RAMLiveLoadTypes ","Enum values: ","-LiveReducibleLCa ","-LiveStorageLCa ","-LiveUnReducibleLCa ","-LiveRoofLCa"],"isRequired":1,"isInterface":0},{"inputName":"partition","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"cll","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"massDl","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"UniformLoadSet","namespace":"BH.oM.Adapters.RAM","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.RAM.UniformLoadSet"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"AbsoluteMaxForces","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"forces","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<BarForce>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<BarForce>"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"AbsoluteMaxEnvelopeByCase","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"forces","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<BarForce>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<BarForce>"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"AbsoluteMaxEnvelopeByObject","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"forces","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<BarForce>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<BarForce>"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"AbsoluteMaxEnvelope","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"forces","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<BarForce>"],"isRequired":1,"isInterface":1},{"inputName":"idFromFirst","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"caseFromFirst","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarForce","namespace":"BH.oM.Structure.Results","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Results.BarForce: ","Resulting section forces in local coordinates along the bar."]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"AbsoluteMax","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"source","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Results","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"selector","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Results","memberName":"T","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Func<T, Double>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"GroupByCase","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"results","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Results","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Results","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<T>>"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"GroupByObjectId","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"results","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Results","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Results","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<T>>"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"GroupByTimeStep","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"results","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Results","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Results","memberName":"T","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<T>>"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"MaxForces","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"forces","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<BarForce>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<BarForce>"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"MaxEnvelopeByCase","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"forces","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<BarForce>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<BarForce>"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"MaxEnvelopeByObject","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"forces","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<BarForce>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<BarForce>"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"MaxEnvelope","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"forces","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<BarForce>"],"isRequired":1,"isInterface":1},{"inputName":"idFromFirst","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"caseFromFirst","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarForce","namespace":"BH.oM.Structure.Results","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Results.BarForce: ","Resulting section forces in local coordinates along the bar."]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"MaxBy","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"source","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Results","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"selector","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Results","memberName":"T","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Results","memberName":"U","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Func<T, U>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"T","namespace":"BH.Engine.Results","isGeneric":"0","descriptionParts":["This is a BH.Engine.Results.T"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"MinForces","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"forces","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<BarForce>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<BarForce>"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"MinEnvelopeByCase","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"forces","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<BarForce>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<BarForce>"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"MinEnvelopeByObject","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"forces","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<BarForce>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<BarForce>"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"MinEnvelope","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"forces","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<BarForce>"],"isRequired":1,"isInterface":1},{"inputName":"idFromFirst","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"caseFromFirst","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarForce","namespace":"BH.oM.Structure.Results","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Results.BarForce: ","Resulting section forces in local coordinates along the bar."]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"MinBy","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"source","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Results","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"selector","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Results","memberName":"T","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Results","memberName":"U","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Func<T, U>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"T","namespace":"BH.Engine.Results","isGeneric":"0","descriptionParts":["This is a BH.Engine.Results.T"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"FTotal","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"reaction","namespace":"BH.oM.Structure.Results","memberName":"GlobalReactions","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Results.GlobalReactions: ","Total global reactions for a given Loadcase or LoadCombination."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"MTotal","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"reaction","namespace":"BH.oM.Structure.Results","memberName":"GlobalReactions","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Results.GlobalReactions: ","Total global reactions for a given Loadcase or LoadCombination."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Results","className":"Query","memberName":"TotalDisplacement","assemblyName":"Results_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"disp","namespace":"BH.oM.Structure.Results","memberName":"NodeDisplacement","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Results.NodeDisplacement: ","Resulting displacements and rotations for a Node."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Compute","memberName":"SortByPerformance","assemblyName":"Revit_Engine.dll","descriptionParts":["Groups and sorts IRequests by their estimated execution time in order to execute fastest first. Order from slowest to fastest: IParameterRequest, IlogicalRequests, others.  ",""],"inputs":[{"inputName":"requests","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Requests","memberName":"IRequest","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of IRequests to be sorted. ","This is a List<IRequest> ","This can be of the following types: BatchRequest, CustomRequest, FilterRequest, LogicalAndRequest, LogicalNotRequest, LogicalOrRequest, SelectionRequest, PierAndSpandrelForceRequest, RemoveRequest, FileContentRequest, DirectoryRequest, FileRequest, FileDirRequest, GetRequest, CollectionNames, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Data.Requests","memberName":"IRequest","isInterface":"1","isGeneric":"0"}],"descriptionParts":["sortedRequests ","This is a List<IRequest> ","This can be of the following types: BatchRequest, CustomRequest, FilterRequest, LogicalAndRequest, LogicalNotRequest, LogicalOrRequest, SelectionRequest, PierAndSpandrelForceRequest, RemoveRequest, FileContentRequest, DirectoryRequest, FileRequest, FileDirRequest, GetRequest, CollectionNames, and more..."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"RevitPushConfig","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates a push action-specific configuration used for adapter interaction with Revit. ",""],"inputs":[{"inputName":"suppressFailureMessages","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, Revit warnings and failure messages will be suppressed (not shown to the user). Whilst this option may speed the pushing process up in case of multiple warnings, it may lead to important issues. ",""],"isRequired":0,"isInterface":0},{"inputName":"includeClosedWorksets","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Elements from closed worksets will be processed if true. ",""],"isRequired":0,"isInterface":0},{"inputName":"setLocationOnUpdate","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RevitPushConfig","namespace":"BH.oM.Adapters.Revit","isGeneric":"0","descriptionParts":["revitPushConfig ","This is a BH.oM.Adapters.Revit.RevitPushConfig: ","Configuration used for adapter interaction with Revit on Push action."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"RevitPushConfig","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates a push action-specific configuration used for adapter interaction with Revit. ",""],"inputs":[{"inputName":"suppressFailureMessages","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, Revit warnings and failure messages will be suppressed (not shown to the user). Whilst this option may speed the pushing process up in case of multiple warnings, it may lead to important issues. ",""],"isRequired":0,"isInterface":0},{"inputName":"includeClosedWorksets","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Elements from closed worksets will be processed if true. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RevitPushConfig","namespace":"BH.oM.Adapters.Revit","isGeneric":"0","descriptionParts":["revitPushConfig ","This is a BH.oM.Adapters.Revit.RevitPushConfig: ","Configuration used for adapter interaction with Revit on Push action."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"RevitPullConfig","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates a pull action-specific configuration used for adapter interaction with Revit. ",""],"inputs":[{"inputName":"discipline","namespace":"BH.oM.Adapters.Revit.Enums","memberName":"Discipline","isGeneric":"0","descriptionParts":["Discipline used on pull action. Default is Physical. ",""],"isRequired":0,"isInterface":0},{"inputName":"includeClosedWorksets","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Elements from closed worksets will be processed if true. ",""],"isRequired":0,"isInterface":0},{"inputName":"includeNestedElements","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Elements nested within families will be processed if true. ",""],"isRequired":0,"isInterface":0},{"inputName":"geometryConfig","namespace":"BH.oM.Adapters.Revit","memberName":"PullGeometryConfig","isGeneric":"0","descriptionParts":["Configuration specifying which geometry should be pulled and passed to RevitGeometry fragment. ",""],"isRequired":0,"isInterface":0},{"inputName":"representationConfig","namespace":"BH.oM.Adapters.Revit","memberName":"PullRepresentationConfig","isGeneric":"0","descriptionParts":["Configuration specifying representation to be pulled and passed to RevitRepresentation fragment. ",""],"isRequired":0,"isInterface":0},{"inputName":"pullMaterialTakeOff","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Material take offs of each pulled element will be attached to resultant BHoMObjects as fragments if true. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RevitPullConfig","namespace":"BH.oM.Adapters.Revit","isGeneric":"0","descriptionParts":["revitPullConfig ","This is a BH.oM.Adapters.Revit.RevitPullConfig: ","Configuration used for adapter interaction with Revit on Pull action."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"RevitPullConfig","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates a pull action-specific configuration used for adapter interaction with Revit. ",""],"inputs":[{"inputName":"discipline","namespace":"BH.oM.Adapters.Revit.Enums","memberName":"Discipline","isGeneric":"0","descriptionParts":["Discipline used on pull action. Default is Physical. ",""],"isRequired":0,"isInterface":0},{"inputName":"includeClosedWorksets","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Elements from closed worksets will be processed if true. ",""],"isRequired":0,"isInterface":0},{"inputName":"geometryConfig","namespace":"BH.oM.Adapters.Revit","memberName":"PullGeometryConfig","isGeneric":"0","descriptionParts":["Configuration specifying which geometry should be pulled and passed to RevitGeometry fragment. ",""],"isRequired":0,"isInterface":0},{"inputName":"representationConfig","namespace":"BH.oM.Adapters.Revit","memberName":"PullRepresentationConfig","isGeneric":"0","descriptionParts":["Configuration specifying representation to be pulled and passed to RevitRepresentation fragment. ",""],"isRequired":0,"isInterface":0},{"inputName":"includeNestedElements","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Elements nested within families will be processed if true. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RevitPullConfig","namespace":"BH.oM.Adapters.Revit","isGeneric":"0","descriptionParts":["revitPullConfig ","This is a BH.oM.Adapters.Revit.RevitPullConfig: ","Configuration used for adapter interaction with Revit on Pull action."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"RevitPullConfig","assemblyName":"Revit_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"discipline","namespace":"BH.oM.Adapters.Revit.Enums","memberName":"Discipline","isGeneric":"0","descriptionParts":["Discipline used on pull action. Default is Physical. ",""],"isRequired":0,"isInterface":0},{"inputName":"includeClosedWorksets","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Elements from closed worksets will be processed if true. ",""],"isRequired":0,"isInterface":0},{"inputName":"geometryConfig","namespace":"BH.oM.Adapters.Revit","memberName":"PullGeometryConfig","isGeneric":"0","descriptionParts":["Configuration specifying which geometry should be pulled and passed to RevitGeometry fragment. ",""],"isRequired":0,"isInterface":0},{"inputName":"representationConfig","namespace":"BH.oM.Adapters.Revit","memberName":"PullRepresentationConfig","isGeneric":"0","descriptionParts":["Configuration specifying representation to be pulled and passed to RevitRepresentation fragment. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RevitPullConfig","namespace":"BH.oM.Adapters.Revit","isGeneric":"0","descriptionParts":["revitPullConfig ","This is a BH.oM.Adapters.Revit.RevitPullConfig: ","Configuration used for adapter interaction with Revit on Pull action."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"RevitPullConfig","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates a pull action-specific configuration used for adapter interaction with Revit. ",""],"inputs":[{"inputName":"discipline","namespace":"BH.oM.Adapters.Revit.Enums","memberName":"Discipline","isGeneric":"0","descriptionParts":["Discipline used on pull action. Default is Physical. ",""],"isRequired":0,"isInterface":0},{"inputName":"includeClosedWorksets","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Elements from closed worksets will be processed if true. ",""],"isRequired":0,"isInterface":0},{"inputName":"pullEdges","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"pullSurfaces","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"includeNonVisible","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RevitPullConfig","namespace":"BH.oM.Adapters.Revit","isGeneric":"0","descriptionParts":["revitPullConfig ","This is a BH.oM.Adapters.Revit.RevitPullConfig: ","Configuration used for adapter interaction with Revit on Pull action."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"RevitRemoveConfig","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates a remove action-specific configuration used for adapter interaction with Revit. ",""],"inputs":[{"inputName":"suppressFailureMessages","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, Revit warnings and failure messages will be suppressed (not shown to the user). Whilst this option may speed the pushing process up in case of multiple warnings, it may lead to important issues. ",""],"isRequired":0,"isInterface":0},{"inputName":"includeClosedWorksets","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Elements from closed worksets will be processed if true. ",""],"isRequired":0,"isInterface":0},{"inputName":"removePinned","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Pinned elements will be processed if true. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RevitRemoveConfig","namespace":"BH.oM.Adapters.Revit","isGeneric":"0","descriptionParts":["revitRemoveConfig ","This is a BH.oM.Adapters.Revit.RevitRemoveConfig: ","Configuration used for adapter interaction with Revit on Remove action."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"DraftingInstance","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates DraftingInstance object based on point location, Revit family name and family type name. Such DraftingInstance can be pushed to Revit as a point-driven drafting element. ",""],"inputs":[{"inputName":"familyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit family to be used when creating the element. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"familyTypeName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit family type to be used when creating the element. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"viewName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit view to which the instance belongs. ",""],"isRequired":1,"isInterface":0},{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"orientation","namespace":"BH.oM.Geometry","memberName":"Basis","isGeneric":"0","descriptionParts":["Orientation of the instance in 2 dimensional space (only X and Y vectors are relevant). Applicable only to point-based DraftingInstances. If null, a default orientation will be applied. ","This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"DraftingInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["draftingInstance ","This is a BH.oM.Adapters.Revit.Elements.DraftingInstance: ","A generic wrapper BHoM type corresponding to any view-specific Revit element (drafting elements e.g. lines and hatches, tags, text notes etc.)."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"DraftingInstance","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates DraftingInstance object based on point location and BHoM InstanceProperties. Such DraftingInstance can be pushed to Revit as a point-driven drafting element. ",""],"inputs":[{"inputName":"properties","namespace":"BH.oM.Adapters.Revit.Properties","memberName":"InstanceProperties","isGeneric":"0","descriptionParts":["Information about Revit family type or graphic type of the instance. ","This is a BH.oM.Adapters.Revit.Properties.InstanceProperties: ","A generic wrapper BHoM type corresponding to any Revit family type. Name of InstanceProperties corresponds to family type name, type parameter values are stored in RevitParametersToPush. ",""],"isRequired":1,"isInterface":0},{"inputName":"viewName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit view to which the instance belongs. ",""],"isRequired":1,"isInterface":0},{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"orientation","namespace":"BH.oM.Geometry","memberName":"Basis","isGeneric":"0","descriptionParts":["Orientation of the instance in 2 dimensional space (only X and Y vectors are relevant). Applicable only to point-based DraftingInstances. If null, a default orientation will be applied. ","This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"DraftingInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["draftingInstance ","This is a BH.oM.Adapters.Revit.Elements.DraftingInstance: ","A generic wrapper BHoM type corresponding to any view-specific Revit element (drafting elements e.g. lines and hatches, tags, text notes etc.)."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"DraftingInstance","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates DraftingInstance object based on curve location and BHoM InstanceProperties. Such DraftingInstance can be pushed to Revit as a detail line. ",""],"inputs":[{"inputName":"properties","namespace":"BH.oM.Adapters.Revit.Properties","memberName":"InstanceProperties","isGeneric":"0","descriptionParts":["Information about Revit family type or graphic type of the instance. ","This is a BH.oM.Adapters.Revit.Properties.InstanceProperties: ","A generic wrapper BHoM type corresponding to any Revit family type. Name of InstanceProperties corresponds to family type name, type parameter values are stored in RevitParametersToPush. ",""],"isRequired":1,"isInterface":0},{"inputName":"viewName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit view to which the instance belongs. ",""],"isRequired":1,"isInterface":0},{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"DraftingInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["draftingInstance ","This is a BH.oM.Adapters.Revit.Elements.DraftingInstance: ","A generic wrapper BHoM type corresponding to any view-specific Revit element (drafting elements e.g. lines and hatches, tags, text notes etc.)."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"DraftingInstance","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates DraftingInstance object based on curve location. Such DraftingInstance can be pushed to Revit as a detail line with default graphic style. ",""],"inputs":[{"inputName":"viewName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit view to which the instance belongs. ",""],"isRequired":1,"isInterface":0},{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"DraftingInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["draftingInstance ","This is a BH.oM.Adapters.Revit.Elements.DraftingInstance: ","A generic wrapper BHoM type corresponding to any view-specific Revit element (drafting elements e.g. lines and hatches, tags, text notes etc.)."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"DraftingInstance","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates DraftingInstance object based on curve location and graphic style name. Such DraftingInstance can be pushed to Revit as a detail line. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit graphic style to be used to create the element on Push. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"viewName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit view to which the instance belongs. ",""],"isRequired":1,"isInterface":0},{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"DraftingInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["draftingInstance ","This is a BH.oM.Adapters.Revit.Elements.DraftingInstance: ","A generic wrapper BHoM type corresponding to any view-specific Revit element (drafting elements e.g. lines and hatches, tags, text notes etc.)."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"DraftingInstance","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates DraftingInstance object based on curve location, Revit family name and family type name. Such DraftingInstance can be pushed to Revit as a view specific, curve-driven element, e.g. load line. ",""],"inputs":[{"inputName":"familyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit family to be used when creating the element. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"familyTypeName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit family type to be used when creating the element. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"viewName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit view to which the instance belongs. ",""],"isRequired":1,"isInterface":0},{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"DraftingInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["draftingInstance ","This is a BH.oM.Adapters.Revit.Elements.DraftingInstance: ","A generic wrapper BHoM type corresponding to any view-specific Revit element (drafting elements e.g. lines and hatches, tags, text notes etc.)."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"DraftingInstance","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates DraftingInstance object based on surface location and Revit filled region type name. Such DraftingInstance can be pushed to Revit as a filled region. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit filled region type to be used when creating the element. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"viewName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit view to which the instance belongs. ",""],"isRequired":1,"isInterface":0},{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"DraftingInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["draftingInstance ","This is a BH.oM.Adapters.Revit.Elements.DraftingInstance: ","A generic wrapper BHoM type corresponding to any view-specific Revit element (drafting elements e.g. lines and hatches, tags, text notes etc.)."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"DraftingInstance","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates DraftingInstance object based on surface location and BHoM InstanceProperties. Such DraftingInstance can be pushed to Revit as a filled region. ",""],"inputs":[{"inputName":"properties","namespace":"BH.oM.Adapters.Revit.Properties","memberName":"InstanceProperties","isGeneric":"0","descriptionParts":["Information about Revit family type or graphic type of the instance. ","This is a BH.oM.Adapters.Revit.Properties.InstanceProperties: ","A generic wrapper BHoM type corresponding to any Revit family type. Name of InstanceProperties corresponds to family type name, type parameter values are stored in RevitParametersToPush. ",""],"isRequired":1,"isInterface":0},{"inputName":"viewName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit view to which the instance belongs. ",""],"isRequired":1,"isInterface":0},{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"DraftingInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["draftingInstance ","This is a BH.oM.Adapters.Revit.Elements.DraftingInstance: ","A generic wrapper BHoM type corresponding to any view-specific Revit element (drafting elements e.g. lines and hatches, tags, text notes etc.)."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"ViewPlan","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates BHoM ViewPlan object linked to a specific Revit level. ",""],"inputs":[{"inputName":"viewName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the Revit view. ",""],"isRequired":1,"isInterface":0},{"inputName":"levelName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit level to which the Revit view belongs (Associated Level parameter). ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ViewPlan","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["viewPlan ","This is a BH.oM.Adapters.Revit.Elements.ViewPlan: ","A wrapper BHoM type for Revit plan view, used to create or update Revit plans (on Push) and represent them as BHoMObjects (on Pull)."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"ViewPlan","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates BHoM ViewPlan object linked to a specific level, based on specific Revit view template. ",""],"inputs":[{"inputName":"viewName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the Revit view. ",""],"isRequired":1,"isInterface":0},{"inputName":"levelName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit level to which the Revit view belongs (Associated Level parameter). ",""],"isRequired":1,"isInterface":0},{"inputName":"templateName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the view template applied to the Revit view. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ViewPlan","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["viewPlan ","This is a BH.oM.Adapters.Revit.Elements.ViewPlan: ","A wrapper BHoM type for Revit plan view, used to create or update Revit plans (on Push) and represent them as BHoMObjects (on Pull)."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"ModelInstance","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates ModelInstance object based on point location, Revit family name and family type name. Such ModelInstance can be pushed to Revit as a point-driven element, e.g. chair. ",""],"inputs":[{"inputName":"familyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit family to be used when creating the element. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"familyTypeName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit family type to be used when creating the element. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"orientation","namespace":"BH.oM.Geometry","memberName":"Basis","isGeneric":"0","descriptionParts":["Orientation of the instance in 3 dimensional space. Applicable only to point-based ModelInstances. If null, a default orientation will be applied. ","This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space ",""],"isRequired":0,"isInterface":0},{"inputName":"hostId","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Revit ElementId of the host element. -1 indicates no host for the given instance ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ModelInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["modelInstance ","This is a BH.oM.Adapters.Revit.Elements.ModelInstance: ","A generic wrapper BHoM type corresponding to any view-independent Revit element (model elements, e.g. duct or beam). On Push it can be used to generate or update Revit model elements that do not have a correspondent BHoM type, on Pull all Revit model elements that do not have explicit Convert method for given discipline will be converted to ModelInstance."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"ModelInstance","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates ModelInstance object based on curve location, Revit family name and family type name. Such ModelInstance can be pushed to Revit as a curve-driven element, e.g. duct. ",""],"inputs":[{"inputName":"familyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit family to be used when creating the element. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"familyTypeName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit family type to be used when creating the element. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"hostId","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Revit ElementId of the host element. -1 indicates no host for the given instance ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ModelInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["modelInstance ","This is a BH.oM.Adapters.Revit.Elements.ModelInstance: ","A generic wrapper BHoM type corresponding to any view-independent Revit element (model elements, e.g. duct or beam). On Push it can be used to generate or update Revit model elements that do not have a correspondent BHoM type, on Pull all Revit model elements that do not have explicit Convert method for given discipline will be converted to ModelInstance."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"ModelInstance","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates ModelInstance object based on point location and BHoM InstanceProperties. Such ModelInstance can be pushed to Revit as a point-driven element, e.g. chair. ",""],"inputs":[{"inputName":"properties","namespace":"BH.oM.Adapters.Revit.Properties","memberName":"InstanceProperties","isGeneric":"0","descriptionParts":["Information about Revit family type of the instance. ","This is a BH.oM.Adapters.Revit.Properties.InstanceProperties: ","A generic wrapper BHoM type corresponding to any Revit family type. Name of InstanceProperties corresponds to family type name, type parameter values are stored in RevitParametersToPush. ",""],"isRequired":1,"isInterface":0},{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"orientation","namespace":"BH.oM.Geometry","memberName":"Basis","isGeneric":"0","descriptionParts":["Orientation of the instance in 3 dimensional space. Applicable only to point-based ModelInstances. If null, a default orientation will be applied. ","This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space ",""],"isRequired":0,"isInterface":0},{"inputName":"hostId","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Revit ElementId of the host element. -1 indicates no host for the given instance ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ModelInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["modelInstance ","This is a BH.oM.Adapters.Revit.Elements.ModelInstance: ","A generic wrapper BHoM type corresponding to any view-independent Revit element (model elements, e.g. duct or beam). On Push it can be used to generate or update Revit model elements that do not have a correspondent BHoM type, on Pull all Revit model elements that do not have explicit Convert method for given discipline will be converted to ModelInstance."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"ModelInstance","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates ModelInstance object based on curve location and BHoM InstanceProperties. Such ModelInstance can be pushed to Revit as a point-driven element, e.g. chair. ",""],"inputs":[{"inputName":"properties","namespace":"BH.oM.Adapters.Revit.Properties","memberName":"InstanceProperties","isGeneric":"0","descriptionParts":["Information about Revit family type of the instance. ","This is a BH.oM.Adapters.Revit.Properties.InstanceProperties: ","A generic wrapper BHoM type corresponding to any Revit family type. Name of InstanceProperties corresponds to family type name, type parameter values are stored in RevitParametersToPush. ",""],"isRequired":1,"isInterface":0},{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"hostId","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Revit ElementId of the host element. -1 indicates no host for the given instance ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ModelInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["modelInstance ","This is a BH.oM.Adapters.Revit.Elements.ModelInstance: ","A generic wrapper BHoM type corresponding to any view-independent Revit element (model elements, e.g. duct or beam). On Push it can be used to generate or update Revit model elements that do not have a correspondent BHoM type, on Pull all Revit model elements that do not have explicit Convert method for given discipline will be converted to ModelInstance."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"ModelInstance","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates ModelInstance object based on curve location. Such ModelInstance can be pushed to Revit as model line. ",""],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ModelInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["modelInstance ","This is a BH.oM.Adapters.Revit.Elements.ModelInstance: ","A generic wrapper BHoM type corresponding to any view-independent Revit element (model elements, e.g. duct or beam). On Push it can be used to generate or update Revit model elements that do not have a correspondent BHoM type, on Pull all Revit model elements that do not have explicit Convert method for given discipline will be converted to ModelInstance."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"ModelInstance","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates ModelInstance object based on curve location. Such ModelInstance can be pushed to Revit as model line. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit line type to be applied to the model line. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ModelInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["modelInstance ","This is a BH.oM.Adapters.Revit.Elements.ModelInstance: ","A generic wrapper BHoM type corresponding to any view-independent Revit element (model elements, e.g. duct or beam). On Push it can be used to generate or update Revit model elements that do not have a correspondent BHoM type, on Pull all Revit model elements that do not have explicit Convert method for given discipline will be converted to ModelInstance."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"ModelInstance","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates ModelInstance object based on surface location. Such ModelInstance can be pushed to Revit as DirectShape. ",""],"inputs":[{"inputName":"categoryName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit category, to which the pushed DirectShape element will be assigned. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ModelInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["modelInstance ","This is a BH.oM.Adapters.Revit.Elements.ModelInstance: ","A generic wrapper BHoM type corresponding to any view-independent Revit element (model elements, e.g. duct or beam). On Push it can be used to generate or update Revit model elements that do not have a correspondent BHoM type, on Pull all Revit model elements that do not have explicit Convert method for given discipline will be converted to ModelInstance."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"ModelInstance","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates ModelInstance object based on solid location. Such ModelInstance can be pushed to Revit as DirectShape. ",""],"inputs":[{"inputName":"categoryName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit category, to which the pushed DirectShape element will be assigned. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"ISolid","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISolid: ","The interface for all three-dimensional geometrical objects ","This can be of the following types: BoundaryRepresentation, Cone, Cuboid, Cylinder, Sphere, Torus"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ModelInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["modelInstance ","This is a BH.oM.Adapters.Revit.Elements.ModelInstance: ","A generic wrapper BHoM type corresponding to any view-independent Revit element (model elements, e.g. duct or beam). On Push it can be used to generate or update Revit model elements that do not have a correspondent BHoM type, on Pull all Revit model elements that do not have explicit Convert method for given discipline will be converted to ModelInstance."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"ModelInstance","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates ModelInstance object based on other BHoMObject's properties. After assigning location to it, such ModelInstance can be pushed to Revit as any model element. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoM object to inherit properties from. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ModelInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["modelInstance ","This is a BH.oM.Adapters.Revit.Elements.ModelInstance: ","A generic wrapper BHoM type corresponding to any view-independent Revit element (model elements, e.g. duct or beam). On Push it can be used to generate or update Revit model elements that do not have a correspondent BHoM type, on Pull all Revit model elements that do not have explicit Convert method for given discipline will be converted to ModelInstance."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"ElementParameterLink","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates an entity defining the relationship between property name of an object (or name of a RevitParameter attached to it) and sets of their correspondent Revit element parameter names. ",""],"inputs":[{"inputName":"propertyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the property (or RevitParameter) to be linked with Revit parameters. ",""],"isRequired":1,"isInterface":0},{"inputName":"parameterNames","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<String>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ElementParameterLink","namespace":"BH.oM.Adapters.Revit.Parameters","isGeneric":"0","descriptionParts":["parameterLink ","This is a BH.oM.Adapters.Revit.Parameters.ElementParameterLink: ","An entity defining the relationship between property names of an object (or names of RevitParameters attached to it) and sets of their correspondent Revit element parameter names."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"ElementTypeParameterLink","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates an entity defining the relationship between property name of an object (or name of a RevitParameter attached to it) and sets of their correspondent Revit element type parameter names. ",""],"inputs":[{"inputName":"propertyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the property (or RevitParameter) to be linked with Revit parameters. ",""],"isRequired":1,"isInterface":0},{"inputName":"parameterNames","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<String>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ElementTypeParameterLink","namespace":"BH.oM.Adapters.Revit.Parameters","isGeneric":"0","descriptionParts":["parameterLink ","This is a BH.oM.Adapters.Revit.Parameters.ElementTypeParameterLink: ","An entity defining the relationship between property names of an object (or names of RevitParameters attached to it) and sets of their correspondent Revit element type parameter names."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"ParameterLinks","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates a collection of entities defining the relationship between property name of an object (or name of a RevitParameter attached to it) and sets of their correspondent Revit parameter names. If parameter name starts with prefix 'Type:', parameter will be sought for in element's type. ",""],"inputs":[{"inputName":"propertyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"parameterNames","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<String>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.Revit.Parameters","memberName":"IParameterLink","isInterface":"1","isGeneric":"0"}],"descriptionParts":["parameterLinks ","This is a IEnumerable<IParameterLink> ","This can be of the following types: ElementTypeParameterLink, ElementParameterLink"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"InstanceProperties","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates an object that carries information about correspondent Revit family type. ",""],"inputs":[{"inputName":"familyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the correspondent Revit family. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"familyTypeName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the correspondent Revit family type. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"InstanceProperties","namespace":"BH.oM.Adapters.Revit.Properties","isGeneric":"0","descriptionParts":["instanceProperties ","This is a BH.oM.Adapters.Revit.Properties.InstanceProperties: ","A generic wrapper BHoM type corresponding to any Revit family type. Name of InstanceProperties corresponds to family type name, type parameter values are stored in RevitParametersToPush."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"InstanceProperties","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates an object that carries information about correspondent Revit family type. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the correspondent Revit family type in format FamilyName: FamilyTypeName. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"InstanceProperties","namespace":"BH.oM.Adapters.Revit.Properties","isGeneric":"0","descriptionParts":["instanceProperties ","This is a BH.oM.Adapters.Revit.Properties.InstanceProperties: ","A generic wrapper BHoM type corresponding to any Revit family type. Name of InstanceProperties corresponds to family type name, type parameter values are stored in RevitParametersToPush."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"EnergyAnalysisModelRequest","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters all elements that are contained in an energy analysis model. ",""],"inputs":[],"outputs":{"memberName":"EnergyAnalysisModelRequest","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.EnergyAnalysisModelRequest: ","IRequest that filters all elements that are contained in an energy analysis model."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterActiveView","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters the active view in Revit. ",""],"inputs":[],"outputs":{"memberName":"FilterActiveView","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterActiveView: ","IRequest that filters the active view in Revit."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByActiveWorkset","assemblyName":"Revit_Engine.dll","descriptionParts":["IRequest that filters all elements in active Revit workset. ",""],"inputs":[],"outputs":{"memberName":"FilterByActiveWorkset","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterByActiveWorkset: ","IRequest that filters all elements in active Revit workset."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByCategory","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters all elements of a Revit category. ",""],"inputs":[{"inputName":"categoryName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Revit category name, as shown in Revit user interface (currently only English supported). ",""],"isRequired":1,"isInterface":0},{"inputName":"caseSensitive","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true: only perfect, case sensitive text match will be accepted. If false: capitals and small letters will be treated as equal. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterByCategory","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterByCategory: ","IRequest that filters all elements of a Revit category."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByDBTypeName","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters all elements of given Autodesk.Revit.DB type. Information about types can be found in the Revit API documentation. ",""],"inputs":[{"inputName":"typeName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Full Revit DB type name, including namespace before the name of the actual type. For example: 'Autodesk.Revit.DB.Wall. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterByDBTypeName","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterByDBTypeName: ","IRequest that filters all elements of given Autodesk.Revit.DB type. Information about types can be found in the Revit API documentation."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByFamilyAndTypeName","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters all elements of given Revit family and type, with option to loose the search by leaving one of the input names blank. ",""],"inputs":[{"inputName":"familyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit family as shown in Revit UI. Optional: if left blank, all families will be filtered in search for specified family type name. ",""],"isRequired":1,"isInterface":0},{"inputName":"familyTypeName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Revit family type name matching one displayed in Revit UI. Optional: if left blank, elements of all types within family will be returned. ",""],"isRequired":1,"isInterface":0},{"inputName":"caseSensitive","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true: only perfect, case sensitive text match will be accepted. If false: capitals and small letters will be treated as equal. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterByFamilyAndTypeName","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterByFamilyAndTypeName: ","IRequest that filters all elements of given Revit family and type, with option to loose the search by leaving one of the input names blank."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByFamilyType","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters all elements of given Revit family type. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject that contains (in its RevitIdentifiers) an ElementId of a correspondent Revit element that has been previously pulled from Revit. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"FilterByFamilyType","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterByFamilyType: ","IRequest that filters all elements of given Revit family type."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByParameterBool","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters elements based on given Boolean parameter value criterion. ",""],"inputs":[{"inputName":"parameterName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Case sensitive name of the parameter to be used as filter criterion. ",""],"isRequired":1,"isInterface":0},{"inputName":"value","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Value to compare the parameter against. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterByParameterBool","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterByParameterBool: ","IRequest that filters elements based on given Boolean parameter value criterion."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByParameterExistence","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters elements the have (or do not have) a parameter with given name. ",""],"inputs":[{"inputName":"parameterName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Case sensitive name of the parameter to look for. ",""],"isRequired":1,"isInterface":0},{"inputName":"parameterExists","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, elements with the given parameter will be filtered, if false - the opposite. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterByParameterExistence","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterByParameterExistence: ","IRequest that filters elements the have (or do not have) a parameter with given name."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByParameterInteger","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters elements based on given integer parameter value criterion. ",""],"inputs":[{"inputName":"parameterName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Case sensitive name of the parameter to be used as filter criterion. ",""],"isRequired":1,"isInterface":0},{"inputName":"numberComparisonType","namespace":"BH.oM.Adapters.Revit.Enums","memberName":"NumberComparisonType","isGeneric":"0","descriptionParts":["NumberComparisonType enum representing comparison type, e.g. equality, greater, smaller etc. ",""],"isRequired":1,"isInterface":0},{"inputName":"value","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Value to compare the parameter against. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterByParameterInteger","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterByParameterInteger: ","IRequest that filters elements based on given integer parameter value criterion."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByParameterNumber","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters elements based on given floating point number parameter value criterion. ",""],"inputs":[{"inputName":"parameterName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Case sensitive name of the parameter to be used as filter criterion. ",""],"isRequired":1,"isInterface":0},{"inputName":"numberComparisonType","namespace":"BH.oM.Adapters.Revit.Enums","memberName":"NumberComparisonType","isGeneric":"0","descriptionParts":["NumberComparisonType enum representing comparison type, e.g. equality, greater, smaller etc. ",""],"isRequired":1,"isInterface":0},{"inputName":"value","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Value to compare the parameter against. ",""],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Numerical tolerance for number comparison. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterByParameterNumber","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterByParameterNumber: ","IRequest that filters elements based on given floating point number parameter value criterion."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByParameterText","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters elements based on given text parameter value criterion. ",""],"inputs":[{"inputName":"parameterName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Case sensitive name of the parameter to be used as filter criterion. ",""],"isRequired":1,"isInterface":0},{"inputName":"textComparisonType","namespace":"BH.oM.Adapters.Revit.Enums","memberName":"TextComparisonType","isGeneric":"0","descriptionParts":["TextComparisonType enum representing comparison type, e.g. equality, contains, starts with etc. ",""],"isRequired":1,"isInterface":0},{"inputName":"value","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Value to compare the parameter against. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterByParameterText","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterByParameterText: ","IRequest that filters elements based on given text parameter value criterion."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterBySelectionSet","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters elements contained in a given Revit Selection Set. ",""],"inputs":[{"inputName":"selectionSetName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the Revit Selection Set to be filtered. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterBySelectionSet","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterBySelectionSet: ","IRequest that filters elements contained in a given Revit Selection Set."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByUniqueIds","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters elements by their UniqueIds. ",""],"inputs":[{"inputName":"uniqueIds","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of Revit UniqueIds to be used to filter the elements. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterByUniqueIds","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterByUniqueIds: ","IRequest that filters elements by their UniqueIds."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByUsage","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters used/unused elements in a Revit document. ",""],"inputs":[{"inputName":"used","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Value that specifies whether used or unused elements are meant to be filtered out. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterByUsage","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterByUsage: ","IRequest that filters used/unused elements in a Revit document."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByWorkset","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters all elements in a given Revit workset. ",""],"inputs":[{"inputName":"worksetName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Revit workset name. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterByWorkset","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterByWorkset: ","IRequest that filters all elements in a given Revit workset."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterFamilyByName","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters Revit families by name. If the family name is left blank, all families will be filtered. ",""],"inputs":[{"inputName":"familyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Revit family name matching one displayed in Revit UI. Optional: if left blank, all families will be filtered. ",""],"isRequired":1,"isInterface":0},{"inputName":"caseSensitive","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true: only perfect, case sensitive text match will be accepted. If false: capitals and small letters will be treated as equal. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterFamilyByName","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterFamilyByName: ","IRequest that filters Revit families by name. If the family name is left blank, all families will be filtered."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterFamilyTypeByName","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters Revit family types by names of theirs and their parent family, with option to loose the search by leaving one or both of the input names blank. ",""],"inputs":[{"inputName":"familyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit family as shown in Revit UI. Optional: if left blank, all families will be filtered in search for specified family type name. ",""],"isRequired":1,"isInterface":0},{"inputName":"familyTypeName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Revit family type name matching one displayed in Revit UI. Optional: if left blank, all types within family will be returned. If family name is left blank too, all family types in model will be returned. ",""],"isRequired":1,"isInterface":0},{"inputName":"caseSensitive","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true: only perfect, case sensitive text match will be accepted. If false: capitals and small letters will be treated as equal. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterFamilyTypeByName","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterFamilyTypeByName: ","IRequest that filters Revit family types by names of theirs and their parent family, with option to loose the search by leaving one or both of the input names blank."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterMemberElements","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters elements being members of selection sets, assemblies, systems etc. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject that contains (in its RevitIdentifiers) an ElementId of a correspondent Revit element that has been previously pulled. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"FilterMemberElements","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterMemberElements: ","IRequest that filters elements being members of selection sets, assemblies, systems etc."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterModelElements","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters elements that have geometrical representation in the Revit model. ",""],"inputs":[],"outputs":{"memberName":"FilterModelElements","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterModelElements: ","IRequest that filters elements that have geometrical representation in the Revit model."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByBHoMType","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters Revit elements based on their correspondent BHoM Type. Wrapper for BH.oM.Data.Requests.FilterRequest. ",""],"inputs":[{"inputName":"bHoMType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["BHoM type, which correspondent Revit types are meant to be filtered. ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterRequest","namespace":"BH.oM.Data.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Data.Requests.FilterRequest"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByElementIds","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters elements by their ElementIds. ",""],"inputs":[{"inputName":"bHoMObjects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["BHoMObjects that contain (in their RevitIdentifiers) an ElementId of a correspondent Revit element that has been previously pulled. ","This is a IEnumerable<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"FilterByElementIds","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterByElementIds: ","IRequest that filters elements by their ElementIds."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByParameterElementId","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters elements by given parameter value criterion. ",""],"inputs":[{"inputName":"parameterName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Case sensitive name of the parameter to be used as filter criterion. ",""],"isRequired":1,"isInterface":0},{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject that contains (in its RevitIdentifiers) an ElementId of a correspondent Revit element that has been previously pulled. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"FilterByParameterElementId","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterByParameterElementId: ","IRequest that filters elements based on given ElementId parameter value criterion."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterViewByName","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters Revit views by name. If the view name is left blank, all families will be filtered. ",""],"inputs":[{"inputName":"viewName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Revit view name matching one displayed in Revit UI. Optional: if left blank, all views will be filtered. ",""],"isRequired":1,"isInterface":0},{"inputName":"caseSensitive","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true: only perfect, case sensitive text match will be accepted. If false: capitals and small letters will be treated as equal. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterViewByName","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterViewByName: ","IRequest that filters Revit views by name. If the view name is left blank, all families will be filtered."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterViewsByType","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters all views of given type. ",""],"inputs":[{"inputName":"revitViewType","namespace":"BH.oM.Adapters.Revit.Enums","memberName":"RevitViewType","isGeneric":"0","descriptionParts":["RevitViewType enum correspondent to Revit view type. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterViewsByType","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterViewsByType: ","IRequest that filters all views of given type."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterViewTemplateByName","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters Revit view templates by name. If the template name is left blank, all view templates will be filtered. ",""],"inputs":[{"inputName":"templateName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Revit view template name matching one displayed in Revit UI. Optional: if left blank, all view templates will be filtered. ",""],"isRequired":1,"isInterface":0},{"inputName":"caseSensitive","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true: only perfect, case sensitive text match will be accepted. If false: capitals and small letters will be treated as equal. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FilterViewTemplateByName","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterViewTemplateByName: ","IRequest that filters Revit view templates by name. If the template name is left blank, all view templates will be filtered."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterBySelection","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters elements selected in Revit. Wrapper for BH.oM.Data.Requests.SelectionRequest. ",""],"inputs":[],"outputs":{"memberName":"SelectionRequest","namespace":"BH.oM.Data.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Data.Requests.SelectionRequest: ","IRequest that filters all elements currently selected in the software."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByViewSpecific","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters elements specific to (owned by) a given View. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject that contains (in its RevitIdentifiers) an ElementId of a correspondent Revit element that has been previously pulled. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"FilterByViewSpecific","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterByViewSpecific: ","IRequest that filters elements specific to (owned by) a given view in Revit."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterByVisibleInView","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters elements visible in a given View. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject that contains (in its RevitIdentifiers) an ElementId of a correspondent Revit element that has been previously pulled. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"FilterByVisibleInView","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterByVisibleInView: ","IRequest that filters all elements visible in a given Revit view."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterTypesOfFamily","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters Revit Family Types of input Family. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject that contains ElementId of a correspondent Revit element in RevitIdentifiers fragment attached to it - usually previously pulled from Revit. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"FilterTypesOfFamily","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterTypesOfFamily: ","IRequest that filters Revit family types that belong to a given Revit family."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FilterViewsByTemplate","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates IRequest that filters views that implement a given template. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject that contains (in its RevitIdentifiers) an ElementId of a correspondent Revit element that has been previously pulled. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"FilterViewsByTemplate","namespace":"BH.oM.Adapters.Revit.Requests","isGeneric":"0","descriptionParts":["Created request. ","This is a BH.oM.Adapters.Revit.Requests.FilterViewsByTemplate: ","IRequest that filters all Revit views that implement a given view template."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"ParameterSettings","assemblyName":"Revit_Engine.dll","descriptionParts":["Created an entity holding information about conversion-specific Revit parameter names as well as relationships between object's property names (or names of RevitParameters attached to it) and Revit parameter names. ",""],"inputs":[{"inputName":"parameterMaps","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.Revit.Parameters","memberName":"ParameterMap","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<ParameterMap>"],"isRequired":0,"isInterface":1},{"inputName":"tagsParameter","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the Revit parameter to be used as a source (on Pull) and target (on Push) of information for BHoM tags. ",""],"isRequired":0,"isInterface":0},{"inputName":"materialGradeParameter","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the Revit parameter to be used as a source of information about material grade of a Revit element. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ParameterSettings","namespace":"BH.oM.Adapters.Revit.Settings","isGeneric":"0","descriptionParts":["parameterSettings ","This is a BH.oM.Adapters.Revit.Settings.ParameterSettings: ","An entity holding information about conversion-specific Revit parameter names as well as relationships between object property names (or names of RevitParameters attached to it) and Revit parameter names."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FamilyLibrary","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates an object that stores information about families that can be loaded to model. ",""],"inputs":[{"inputName":"directory","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Directory from which Revit families will be loaded if they do not exist in the model. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"topDirectoryOnly","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Search through top directory folder only and skip subfolders. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"FamilyLibrary","namespace":"BH.oM.Adapters.Revit","isGeneric":"0","descriptionParts":["familyLibrary ","This is a BH.oM.Adapters.Revit.FamilyLibrary: ","Library of Revit families that can be loaded to the model."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"ParameterMap","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates an object that contains the information about the relationship between object's property names (or names of RevitParameters attached to it) and Revit parameter names. ",""],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["Type, which property names (or names of RevitParameters) are being mapped with Revit element parameters. ",""],"isRequired":1,"isInterface":0},{"inputName":"parameterLinks","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.Revit.Parameters","memberName":"IParameterLink","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<IParameterLink> ","This can be of the following types: ElementTypeParameterLink, ElementParameterLink"],"isRequired":0,"isInterface":1}],"outputs":{"memberName":"ParameterMap","namespace":"BH.oM.Adapters.Revit.Parameters","isGeneric":"0","descriptionParts":["parameterMap ","This is a BH.oM.Adapters.Revit.Parameters.ParameterMap: ","An entity defining the relationship between object's property names (or names of RevitParameters attached to it) and parameter names of correspondent Revit elements."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"RevitFilePreview","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates an object that stores basic information about Revit family file (.rfa) such as family category, family type names etc. ",""],"inputs":[{"inputName":"path","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Path to the Revit family file wrapped by this object. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"RevitFilePreview","namespace":"BH.oM.Adapters.Revit","isGeneric":"0","descriptionParts":["revitFilePreview ","This is a BH.oM.Adapters.Revit.RevitFilePreview: ","Wrapper for Revit family file (.rfa) that stores basic information about it such as family category, familiy type names etc."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"FamilyLoadSettings","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates an object that contols family loading behaviour when family is not loaded in project. ",""],"inputs":[{"inputName":"familyLibrary","namespace":"BH.oM.Adapters.Revit","memberName":"FamilyLibrary","isGeneric":"0","descriptionParts":["Library of Revit families that can be loaded to the model. ","This is a BH.oM.Adapters.Revit.FamilyLibrary: ","Library of Revit families that can be loaded to the model. ",""],"isRequired":0,"isInterface":0},{"inputName":"overwriteFamily","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, Revit family will be overwritten on load, if false it will not be changed. ",""],"isRequired":0,"isInterface":0},{"inputName":"overwriteParameterValues","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, Revit family parameters will be overwritten on load, if false they will not be changed. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"FamilyLoadSettings","namespace":"BH.oM.Adapters.Revit.Settings","isGeneric":"0","descriptionParts":["familyLoadSettings ","This is a BH.oM.Adapters.Revit.Settings.FamilyLoadSettings: ","Revit family load settings for Revit Adapter. Prototype, currently with limited functionality."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"ConnectionSettings","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates an object that carries socket connection settings for Revit Adapter. ",""],"inputs":[{"inputName":"pushPort","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Socket push port - this value needs to be equal to push port set in Revit Listener located in Add-Ins tab of Revit ribbon. ",""],"isRequired":0,"isInterface":0},{"inputName":"pullPort","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Socket pull port - this value needs to be equal to pull port set in Revit Listener located in Add-Ins tab of Revit ribbon. ",""],"isRequired":0,"isInterface":0},{"inputName":"maxMinutesToWait","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Maximum number of minutes per adapter action, after which the adapter will automatically stop exchanging data with Revit. Increase this number if push/pull action is expected to take longer. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ConnectionSettings","namespace":"BH.oM.Adapters.Revit.Settings","isGeneric":"0","descriptionParts":["connectionSettings ","This is a BH.oM.Adapters.Revit.Settings.ConnectionSettings: ","Socket connection settings for Revit Adapter."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"RevitSettings","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates an object that carries general settings that are applicable to all actions performed by the instance of Revit adapter. ",""],"inputs":[{"inputName":"connectionSettings","namespace":"BH.oM.Adapters.Revit.Settings","memberName":"ConnectionSettings","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Revit.Settings.ConnectionSettings: ","Socket connection settings for Revit Adapter. ",""],"isRequired":0,"isInterface":0},{"inputName":"familyLoadSettings","namespace":"BH.oM.Adapters.Revit.Settings","memberName":"FamilyLoadSettings","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Revit.Settings.FamilyLoadSettings: ","Revit family load settings for Revit Adapter. Prototype, currently with limited functionality. ",""],"isRequired":0,"isInterface":0},{"inputName":"parameterSettings","namespace":"BH.oM.Adapters.Revit.Settings","memberName":"ParameterSettings","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Revit.Settings.ParameterSettings: ","An entity holding information about conversion-specific Revit parameter names as well as relationships between object property names (or names of RevitParameters attached to it) and Revit parameter names. ",""],"isRequired":0,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance to be used in geometry processing. ",""],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Angle tolerance to be used in geometry processing. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RevitSettings","namespace":"BH.oM.Adapters.Revit.Settings","isGeneric":"0","descriptionParts":["revitSettings ","This is a BH.oM.Adapters.Revit.Settings.RevitSettings: ","General settings that are applicable to all actions performed by the instance of Revit adapter."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"Viewport","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates BHoM Viewport object in specific point location, linked to the view by given name and to the sheet by given sheet Number. ",""],"inputs":[{"inputName":"sheetNumber","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Number of the Revit sheet hosting the Viewport. ",""],"isRequired":1,"isInterface":0},{"inputName":"viewName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the Revit view shown in the Viewport. ",""],"isRequired":1,"isInterface":0},{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["Location of the viewport in Revit sheet space. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Viewport","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["viewport ","This is a BH.oM.Adapters.Revit.Elements.Viewport: ","A wrapper BHoM type for Revit viewport, used to create or update Revit viewports (on Push) and represent them as BHoMObjects (on Pull)."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Create","memberName":"Sheet","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates BHoM Sheet object. ",""],"inputs":[{"inputName":"sheetName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the Revit sheet. ",""],"isRequired":1,"isInterface":0},{"inputName":"sheetNumber","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Number of the Revit sheet. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Sheet","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["sheet ","This is a BH.oM.Adapters.Revit.Elements.Sheet: ","A wrapper BHoM type for Revit sheet, used to create or update Revit sheets (on Push) and represent them as BHoMObjects (on Pull)."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Modify","memberName":"AddParameterMaps","assemblyName":"Revit_Engine.dll","descriptionParts":["Adds ParameterMaps to existing ParameterSettings. ",""],"inputs":[{"inputName":"parameterSettings","namespace":"BH.oM.Adapters.Revit.Settings","memberName":"ParameterSettings","isGeneric":"0","descriptionParts":["ParameterSettings to be extended. ","This is a BH.oM.Adapters.Revit.Settings.ParameterSettings: ","An entity holding information about conversion-specific Revit parameter names as well as relationships between object property names (or names of RevitParameters attached to it) and Revit parameter names."],"isRequired":1,"isInterface":0},{"inputName":"parameterMaps","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.Revit.Parameters","memberName":"ParameterMap","isInterface":"0","isGeneric":"0"}],"descriptionParts":["ParameterMaps to be added. ","This is a IEnumerable<ParameterMap>"],"isRequired":1,"isInterface":1},{"inputName":"merge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["In case when a ParameterMap with type equal to the input ParameterMap already exists in parameterSettings: if true, parameterMap will be merged into the existing one, if false, it will overwrite it. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ParameterSettings","namespace":"BH.oM.Adapters.Revit.Settings","isGeneric":"0","descriptionParts":["parameterSettings ","This is a BH.oM.Adapters.Revit.Settings.ParameterSettings: ","An entity holding information about conversion-specific Revit parameter names as well as relationships between object property names (or names of RevitParameters attached to it) and Revit parameter names."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Modify","memberName":"AddParameterLinks","assemblyName":"Revit_Engine.dll","descriptionParts":["Adds ParameterLinks to existing ParameterMap. ",""],"inputs":[{"inputName":"parameterMap","namespace":"BH.oM.Adapters.Revit.Parameters","memberName":"ParameterMap","isGeneric":"0","descriptionParts":["ParameterMap to be extended. ","This is a BH.oM.Adapters.Revit.Parameters.ParameterMap: ","An entity defining the relationship between object's property names (or names of RevitParameters attached to it) and parameter names of correspondent Revit elements."],"isRequired":1,"isInterface":0},{"inputName":"parameterLinks","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.Revit.Parameters","memberName":"IParameterLink","isInterface":"1","isGeneric":"0"}],"descriptionParts":["ParameterLinks to be added. ","This is a IEnumerable<IParameterLink> ","This can be of the following types: ElementTypeParameterLink, ElementParameterLink"],"isRequired":1,"isInterface":1},{"inputName":"merge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["In case when PropertyName of input ParameterLink already exists in a ParameterMap: if true, the parameterNames will be added to the existing collection of parameter names, if false, they will overwrite it. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ParameterMap","namespace":"BH.oM.Adapters.Revit.Parameters","isGeneric":"0","descriptionParts":["parameterMap ","This is a BH.oM.Adapters.Revit.Parameters.ParameterMap: ","An entity defining the relationship between object's property names (or names of RevitParameters attached to it) and parameter names of correspondent Revit elements."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Modify","memberName":"AddParameterLinks","assemblyName":"Revit_Engine.dll","descriptionParts":["Adds ParameterLinks to existing ParameterSettings. ",""],"inputs":[{"inputName":"parameterSettings","namespace":"BH.oM.Adapters.Revit.Settings","memberName":"ParameterSettings","isGeneric":"0","descriptionParts":["ParameterSettings to be extended. ","This is a BH.oM.Adapters.Revit.Settings.ParameterSettings: ","An entity holding information about conversion-specific Revit parameter names as well as relationships between object property names (or names of RevitParameters attached to it) and Revit parameter names."],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["Type, for which the ParameterLinks are meant to be added. ","This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"parameterLinks","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.Revit.Parameters","memberName":"IParameterLink","isInterface":"1","isGeneric":"0"}],"descriptionParts":["ParameterLinks to be added. ","This is a IEnumerable<IParameterLink> ","This can be of the following types: ElementTypeParameterLink, ElementParameterLink"],"isRequired":1,"isInterface":1},{"inputName":"merge","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["In case when PropertyName of input ParameterLink already exists in a ParameterMap of given type: if true, the parameterNames will be added to the existing collection of parameter names, if false, they will overwrite it. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ParameterSettings","namespace":"BH.oM.Adapters.Revit.Settings","isGeneric":"0","descriptionParts":["parameterSettings ","This is a BH.oM.Adapters.Revit.Settings.ParameterSettings: ","An entity holding information about conversion-specific Revit parameter names as well as relationships between object property names (or names of RevitParameters attached to it) and Revit parameter names."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Modify","memberName":"DefaultIfNull","assemblyName":"Revit_Engine.dll","descriptionParts":["Sets RevitSettings to default value if they are null. ",""],"inputs":[{"inputName":"settings","namespace":"BH.oM.Adapters.Revit.Settings","memberName":"RevitSettings","isGeneric":"0","descriptionParts":["RevitSettings to be set to default if null. ","This is a BH.oM.Adapters.Revit.Settings.RevitSettings: ","General settings that are applicable to all actions performed by the instance of Revit adapter."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"RevitSettings","namespace":"BH.oM.Adapters.Revit.Settings","isGeneric":"0","descriptionParts":["revitSettings ","This is a BH.oM.Adapters.Revit.Settings.RevitSettings: ","General settings that are applicable to all actions performed by the instance of Revit adapter."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Modify","memberName":"RemoveParameterLinks","assemblyName":"Revit_Engine.dll","descriptionParts":["Removes links between Revit parameters and object's properties (or name of a RevitParameter attached to it) inside existing ParameterMap. ",""],"inputs":[{"inputName":"parameterMap","namespace":"BH.oM.Adapters.Revit.Parameters","memberName":"ParameterMap","isGeneric":"0","descriptionParts":["ParameterMap to be modified. ","This is a BH.oM.Adapters.Revit.Parameters.ParameterMap: ","An entity defining the relationship between object's property names (or names of RevitParameters attached to it) and parameter names of correspondent Revit elements."],"isRequired":1,"isInterface":0},{"inputName":"propertyNames","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Names of type properties (or RevitParameters), for which the ParameterLinks are meant to be removed. ","This is a IEnumerable<String>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ParameterMap","namespace":"BH.oM.Adapters.Revit.Parameters","isGeneric":"0","descriptionParts":["parameterMap ","This is a BH.oM.Adapters.Revit.Parameters.ParameterMap: ","An entity defining the relationship between object's property names (or names of RevitParameters attached to it) and parameter names of correspondent Revit elements."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Modify","memberName":"RemoveParameterLinks","assemblyName":"Revit_Engine.dll","descriptionParts":["Removes links between Revit parameters and object's properties (or name of a RevitParameter attached to it) inside existing ParameterSettings. ",""],"inputs":[{"inputName":"parameterSettings","namespace":"BH.oM.Adapters.Revit.Settings","memberName":"ParameterSettings","isGeneric":"0","descriptionParts":["ParameterSettings to be modified. ","This is a BH.oM.Adapters.Revit.Settings.ParameterSettings: ","An entity holding information about conversion-specific Revit parameter names as well as relationships between object property names (or names of RevitParameters attached to it) and Revit parameter names."],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["Type related to ParameterMap meant to be modified. ","This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"propertyNames","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Names of type properties (or RevitParameters), for which the ParameterLinks are meant to be removed. ","This is a IEnumerable<String>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ParameterSettings","namespace":"BH.oM.Adapters.Revit.Settings","isGeneric":"0","descriptionParts":["parameterSettings ","This is a BH.oM.Adapters.Revit.Settings.ParameterSettings: ","An entity holding information about conversion-specific Revit parameter names as well as relationships between object property names (or names of RevitParameters attached to it) and Revit parameter names."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Modify","memberName":"RemoveParameterMaps","assemblyName":"Revit_Engine.dll","descriptionParts":["Removes ParameterMaps correspondent to given types from existing ParameterSettings. ",""],"inputs":[{"inputName":"parameterSettings","namespace":"BH.oM.Adapters.Revit.Settings","memberName":"ParameterSettings","isGeneric":"0","descriptionParts":["ParameterSettings to be modified. ","This is a BH.oM.Adapters.Revit.Settings.ParameterSettings: ","An entity holding information about conversion-specific Revit parameter names as well as relationships between object property names (or names of RevitParameters attached to it) and Revit parameter names."],"isRequired":1,"isInterface":0},{"inputName":"types","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Type","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Type>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ParameterSettings","namespace":"BH.oM.Adapters.Revit.Settings","isGeneric":"0","descriptionParts":["parameterSettings ","This is a BH.oM.Adapters.Revit.Settings.ParameterSettings: ","An entity holding information about conversion-specific Revit parameter names as well as relationships between object property names (or names of RevitParameters attached to it) and Revit parameter names."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Modify","memberName":"SetRevitParameter","assemblyName":"Revit_Engine.dll","descriptionParts":["Attaches parameter to a BHoM object, which will be applied to a correspondent Revit element on Push. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject to which the parameter will be attached. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"paramName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"value","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["Value of the parameter to be attached. ","This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IBHoMObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["bHoMObject ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Modify","memberName":"SetRevitParameters","assemblyName":"Revit_Engine.dll","descriptionParts":["Attaches parameters to a BHoM object, which will be applied to a correspondent Revit element on Push. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject to which the parameters will be attached. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"paramNames","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<String>"],"isRequired":1,"isInterface":0},{"inputName":"values","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Values of the parameters to be attached. ","This is a List<Object>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IBHoMObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["bHoMObject ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Modify","memberName":"SetTag","assemblyName":"Revit_Engine.dll","descriptionParts":["Sets tag to BHoMObject. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject to be modified. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"tag","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Tag to be set. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IBHoMObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["bHoMObject ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Modify","memberName":"Move","assemblyName":"Revit_Engine.dll","descriptionParts":["Translates ModelInstance by given vector. ",""],"inputs":[{"inputName":"modelInstance","namespace":"BH.oM.Adapters.Revit.Elements","memberName":"ModelInstance","isGeneric":"0","descriptionParts":["ModelInstance to be moved. ","This is a BH.oM.Adapters.Revit.Elements.ModelInstance: ","A generic wrapper BHoM type corresponding to any view-independent Revit element (model elements, e.g. duct or beam). On Push it can be used to generate or update Revit model elements that do not have a correspondent BHoM type, on Pull all Revit model elements that do not have explicit Convert method for given discipline will be converted to ModelInstance."],"isRequired":1,"isInterface":0},{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Translation vector. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ModelInstance","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["modelInstance ","This is a BH.oM.Adapters.Revit.Elements.ModelInstance: ","A generic wrapper BHoM type corresponding to any view-independent Revit element (model elements, e.g. duct or beam). On Push it can be used to generate or update Revit model elements that do not have a correspondent BHoM type, on Pull all Revit model elements that do not have explicit Convert method for given discipline will be converted to ModelInstance."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Modify","memberName":"Append","assemblyName":"Revit_Engine.dll","descriptionParts":["Adds new directory to existing FamilyLibrary. ",""],"inputs":[{"inputName":"familyLibrary","namespace":"BH.oM.Adapters.Revit","memberName":"FamilyLibrary","isGeneric":"0","descriptionParts":["FamilyLibrary to be extended. ","This is a BH.oM.Adapters.Revit.FamilyLibrary: ","Library of Revit families that can be loaded to the model."],"isRequired":1,"isInterface":0},{"inputName":"directory","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Directory to be added. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"topDirectoryOnly","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, add top directory folder and skip subfolders. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"FamilyLibrary","namespace":"BH.oM.Adapters.Revit","isGeneric":"0","descriptionParts":["familyLibrary ","This is a BH.oM.Adapters.Revit.FamilyLibrary: ","Library of Revit families that can be loaded to the model."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Modify","memberName":"Append","assemblyName":"Revit_Engine.dll","descriptionParts":["Adds new path to existing FamilyLibrary. ",""],"inputs":[{"inputName":"familyLibrary","namespace":"BH.oM.Adapters.Revit","memberName":"FamilyLibrary","isGeneric":"0","descriptionParts":["FamilyLibrary to be extended. ","This is a BH.oM.Adapters.Revit.FamilyLibrary: ","Library of Revit families that can be loaded to the model."],"isRequired":1,"isInterface":0},{"inputName":"path","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Path of Revit file to be added. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FamilyLibrary","namespace":"BH.oM.Adapters.Revit","isGeneric":"0","descriptionParts":["familyLibrary ","This is a BH.oM.Adapters.Revit.FamilyLibrary: ","Library of Revit families that can be loaded to the model."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Modify","memberName":"Append","assemblyName":"Revit_Engine.dll","descriptionParts":["Adds a range of paths to existing FamilyLibrary. ",""],"inputs":[{"inputName":"familyLibrary","namespace":"BH.oM.Adapters.Revit","memberName":"FamilyLibrary","isGeneric":"0","descriptionParts":["FamilyLibrary to be extended. ","This is a BH.oM.Adapters.Revit.FamilyLibrary: ","Library of Revit families that can be loaded to the model."],"isRequired":1,"isInterface":0},{"inputName":"paths","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of paths to Revit files to be added. ","This is a IEnumerable<String>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"FamilyLibrary","namespace":"BH.oM.Adapters.Revit","isGeneric":"0","descriptionParts":["familyLibrary ","This is a BH.oM.Adapters.Revit.FamilyLibrary: ","Library of Revit families that can be loaded to the model."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Modify","memberName":"RemoveIdentifiers","assemblyName":"Revit_Engine.dll","descriptionParts":["Removes Revit-related identifiers fragment from a BHoM object. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject to be cleaned. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IBHoMObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["bHoMObject ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"RenderMeshes","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns render meshes of Revit element correspondent to given BHoMObject. This value is stored in RevitRepresentation fragment. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject to be queried. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Graphics","memberName":"RenderMesh","isInterface":"0","isGeneric":"0"}],"descriptionParts":["renderMeshes ","This is a List<RenderMesh>"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"ZJustifiedCurve","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns the driving curve of the given IFramingElement adjusted based on the 'z Justification' parameter value pulled from Revit.  Important: neither z offset nor any y justification is taken into account. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Physical.Elements","memberName":"IFramingElement","isGeneric":"0","descriptionParts":["The IFramingElement to query the in Revit defining location line of. ","This is a BH.oM.Physical.Elements.IFramingElement ","This can be of the following types: Bracing, Pile, Column, Cable, Beam"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The in Revit geometry defining location line of the element. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"DefaultParameterSettings","assemblyName":"Revit_Engine.dll","descriptionParts":["Creates an instance of ParameterSettings with all ParameterMaps stored in BHoM/DataSets/Revit/ParameterMaps folder. ",""],"inputs":[],"outputs":{"memberName":"ParameterSettings","namespace":"BH.oM.Adapters.Revit.Settings","isGeneric":"0","descriptionParts":["parameterSettings ","This is a BH.oM.Adapters.Revit.Settings.ParameterSettings: ","An entity holding information about conversion-specific Revit parameter names as well as relationships between object property names (or names of RevitParameters attached to it) and Revit parameter names."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"GetRevitParameters","assemblyName":"Revit_Engine.dll","descriptionParts":["Retrieves parameters that are attached to a BHoM object. If a parameter with given name exists in both collections of pulled parameters and the ones to push, the latter is returned. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject to which the parameters will be attached. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.Revit.Parameters","memberName":"RevitParameter","isInterface":"0","isGeneric":"0"}],"descriptionParts":["revitParameters ","This is a List<RevitParameter>"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"GetRevitParameterValue","assemblyName":"Revit_Engine.dll","descriptionParts":["Retrieves value of a parameter attached to a BHoM object. If a parameter with given name exists in both collections of pulled parameters and the ones to push, the latter is returned. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject to which the parameters will be attached. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"parameterName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the parameter to be sought for. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["value ","This is a Object"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"InnerPolyCurves","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns the PolyCurves from the list that lie inside the provided PolyCurve. QUICK CHECK (BOUNDING BOX). ",""],"inputs":[{"inputName":"polyCurve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["PolyCurve to be used as outer bounds of space. ","This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"polyCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"PolyCurve","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Collection of PolyCurves to be queried for containment. ","This is a IEnumerable<PolyCurve>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"PolyCurve","isInterface":"0","isGeneric":"0"}],"descriptionParts":["innerPolyCurves ","This is a List<PolyCurve>"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"Family","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns BHoM family wrapper based on RevitFilePreview and given Revit family type names. ",""],"inputs":[{"inputName":"revitFilePreview","namespace":"BH.oM.Adapters.Revit","memberName":"RevitFilePreview","isGeneric":"0","descriptionParts":["RevitFilePreview to be queried. ","This is a BH.oM.Adapters.Revit.RevitFilePreview: ","Wrapper for Revit family file (.rfa) that stores basic information about it such as family category, familiy type names etc."],"isRequired":1,"isInterface":0},{"inputName":"familyTypeNames","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Revit family type names sought for. ","This is a IEnumerable<String>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Family","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["family ","This is a BH.oM.Adapters.Revit.Elements.Family: ","A wrapper BHoM type for Revit family used on Pull and Update of Revit families."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"Family","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns BHoM family wrapper based on RevitFilePreview. ",""],"inputs":[{"inputName":"revitFilePreview","namespace":"BH.oM.Adapters.Revit","memberName":"RevitFilePreview","isGeneric":"0","descriptionParts":["RevitFilePreview to be queried. ","This is a BH.oM.Adapters.Revit.RevitFilePreview: ","Wrapper for Revit family file (.rfa) that stores basic information about it such as family category, familiy type names etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Family","namespace":"BH.oM.Adapters.Revit.Elements","isGeneric":"0","descriptionParts":["family ","This is a BH.oM.Adapters.Revit.Elements.Family: ","A wrapper BHoM type for Revit family used on Pull and Update of Revit families."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"MaterialTakeoff","assemblyName":"Revit_Engine.dll","descriptionParts":["Queries the material take off information extracted from a Revit element on Pull and stored in RevitMaterialTakeOff fragment attached to a given BHoMObject. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject to be queried for the material take off information extracted from a Revit element on Pull. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ExplicitBulk","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["Material take off information in a form of an ExplicitBulk. ","This is a BH.oM.Physical.Elements.ExplicitBulk"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"ParameterLinks","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns ParameterLinks inside ParameterSettings for given type and property name (or RevitParameter name). ",""],"inputs":[{"inputName":"parameterSettings","namespace":"BH.oM.Adapters.Revit.Settings","memberName":"ParameterSettings","isGeneric":"0","descriptionParts":["ParameterSettings to be queried. ","This is a BH.oM.Adapters.Revit.Settings.ParameterSettings: ","An entity holding information about conversion-specific Revit parameter names as well as relationships between object property names (or names of RevitParameters attached to it) and Revit parameter names."],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["Type to be sought for. ","This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"propertyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the property (or RevitParameter) to be sought for. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.Revit.Parameters","memberName":"IParameterLink","isInterface":"1","isGeneric":"0"}],"descriptionParts":["parameterLink ","This is a IEnumerable<IParameterLink> ","This can be of the following types: ElementTypeParameterLink, ElementParameterLink"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"ParameterLinks","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns ParameterLinks inside ParameterMap for given property name (or RevitParameter name). ",""],"inputs":[{"inputName":"parameterMap","namespace":"BH.oM.Adapters.Revit.Parameters","memberName":"ParameterMap","isGeneric":"0","descriptionParts":["ParameterMap to be queried. ","This is a BH.oM.Adapters.Revit.Parameters.ParameterMap: ","An entity defining the relationship between object's property names (or names of RevitParameters attached to it) and parameter names of correspondent Revit elements."],"isRequired":1,"isInterface":0},{"inputName":"propertyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the property (or RevitParameter) to be sought for. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.Revit.Parameters","memberName":"IParameterLink","isInterface":"1","isGeneric":"0"}],"descriptionParts":["parameterLink ","This is a IEnumerable<IParameterLink> ","This can be of the following types: ElementTypeParameterLink, ElementParameterLink"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"GetRevitIdentifiers","assemblyName":"Revit_Engine.dll","descriptionParts":["Retrieves identifiers of the Revit element correspondent to a BHoM object. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject to be queried for identifiers of correspondent Revit element. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"RevitIdentifiers","namespace":"BH.oM.Adapters.Revit.Parameters","isGeneric":"0","descriptionParts":["revitIdentifiers ","This is a BH.oM.Adapters.Revit.Parameters.RevitIdentifiers: ","An entity containing identifiers of Revit element correspondent to the BHoM object that carries it."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"RevitEdges","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns edges of Revit element correspondent to given BHoMObject. This value is stored in RevitGeometry fragment. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject to be queried. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["edges ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"RevitMeshes","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns mesh geometry of Revit element correspondent to given BHoMObject. This value is stored in RevitGeometry fragment. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject to be queried. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Mesh","isInterface":"0","isGeneric":"0"}],"descriptionParts":["meshes ","This is a List<Mesh>"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"RevitSurfaces","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns surface geometry of Revit element correspondent to given BHoMObject. This value is stored in RevitGeometry fragment. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject to be queried. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ISurface","isInterface":"1","isGeneric":"0"}],"descriptionParts":["surfaces ","This is a List<ISurface> ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"XDocument","assemblyName":"Revit_Engine.dll","descriptionParts":["Retrieves XDocument from header of a Revit family file (.rfa) wrapped by RevitFilePreview. ",""],"inputs":[{"inputName":"revitFilePreview","namespace":"BH.oM.Adapters.Revit","memberName":"RevitFilePreview","isGeneric":"0","descriptionParts":["RevitFilePreview to be queried. ","This is a BH.oM.Adapters.Revit.RevitFilePreview: ","Wrapper for Revit family file (.rfa) that stores basic information about it such as family category, familiy type names etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"XDocument","namespace":"System.Xml.Linq","isGeneric":"0","descriptionParts":["xDocument ","This is a XDocument"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"XDocument","assemblyName":"Revit_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"path","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"XDocument","namespace":"System.Xml.Linq","isGeneric":"0","descriptionParts":["This is a XDocument"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"RevitFilePreviews","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns all RevitFilePreviews inside FamilyLibrary that meet Revit category, family and family type name requirements. ",""],"inputs":[{"inputName":"familyLibrary","namespace":"BH.oM.Adapters.Revit","memberName":"FamilyLibrary","isGeneric":"0","descriptionParts":["FamilyLibrary to be queried. ","This is a BH.oM.Adapters.Revit.FamilyLibrary: ","Library of Revit families that can be loaded to the model."],"isRequired":1,"isInterface":0},{"inputName":"categoryName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit category to be sought for. Optional: if null, all items to be taken. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"familyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit family to be sought for. Optional: if null, all items to be taken. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"familyTypeName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit family type to be sought for. Optional: if null, all items to be taken. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.Revit","memberName":"RevitFilePreview","isInterface":"0","isGeneric":"0"}],"descriptionParts":["revitFilePreviews ","This is a List<RevitFilePreview>"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"CurrentDomainAssembly","assemblyName":"Revit_Engine.dll","descriptionParts":["Gets current domain assembly with given ManifestModule name. ",""],"inputs":[{"inputName":"manifestModuleName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["ManifestModule name to be sought for. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Assembly","namespace":"System.Reflection","isGeneric":"0","descriptionParts":["assembly ","This is a Assembly"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"FamilyTypeFullName","assemblyName":"Revit_Engine.dll","descriptionParts":["Gets full name of Revit family type (in format FamilyName: FamilyTypeName) based on given family name and family type name. ",""],"inputs":[{"inputName":"familyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Family name to be used to build the string. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"familyTypeName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Family type name to be used to build the string. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["familyTypeFullName ","This is a String"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"MapPropertyInfos","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns a collection of PropertyInfo objects owned by given type, which can be used to map parameters with ParameterSettings. ",""],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["Type to be queried. ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Reflection","memberName":"PropertyInfo","isInterface":"0","isGeneric":"0"}],"descriptionParts":["mapPropertyInfos ","This is a IEnumerable<PropertyInfo>"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"ParameterNames","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns a collection of Revit parameter names associated with a given object's property (or RevitParameter attached to this object) inside ParameterSettings. ",""],"inputs":[{"inputName":"parameterSettings","namespace":"BH.oM.Adapters.Revit.Settings","memberName":"ParameterSettings","isGeneric":"0","descriptionParts":["ParameterSettings to be queried. ","This is a BH.oM.Adapters.Revit.Settings.ParameterSettings: ","An entity holding information about conversion-specific Revit parameter names as well as relationships between object property names (or names of RevitParameters attached to it) and Revit parameter names."],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["Type to be sought for. ","This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of property (or RevitParameter) to be sought for. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"typeParameters","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"HashSet","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["names ","This is a HashSet<String>"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"ParameterMap","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns ParameterMap for given type inside ParameterSettings. ",""],"inputs":[{"inputName":"parameterSettings","namespace":"BH.oM.Adapters.Revit.Settings","memberName":"ParameterSettings","isGeneric":"0","descriptionParts":["ParameterSettings to be queried. ","This is a BH.oM.Adapters.Revit.Settings.ParameterSettings: ","An entity holding information about conversion-specific Revit parameter names as well as relationships between object property names (or names of RevitParameters attached to it) and Revit parameter names."],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["Type to be sought for. ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ParameterMap","namespace":"BH.oM.Adapters.Revit.Parameters","isGeneric":"0","descriptionParts":["parameterMap ","This is a BH.oM.Adapters.Revit.Parameters.ParameterMap: ","An entity defining the relationship between object's property names (or names of RevitParameters attached to it) and parameter names of correspondent Revit elements."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"OuterPolyCurves","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns the PolyCurves from list that lie outside any other PolyCurve. QUICK CHECK (BOUNDING BOX). ",""],"inputs":[{"inputName":"polyCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"PolyCurve","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Collection of PolyCurves to be queried for containment. ","This is a IEnumerable<PolyCurve>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"PolyCurve","isInterface":"0","isGeneric":"0"}],"descriptionParts":["outerPolyCurves ","This is a List<PolyCurve>"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"Plane","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns a plane in which the PolyCurve lies. Null is returned if the curve is not planar. ",""],"inputs":[{"inputName":"polyCurve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["PolyCurve to be queried. ","This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Geometrical tolerance to be applied to planarity check. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["plane ","This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"Plane","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns a plane in which the Polyline lies. Null is returned if the curve is not planar. ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["Polyline to be queried. ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Geometrical tolerance to be applied to planarity check. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["plane ","This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"Plane","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns a plane spanned on a collection of points. Null is returned if the point set is not planar. ",""],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Set of points to be queried. ","This is a IEnumerable<Point>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Plane","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["plane ","This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"FamilyTypeName","assemblyName":"Revit_Engine.dll","descriptionParts":["Gets the name of Revit family type correspondent to given BHoMObject. This value is stored in RevitIdentifiers fragment. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject to be queried. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["familyTypeName ","This is a String"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"FamilyTypeName","assemblyName":"Revit_Engine.dll","descriptionParts":["Gets Revit family type name from family type full name in format FamilyName: FamilyTypeName. ",""],"inputs":[{"inputName":"familyTypeFullName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Family type full name to be queried. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["familyTypeName ","This is a String"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"CategoryNames","assemblyName":"Revit_Engine.dll","descriptionParts":["Gets all Revit category names from FamilyLibrary for given family name and family type name. ",""],"inputs":[{"inputName":"familyLibrary","namespace":"BH.oM.Adapters.Revit","memberName":"FamilyLibrary","isGeneric":"0","descriptionParts":["FamilyLibrary to be queried. ","This is a BH.oM.Adapters.Revit.FamilyLibrary: ","Library of Revit families that can be loaded to the model."],"isRequired":1,"isInterface":0},{"inputName":"familyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Family name to be sought for. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"familyTypeName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Family type name to be sought for. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["categoryNames ","This is a List<String>"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"FamilyName","assemblyName":"Revit_Engine.dll","descriptionParts":["Gets the name of Revit family correspondent to given BHoMObject. This value is stored in  RevitIdentifiers fragment. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["familyName ","This is a String"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"FamilyName","assemblyName":"Revit_Engine.dll","descriptionParts":["Gets Revit family name from family type full name in format FamilyName: FamilyTypeName. ",""],"inputs":[{"inputName":"familyTypeFullName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Family type full name to be queried. ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["familyName ","This is a String"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"FamilyName","assemblyName":"Revit_Engine.dll","descriptionParts":["Gets the name of Revit family represented by RevitFilePreview. ",""],"inputs":[{"inputName":"revitFilePreview","namespace":"BH.oM.Adapters.Revit","memberName":"RevitFilePreview","isGeneric":"0","descriptionParts":["RevitFilePreview to be queried. ","This is a BH.oM.Adapters.Revit.RevitFilePreview: ","Wrapper for Revit family file (.rfa) that stores basic information about it such as family category, familiy type names etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["familyName ","This is a String"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"CategoryName","assemblyName":"Revit_Engine.dll","descriptionParts":["Gets Revit category name from BHoMObject. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject to be queried. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["categoryName ","This is a String"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"CategoryName","assemblyName":"Revit_Engine.dll","descriptionParts":["Gets Revit category name from RevitFilePreview. ",""],"inputs":[{"inputName":"revitFilePreview","namespace":"BH.oM.Adapters.Revit","memberName":"RevitFilePreview","isGeneric":"0","descriptionParts":["RevitFilePreview to be queried. ","This is a BH.oM.Adapters.Revit.RevitFilePreview: ","Wrapper for Revit family file (.rfa) that stores basic information about it such as family category, familiy type names etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["categoryName ","This is a String"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"CategoryName","assemblyName":"Revit_Engine.dll","descriptionParts":["Gets Revit category name from XDocument. ",""],"inputs":[{"inputName":"xDocument","namespace":"System.Xml.Linq","memberName":"XDocument","isGeneric":"0","descriptionParts":["XDocument from header of Revit family file (*.rfa). ","This is a XDocument"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["categoryName ","This is a String"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"ElementId","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns integer representation of ElementId of Revit element correspondent to given BHoMObject. This value is stored in RevitIdentifiers fragment. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject to be queried. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["elementId ","This is a Int32"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"Discipline","assemblyName":"Revit_Engine.dll","descriptionParts":["Gets the discipline to which a given BHoM type belongs. The result is based on the namespace in which the type is declared, e.g. BH.oM.Structure.Elements.Bar will return oM.Adapters.Revit.Enums.Discipline.Structural. ",""],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["BHoM type to be queried. ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Discipline","namespace":"BH.oM.Adapters.Revit.Enums","isGeneric":"0","descriptionParts":["discipline ","This is a BH.oM.Adapters.Revit.Enums.Discipline: ","Enumerator allowing choosing to which discipline (and corresponding namespace) should Revit elements be converted on pull. ","Enum values: ","-Undefined: Default discipline to be used. ","-Environmental: Elements to be converted to types from BH.oM.Environment. If no suitable conversion exists, default discipline to be used. ","-Structural: Elements to be converted to types from BH.oM.Structure. If no suitable conversion exists, default discipline to be used. ","-Architecture: Elements to be converted to types from BH.oM.Architecture. If no suitable conversion exists, default discipline to be used. ","-Physical: Elements to be converted to types from BH.oM.Physical. If no suitable conversion exists, default discipline to be used."]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"Discipline","assemblyName":"Revit_Engine.dll","descriptionParts":["Gets discipline enforced by the Request. If the result is different than defaultDiscipline and neither of two is Undefined, null is returned (the result discipline is conflicting with defaultDiscipline). ",""],"inputs":[{"inputName":"request","namespace":"BH.oM.Data.Requests","memberName":"IRequest","isGeneric":"0","descriptionParts":["BHoM Request to be queried. ","This is a BH.oM.Data.Requests.IRequest ","This can be of the following types: BatchRequest, CustomRequest, FilterRequest, LogicalAndRequest, LogicalNotRequest, LogicalOrRequest, SelectionRequest, PierAndSpandrelForceRequest, RemoveRequest, FileContentRequest, DirectoryRequest, FileRequest, FileDirRequest, GetRequest, CollectionNames, and more..."],"isRequired":1,"isInterface":1},{"inputName":"defaultDiscipline","namespace":"System","memberName":"Nullable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.Revit.Enums","memberName":"Discipline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Default discipline set in adapter's ActionConfig (RevitPullConfig). ","This is a Nullable<Discipline>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Nullable","namespace":"System","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.Revit.Enums","memberName":"Discipline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["discipline ","This is a Nullable<Discipline>"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"Paths","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns all file paths in FamilyLibrary that meet given Revit category, family and family type requirements. ",""],"inputs":[{"inputName":"familyLibrary","namespace":"BH.oM.Adapters.Revit","memberName":"FamilyLibrary","isGeneric":"0","descriptionParts":["FamilyLibrary to be queried. ","This is a BH.oM.Adapters.Revit.FamilyLibrary: ","Library of Revit families that can be loaded to the model."],"isRequired":1,"isInterface":0},{"inputName":"categoryName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit category to be sought for. Optional: if null, all items to be taken. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"familyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit family to be sought for. Optional: if null, all items to be taken. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"typeName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit family type to be sought for. Optional: if null, all items to be taken. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["paths ","This is a List<String>"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"OmniClass","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns OmniClass assigned to Revit family represented by RevitFilePreview. ",""],"inputs":[{"inputName":"revitFilePreview","namespace":"BH.oM.Adapters.Revit","memberName":"RevitFilePreview","isGeneric":"0","descriptionParts":["RevitFilePreview to be queried. ","This is a BH.oM.Adapters.Revit.RevitFilePreview: ","Wrapper for Revit family file (.rfa) that stores basic information about it such as family category, familiy type names etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["omniClass ","This is a String"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"OmniClass","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns OmniClass assigned to Revit family stored in XDocument. ",""],"inputs":[{"inputName":"xDocument","namespace":"System.Xml.Linq","memberName":"XDocument","isGeneric":"0","descriptionParts":["XDocument from header of Revit family file (*.rfa). ","This is a XDocument"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["omniClass ","This is a String"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"FamilyTypeNames","assemblyName":"Revit_Engine.dll","descriptionParts":["Gets Revit family type names available in FamilyLibrary for given names of Revit category and family. ",""],"inputs":[{"inputName":"familyLibrary","namespace":"BH.oM.Adapters.Revit","memberName":"FamilyLibrary","isGeneric":"0","descriptionParts":["FamilyLibrary to be queried. ","This is a BH.oM.Adapters.Revit.FamilyLibrary: ","Library of Revit families that can be loaded to the model."],"isRequired":1,"isInterface":0},{"inputName":"categoryName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit category to be sought for. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"familyName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of Revit family to be sought for. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["familyTypeNames ","This is a List<String>"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"FamilyTypeNames","assemblyName":"Revit_Engine.dll","descriptionParts":["Gets all Revit family type names owned by Revit family represented by RevitFilePreview. ",""],"inputs":[{"inputName":"revitFilePreview","namespace":"BH.oM.Adapters.Revit","memberName":"RevitFilePreview","isGeneric":"0","descriptionParts":["RevitFilePreview to be queried. ","This is a BH.oM.Adapters.Revit.RevitFilePreview: ","Wrapper for Revit family file (.rfa) that stores basic information about it such as family category, familiy type names etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["familyTypeNames ","This is a List<String>"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"FamilyTypeNames","assemblyName":"Revit_Engine.dll","descriptionParts":["Gets all Revit family type names in XDocument. ",""],"inputs":[{"inputName":"xDocument","namespace":"System.Xml.Linq","memberName":"XDocument","isGeneric":"0","descriptionParts":["XDocument from header of Revit family file (*.rfa). ","This is a XDocument"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["familyTypeNames ","This is a List<String>"]}},{"namespace":"BH.Engine.Adapters.Revit","className":"Query","memberName":"UniqueId","assemblyName":"Revit_Engine.dll","descriptionParts":["Returns UniqueId of Revit element correspondent to given BHoMObject. This value is stored in RevitIdentifiers fragment. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject to be queried. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["uniqueId ","This is a String"]}},{"namespace":"BH.Engine.Adapters.RFEM","className":"Query","memberName":"GetMaterialType","assemblyName":"RFEM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rfMaterial","namespace":"Dlubal.RFEM5","memberName":"Material","isGeneric":"0","descriptionParts":["This is a Material"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialType","namespace":"BH.oM.Structure.MaterialFragments","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.MaterialFragments.MaterialType ","Enum values: ","-Aluminium ","-Steel ","-Concrete ","-Timber ","-Rebar ","-Tendon ","-Glass ","-Cable ","-Undefined"]}},{"namespace":"BH.Engine.Adapters.RFEM","className":"Query","memberName":"GetMaterialType","assemblyName":"RFEM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"IMaterialFragment","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.MaterialFragments.IMaterialFragment: ","Base interface for structural materials used by structural properties or as a fragment of the physical material. ","This can be of the following types: Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.RFEM","className":"Query","memberName":"GetMaterialName","assemblyName":"RFEM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rfMaterial","namespace":"Dlubal.RFEM5","memberName":"Material","isGeneric":"0","descriptionParts":["This is a Material"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.RFEM","className":"Query","memberName":"GetSectionProfile","assemblyName":"RFEM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"profileName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"sectionDBProps","namespace":"Dlubal.RFEM3","memberName":"DB_CRSC_PROPERTY[]","isGeneric":"0","descriptionParts":["This is a DB_CRSC_PROPERTY[]"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."]}},{"namespace":"BH.Engine.Adapters.RFEM","className":"Query","memberName":"GetSectionType","assemblyName":"RFEM_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rfSectionProperty","namespace":"Dlubal.RFEM5","memberName":"CrossSection","isGeneric":"0","descriptionParts":["This is a CrossSection"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Type","namespace":"System","isGeneric":"0","descriptionParts":["This is a Type"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"IFromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"Rhino.Geometry","memberName":"GeometryBase","isGeneric":"0","descriptionParts":["This is a GeometryBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"IFromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"Rhino","memberName":"IEpsilonComparable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Rhinoceros","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEpsilonComparable<T> ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"IFromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rhinoPoint","namespace":"Rhino.Geometry","memberName":"Point3d","isGeneric":"0","descriptionParts":["This is a Point3d"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rhinoPoint","namespace":"Rhino.Geometry","memberName":"Point3f","isGeneric":"0","descriptionParts":["This is a Point3f"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rhinoPoint","namespace":"Rhino.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a Point"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rhinoPoint","namespace":"Rhino.Geometry","memberName":"ControlPoint","isGeneric":"0","descriptionParts":["This is a ControlPoint"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vertex","namespace":"Rhino.Geometry","memberName":"BrepVertex","isGeneric":"0","descriptionParts":["This is a BrepVertex"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"Rhino.Geometry","memberName":"Vector3d","isGeneric":"0","descriptionParts":["This is a Vector3d"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"Rhino.Geometry","memberName":"Vector3f","isGeneric":"0","descriptionParts":["This is a Vector3f"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"Rhino.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a Plane"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Cartesian","namespace":"BH.oM.Geometry.CoordinateSystem","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"quaternion","namespace":"Rhino.Geometry","memberName":"Quaternion","isGeneric":"0","descriptionParts":["This is a Quaternion"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Quaternion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Quaternion: ","A four-dimensional vector, useful in calculation of affine transformations in three-dimensional space. See also BH.oM.Geometry.TransformMatrix."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rhTrans","namespace":"Rhino.Geometry","memberName":"Transform","isGeneric":"0","descriptionParts":["This is a Transform"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TransformMatrix","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"Rhino.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a Arc"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arcCurve","namespace":"Rhino.Geometry","memberName":"ArcCurve","isGeneric":"0","descriptionParts":["This is a ArcCurve"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"Rhino.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a Circle"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Circle","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ellipse","namespace":"Rhino.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a Ellipse"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Ellipse","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"Rhino.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a Line"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"Rhino.Geometry","memberName":"LineCurve","isGeneric":"0","descriptionParts":["This is a LineCurve"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rCurve","namespace":"Rhino.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a NurbsCurve"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rCurve","namespace":"Rhino.Geometry","memberName":"Curve","isGeneric":"0","descriptionParts":["This is a Curve"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"polyCurve","namespace":"Rhino.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a PolyCurve"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"polyline","namespace":"Rhino.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a Polyline"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"polyline","namespace":"Rhino.Geometry","memberName":"PolylineCurve","isGeneric":"0","descriptionParts":["This is a PolylineCurve"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"boundingBox","namespace":"Rhino.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BoundingBox"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"box","namespace":"Rhino.Geometry","memberName":"Box","isGeneric":"0","descriptionParts":["This is a Box"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"Rhino.Geometry","memberName":"Surface","isGeneric":"0","descriptionParts":["This is a Surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"Rhino.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a NurbsSurface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"brep","namespace":"Rhino.Geometry","memberName":"Brep","isGeneric":"0","descriptionParts":["This is a Brep"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"face","namespace":"Rhino.Geometry","memberName":"BrepFace","isGeneric":"0","descriptionParts":["This is a BrepFace"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ISurface","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"extrusion","namespace":"Rhino.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a Extrusion"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Extrusion","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rMesh","namespace":"Rhino.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a Mesh"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rFace","namespace":"Rhino.Geometry","memberName":"MeshFace","isGeneric":"0","descriptionParts":["This is a MeshFace"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Face","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Face: ","A triangular or quadrilateral shape forming the basis of a polygon Mesh. Defined by corner vertices referencing indices of a Point list. See BH.oM.Geometry.Mesh object for usage.","A value of -1 for the fourth vertex D indicates the Face is triangular."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"sphere","namespace":"Rhino.Geometry","memberName":"Sphere","isGeneric":"0","descriptionParts":["This is a Sphere"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Sphere","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Sphere: ","Standard sphere defining the closed bounding surface of constant distance from a point, its Centre"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"torus","namespace":"Rhino.Geometry","memberName":"Torus","isGeneric":"0","descriptionParts":["This is a Torus"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Torus","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Torus: ","A standard solid circular ring torus, formed as a surface of revolution of a circle about an axis."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"cone","namespace":"Rhino.Geometry","memberName":"Cone","isGeneric":"0","descriptionParts":["This is a Cone"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Cone","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Cone: ","A solid circular right angled cone"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"cylinder","namespace":"Rhino.Geometry","memberName":"Cylinder","isGeneric":"0","descriptionParts":["This is a Cylinder"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Cylinder","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Cylinder: ","A solid circular right angled cylinder."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometries","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"Rhino.Geometry","memberName":"GeometryBase","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<GeometryBase>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CompositeGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"loop","namespace":"Rhino.Geometry","memberName":"BrepLoop","isGeneric":"0","descriptionParts":["This is a BrepLoop"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SurfaceTrim","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.SurfaceTrim: ","A pair of curves representing the boundary of a trimmed surface in both global X, Y, Z coordinates (Curve3d) as well as local surface U, V parameter space (Curve2d).","A Surface Trim is immutable to ensure compatiblity of both curves."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"FromRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"IToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometry","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"IToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Curve","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Curve"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"IToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"GeometryBase","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a GeometryBase"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point3d","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Point3d"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"vector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector3d","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Vector3d"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Plane"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"coordinateSystem","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Plane","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Plane"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"quartenion","namespace":"BH.oM.Geometry","memberName":"Quaternion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Quaternion: ","A four-dimensional vector, useful in calculation of affine transformations in three-dimensional space. See also BH.oM.Geometry.TransformMatrix."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Quaternion","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Quaternion"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhTrans","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Transform","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Transform"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Arc"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Circle","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Circle"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ellipse","namespace":"BH.oM.Geometry","memberName":"Ellipse","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Ellipse: ","A plane curve. A standard ellipse defining a curve of constant combined distance around two foci.","The larger of the two radii defines the major axis of the Ellipse, and the line along which the two foci lie."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Ellipse","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Ellipse"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Line"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bCurve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a NurbsCurve"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bPolyCurve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a PolyCurve"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolylineCurve","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a PolylineCurve"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"boundingBox","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BoundingBox","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a BoundingBox"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"loft","namespace":"BH.oM.Geometry","memberName":"Loft","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Surface","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Surface"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pipe","namespace":"BH.oM.Geometry","memberName":"Pipe","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Brep","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Brep"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"planarSurface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Brep","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Brep"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"GeometryBase","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a GeometryBase"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"polySurface","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Brep","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Brep"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"boundaryRepresentation","namespace":"BH.oM.Geometry","memberName":"BoundaryRepresentation","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundaryRepresentation: ","Solid representation defined by a collection of connected surfaces forming a closed volume"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Brep","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Brep"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surfaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ISurface","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ISurface> ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Brep","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Brep"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"extrusion","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Extrusion","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Extrusion"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Mesh"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"rFace","namespace":"BH.oM.Geometry","memberName":"Face","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Face: ","A triangular or quadrilateral shape forming the basis of a polygon Mesh. Defined by corner vertices referencing indices of a Point list. See BH.oM.Geometry.Mesh object for usage.","A value of -1 for the fourth vertex D indicates the Face is triangular."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MeshFace","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a MeshFace"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Graphics","memberName":"RenderMesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMesh"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Mesh"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"mesh3d","namespace":"BH.oM.Geometry","memberName":"Mesh3D","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh3D: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces, Cells and their Vertices."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Mesh"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"cellrelation","namespace":"BH.oM.Geometry","memberName":"CellRelation","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CellRelation: ","Details the index of the cells which is behind and infront of each Face."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"GeometryBase","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a GeometryBase"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"sphere","namespace":"BH.oM.Geometry","memberName":"Sphere","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Sphere: ","Standard sphere defining the closed bounding surface of constant distance from a point, its Centre"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Sphere","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Sphere"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"torus","namespace":"BH.oM.Geometry","memberName":"Torus","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Torus: ","A standard solid circular ring torus, formed as a surface of revolution of a circle about an axis."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Torus","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Torus"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"cylinder","namespace":"BH.oM.Geometry","memberName":"Cylinder","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Cylinder: ","A solid circular right angled cylinder."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Cylinder","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Cylinder"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"cone","namespace":"BH.oM.Geometry","memberName":"Cone","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Cone: ","A solid circular right angled cone"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Cone","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Cone"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"cuboid","namespace":"BH.oM.Geometry","memberName":"Cuboid","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Cuboid: ","A polyhedron. Standard cuboid consisting of six right-angled quadrilateral faces."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Box","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Box"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geometries","namespace":"BH.oM.Geometry","memberName":"CompositeGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Object>"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino6","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bCurve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a NurbsCurve"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Convert","memberName":"ToRhino5","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bCurve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a NurbsCurve"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomArc","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Arc"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomArc","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Arc","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Arc"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomArcCurve","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ArcCurve","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a ArcCurve"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomArcCurve","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ArcCurve","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a ArcCurve"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomCircle","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Circle","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Circle"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomCircle","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Circle","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Circle"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomControlPoint","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ControlPoint","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a ControlPoint"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomControlPoint","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ControlPoint","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a ControlPoint"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomLineCurve","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LineCurve","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a LineCurve"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomLineCurve","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LineCurve","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a LineCurve"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomCurves","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"Rhino.Geometry","memberName":"Curve","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Curve>"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomCurves","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"Rhino.Geometry","memberName":"Curve","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Curve>"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomLine","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Line"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomLine","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Line"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomNurbsCurve","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a NurbsCurve"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomNurbsCurve","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"NurbsCurve","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a NurbsCurve"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomPoint3d","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point3d","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Point3d"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomPoint3d","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point3d","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Point3d"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomPoint3dList","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"Rhino.Geometry","memberName":"Point3d","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point3d>"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomPoint3dList","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"Rhino.Geometry","memberName":"Point3d","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Point3d>"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomPoint3f","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point3f","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Point3f"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomPoint3f","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point3f","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Point3f"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomPolyCurve","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a PolyCurve"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomPolyCurve","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a PolyCurve"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomPolylineCurve","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolylineCurve","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a PolylineCurve"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomPolylineCurve","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PolylineCurve","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a PolylineCurve"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomPolyline","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Polyline"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomPolyline","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Polyline"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomVector3d","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector3d","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Vector3d"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomVector3d","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector3d","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Vector3d"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomVector3f","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector3f","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Vector3f"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Create","memberName":"RandomVector3f","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector3f","namespace":"Rhino.Geometry","isGeneric":"0","descriptionParts":["This is a Vector3f"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Compute","memberName":"RandomGeometry","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"seed","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Compute","memberName":"RandomGeometry","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Compute","memberName":"RandomGeometry","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"random","namespace":"System","memberName":"Random","isGeneric":"0","descriptionParts":["This is a Random"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"DocumentTolerance","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsEqual","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhPlane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":1,"isInterface":0},{"inputName":"rhPlane","namespace":"Rhino.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a Plane"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsEqual","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhCoordinates","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0},{"inputName":"rhPlane","namespace":"Rhino.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["This is a Plane"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsEqual","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhPoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"rhPoint","namespace":"Rhino.Geometry","memberName":"Point3d","isGeneric":"0","descriptionParts":["This is a Point3d"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsEqual","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhPoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"rhPoint","namespace":"Rhino.Geometry","memberName":"Point3f","isGeneric":"0","descriptionParts":["This is a Point3f"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsEqual","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhPoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"rhPoint","namespace":"Rhino.Geometry","memberName":"ControlPoint","isGeneric":"0","descriptionParts":["This is a ControlPoint"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsEqual","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rhVector","namespace":"Rhino.Geometry","memberName":"Vector3d","isGeneric":"0","descriptionParts":["This is a Vector3d"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsEqual","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"rhVector","namespace":"Rhino.Geometry","memberName":"Vector3f","isGeneric":"0","descriptionParts":["This is a Vector3f"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsEqual","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhArc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"rhArc","namespace":"Rhino.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a Arc"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsEqual","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhArc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"rhArc","namespace":"Rhino.Geometry","memberName":"ArcCurve","isGeneric":"0","descriptionParts":["This is a ArcCurve"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsEqual","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhCircle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"rhCircle","namespace":"Rhino.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a Circle"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsEqual","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhLine","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"rhLine","namespace":"Rhino.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a Line"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsEqual","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhLine","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"rhLine","namespace":"Rhino.Geometry","memberName":"LineCurve","isGeneric":"0","descriptionParts":["This is a LineCurve"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsEqual","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhCurve","namespace":"BH.oM.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsCurve: ","A non-uniform rational basis spline (or B-spline). Enables definition of smooth and continuous curves as piece-wise polynomial basis functions evaluated from discrete geometrical ControlPoints.","A NurbsCurve, through its use of ControlPoint Weightings, has the ability to precisely represent the conic sections, such as the circle and parabolas etc."],"isRequired":1,"isInterface":0},{"inputName":"rhCurve","namespace":"Rhino.Geometry","memberName":"NurbsCurve","isGeneric":"0","descriptionParts":["This is a NurbsCurve"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsEqual","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhCurve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"rhCurve","namespace":"Rhino.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a PolyCurve"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsEqual","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhPolyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"rhPolyline","namespace":"Rhino.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a Polyline"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsEqual","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhPolyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"rhPolylineCurve","namespace":"Rhino.Geometry","memberName":"PolylineCurve","isGeneric":"0","descriptionParts":["This is a PolylineCurve"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IIsEqual","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bhCurve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"rhCurve","namespace":"Rhino.Geometry","memberName":"Curve","isGeneric":"0","descriptionParts":["This is a Curve"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsPlanarSurface","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"brep","namespace":"Rhino.Geometry","memberName":"Brep","isGeneric":"0","descriptionParts":["This is a Brep"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Rhinoceros","className":"Query","memberName":"IsRhinoEquivalent","assemblyName":"Rhinoceros_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.Robot","className":"Create","memberName":"ContourLoad","assemblyName":"Robot_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"contour","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"loadVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadAxis ","Enum values: ","-Global ","-Local"],"isRequired":0,"isInterface":0},{"inputName":"projected","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ContourLoad","namespace":"BH.oM.Adapters.Robot","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Robot.ContourLoad"]}},{"namespace":"BH.Engine.Adapters.Robot","className":"Create","memberName":"DesignGroup","assemblyName":"Robot_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"number","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"materialName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"elementIds","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Int32>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"DesignGroup","namespace":"BH.oM.Adapters.Robot","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Robot.DesignGroup"]}},{"namespace":"BH.Engine.Adapters.Robot","className":"Create","memberName":"GeometricalLineLoad","assemblyName":"Robot_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase."],"isRequired":1,"isInterface":0},{"inputName":"forceAtStart","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"forceAtEnd","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"momentAtStart","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"momentAtEnd","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GeometricalLineLoad","namespace":"BH.oM.Adapters.Robot","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Robot.GeometricalLineLoad"]}},{"namespace":"BH.Engine.Adapters.Robot","className":"Create","memberName":"GeometricalLineLoad","assemblyName":"Robot_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase."],"isRequired":1,"isInterface":0},{"inputName":"force","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GeometricalLineLoad","namespace":"BH.oM.Adapters.Robot","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Robot.GeometricalLineLoad"]}},{"namespace":"BH.Engine.Adapters.Robot","className":"Create","memberName":"DatabaseSettings","assemblyName":"Robot_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"materialDB","namespace":"BH.oM.Adapters.Robot","memberName":"MaterialDB","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Robot.MaterialDB ","Enum values: ","-American ","-British ","-Eurocode"],"isRequired":0,"isInterface":0},{"inputName":"sectionDB","namespace":"BH.oM.Adapters.Robot","memberName":"SectionDB","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Robot.SectionDB ","Enum values: ","-UKST ","-AISC"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"DatabaseSettings","namespace":"BH.oM.Adapters.Robot","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Robot.DatabaseSettings"]}},{"namespace":"BH.Engine.Adapters.Robot","className":"Create","memberName":"DatabaseSettings","assemblyName":"Robot_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"materialDB","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"sectionDB","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"DatabaseSettings","namespace":"BH.oM.Adapters.Robot","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Robot.DatabaseSettings"]}},{"namespace":"BH.Engine.Adapters.Robot","className":"Create","memberName":"FramingElementDesignProperties","assemblyName":"Robot_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FramingElementDesignProperties","namespace":"BH.oM.Adapters.Robot","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Robot.FramingElementDesignProperties"]}},{"namespace":"BH.Engine.Adapters.Robot","className":"Create","memberName":"FramingElementDesignProperties","assemblyName":"Robot_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"eulerBucklingLengthCoeffY","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"eulerBucklingLengthCoeffZ","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"FramingElementDesignProperties","namespace":"BH.oM.Adapters.Robot","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Robot.FramingElementDesignProperties"]}},{"namespace":"BH.Engine.Adapters.Robot","className":"Compute","memberName":"UpgradeVersion","assemblyName":"Robot_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"loads","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.Robot","memberName":"ContourLoad","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<ContourLoad>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Loads","memberName":"ContourLoad","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<ContourLoad>"]}},{"namespace":"BH.Engine.Adapters.Robot","className":"Compute","memberName":"UpgradeVersion","assemblyName":"Robot_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"load","namespace":"BH.oM.Adapters.Robot","memberName":"ContourLoad","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Robot.ContourLoad"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ContourLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.ContourLoad: ","Load to be applied over a region defined by a closed planar Polyline."]}},{"namespace":"BH.Engine.Adapters.Robot","className":"Compute","memberName":"UpgradeVersion","assemblyName":"Robot_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"loads","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.Robot","memberName":"GeometricalLineLoad","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<GeometricalLineLoad>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Loads","memberName":"GeometricalLineLoad","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<GeometricalLineLoad>"]}},{"namespace":"BH.Engine.Adapters.Robot","className":"Compute","memberName":"UpgradeVersion","assemblyName":"Robot_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"load","namespace":"BH.oM.Adapters.Robot","memberName":"GeometricalLineLoad","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Robot.GeometricalLineLoad"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"GeometricalLineLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.GeometricalLineLoad: ","Distributed load to be applied over a line."]}},{"namespace":"BH.Engine.Adapters.Robot","className":"Query","memberName":"GetStringFromEnum","assemblyName":"Robot_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"designCode","namespace":"BH.oM.Adapters.Robot","memberName":"DesignCode_Steel","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Robot.DesignCode_Steel ","Enum values: ","-Default ","-BS5950 ","-BS5950_2000 ","-BS_EN_1993_1_2005_NA_2008_A1_2014 ","-ANSI_AISC_360_10"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Robot","className":"Query","memberName":"GetStringFromEnum","assemblyName":"Robot_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"materialDB","namespace":"BH.oM.Adapters.Robot","memberName":"MaterialDB","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Robot.MaterialDB ","Enum values: ","-American ","-British ","-Eurocode"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Robot","className":"Query","memberName":"GetStringFromEnum","assemblyName":"Robot_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"sectionDB","namespace":"BH.oM.Adapters.Robot","memberName":"SectionDB","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.Robot.SectionDB ","Enum values: ","-UKST ","-AISC"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.Robot","className":"Query","memberName":"ToDictionaryDistinctCheck","assemblyName":"Robot_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"list","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Adapters.Robot","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"selector","namespace":"System","memberName":"Func","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Adapters.Robot","memberName":"T","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Func<T, String>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"BH.Engine.Adapters.Robot","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a Dictionary<String, T>"]}},{"namespace":"BH.Engine.Adapters.SAP2000","className":"Query","memberName":"SplitRigidLink","assemblyName":"SAP2000_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"link","namespace":"BH.oM.Structure.Elements","memberName":"RigidLink","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.RigidLink: ","A rigid link object defining rigid constraints between two or more nodes."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"RigidLink","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<RigidLink>"]}},{"namespace":"BH.Engine.Adapters.SAP2000","className":"Query","memberName":"JoinRigidLink","assemblyName":"SAP2000_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"linkList","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"RigidLink","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<RigidLink>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"RigidLink","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<RigidLink>"]}},{"namespace":"BH.Engine.MEP","className":"Query","memberName":"Geometry","assemblyName":"Security_Engine.dll","descriptionParts":["Gets the camera's geometry as a closed ICurve cone-shape. Method required for automatic display in UI packages. ",""],"inputs":[{"inputName":"cameraDevice","namespace":"BH.oM.Security.Elements","memberName":"CameraDevice","isGeneric":"0","descriptionParts":["Camera to get the ICurve from. ","This is a BH.oM.Security.Elements.CameraDevice: ","A camera object is a electronic security device typically used in closed-circuit television (CCTV) systems."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The geometry of the Camera. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Security","className":"Query","memberName":"Centreline","assemblyName":"Security_Engine.dll","descriptionParts":["Returns the centreline of a CameraDevice object. ",""],"inputs":[{"inputName":"cameraDevice","namespace":"BH.oM.Security.Elements","memberName":"CameraDevice","isGeneric":"0","descriptionParts":["The CameraDevice object to get the centreline from. ","This is a BH.oM.Security.Elements.CameraDevice: ","A camera object is a electronic security device typically used in closed-circuit television (CCTV) systems."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The centreline of the CameraDevice object. ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Serialiser","className":"Compute","memberName":"WriteToStream","assemblyName":"Serialiser_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Serialiser","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<T>"],"isRequired":1,"isInterface":0},{"inputName":"stream","namespace":"System.IO","memberName":"Stream","isGeneric":"0","descriptionParts":["This is a Stream"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Serialiser","className":"Compute","memberName":"ReadFromStream","assemblyName":"Serialiser_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"stream","namespace":"System.IO","memberName":"Stream","isGeneric":"0","descriptionParts":["This is a Stream"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Serialiser","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<T>"]}},{"namespace":"BH.Engine.Serialiser","className":"Compute","memberName":"RegisterClassMap","assemblyName":"Serialiser_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Serialiser","className":"Compute","memberName":"AllowUpgradeFromBson","assemblyName":"Serialiser_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"allow","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Serialiser","className":"Convert","memberName":"ToBson","assemblyName":"Serialiser_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BsonDocument","namespace":"MongoDB.Bson","isGeneric":"0","descriptionParts":["This is a BsonDocument"]}},{"namespace":"BH.Engine.Serialiser","className":"Convert","memberName":"FromBson","assemblyName":"Serialiser_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bson","namespace":"MongoDB.Bson","memberName":"BsonDocument","isGeneric":"0","descriptionParts":["This is a BsonDocument"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["This is a Object"]}},{"namespace":"BH.Engine.Serialiser","className":"Convert","memberName":"ToEncrypted","assemblyName":"Serialiser_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"plainText","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"passPhrase","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Serialiser","className":"Convert","memberName":"FromEncrypted","assemblyName":"Serialiser_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"cipherText","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"passPhrase","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Serialiser","className":"Convert","memberName":"ToBytes","assemblyName":"Serialiser_Engine.dll","descriptionParts":["Convert a BHoM object To a byte array ",""],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["Object to be converted ","This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Byte[]","namespace":"System","isGeneric":"0","descriptionParts":["Byte array representing the object in Bson ","This is a Byte[]"]}},{"namespace":"BH.Engine.Serialiser","className":"Convert","memberName":"FromBytes","assemblyName":"Serialiser_Engine.dll","descriptionParts":["Convert a byte array to a BHoMObject ",""],"inputs":[{"inputName":"bytes","namespace":"System","memberName":"Byte[]","isGeneric":"0","descriptionParts":["Byte array representing the object in Bson ","This is a Byte[]"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["Object recovered from the byte array ","This is a Object"]}},{"namespace":"BH.Engine.Serialiser","className":"Convert","memberName":"ToZip","assemblyName":"Serialiser_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"text","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Serialiser","className":"Convert","memberName":"FromZip","assemblyName":"Serialiser_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"compressedText","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Serialiser","className":"Convert","memberName":"ToJson","assemblyName":"Serialiser_Engine.dll","descriptionParts":["Convert a BHoM object To a Json string ",""],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["Object to be converted ","This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["String representing the object in json ","This is a String"]}},{"namespace":"BH.Engine.Serialiser","className":"Convert","memberName":"FromJson","assemblyName":"Serialiser_Engine.dll","descriptionParts":["Convert a Json string to a BHoMObject ",""],"inputs":[{"inputName":"json","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["String representing the object in json ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Object","namespace":"System","isGeneric":"0","descriptionParts":["Object recovered from the Json string ","This is a Object"]}},{"namespace":"BH.Engine.Serialiser","className":"Modify","memberName":"ApplyTaggedName","assemblyName":"Serialiser_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"BH.Engine.Serialiser","memberName":"T","isGeneric":"0","descriptionParts":["This is a BH.Engine.Serialiser.T"],"isRequired":1,"isInterface":0},{"inputName":"str","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Void","namespace":"System","isGeneric":"0","descriptionParts":["This is a Void"]}},{"namespace":"BH.Engine.Serialiser","className":"Query","memberName":"TaggedName","assemblyName":"Serialiser_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Spatial","className":"Compute","memberName":"DistributeOutlines","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"outlines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}]}],"descriptionParts":["This is a List<List<IElement1D>> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":0},{"inputName":"canCutOpenings","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}]}]}],"descriptionParts":["This is a List<List<List<IElement1D>>> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Spatial","className":"Compute","memberName":"InterpolateProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"startProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"AngleProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.AngleProfile: ","L-shaped profile."],"isRequired":1,"isInterface":0},{"inputName":"endProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"AngleProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.AngleProfile: ","L-shaped profile."],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"interpolationOrder","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"domainStart","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"domainEnd","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"AngleProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.AngleProfile: ","L-shaped profile."]}},{"namespace":"BH.Engine.Spatial","className":"Compute","memberName":"InterpolateProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"startProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"BoxProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.BoxProfile: ","Rectangular hollow profile with constant thickness and optional corner radii."],"isRequired":1,"isInterface":0},{"inputName":"endProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"BoxProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.BoxProfile: ","Rectangular hollow profile with constant thickness and optional corner radii."],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"interpolationOrder","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"domainStart","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"domainEnd","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BoxProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.BoxProfile: ","Rectangular hollow profile with constant thickness and optional corner radii."]}},{"namespace":"BH.Engine.Spatial","className":"Compute","memberName":"InterpolateProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"startProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"ChannelProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.ChannelProfile: ","C-shaped profile with parallel flanges of the same length and thickness."],"isRequired":1,"isInterface":0},{"inputName":"endProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"ChannelProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.ChannelProfile: ","C-shaped profile with parallel flanges of the same length and thickness."],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"interpolationOrder","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"domainStart","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"domainEnd","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ChannelProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.ChannelProfile: ","C-shaped profile with parallel flanges of the same length and thickness."]}},{"namespace":"BH.Engine.Spatial","className":"Compute","memberName":"InterpolateProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"startProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"CircleProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.CircleProfile: ","Solid circular profile"],"isRequired":1,"isInterface":0},{"inputName":"endProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"CircleProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.CircleProfile: ","Solid circular profile"],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"interpolationOrder","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"domainStart","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"domainEnd","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"CircleProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.CircleProfile: ","Solid circular profile"]}},{"namespace":"BH.Engine.Spatial","className":"Compute","memberName":"InterpolateProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"startProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"FabricatedBoxProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.FabricatedBoxProfile: ","Rectangular hollow profile that allows for different thicknesses of the webs, top flange and bottom flange."],"isRequired":1,"isInterface":0},{"inputName":"endProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"FabricatedBoxProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.FabricatedBoxProfile: ","Rectangular hollow profile that allows for different thicknesses of the webs, top flange and bottom flange."],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"interpolationOrder","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"domainStart","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"domainEnd","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"FabricatedBoxProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.FabricatedBoxProfile: ","Rectangular hollow profile that allows for different thicknesses of the webs, top flange and bottom flange."]}},{"namespace":"BH.Engine.Spatial","className":"Compute","memberName":"InterpolateProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"startProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"FabricatedISectionProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.FabricatedISectionProfile: ","I-shaped profile with parallel flanges that allows for different thicknesses of the web, top flange and bottom flange as well as different top and bottom flange widths."],"isRequired":1,"isInterface":0},{"inputName":"endProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"FabricatedISectionProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.FabricatedISectionProfile: ","I-shaped profile with parallel flanges that allows for different thicknesses of the web, top flange and bottom flange as well as different top and bottom flange widths."],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"interpolationOrder","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"domainStart","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"domainEnd","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"FabricatedISectionProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.FabricatedISectionProfile: ","I-shaped profile with parallel flanges that allows for different thicknesses of the web, top flange and bottom flange as well as different top and bottom flange widths."]}},{"namespace":"BH.Engine.Spatial","className":"Compute","memberName":"InterpolateProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"startProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"GeneralisedFabricatedBoxProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.GeneralisedFabricatedBoxProfile: ","Rectangular hollow profile that allows for different thicknesses of the webs, top flange and bottom flange as well as defined outstands of the top and bottom flange"],"isRequired":1,"isInterface":0},{"inputName":"endProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"GeneralisedFabricatedBoxProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.GeneralisedFabricatedBoxProfile: ","Rectangular hollow profile that allows for different thicknesses of the webs, top flange and bottom flange as well as defined outstands of the top and bottom flange"],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"interpolationOrder","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"domainStart","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"domainEnd","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GeneralisedFabricatedBoxProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.GeneralisedFabricatedBoxProfile: ","Rectangular hollow profile that allows for different thicknesses of the webs, top flange and bottom flange as well as defined outstands of the top and bottom flange"]}},{"namespace":"BH.Engine.Spatial","className":"Compute","memberName":"InterpolateProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"startProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"GeneralisedTSectionProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.GeneralisedTSectionProfile: ","T-shaped profile that allows for different outsand widths and thicknesses. Outstands with different thicknesses are aligned by their top edge.","The full width of the top flange can be calculated as LeftOutstandWidth + WebThickness + RightOutstandWidth."],"isRequired":1,"isInterface":0},{"inputName":"endProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"GeneralisedTSectionProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.GeneralisedTSectionProfile: ","T-shaped profile that allows for different outsand widths and thicknesses. Outstands with different thicknesses are aligned by their top edge.","The full width of the top flange can be calculated as LeftOutstandWidth + WebThickness + RightOutstandWidth."],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"interpolationOrder","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"domainStart","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"domainEnd","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GeneralisedTSectionProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.GeneralisedTSectionProfile: ","T-shaped profile that allows for different outsand widths and thicknesses. Outstands with different thicknesses are aligned by their top edge.","The full width of the top flange can be calculated as LeftOutstandWidth + WebThickness + RightOutstandWidth."]}},{"namespace":"BH.Engine.Spatial","className":"Compute","memberName":"InterpolateProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"startProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"ISectionProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.ISectionProfile: ","I-shaped profile with parallel flanges with equal thickness."],"isRequired":1,"isInterface":0},{"inputName":"endProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"ISectionProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.ISectionProfile: ","I-shaped profile with parallel flanges with equal thickness."],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"interpolationOrder","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"domainStart","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"domainEnd","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ISectionProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.ISectionProfile: ","I-shaped profile with parallel flanges with equal thickness."]}},{"namespace":"BH.Engine.Spatial","className":"Compute","memberName":"InterpolateProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"startProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"KiteProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.KiteProfile"],"isRequired":1,"isInterface":0},{"inputName":"endProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"KiteProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.KiteProfile"],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"interpolationOrder","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"domainStart","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"domainEnd","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"KiteProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.KiteProfile"]}},{"namespace":"BH.Engine.Spatial","className":"Compute","memberName":"InterpolateProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"startProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"RectangleProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.RectangleProfile: ","Solid rectangular profile."],"isRequired":1,"isInterface":0},{"inputName":"endProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"RectangleProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.RectangleProfile: ","Solid rectangular profile."],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"interpolationOrder","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"domainStart","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"domainEnd","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RectangleProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.RectangleProfile: ","Solid rectangular profile."]}},{"namespace":"BH.Engine.Spatial","className":"Compute","memberName":"InterpolateProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"startProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"TSectionProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.TSectionProfile: ","T-shaped profile with constant flange thickness."],"isRequired":1,"isInterface":0},{"inputName":"endProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"TSectionProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.TSectionProfile: ","T-shaped profile with constant flange thickness."],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"interpolationOrder","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"domainStart","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"domainEnd","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"TSectionProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.TSectionProfile: ","T-shaped profile with constant flange thickness."]}},{"namespace":"BH.Engine.Spatial","className":"Compute","memberName":"InterpolateProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"startProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"TubeProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.TubeProfile: ","Circular hollow profile."],"isRequired":1,"isInterface":0},{"inputName":"endProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"TubeProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.TubeProfile: ","Circular hollow profile."],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"interpolationOrder","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"domainStart","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"domainEnd","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"TubeProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.TubeProfile: ","Circular hollow profile."]}},{"namespace":"BH.Engine.Spatial","className":"Compute","memberName":"InterpolateProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"startProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"ZSectionProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.ZSectionProfile"],"isRequired":1,"isInterface":0},{"inputName":"endProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"ZSectionProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.ZSectionProfile"],"isRequired":1,"isInterface":0},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"interpolationOrder","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"domainStart","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"domainEnd","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ZSectionProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.ZSectionProfile"]}},{"namespace":"BH.Engine.Spatial","className":"Compute","memberName":"IInterpolateProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":["Compute an IProfile by using parabolic interpolation at a given parameter between two IProfile objects of the same type. ",""],"inputs":[{"inputName":"startProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["The IProfile at the start. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1},{"inputName":"endProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["The IProfile at the end. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1},{"inputName":"parameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["A number between 0 and 1 that describes the distance along the line. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"interpolationOrder","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The value of the polynomimal function used the describe the transition between the startProfile and endProfile. ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"domainStart","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"domainEnd","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["The profile evaluated at the parameter given using interpolation between the startProfile and endProfile using a function with the given interpolation order. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."]}},{"namespace":"BH.Engine.Spatial","className":"Compute","memberName":"MapDomain","assemblyName":"Spatial_Engine.dll","descriptionParts":["Linearly maps the domain of the source to the target. ",""],"inputs":[{"inputName":"source","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The domain to be mapped. ","This is a List<Double>"],"isRequired":1,"isInterface":0},{"inputName":"target","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The domain that the source will be mapped to. ","This is a List<Double>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The source domain mapped to the target domain ","This is a List<Double>"]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"DomainTree","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a spatial data tree from the data. Useful for spatial queries in large data sets. ",""],"inputs":[{"inputName":"elements","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Spatial","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The elements to store in the data tree. ","This is a IEnumerable<T>"],"isRequired":1,"isInterface":1},{"inputName":"treeDegree","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Degree of the tree. Determines the number of children each node of the tree can have. ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"leafSize","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Determines the number of siblings a leaf node can have. ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"sampleSize","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of items used to determine how to split the collection. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"DomainTree","namespace":"BH.oM.Data.Collections","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Spatial","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A spatial data tree containing all provided elements in its leaves. ","This is a BH.oM.Data.Collections.DomainTree<BH.Engine.Spatial.T>: ","A data tree which is traversed through DomainBoxes. Each node's DomainBox is assumed to be enclosed by its parent's DomainBox and to enclose its own data. All the tree's data is stored in its leaves."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"ExplicitCurveLayout","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates an explicit curve layout. Curves not in the global XY-plane will get projected to it. ",""],"inputs":[{"inputName":"curves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The explicit shape of curves in the layout. All curves should be planar curves in the global XY plane.","Curves not in the global XY-plane will get projected to it. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ExplicitCurveLayout","namespace":"BH.oM.Spatial.Layouts","isGeneric":"0","descriptionParts":["Created explicit curve layout. ","This is a BH.oM.Spatial.Layouts.ExplicitCurveLayout: ","Layout for freeform control over the curve distribution."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"OffsetCurveLayout","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates an offseet curve layout. ",""],"inputs":[{"inputName":"offset","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset value. Positive value will offset to the inside of the element. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"OffsetCurveLayout","namespace":"BH.oM.Spatial.Layouts","isGeneric":"0","descriptionParts":["Created offset curve layout. ","This is a BH.oM.Spatial.Layouts.OffsetCurveLayout: ","Curve layout created by offsetting an element's outer and inner outlines.","Positive offset value will offset to the inside of the element."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"ExplicitLayout","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates an Explicit layout based on a free-form set of Points. Points not in the global XY-plane will get projected to it. ",""],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Point>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ExplicitLayout","namespace":"BH.oM.Spatial.Layouts","isGeneric":"0","descriptionParts":["Created explicit layout. ","This is a BH.oM.Spatial.Layouts.ExplicitLayout: ","Layout for freeform control over the point distribution"]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"LinearLayout","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a LinearLayout from its core properties. Ensures all vectors are in the global XY-plane. ",""],"inputs":[{"inputName":"numberOfPoints","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Number of points along the axis. ",""],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction of the axis. Vector should lie in the XY-plane, i.e. have a Z-coordinate equal to 0. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space. ",""],"isRequired":0,"isInterface":0},{"inputName":"offset","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset of the linear layout in relation to the reference point, perpendicular to the Direction vector in the XY plane.","A positive value will mean an offset towards the centre of the boundingbox of the host objects. ",""],"isRequired":0,"isInterface":0},{"inputName":"referencePoint","namespace":"BH.oM.Spatial.Layouts","memberName":"ReferencePoint","isGeneric":"0","descriptionParts":["Controls which point on the host element that should be used for the layout. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LinearLayout","namespace":"BH.oM.Spatial.Layouts","isGeneric":"0","descriptionParts":["The created LinearLayout. ","This is a BH.oM.Spatial.Layouts.LinearLayout: ","Linear distribution of points along a vector from one side of the perimeter of the host object to the other."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"MultiLinearLayout","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a MultiLinearLayout from its core properties. Ensures all vectors are in the global XY-plane. ",""],"inputs":[{"inputName":"numberOfPoints","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Number of points along the axis. ",""],"isRequired":1,"isInterface":0},{"inputName":"minimumSpacing","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum spacing between points in layers and between each layer. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction of the axis. Vector should lie in the XY-plane, i.e. have a Z-coordinate equal to 0. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space. ",""],"isRequired":0,"isInterface":0},{"inputName":"offset","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset of the linear layout in relation to the reference point, perpendicular to the Direction vector in the XY plane.","A positive value will mean an offset towards the centre of the boundingbox of the host objects. ",""],"isRequired":0,"isInterface":0},{"inputName":"referencePoint","namespace":"BH.oM.Spatial.Layouts","memberName":"ReferencePoint","isGeneric":"0","descriptionParts":["Controls which point on the host element that should be used for the layout. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"MultiLinearLayout","namespace":"BH.oM.Spatial.Layouts","isGeneric":"0","descriptionParts":["The created LinearLayout. ","This is a BH.oM.Spatial.Layouts.MultiLinearLayout: ","Linear distribution of points along multiple linear parallel axes, defined along a vector from one side of the perimeter of the host object to the other. ","Starts by fitting in as many points as possible in the first layer, then generates a new one and repeats."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"MultiLinearLayout","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a MultiLinearLayout from its core proeprties. Ensures all vectors are in the global XY-plane. ",""],"inputs":[{"inputName":"numberOfPoints","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Number of points along the axis. ",""],"isRequired":1,"isInterface":0},{"inputName":"parallelMinimumSpacing","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum distance between any two points in the layout along the axis layers. ",""],"isRequired":1,"isInterface":0},{"inputName":"perpendicularMinimumSpacing","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum distance between any two layers. ",""],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction of the axis. Vector should lie in the XY-plane, i.e. have a Z-coordinate equal to 0. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space. ",""],"isRequired":0,"isInterface":0},{"inputName":"offset","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset of the linear layout in relation to the reference point, perpendicular to the Direction vector in the XY plane.","A positive value will mean an offset towards the centre of the boundingbox of the host objects. ",""],"isRequired":0,"isInterface":0},{"inputName":"referencePoint","namespace":"BH.oM.Spatial.Layouts","memberName":"ReferencePoint","isGeneric":"0","descriptionParts":["Controls which point on the host element that should be used for the layout. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"MultiLinearLayout","namespace":"BH.oM.Spatial.Layouts","isGeneric":"0","descriptionParts":["The created LinearLayout. ","This is a BH.oM.Spatial.Layouts.MultiLinearLayout: ","Linear distribution of points along multiple linear parallel axes, defined along a vector from one side of the perimeter of the host object to the other. ","Starts by fitting in as many points as possible in the first layer, then generates a new one and repeats."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"AngleProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a L-shaped profile based on input dimensions. Method generates edge curves based on the inputs. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full depth between the extreme fibres of the flange and web. ",""],"isRequired":1,"isInterface":0},{"inputName":"width","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full width between the extreme fibres of the flange and web. ",""],"isRequired":1,"isInterface":0},{"inputName":"webThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"flangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"rootRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Fillet radius between inner face of the flange and inner face of the web. ",""],"isRequired":0,"isInterface":0},{"inputName":"toeRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Fillet radius at the end of the flange and the end of the web. Value need to be smaller or equal than the flange and web thicknesses ",""],"isRequired":0,"isInterface":0},{"inputName":"mirrorAboutLocalZ","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, the section is mirrored about its local z-axis, resulting in a backwards facing L-shape. ",""],"isRequired":0,"isInterface":0},{"inputName":"mirrorAboutLocalY","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, the section is mirrored about its local y-axis, resulting in and upside down L-shape. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"AngleProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["The created AngleProfile. ","This is a BH.oM.Spatial.ShapeProfiles.AngleProfile: ","L-shaped profile."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"BoxProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a rectangular hollow profile based on input dimensions. Method generates edge curves based on the inputs. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full depth between the extreme fibres of the flanges. ",""],"isRequired":1,"isInterface":0},{"inputName":"width","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full width between the extreme fibres of the webs. ",""],"isRequired":1,"isInterface":0},{"inputName":"thickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of both webs and flanges. ",""],"isRequired":1,"isInterface":0},{"inputName":"outerRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Corner radius for all four corners of the outer bounding rectangle. ",""],"isRequired":0,"isInterface":0},{"inputName":"innerRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Corner radius for all four corners of the inner void rectangle. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BoxProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["The created BoxProfile. ","This is a BH.oM.Spatial.ShapeProfiles.BoxProfile: ","Rectangular hollow profile with constant thickness and optional corner radii."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"ChannelProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a C-shaped profile based on input dimensions. Method generates edge curves based on the inputs. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full depth between the extreme fibres of the parallel flanges. ",""],"isRequired":1,"isInterface":0},{"inputName":"flangeWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full width between the extreme fibres of the web to the flange. ",""],"isRequired":1,"isInterface":0},{"inputName":"webThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"flangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"rootRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Fillet radius between inner face of the flanges and the inner face of web. ",""],"isRequired":0,"isInterface":0},{"inputName":"toeRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Fillet radius at the end of the flanges. Value need to be smaller or equal than the flange thickness. ",""],"isRequired":0,"isInterface":0},{"inputName":"mirrorAboutLocalZ","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, the section is mirrored about its local z-axis, resulting in a backwards facing C-shape. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ChannelProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["The created ChannelProfile. ","This is a BH.oM.Spatial.ShapeProfiles.ChannelProfile: ","C-shaped profile with parallel flanges of the same length and thickness."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"CircleProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a circular hollow profile based on input dimensions. Method generates edge curves based on the inputs. ",""],"inputs":[{"inputName":"diameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CircleProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["The created CircleProfile. ","This is a BH.oM.Spatial.ShapeProfiles.CircleProfile: ","Solid circular profile"]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"FabricatedBoxProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a rectangular hollow profile based on input dimensions. Method generates edge curves based on the inputs. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full depth between the extreme fibres of the flanges. ",""],"isRequired":1,"isInterface":0},{"inputName":"width","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full width between the extreme fibres of the webs. ",""],"isRequired":1,"isInterface":0},{"inputName":"webThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"topFlangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"botFlangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"weldSize","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Fillet weld size between inside of webs and flanges. Measured as the distance between intersection of web and flange perpendicular to the edge of the weld. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"FabricatedBoxProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["The created BoxProfile. ","This is a BH.oM.Spatial.ShapeProfiles.FabricatedBoxProfile: ","Rectangular hollow profile that allows for different thicknesses of the webs, top flange and bottom flange."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"FabricatedISectionProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a I-shaped profile based on input dimensions. Method generates edge curves based on the inputs. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full depth between the extreme fibres of the flanges. ",""],"isRequired":1,"isInterface":0},{"inputName":"topFlangeWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full width of the top flange. ",""],"isRequired":1,"isInterface":0},{"inputName":"botFlangeWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full width of the bottom flange. ",""],"isRequired":1,"isInterface":0},{"inputName":"webThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"topFlangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"botFlangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"weldSize","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Fillet weld size between web and flanges. Measured as the distance between intersection of web and flange perpendicular to the edge of the weld. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"FabricatedISectionProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["The created FabricatedISectionProfile. ","This is a BH.oM.Spatial.ShapeProfiles.FabricatedISectionProfile: ","I-shaped profile with parallel flanges that allows for different thicknesses of the web, top flange and bottom flange as well as different top and bottom flange widths."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"FreeFormProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a single FreeFormProfile from a collection of ICurves. ","Checks if it's a valid profile and attempts to fix;  "," - coplanarity with eachother, by projecting onto the plane of the curve with the biggest area. "," - coplanarity with XYPlane, by rotating the curves to align. "," - curves on the XYPlane, by translating from one controlpoint to the origin. ","Checks if it's a valid profile; If they're closed, Not zero area, curve curve intersections, selfintersections.  ",""],"inputs":[{"inputName":"edges","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"centreProfile","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, the total centre of area of the provided curves will be aligned with the global origin. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"FreeFormProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.FreeFormProfile: ","Freeform profile only defined by its geometry without any dimensional data. To be used as a fallback for profiles not yet explicitly defined."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"GeneralisedFabricatedBoxProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a rectangular hollow profile with outstands based on input dimensions. Method generates edge curves based on the inputs. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full depth between the extreme fibres of the flanges. ",""],"isRequired":1,"isInterface":0},{"inputName":"width","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Width between the extreme fibres of the webs, excluding corbel widths. ",""],"isRequired":1,"isInterface":0},{"inputName":"webThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"topFlangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":0,"isInterface":0},{"inputName":"botFlangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":0,"isInterface":0},{"inputName":"topCorbelWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Width of the outstands of each side at the top of the profile. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"botCorbelWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Width of the outstands of each side at the bottom of the profile. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GeneralisedFabricatedBoxProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["The created GeneralisedFabricatedBoxProfile. ","This is a BH.oM.Spatial.ShapeProfiles.GeneralisedFabricatedBoxProfile: ","Rectangular hollow profile that allows for different thicknesses of the webs, top flange and bottom flange as well as defined outstands of the top and bottom flange"]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"GeneralisedTSectionProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a T-shaped profile based on input dimensions. Method generates edge curves based on the inputs. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full depth between the extreme fibre of the outstand and the web. ",""],"isRequired":1,"isInterface":0},{"inputName":"webThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"leftOutstandWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Outstand width on the left side, measured from the outside edge of the web. ",""],"isRequired":1,"isInterface":0},{"inputName":"leftOutstandThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"rightOutstandWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Outstand width on the right side, measured from the outside edge of the web. ",""],"isRequired":1,"isInterface":0},{"inputName":"rightOutstandThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"mirrorAboutLocalY","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, the section is mirrored about its local y-axis, resulting in upside down T-shape. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GeneralisedTSectionProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["The created GeneralisedTSectionProfile. ","This is a BH.oM.Spatial.ShapeProfiles.GeneralisedTSectionProfile: ","T-shaped profile that allows for different outsand widths and thicknesses. Outstands with different thicknesses are aligned by their top edge.","The full width of the top flange can be calculated as LeftOutstandWidth + WebThickness + RightOutstandWidth."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"ISectionProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a I-shaped profile based on input dimensions. Method generates edge curves based on the inputs. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full depth between the extreme fibres of the flanges. ",""],"isRequired":1,"isInterface":0},{"inputName":"width","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full width of both flanges between the extreme fibres of the flanges. ",""],"isRequired":1,"isInterface":0},{"inputName":"webThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"flangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of both flanges. ",""],"isRequired":1,"isInterface":0},{"inputName":"rootRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Fillet radius between inner face of the flanges and faces of the web. ",""],"isRequired":1,"isInterface":0},{"inputName":"toeRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Fillet radius at the end of the flanges. Value need to be smaller or equal than the flange thickness. ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ISectionProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["The created ISectionProfile. ","This is a BH.oM.Spatial.ShapeProfiles.ISectionProfile: ","I-shaped profile with parallel flanges with equal thickness."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"KiteProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"width1","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"angle1","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"thickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"KiteProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.KiteProfile"]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"RectangleProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a rectangular solid profile based on input dimensions. Method generates edge curves based on the inputs. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"width","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"cornerRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Fillet radius of all four corners of the rectangle. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RectangleProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["The created RectangleProfile. ","This is a BH.oM.Spatial.ShapeProfiles.RectangleProfile: ","Solid rectangular profile."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"TaperedProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"positions","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Describes the position of each profile parametrically (i.e. between 0 and 1) along the Bar it is assigned to. The smallest position indicates the start profile and the largest position indicates the end profile. ","This is a List<Double>"],"isRequired":1,"isInterface":0},{"inputName":"profiles","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The ShapeProfile at each of the positions specified. ","This is a List<IProfile> ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":0},{"inputName":"interpolationOrder","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Describes the order of the polynomial function between profiles whereby 1 = Linear, 2 = Quadratic, 3 = Cubic etc. There should be one fewer (n-1) interpolation values than profiles. For nonlinear profiles a concave profile is achieved by setting the larger profile at the smallest position. To achieve a convex profile, the larger profile must be at the largest position. ","This is a List<Int32>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"TaperedProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.TaperedProfile"]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"TaperedProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"startProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1},{"inputName":"endProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1},{"inputName":"interpolationOrder","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Describes the polynomial function between each profile whereby 1 = Linear, 2 = Quadratic, 3 = Cubic etc.For nonlinear profiles a concave profile is achieved by setting the larger profile at the startProfile. To achieve a convex profile, the larger profile must be at the endProfile. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"TaperedProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.TaperedProfile"]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"TSectionProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a T-shaped profile based on input dimensions. Method generates edge curves based on the inputs. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full depth between extreme fibres of the web and flange. ",""],"isRequired":1,"isInterface":0},{"inputName":"width","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full width of the flange. ",""],"isRequired":1,"isInterface":0},{"inputName":"webThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"flangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"rootRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Fillet radius between inner face of flanges and faces of the web. ",""],"isRequired":0,"isInterface":0},{"inputName":"toeRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Fillet radius at the outer edge of the flanges. Value need to be smaller or equal than the flange thickness. ",""],"isRequired":0,"isInterface":0},{"inputName":"mirrorAboutLocalY","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, the section is mirrored about its local y-axis, resulting in upside down T-shape. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"TSectionProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["The created TSectionProfile. ","This is a BH.oM.Spatial.ShapeProfiles.TSectionProfile: ","T-shaped profile with constant flange thickness."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"TubeProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a circular hollow profile based on input dimensions. Method generates edge curves based on the inputs. ",""],"inputs":[{"inputName":"diameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Outer diameter. ",""],"isRequired":1,"isInterface":0},{"inputName":"thickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TubeProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["The created TubeProfile. ","This is a BH.oM.Spatial.ShapeProfiles.TubeProfile: ","Circular hollow profile."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"ZSectionProfile","assemblyName":"Spatial_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"width","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"webthickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"flangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"rootRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"toeRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ZSectionProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.ZSectionProfile"]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"INewElement0D","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a IElement0D of a type which can be assigned to the IElement1D at the location of the point. ",""],"inputs":[{"inputName":"element1D","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["A IElement1D with a IElement0D type defined. The element is only used to identify the type of IElement0D to create, and will remain unchanged by this method. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The point location of which to assign to the new IElement0D. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IElement0D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["A IElement0D which can be assigned to the IElement1D located at the point's location. Returns null if the IElement1D does not have a IElement0D type defined. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"INewElement1D","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a IElement1D of a type which can be assigned to the IElement2D at the location of the curve. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["A IElement2D of which to get the correct IElement1D type of. The element is only used to identify the type of IElement1D to create, and will remain unchanged by this method. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The curve location of which to assign to the new IElement1D. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IElement1D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["A IElement1D which can be assigned to the IElement2D located at the curve's location. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Spatial","className":"Create","memberName":"INewInternalElement2D","assemblyName":"Spatial_Engine.dll","descriptionParts":["Creates a IElement2D of a type which can be assigned to the IElement2D. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["A IElement2D with a internal IElement2D type defined. The element is only used to identify the type of internal IElement2D to create, and will remain unchanged by this method. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IElement2D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["A internal IElement2D which can be assigned to the IElement2D. Returns null if the IElement2D does not have a type of internal IElement2D. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."]}},{"namespace":"BH.Engine.Spatial","className":"Modify","memberName":"MapPositionDomain","assemblyName":"Spatial_Engine.dll","descriptionParts":["Maps the positions of a TaperedProfile to a domain of 0 and 1. ",""],"inputs":[{"inputName":"taperedProfile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"TaperedProfile","isGeneric":"0","descriptionParts":["The TaperedProfile to modify the position domain. ","This is a BH.oM.Spatial.ShapeProfiles.TaperedProfile"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TaperedProfile","namespace":"BH.oM.Spatial.ShapeProfiles","isGeneric":"0","descriptionParts":["TaperedProfile with a position domain of 0 and 1 ","This is a BH.oM.Spatial.ShapeProfiles.TaperedProfile"]}},{"namespace":"BH.Engine.Spatial","className":"Modify","memberName":"RoundCoordinates","assemblyName":"Spatial_Engine.dll","descriptionParts":["Modifies a IElement0D coordinates to be rounded to the number of provided decimal places. ",""],"inputs":[{"inputName":"element0d","namespace":"BH.oM.Dimensional","memberName":"IElement0D","isGeneric":"0","descriptionParts":["The IElement0D to modify. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":1},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IElement0D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["The modified IElement0D. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"]}},{"namespace":"BH.Engine.Spatial","className":"Modify","memberName":"RoundCoordinates","assemblyName":"Spatial_Engine.dll","descriptionParts":["Modifies a IElement1D defining curves to be rounded to the number of provided decimal places. ",""],"inputs":[{"inputName":"element1d","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D to modify. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IElement1D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["The modified IElement1D. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Spatial","className":"Modify","memberName":"RoundCoordinates","assemblyName":"Spatial_Engine.dll","descriptionParts":["Modifies a IElement2D's defining curves to be rounded to the number of provided decimal places. ",""],"inputs":[{"inputName":"element2d","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D to modify. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IElement2D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["The modified IElement2D. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."]}},{"namespace":"BH.Engine.Spatial","className":"Modify","memberName":"IRoundCoordinates","assemblyName":"Spatial_Engine.dll","descriptionParts":["Modifies a IElement's defining curves to be rounded to the number of provided decimal places. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Dimensional","memberName":"IElement","isGeneric":"0","descriptionParts":["The IElement to modify. ","This is a BH.oM.Dimensional.IElement: ","The common base interface for all the Spatial Dimensional Objects.This interface should not be implemented directly, only through its sub-interfaces.Methods operating on IElement assume a specific implementation of one or other of the sub-interfaces (i.e. IElement0D, IElement1D, IElement2D) ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Point, Grid, Ceiling, CeilingTile, Grid, Room, Edge, Opening, and more..."],"isRequired":1,"isInterface":1},{"inputName":"decimalPlaces","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimal places to round to, default 6. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IElement","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["The modified IElement. ","This is a BH.oM.Dimensional.IElement: ","The common base interface for all the Spatial Dimensional Objects.This interface should not be implemented directly, only through its sub-interfaces.Methods operating on IElement assume a specific implementation of one or other of the sub-interfaces (i.e. IElement0D, IElement1D, IElement2D) ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Point, Grid, Ceiling, CeilingTile, Grid, Room, Edge, Opening, and more..."]}},{"namespace":"BH.Engine.Spatial","className":"Modify","memberName":"ISetElements0D","assemblyName":"Spatial_Engine.dll","descriptionParts":["Assigns the provided IElement0Ds to the IElement1D. Points will always default the elements end. The IElement0Ds location is used and may change the IElement1Ds geometry. ",""],"inputs":[{"inputName":"element1D","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D to modify the IElement0D's properties of. This includes their location. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1},{"inputName":"newElements0D","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement0D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The IElement0Ds to assign to the IElement1D. Must be of a type assignable to the IElement1D or a Point which will default the elements end properties. ","This is a List<IElement0D> ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IElement1D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["The modified IElement1D which has unchanged properties and new IElement0Ds. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Spatial","className":"Modify","memberName":"ISetGeometry","assemblyName":"Spatial_Engine.dll","descriptionParts":["Modifies the geometry of a IElement0D to be the provided point's. The IElement0Ds other properties are unaffected. ",""],"inputs":[{"inputName":"element0D","namespace":"BH.oM.Dimensional","memberName":"IElement0D","isGeneric":"0","descriptionParts":["The IElement0D to modify the geometry of. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":1},{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The new point geometry for the IElement0D. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IElement0D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["A IElement0D with the properties of 'element0D' and the location of 'point'. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"]}},{"namespace":"BH.Engine.Spatial","className":"Modify","memberName":"ISetGeometry","assemblyName":"Spatial_Engine.dll","descriptionParts":["Modifies the geometry of a IElement1D to be the provided curve. The IElement1Ds other properties are unaffected. ",""],"inputs":[{"inputName":"element1D","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D to modify the geomerty of. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1},{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The new geometry curve for the IElement1D. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IElement1D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["A IElement1D with the properties of 'element1D' and the location of 'curve'. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Spatial","className":"Modify","memberName":"ISetInternalElements2D","assemblyName":"Spatial_Engine.dll","descriptionParts":["Exchanges the existing internal IElement2Ds for the provided new internal IElement2Ds. The internal IElement2Ds location is used and must align with the host IElement2Ds geometry. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The host IElement2D to exchange the internal IElement2D's of. This includes their location. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1},{"inputName":"newElements2D","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The internal IElement2Ds to set to the host IElement2D. Must be of a type assignable to the host IElement2D. ","This is a List<IElement2D> ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IElement2D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["The modified host IElement2D which has unchanged properties and exchanged internal IElement2Ds. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."]}},{"namespace":"BH.Engine.Spatial","className":"Modify","memberName":"ISetOutlineElements1D","assemblyName":"Spatial_Engine.dll","descriptionParts":["Sets the outline IElement1Ds of the IElement2D. ICurves will default the elements outline properties. This will maintain the IElement2D properties but exchange the outlines IElement1Ds. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D to exchange the outline IElement1D's of. This includes their location. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1},{"inputName":"newOutline","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The outline IElement1Ds to set to the IElement2D. Must be planar and of a type assignable to the IElement2D or ICurve which will default the elements outline properties. ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IElement2D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["The modified IElement2D which has unchanged properties and exchanged outline IElement1Ds. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."]}},{"namespace":"BH.Engine.Spatial","className":"Modify","memberName":"Translate","assemblyName":"Spatial_Engine.dll","descriptionParts":["Translates the IElement2Ds geometrical definition by the transform vector. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D to translate the geometry of. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["The translation vector. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IElement2D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["The modified IElement2D which has unchanged properties and translated geometrical definition. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."]}},{"namespace":"BH.Engine.Spatial","className":"Modify","memberName":"Translate","assemblyName":"Spatial_Engine.dll","descriptionParts":["Translates the IElement1Ds geometrical definition by the transform vector. ",""],"inputs":[{"inputName":"element1D","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D to translate the geometry of. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["The translation vector. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IElement1D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["The modified IElement1D which has unchanged properties and translated geometrical definition. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Spatial","className":"Modify","memberName":"Translate","assemblyName":"Spatial_Engine.dll","descriptionParts":["Translates the IElement0Ds geometrical definition by the transform vector. ",""],"inputs":[{"inputName":"element0D","namespace":"BH.oM.Dimensional","memberName":"IElement0D","isGeneric":"0","descriptionParts":["The IElement0D to translate the geometry of. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":1},{"inputName":"transform","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["The translation vector. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IElement0D","namespace":"BH.oM.Dimensional","isGeneric":"0","descriptionParts":["The modified IElement0D which has unchanged properties and translated geometrical definition. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IHasMergeablePropertiesWith","assemblyName":"Spatial_Engine.dll","descriptionParts":["Evaluates if the two elements non-geometrical data is equal to the point that they could be merged into one object. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Dimensional","memberName":"IElement0D","isGeneric":"0","descriptionParts":["An IElement0D to compare the properties of with an other IElement0D. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":1},{"inputName":"other","namespace":"BH.oM.Dimensional","memberName":"IElement0D","isGeneric":"0","descriptionParts":["The IElement0D to compare with the other IElement0D. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the Objects non-geometrical property is equal to the point that they could be merged into one object. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IHasMergeablePropertiesWith","assemblyName":"Spatial_Engine.dll","descriptionParts":["Evaluates if the two elements non-geometrical data is equal to the point that they could be merged into one object. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["An IElement1D to compare the properties of with an other IElement1D. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1},{"inputName":"other","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D to compare with the other IElement1D. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the Objects non-geometrical property is equal to the point that they could be merged into one object. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IHasMergeablePropertiesWith","assemblyName":"Spatial_Engine.dll","descriptionParts":["Evaluates if the two elements non-geometrical data is equal to the point that they could be merged into one object. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["An IElement2D to compare the properties of with an other IElement2D. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1},{"inputName":"other","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D to compare with the other IElement2D. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the Objects non-geometrical property is equal to the point that they could be merged into one object. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"InternalOutlineCurves","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the IElement2Ds internal IElement2Ds outline curves. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D to get the internal IElement2Ds outlinecurves from. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"PolyCurve","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A list of the IElement2Ds internal elements outline curves. Each internal element returns a single outline curve. ","This is a List<PolyCurve>"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"Area","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the area of the geometrical representation of an IElement0D. Always returns zero due to zero-dimensionality of an IElement0D. ",""],"inputs":[{"inputName":"element0D","namespace":"BH.oM.Dimensional","memberName":"IElement0D","isGeneric":"0","descriptionParts":["The IElement0D to query the area of. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The area of the geometrical representation of an IElement0D. ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"Area","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the area of the geometrical representation of an IElement1D. Always returns zero because an IElement1D has only 1 dimension, i.e. should not be represented as a region even if closed. ",""],"inputs":[{"inputName":"element1D","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D to query the area of. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The area of the geometrical representation of an IElement1D. ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"Area","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the IElement2Ds area defined as the area confined by the outline curves subtracting the area of the internal elements. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D to query the area of. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The area of the region confined by the IElement2Ds outline elements subtracting the area of the internal elements ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"Area","assemblyName":"Spatial_Engine.dll","descriptionParts":["Gets the area of an IProfile. This assumes that the outermost curve(s) are solid. Curves inside a solid region are assumed to be openings, and curves within openings are assumed to be solid, etc. Also, for TaperedProfiles, the average area is returned. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["The IProfile to evaluate. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The net area of the solid regions in the profile ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IArea","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the area of the geometrical representation of an IElement. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Dimensional","memberName":"IElement","isGeneric":"0","descriptionParts":["The IElement to query the area of. ","This is a BH.oM.Dimensional.IElement: ","The common base interface for all the Spatial Dimensional Objects.This interface should not be implemented directly, only through its sub-interfaces.Methods operating on IElement assume a specific implementation of one or other of the sub-interfaces (i.e. IElement0D, IElement1D, IElement2D) ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Point, Grid, Ceiling, CeilingTile, Grid, Room, Edge, Opening, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The area of the geometrical representation of an IElement. ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"Bounds","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the IElement0Ds BoundingBox. Acts on the Point definition of the IElement0D through the Geometry_Engine. ",""],"inputs":[{"inputName":"element0D","namespace":"BH.oM.Dimensional","memberName":"IElement0D","isGeneric":"0","descriptionParts":["The IElement0D with the geometry to get the BoundingBox of. i.e. no extent or equivalent will be considered. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["A BoundingBox encapsulating the Point definition of the IElement0D. ","This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"Bounds","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the IElement1Ds BoundingBox. Acts on the ICurve definition of the IElement1D through the Geometry_Engine. ",""],"inputs":[{"inputName":"element1D","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D with the geometry to get the BoundingBox of. i.e. no cross-section or equivalent will be considered. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["A BoundingBox encapsulating the ICurve definition of the IElement1D. ","This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"Bounds","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the IElement2Ds BoundingBox. Acts on the element curve definition of the IElement2D through the Geometry_Engine. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D with the geometry to get the BoundingBox of. i.e. no thickness or equivalent will be considered. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["A BoundingBox encapsulating the element curve definition of the IElement2D. ","This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"Bounds","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the IElements BoundingBox. Acts on the elements geometrical definition of the IElement through the Geometry_Engine. ",""],"inputs":[{"inputName":"elements","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The IElements with the geometry to get the BoundingBox of. i.e. added properties implying extents will not be considered. ","This is a IEnumerable<IElement> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Point, Grid, Ceiling, CeilingTile, Grid, Room, Edge, Opening, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["A BoundingBox encapsulating the geometrical definition of the IElements. ","This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IBounds","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the IElements BoundingBox. Acts on the elements geometrical definition of the IElement through the Geometry_Engine. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Dimensional","memberName":"IElement","isGeneric":"0","descriptionParts":["The IElement with the geometry to get the BoundingBox of. i.e. added properties implying extents will not be considered. ","This is a BH.oM.Dimensional.IElement: ","The common base interface for all the Spatial Dimensional Objects.This interface should not be implemented directly, only through its sub-interfaces.Methods operating on IElement assume a specific implementation of one or other of the sub-interfaces (i.e. IElement0D, IElement1D, IElement2D) ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Point, Grid, Ceiling, CeilingTile, Grid, Room, Edge, Opening, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"BoundingBox","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["A BoundingBox encapsulating the geometrical definition of the IElements. ","This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"Centroid","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the centre of weight for the homogeneous geometrical representation of an IElement0D. Always returns the point location due to zero-dimensionality of an IElement0D. ",""],"inputs":[{"inputName":"element0D","namespace":"BH.oM.Dimensional","memberName":"IElement0D","isGeneric":"0","descriptionParts":["The IElement0D with the geometry to get the centre of weight of. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The Point at the centre of weight for the homogeneous geometrical representation of the IElement0D. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"Centroid","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the centre of weight for a IElement1Ds ICurve representation. ",""],"inputs":[{"inputName":"element1D","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D with the geometry to get the centre of weight of. The IElement1D will be considered homogeneous. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The Point at the centre of weight for the homogeneous geometrical representation of the IElement1D. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"Centroid","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the centre of area for a IElement2Ds surface representation. For an IElement2D with homogeneous material and thickness this will also be the centre of weight. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D with the geometry to get the centre of area of. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance used in geometry processing, default set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The Point at the centre of area for the homogeneous geometrical representation of the IElement2D. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"ICentroid","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the centre of weight for the homogeneous geometrical representation of an IElement. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Dimensional","memberName":"IElement","isGeneric":"0","descriptionParts":["The IElement with the geometry to get the centre of mass of. ","This is a BH.oM.Dimensional.IElement: ","The common base interface for all the Spatial Dimensional Objects.This interface should not be implemented directly, only through its sub-interfaces.Methods operating on IElement assume a specific implementation of one or other of the sub-interfaces (i.e. IElement0D, IElement1D, IElement2D) ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Point, Grid, Ceiling, CeilingTile, Grid, Room, Edge, Opening, and more..."],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance tolerance used in geometry processing, default set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The Point at the centre of weight for the homogeneous geometrical representation of an IElement. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"ControlPoints","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the control points of the geometrical representation of an IElement0D. Always returns the point location due to zero-dimensionality of an IElement0D. ",""],"inputs":[{"inputName":"element0D","namespace":"BH.oM.Dimensional","memberName":"IElement0D","isGeneric":"0","descriptionParts":["The IElement0D with the geometry to get the control points from. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The control points of the geometrical representation of an IElement0D. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"ControlPoints","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the control points of the one dimensional representation of the IElement1D. ",""],"inputs":[{"inputName":"element1D","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D with the geometry to get the control points from. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The control points of the defining geometry for the one dimensional representation. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"ControlPoints","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the control points of the element curve representation of the IElement2D. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D with the element curves to get the control points from. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1},{"inputName":"externalOnly","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Controls if the control points from the internal elements are queried as well. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The control points of all the defining geometry for the element curve representation. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IControlPoints","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the control points of the geometrical representation of an IElement. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Dimensional","memberName":"IElement","isGeneric":"0","descriptionParts":["The IElement with the geometry to get the control points from. ","This is a BH.oM.Dimensional.IElement: ","The common base interface for all the Spatial Dimensional Objects.This interface should not be implemented directly, only through its sub-interfaces.Methods operating on IElement assume a specific implementation of one or other of the sub-interfaces (i.e. IElement0D, IElement1D, IElement2D) ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Point, Grid, Ceiling, CeilingTile, Grid, Room, Edge, Opening, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The control points of the geometrical representation of an IElement. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"ElementCurves","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the defining curves of an IElement0D. Always returns empty collection due to zero-dimensionality of an IElement0D. ",""],"inputs":[{"inputName":"element0D","namespace":"BH.oM.Dimensional","memberName":"IElement0D","isGeneric":"0","descriptionParts":["The IElement0D to extract the defining curves from. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":1},{"inputName":"recursive","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Has no effect for IElement0D. Input here to unify inputs between all IElements. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The curves defining the base geometry of the IElement0D. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"ElementCurves","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the defining curves of an IElement1D. ",""],"inputs":[{"inputName":"element1D","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D of which to get the curve definintion. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1},{"inputName":"recursive","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Has no effect for IElement1D. Input here to unify inputs between all IElements. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The curve defining the base geometry of the IElement1D. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"ElementCurves","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the geometricly defining curves of the IElement2Ds surface. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D of which to get the curve definintion. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1},{"inputName":"recursive","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Ensures that the resulting curves are broken up into its smallest constituent parts. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The curves defining the base surface geometry of the IElement2D. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"ExternalElementCurves","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the geometricly defining external curves of the IElement2Ds surface. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D of which to get the external curve definintion. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1},{"inputName":"recursive","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Ensures that the resulting curves are broken up into its smallest constituent parts. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The curves defining the base surface geometry of the IElement2D. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"InternalElementCurves","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the geometricly defining internal curves, such as Openings, of the IElement2Ds surface. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D of which to get the internal curve definintion. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1},{"inputName":"recursive","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Ensures that the resulting curves are broken up into its smallest constituent parts. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The curves defining the base surface geometry of the IElement2D. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"ElementCurves","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the geometricly defining curves of the IElements geometries. ",""],"inputs":[{"inputName":"elements","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The IElements of which to get the curve definintions. ","This is a IEnumerable<IElement> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Point, Grid, Ceiling, CeilingTile, Grid, Room, Edge, Opening, and more..."],"isRequired":1,"isInterface":1},{"inputName":"recursive","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Ensures that the resulting curves are broken up into its smallest constituent parts if it is an IElement2D. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The curves defining the base geometry of the IElements. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IElementCurves","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the geometricly defining curves of the IElements geometry. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Dimensional","memberName":"IElement","isGeneric":"0","descriptionParts":["The IElement of which to get the curve definintion. ","This is a BH.oM.Dimensional.IElement: ","The common base interface for all the Spatial Dimensional Objects.This interface should not be implemented directly, only through its sub-interfaces.Methods operating on IElement assume a specific implementation of one or other of the sub-interfaces (i.e. IElement0D, IElement1D, IElement2D) ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Point, Grid, Ceiling, CeilingTile, Grid, Room, Edge, Opening, and more..."],"isRequired":1,"isInterface":1},{"inputName":"recursive","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Ensures that the resulting curves are broken up into its smallest constituent parts if it is an IElement2D. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The curves defining the base geometry of the IElement. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IElements0D","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the IElement0Ds from a IElement1D. Returns null if no IElement0Ds are defined for the type of IElement1D. ",""],"inputs":[{"inputName":"element1D","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D of which to get the IElement0Ds. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement0D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The IElement0Ds from the IElement1D. Returns null if no IElement0Ds are defined for the type of IElement1D. ","This is a List<IElement0D> ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"ElementVertices","assemblyName":"Spatial_Engine.dll","descriptionParts":["Returns the point from the IElement0D. Mainly to accomodate the interface method. ",""],"inputs":[{"inputName":"element0D","namespace":"BH.oM.Dimensional","memberName":"IElement0D","isGeneric":"0","descriptionParts":["The IElement0D to query for its vertices. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The location point of IElement0D. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"ElementVertices","assemblyName":"Spatial_Engine.dll","descriptionParts":["Returns the discontinuity points from the defining ICurve of the IElement1D. ",""],"inputs":[{"inputName":"element1D","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D of which to get the vertecies from. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IElement1Ds curves discontinuity points. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"ElementVertices","assemblyName":"Spatial_Engine.dll","descriptionParts":["Returns the discontinuity points from the defining ICurves of the IElement2D. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D of which to get the vertecies from. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IElement2Ds element curves discontinuity points. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"ElementVertices","assemblyName":"Spatial_Engine.dll","descriptionParts":["Returns the discontinuity points from the defining ICurves of the IElements. ",""],"inputs":[{"inputName":"elements","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The IElements of which to get the vertecies from. ","This is a IEnumerable<IElement> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Point, Grid, Ceiling, CeilingTile, Grid, Room, Edge, Opening, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IElements element curves discontinuity points. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IElementVertices","assemblyName":"Spatial_Engine.dll","descriptionParts":["Returns the discontinuity points from the defining ICurves of the IElement. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Dimensional","memberName":"IElement","isGeneric":"0","descriptionParts":["The IElement of which to get the vertecies from. ","This is a BH.oM.Dimensional.IElement: ","The common base interface for all the Spatial Dimensional Objects.This interface should not be implemented directly, only through its sub-interfaces.Methods operating on IElement assume a specific implementation of one or other of the sub-interfaces (i.e. IElement0D, IElement1D, IElement2D) ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Point, Grid, Ceiling, CeilingTile, Grid, Room, Edge, Opening, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The IElements element curves discontinuity points. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IInternalElements2D","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the IElement2Ds internal IElement2Ds. Returns a empty list for objects without definied internal elements ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D to get the internal IElement2Ds from. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement2D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of the IElement2Ds internal elements. ","This is a List<IElement2D> ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IsNearGrid","assemblyName":"Spatial_Engine.dll","descriptionParts":["Checks if the geometrical representation of an IElement0D, projected onto the XY Plane, is within a set distance from a grid line. ",""],"inputs":[{"inputName":"element0D","namespace":"BH.oM.Dimensional","memberName":"IElement0D","isGeneric":"0","descriptionParts":["The IElement0D that will be checked for proximity to the grid. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":1},{"inputName":"grid","namespace":"BH.oM.Geometry.SettingOut","memberName":"Grid","isGeneric":"0","descriptionParts":["The Grid to use for evaulation. ","This is a BH.oM.Geometry.SettingOut.Grid: ","An individual Grid 'line' - can be curved or free-form as well as simple linear line segments. ","Useful for coordination and setting out of spatial objects for transdisciplinary workflows."],"isRequired":1,"isInterface":0},{"inputName":"maxDistance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The maximum distance allowed from the Grid for this method to return true. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the geometrical representation of the IElement0D is within a set distance from the grid line. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IsNearGrid","assemblyName":"Spatial_Engine.dll","descriptionParts":["Checks if the geometrical representation of an IElement1D, projected onto the XY Plane, is within a set distance from a grid line. ",""],"inputs":[{"inputName":"element1D","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D that will be checked for proximity to the grid. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1},{"inputName":"grid","namespace":"BH.oM.Geometry.SettingOut","memberName":"Grid","isGeneric":"0","descriptionParts":["The Grid to use for evaulation. ","This is a BH.oM.Geometry.SettingOut.Grid: ","An individual Grid 'line' - can be curved or free-form as well as simple linear line segments. ","Useful for coordination and setting out of spatial objects for transdisciplinary workflows."],"isRequired":1,"isInterface":0},{"inputName":"maxDistance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The maximum distance allowed from the Grid for this method to return true. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the geometrical representation of an IElement1D is within a set distance from the grid line. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IsNearGrid","assemblyName":"Spatial_Engine.dll","descriptionParts":["Checks if the geometrical representation of an IElement2D, projected onto the XY Plane, is within a set distance from a grid line. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D that will be checked for proximity to the grid. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1},{"inputName":"grid","namespace":"BH.oM.Geometry.SettingOut","memberName":"Grid","isGeneric":"0","descriptionParts":["The Grid to use for evaulation. ","This is a BH.oM.Geometry.SettingOut.Grid: ","An individual Grid 'line' - can be curved or free-form as well as simple linear line segments. ","Useful for coordination and setting out of spatial objects for transdisciplinary workflows."],"isRequired":1,"isInterface":0},{"inputName":"maxDistance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The maximum distance allowed from the Grid for this method to return true. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the geometrical representation of an IElement2D is within a set distance from the grid line. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IIsNearGrid","assemblyName":"Spatial_Engine.dll","descriptionParts":["Checks if the geometrical representation of an IElement, projected onto the XY Plane, is within a set distance from a grid line. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Dimensional","memberName":"IElement","isGeneric":"0","descriptionParts":["The IElement that will be checked for proximity to the grid. ","This is a BH.oM.Dimensional.IElement: ","The common base interface for all the Spatial Dimensional Objects.This interface should not be implemented directly, only through its sub-interfaces.Methods operating on IElement assume a specific implementation of one or other of the sub-interfaces (i.e. IElement0D, IElement1D, IElement2D) ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Point, Grid, Ceiling, CeilingTile, Grid, Room, Edge, Opening, and more..."],"isRequired":1,"isInterface":1},{"inputName":"grid","namespace":"BH.oM.Geometry.SettingOut","memberName":"Grid","isGeneric":"0","descriptionParts":["The Grid to use for evaulation. ","This is a BH.oM.Geometry.SettingOut.Grid: ","An individual Grid 'line' - can be curved or free-form as well as simple linear line segments. ","Useful for coordination and setting out of spatial objects for transdisciplinary workflows."],"isRequired":1,"isInterface":0},{"inputName":"maxDistance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The maximum distance allowed from the Grid for this method to return true. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the geometrical representation of the IElement is within a set distance from the grid line. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IsFullyOnLevel","assemblyName":"Spatial_Engine.dll","descriptionParts":["Checks if the geometrical representation of an IElement0D is fully within a set tolerance from a level elevation. ",""],"inputs":[{"inputName":"element0D","namespace":"BH.oM.Dimensional","memberName":"IElement0D","isGeneric":"0","descriptionParts":["The IElement0D that will be checked for proximity to the Level. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":1},{"inputName":"level","namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isGeneric":"0","descriptionParts":["The Level to use for evaulation. ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The maximum distance allowed from the Level for this method to return true. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the geometrical representation of the IElement0D is fully within a set tolerance from the level elevation. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IsFullyOnLevel","assemblyName":"Spatial_Engine.dll","descriptionParts":["Checks if the geometrical representation of an IElement1D is fully within a set tolerance from a level elevation. ",""],"inputs":[{"inputName":"element1D","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D that will be checked for proximity to the Level. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1},{"inputName":"level","namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isGeneric":"0","descriptionParts":["The Level to use for evaulation. ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The maximum distance allowed from the Level elevation for this method to return true. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the geometrical representation of an IElement1D is fully within a set tolerance from the level elevation. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IsFullyOnLevel","assemblyName":"Spatial_Engine.dll","descriptionParts":["Checks if the geometrical representation of an IElement2D is fully within a set tolerance from a level elevation. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D that will be checked for proximity to the Level. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1},{"inputName":"level","namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isGeneric":"0","descriptionParts":["The Level to use for evaulation. ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The maximum distance allowed from the Level for this method to return true. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the geometrical representation of an IElement2D is fully within a set tolerance from the level elevation. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IIsFullyOnLevel","assemblyName":"Spatial_Engine.dll","descriptionParts":["Checks if the geometrical representation of an IElement is fully within a set tolerance from a level elevation. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Dimensional","memberName":"IElement","isGeneric":"0","descriptionParts":["The IElement that will be checked for proximity to the Level. ","This is a BH.oM.Dimensional.IElement: ","The common base interface for all the Spatial Dimensional Objects.This interface should not be implemented directly, only through its sub-interfaces.Methods operating on IElement assume a specific implementation of one or other of the sub-interfaces (i.e. IElement0D, IElement1D, IElement2D) ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Point, Grid, Ceiling, CeilingTile, Grid, Room, Edge, Opening, and more..."],"isRequired":1,"isInterface":1},{"inputName":"level","namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isGeneric":"0","descriptionParts":["The Level to use for evaulation. ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The maximum distance allowed from the Level for this method to return true. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the geometrical representation of the IElement is fully within a set tolerance from the level elevation. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IsNearLevel","assemblyName":"Spatial_Engine.dll","descriptionParts":["Checks if the geometrical representation of an IElement0D is within a set distance from a level elevation. ",""],"inputs":[{"inputName":"element0D","namespace":"BH.oM.Dimensional","memberName":"IElement0D","isGeneric":"0","descriptionParts":["The IElement0D that will be checked for proximity to the Level. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":1},{"inputName":"level","namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isGeneric":"0","descriptionParts":["The Level to use for evaulation. ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."],"isRequired":1,"isInterface":0},{"inputName":"maxDistance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The maximum distance allowed from the Level for this method to return true. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the geometrical representation of the IElement0D is within a set distance from the level elevation. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IsNearLevel","assemblyName":"Spatial_Engine.dll","descriptionParts":["Checks if the geometrical representation of an IElement1D is within a set distance from a level elevation. ",""],"inputs":[{"inputName":"element1D","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D that will be checked for proximity to the Level. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1},{"inputName":"level","namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isGeneric":"0","descriptionParts":["The Level to use for evaulation. ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."],"isRequired":1,"isInterface":0},{"inputName":"maxDistance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The maximum distance allowed from the Level for this method to return true. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the geometrical representation of an IElement1D is within a set distance from the level elevation. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IsNearLevel","assemblyName":"Spatial_Engine.dll","descriptionParts":["Checks if the geometrical representation of an IElement2D is within a set distance from a level elevation. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D that will be checked for proximity to the Level. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1},{"inputName":"level","namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isGeneric":"0","descriptionParts":["The Level to use for evaulation. ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."],"isRequired":1,"isInterface":0},{"inputName":"maxDistance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The maximum distance allowed from the Level for this method to return true. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the geometrical representation of an IElement2D is within a set distance from the level elevation. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IIsNearLevel","assemblyName":"Spatial_Engine.dll","descriptionParts":["Checks if the geometrical representation of an IElement is within a set distance from a level elevation. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Dimensional","memberName":"IElement","isGeneric":"0","descriptionParts":["The IElement that will be checked for proximity to the Level. ","This is a BH.oM.Dimensional.IElement: ","The common base interface for all the Spatial Dimensional Objects.This interface should not be implemented directly, only through its sub-interfaces.Methods operating on IElement assume a specific implementation of one or other of the sub-interfaces (i.e. IElement0D, IElement1D, IElement2D) ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Point, Grid, Ceiling, CeilingTile, Grid, Room, Edge, Opening, and more..."],"isRequired":1,"isInterface":1},{"inputName":"level","namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isGeneric":"0","descriptionParts":["The Level to use for evaulation. ","This is a BH.oM.Geometry.SettingOut.Level: ","Defines a horizontal plane, or infinite flat two-dimensional surface, based on a height measured along the global Z axis and origin."],"isRequired":1,"isInterface":0},{"inputName":"maxDistance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The maximum distance allowed from the Level for this method to return true. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the geometrical representation of the IElement is within a set distance from the level elevation. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IsSelfIntersecting","assemblyName":"Spatial_Engine.dll","descriptionParts":["Checks if the one dimensional representation of the IElement0D is closer to itself than the tolerance at any two points. Always false because a zero-dimensional IElement0D does not consist of curves. ",""],"inputs":[{"inputName":"element0D","namespace":"BH.oM.Dimensional","memberName":"IElement0D","isGeneric":"0","descriptionParts":["The IElement0D to evaluate self intersections from. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum distance to be considered intersecting. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the geometrical representation of an IElement0D is self intersecting. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IsSelfIntersecting","assemblyName":"Spatial_Engine.dll","descriptionParts":["Checks if the one dimensional representation of the IElement1D is closer to itself than the tolerance at any two points. ",""],"inputs":[{"inputName":"element1D","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D to evaluate self intersections from. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum distance to be considered intersecting. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the IElement1Ds curve is self intersecting. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IsSelfIntersecting","assemblyName":"Spatial_Engine.dll","descriptionParts":["Checks if any of the element curves of the IElement2D is closer to itself than the tolerance at any two points. Does not check for intersections between external and internal curves, or between different internal curves. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D which curves are to be evaluated for self intersection. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum distance to be considered intersecting. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if any of the IElement2Ds element curves are self intersecting. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IIsSelfIntersecting","assemblyName":"Spatial_Engine.dll","descriptionParts":["Checks if any of the curves defining an IElement is closer to itself than the tolerance at any two points (is self intersecting). In case of IElement2D, does not check for intersections between external and internal curves, or between different internal curves. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Dimensional","memberName":"IElement","isGeneric":"0","descriptionParts":["The IElement to evaluate self intersections from. ","This is a BH.oM.Dimensional.IElement: ","The common base interface for all the Spatial Dimensional Objects.This interface should not be implemented directly, only through its sub-interfaces.Methods operating on IElement assume a specific implementation of one or other of the sub-interfaces (i.e. IElement0D, IElement1D, IElement2D) ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Point, Grid, Ceiling, CeilingTile, Grid, Room, Edge, Opening, and more..."],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum distance to be considered intersecting. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if any of the IElement's curves is self intersecting. ","This is a Boolean"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"Length","assemblyName":"Spatial_Engine.dll","descriptionParts":["Returns the length of the IElement1Ds curve. ",""],"inputs":[{"inputName":"element1D","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D to get the length from. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The length of the IElement1Ds curve. ","This is a Length [m] (as a Double)"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"Normal","assemblyName":"Spatial_Engine.dll","descriptionParts":["Returns the normal to the IElement2D which is perpendicular to its plane and oriented according to the right hand rule in relation to the outline curve. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D to get the normal from. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The normal of the IElement2D based on the external outline curve. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"OutlineCurve","assemblyName":"Spatial_Engine.dll","descriptionParts":["Returns a single polycurve outline created from the external elements. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D to get the outline curve from. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["A single outline curve for the IElement2D. ","This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"OutlineCurve","assemblyName":"Spatial_Engine.dll","descriptionParts":["Returns a single polycurve outline created from the IElement1Ds. ",""],"inputs":[{"inputName":"elements1D","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The IElement1Ds are expected to be provided in order in such a way that each elements end meets the start of the next. ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PolyCurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["A single poly curve for the IElement1Ds where the next item in the list is set as the next curve in a single curve. ","This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IOutlineElements1D","assemblyName":"Spatial_Engine.dll","descriptionParts":["Returns every IElement1D which makes up the exterior perimeter of the IElement2D. ",""],"inputs":[{"inputName":"element2D","namespace":"BH.oM.Dimensional","memberName":"IElement2D","isGeneric":"0","descriptionParts":["The IElement2D of which to get the exterior sub IElement1Ds from. ","This is a BH.oM.Dimensional.IElement2D: ","Enables geometrical operations to be performed on an edge curve based two-dimensional spatial element, whilst preserving all other object properties as unchanged. /nThe interface expects the outline to be constructed of IElement1D elements and allows for internal IElement2D elements.Objects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Ceiling, CeilingTile, Room, Opening, Panel, Space, CurtainWall, Opening, Panel, Roof, Floor, Door, Wall, Void, Window, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement1D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The IElement1Ds which geometry make up the perimeter curve for the IElement2D. ","This is a List<IElement1D> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IGeometry","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the defining geometrical object which all spatial operations will act on. ",""],"inputs":[{"inputName":"element0D","namespace":"BH.oM.Dimensional","memberName":"IElement0D","isGeneric":"0","descriptionParts":["The IElement0D to get the defining geometry from. ","This is a BH.oM.Dimensional.IElement0D: ","Enables geometrical operations to be performed on a Point based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The IElement0Ds base geometrical point object. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IGeometry","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the defining geometrical object which all spatial operations will act on. ",""],"inputs":[{"inputName":"element1D","namespace":"BH.oM.Dimensional","memberName":"IElement1D","isGeneric":"0","descriptionParts":["The IElement1D to get the defining geometry from. ","This is a BH.oM.Dimensional.IElement1D: ","Enables geometrical operations to be performed on a Curve based spatial element, whilst preserving all other object properties as unchanged. /nObjects implementing this interface will be required to implement some base methods for getting and setting data in a way that maintains the object's other properties.Documentation detailing required extension methods can be found here: https://github.com/BHoM/documentation/wiki/IElement-required-extension-methods ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Grid, Grid, Edge, FrameEdge, CableTray, Duct, Pipe, FlowSystem, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ICurve","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The IElement1Ds base geometrical curve object. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"PointLayout","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the points from the Layout based on the layout and a single region curve associated with it. ",""],"inputs":[{"inputName":"layout2D","namespace":"BH.oM.Spatial.Layouts","memberName":"ILayout2D","isGeneric":"0","descriptionParts":["The layout object to query the points from. ","This is a BH.oM.Spatial.Layouts.ILayout2D: ","Base interface for all 2D layouts ","This can be of the following types: ExplicitLayout, LinearLayout, MultiLinearLayout, PerimeterLayout"],"isRequired":1,"isInterface":1},{"inputName":"hostRegionCurve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["The region curve of the objects associated with the layout. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"openingCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional opening curves in the region. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Point layout generated by the layout objects and region curve. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"PointLayout","assemblyName":"Spatial_Engine.dll","descriptionParts":["Returns the points in the layout. For ExplicitLayouts, the host geometry will be ignored. ",""],"inputs":[{"inputName":"layout2D","namespace":"BH.oM.Spatial.Layouts","memberName":"ExplicitLayout","isGeneric":"0","descriptionParts":["The layout object to query the points from. ","This is a BH.oM.Spatial.Layouts.ExplicitLayout: ","Layout for freeform control over the point distribution"],"isRequired":1,"isInterface":0},{"inputName":"hostRegionCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The region curves of the objects associated with the layout. Unused for Explicit layouts. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":1},{"inputName":"openingCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional opening curves in the region. Unused for ExplicitLayout. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The Points stored in the ExplicitLayout object. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"PointLayout","assemblyName":"Spatial_Engine.dll","descriptionParts":["Returns a series of points along the host region curves, based on the parameters in the PerimeterLayout. ",""],"inputs":[{"inputName":"layout2D","namespace":"BH.oM.Spatial.Layouts","memberName":"PerimeterLayout","isGeneric":"0","descriptionParts":["The layout object to query the points from. ","This is a BH.oM.Spatial.Layouts.PerimeterLayout: ","Linear distribution of points along the perimeter of the host object."],"isRequired":1,"isInterface":0},{"inputName":"hostRegionCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The region curves of the objects associated with the layout. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"openingCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional opening curves in the region. Unused for PerimeterLayout. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Point layout generated by the layout objects and region curve. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"PointLayout","assemblyName":"Spatial_Engine.dll","descriptionParts":["Returns Points along a straight line through the region curve. If the line is discontinuous because of openings or concave host region, Points will be distributed to the different segments based on their length. ",""],"inputs":[{"inputName":"layout2D","namespace":"BH.oM.Spatial.Layouts","memberName":"LinearLayout","isGeneric":"0","descriptionParts":["The layout object to query the points from. ","This is a BH.oM.Spatial.Layouts.LinearLayout: ","Linear distribution of points along a vector from one side of the perimeter of the host object to the other."],"isRequired":1,"isInterface":0},{"inputName":"hostRegionCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The region curves of the objects associated with the layout. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"openingCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional opening curves in the region. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Point layout generated by the layout objects and region curve. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"PointLayout","assemblyName":"Spatial_Engine.dll","descriptionParts":["Returns Points along one or more straight lines through the region curves. If the line is discontinuous because of openings, a concave host region, or multiple host regions, Points will be distributed to the different segments based on their length.","The method fits as many points as it can onto each Line along the Direction vector before populating the next. ",""],"inputs":[{"inputName":"layout2D","namespace":"BH.oM.Spatial.Layouts","memberName":"MultiLinearLayout","isGeneric":"0","descriptionParts":["The layout object to query the points from. ","This is a BH.oM.Spatial.Layouts.MultiLinearLayout: ","Linear distribution of points along multiple linear parallel axes, defined along a vector from one side of the perimeter of the host object to the other. ","Starts by fitting in as many points as possible in the first layer, then generates a new one and repeats."],"isRequired":1,"isInterface":0},{"inputName":"hostRegionCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The region curves of the objects associated with the layout. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"openingCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional opening curves in the region. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Point layout generated by the layout objects and region curve. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"IPointLayout","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the points from the Layout based on the layout and a set of region curves and opening curves associated with it. ",""],"inputs":[{"inputName":"layout2D","namespace":"BH.oM.Spatial.Layouts","memberName":"ILayout2D","isGeneric":"0","descriptionParts":["The layout object to query the points from. ","This is a BH.oM.Spatial.Layouts.ILayout2D: ","Base interface for all 2D layouts ","This can be of the following types: ExplicitLayout, LinearLayout, MultiLinearLayout, PerimeterLayout"],"isRequired":1,"isInterface":1},{"inputName":"hostRegionCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The region curves of the objects associated with the layout. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"openingCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional opening curves in the region. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Point layout generated by the layout objects and region curve. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"CurveLayout","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the curves from the Layout based on the layout and a set of region curves and opening curves associated with it. ",""],"inputs":[{"inputName":"offsetCurveLayout","namespace":"BH.oM.Spatial.Layouts","memberName":"OffsetCurveLayout","isGeneric":"0","descriptionParts":["The layout object to query the curves from. ","This is a BH.oM.Spatial.Layouts.OffsetCurveLayout: ","Curve layout created by offsetting an element's outer and inner outlines.","Positive offset value will offset to the inside of the element."],"isRequired":1,"isInterface":0},{"inputName":"hostRegionCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The region curves of the objects associated with the layout. Unused for Explicit layouts. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"openingCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional opening curves in the region. Unused for ExplicitLayout. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":1},{"inputName":"minOffset","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The Curves stored in the ExplicitLayout object. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"CurveLayout","assemblyName":"Spatial_Engine.dll","descriptionParts":["Returns the curves in the layout. For ExplicitLayouts, the host geometry will be ignored. ",""],"inputs":[{"inputName":"explicitCurveLayout","namespace":"BH.oM.Spatial.Layouts","memberName":"ExplicitCurveLayout","isGeneric":"0","descriptionParts":["The layout object to query the curves from. ","This is a BH.oM.Spatial.Layouts.ExplicitCurveLayout: ","Layout for freeform control over the curve distribution."],"isRequired":1,"isInterface":0},{"inputName":"hostRegionCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The region curves of the objects associated with the layout. Unused for Explicit layouts. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"openingCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional opening curves in the region. Unused for ExplicitLayout. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":1},{"inputName":"minOffset","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The Curves stored in the ExplicitLayout object. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"ICurveLayout","assemblyName":"Spatial_Engine.dll","descriptionParts":["Queries the curves from the Layout based on the layout and a set of region curves and opening curves associated with it. ",""],"inputs":[{"inputName":"curveLayout","namespace":"BH.oM.Spatial.Layouts","memberName":"ICurveLayout","isGeneric":"0","descriptionParts":["The layout object to query the curves from. ","This is a BH.oM.Spatial.Layouts.ICurveLayout: ","Base interface for all curve layouts. ","This can be of the following types: ExplicitCurveLayout, OffsetCurveLayout"],"isRequired":1,"isInterface":1},{"inputName":"hostRegionCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The region curves of the objects associated with the layout. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"openingCurves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional opening curves in the region. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":1},{"inputName":"minOffset","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Curve layout generated by the layout objects and region curve. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Spatial","className":"Query","memberName":"VoidArea","assemblyName":"Spatial_Engine.dll","descriptionParts":["Gets the void area enclosed by an IProfile. This assumes that the outermost curve(s) are solid. Curves inside a solid region are assumed to be openings, and curves within openings are assumed to be solid, etc. Also, for TaperedProfiles, the average void area is returned. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["The IProfile to evaluate. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The void area enclosed by the solid regions in the profile ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Adapters.STL","className":"Modify","memberName":"RemoveOverlaps","assemblyName":"STL_Engine.dll","descriptionParts":["Resolve overlapping geometry in geometry groups by triangulating the geometry ",""],"inputs":[{"inputName":"geometryGroups","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.STL","memberName":"GeometryGroup","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Geometry Groups which contain geometry that may overlap. These will be checked to ensure none of the geometry overlaps each other ","This is a List<GeometryGroup>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Adapters.STL","memberName":"GeometryGroup","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The modified collection of Geometry Groups with geometry triangulated ","This is a List<GeometryGroup>"]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"IToPolyline","assemblyName":"STL_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"geom","namespace":"BH.oM.Geometry","memberName":"IGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToPolyline","assemblyName":"STL_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToPolyline","assemblyName":"STL_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"brep","namespace":"BH.oM.Geometry","memberName":"BoundaryRepresentation","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundaryRepresentation: ","Solid representation defined by a collection of connected surfaces forming a closed volume"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToPolyline","assemblyName":"STL_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"extrusion","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToPolyline","assemblyName":"STL_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"isurface","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToPolyline","assemblyName":"STL_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"loft","namespace":"BH.oM.Geometry","memberName":"Loft","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Loft: ","A free-form surface defined by a series of cross sectional Curves. The surface provides a continuous interpolation passing through each Curve in order."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToPolyline","assemblyName":"STL_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"nsurface","namespace":"BH.oM.Geometry","memberName":"NurbsSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.NurbsSurface: ","A free-form surface constructed as a UV grid of weighted NURBS ControlPoints. A continuous form is generated by approximating a two-directional network of piece-wise polynomial splines across the U and V directions, creating a smooth surface patch.","Supports Inner and Outer Trim Curves which enable greater flexibility in final shape through allowing free-form boundaries to be cut across the underlying UV surface domain.","A NurbsSurface is immutable as its defining properties are not mutually perpendicular to facilitate robust conversion between platforms.","See also BH.oM.Geometry.NurbsCurve for more info on non-uniform rational basis spline (or B-spline) weightings and other parameters."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToPolyline","assemblyName":"STL_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToPolyline","assemblyName":"STL_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"psurface","namespace":"BH.oM.Geometry","memberName":"PolySurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolySurface: ","A composite surface constructed by combining a collection of surfaces of any type. Whole PolySurface integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although validity of some engine methods may vary depending on the PolySurface form."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry","className":"Convert","memberName":"ToPolyline","assemblyName":"STL_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"BH.oM.Base","memberName":"IObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IObject ","This can be of the following types: FileSettings, AdapterSettings, ObjectWrapper, ActionConfig, AnalyseLoadCases, CustomCommand, Analyse, NewModel, Close, Open, ClearResults, SaveAs, Save, BatchRequest, CustomRequest, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Polyline>"]}},{"namespace":"BH.Engine.Structure","className":"Compute","memberName":"MapTaperedProfile","assemblyName":"Structure_Engine.dll","descriptionParts":["Maps a TaperedProfile to a series of sequential Bars by interpolating the profiles at the startNode and endNode of each bar using a polynomial defined by the interpolationOrder. For nonlinear profiles a concave profile is achieved by setting the larger profile at the smallest position. To achieve a convex profile, the larger profile must be at the largest position. ",""],"inputs":[{"inputName":"bars","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The Bars in sequential order for the TaperedProfile to be mapped to. ","This is a List<Bar>"],"isRequired":1,"isInterface":0},{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"IGeometricalSection","isGeneric":"0","descriptionParts":["The section containing the TaperedProfile to be mapped to the series of Bars ","This is a BH.oM.Structure.SectionProperties.IGeometricalSection: ","Interface for sections based on Shape profiles. ","This can be of the following types: AluminiumSection, GenericSection, TimberSection, ConcreteSection, SteelSection"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The Bars with interpolated SectionProperties based on the TaperedProfile provided. ","This is a List<Bar>"]}},{"namespace":"BH.Engine.Structure","className":"Compute","memberName":"IntegrateSection","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates Section properties for a region on the XY-Plane. /nThe resulting properties are oriented to the XY-Plane. ",""],"inputs":[{"inputName":"curves","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Non-intersecting edge curves that make up the section. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The angleTolerance for dividing the section curves. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Dictionary containing the section properties for the X and Y axis. ","This is a Dictionary<String, Double>"]}},{"namespace":"BH.Engine.Structure","className":"Compute","memberName":"NullCheck","assemblyName":"Structure_Engine.dll","descriptionParts":["Checks if a Node is null and outputs relevant error message. ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Structure.Elements","memberName":"Node","isGeneric":"0","descriptionParts":["The Node to test for null. ","This is a BH.oM.Structure.Elements.Node: ","0D finite element for structural analysis. Node class contains positional information as well as orientation and support."],"isRequired":1,"isInterface":0},{"inputName":"methodName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the method to reference in the error message. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the bar passes the null check. ","This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Compute","memberName":"NullCheck","assemblyName":"Structure_Engine.dll","descriptionParts":["Checks if a Bar or one of its Nodes are null and outputs relevant error message. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to test for null. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0},{"inputName":"methodName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the method to reference in the error message. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the bar passes the null check. ","This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Compute","memberName":"NullCheck","assemblyName":"Structure_Engine.dll","descriptionParts":["Checks if an FEMesh or one of its Nodes are null and outputs relevant error message. ",""],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Structure.Elements","memberName":"FEMesh","isGeneric":"0","descriptionParts":["The FEMesh to test for null. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."],"isRequired":1,"isInterface":0},{"inputName":"methodName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Optional name of the method to reference in the error message. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"checkFaces","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Optional bool to tell the method whether to check FEMeshFaces or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"checkNodes","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Optional bool to tell the method whether to check mesh Nodes or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"nodeListIndices","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Int32","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Optional list of nodes to limit check to ","This is a List<Int32>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the FEMeshFace passes the null check. ","This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Compute","memberName":"NullCheck","assemblyName":"Structure_Engine.dll","descriptionParts":["Checks if an FEMeshFace or one of its Nodes in the FEMesh are null and outputs relevant error message. ",""],"inputs":[{"inputName":"face","namespace":"BH.oM.Structure.Elements","memberName":"FEMeshFace","isGeneric":"0","descriptionParts":["The FEMeshFace to test for null. ","This is a BH.oM.Structure.Elements.FEMeshFace: ","Face of an FEMesh. The face is defined by the indices of its nodes in the node list. Geometrical information about position in space is stored on the host FEMesh."],"isRequired":1,"isInterface":0},{"inputName":"mesh","namespace":"BH.oM.Structure.Elements","memberName":"FEMesh","isGeneric":"0","descriptionParts":["The FEMesh to which the face belongs. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."],"isRequired":1,"isInterface":0},{"inputName":"methodName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the method to reference in the error message. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the FEMeshFace passes the null check. ","This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Compute","memberName":"NullCheck","assemblyName":"Structure_Engine.dll","descriptionParts":["Checks if an FEMeshFace or its NodeListIndices is null and outputs relevant error message. ",""],"inputs":[{"inputName":"face","namespace":"BH.oM.Structure.Elements","memberName":"FEMeshFace","isGeneric":"0","descriptionParts":["The FEMeshFace to test for null. ","This is a BH.oM.Structure.Elements.FEMeshFace: ","Face of an FEMesh. The face is defined by the indices of its nodes in the node list. Geometrical information about position in space is stored on the host FEMesh."],"isRequired":1,"isInterface":0},{"inputName":"methodName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the method to reference in the error message. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the FEMeshFace passes the null check. ","This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Compute","memberName":"NullCheck","assemblyName":"Structure_Engine.dll","descriptionParts":["Checks if a Panel or its ExternalEdges are null and outputs relevant error message. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Structure.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The Panel to test for null. ","This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."],"isRequired":1,"isInterface":0},{"inputName":"methodName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the method to reference in the error message. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["A boolean which is true if the FEMeshFace passes the null check. ","This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Compute","memberName":"OrientationAngleBar","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the orientation angle of a Bar based on a normal vector and a centreline. ",""],"inputs":[{"inputName":"normal","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Vector to be used as normal of the Bar. This vector should generally be orthogonal to the Bar, if it is not, it will be made orthogonal by projecting it to the section plane of the Bar (a plane that has that Bar tangent as its normal). This means that the Normal cannot be paralell to the Tangent of the Bar. ","Vector will be used to determine the orientation angle of the Bar. This is done by measuring the counter clockwise angle in the section plane of the Bar between a reference Vector and the provided Vector. For a non-vertical Bar, the reference vector will be the global Z-axis. For a vertical bar the reference vector will be a vector that is orthogonal to the tangent vector of the Bar and the global Y-axis. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"centreline","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["Geometrical Line, centreline of the Bar. ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The calculated orientation angle of the bar based on the provided geometry and normal. Will return NaN if the orientation can not be calculated. ","This is a Double"]}},{"namespace":"BH.Engine.Structure","className":"Compute","memberName":"OrientationAngleAreaElement","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the orientation angle of an area element based on the normal of the element and a provided local X direction.","The orientation angle is calculated as the angle between local x and a reference vector in the plane of the element, defined by the normal.","This reference vector is the global X-vector projected to the plane of the element, except for the case were the normal is parallel to the global X-axis.For this case the reference vector is instead the cross product of global Y and the normal, projected to the plane of the element. ",""],"inputs":[{"inputName":"normal","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["The normal of the element. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"localX","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Vector to treat as local x of the element. If this vector is not in the plane of the element it will get projected. If the vector is parallel to the normal of the element the operation will fail and a NaN value will be returned. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The calculated orientation angle of the area element. Will return NaN if the normal and local x are parallel. ","This is a Double"]}},{"namespace":"BH.Engine.Structure","className":"Compute","memberName":"PlasticModulus","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the PlasticModulus [Wpl] for an enclosed region. ",""],"inputs":[{"inputName":"pLine","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["Polyline, should have the upper side along the x-axis and the rest of the lines should be definable as a function of x apart for vertical segments. ","The last LineSegment should be the upper one, use WetBlanketInterpretation() to convert a collection of regions to compliant form. ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"curves","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The true curves of the section where counter-clockwise curves are positive area and clockwise ones are negative. /nShould be the curves whose Polyline version was provided for WetBlanketInterpetation(). ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":1},{"inputName":"trueArea","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The true area of the region. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The plasticModulus of the region. ","This is a SectionModulus [m³] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Compute","memberName":"PlasticModulus","assemblyName":"Structure_Engine.dll","descriptionParts":["This method is largely replaced by the Compute.PlasticModulus() Method accepting a Polyline and closed curves. ","Calculates the PlasticModulus[Wpl] from a list of IntegrationSlices. ","To use this method for a closed set of Curves, first call Geometry.Create.IntegrationSlices() to generate the slices. ",""],"inputs":[{"inputName":"slices","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"IntegrationSlice","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The list of integration slices used to calculate the plastic modulus. To generate the integration slices from as set of closed curves first call Geometry.Create.IntegrationSlices(). ","This is a List<IntegrationSlice>"],"isRequired":1,"isInterface":0},{"inputName":"area","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The area of the curves used to generate the slices. ","This is a Area [m²] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"max","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The upper limit coordinate value along the axis used to generate the slices. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"min","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The lower limit coordinate value along the axis used to generate the slices. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The plastic modulus calculated based on the slices. ","This is a SectionModulus [m³] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Compute","memberName":"ShearAreaPolyline","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the the exact shear area of a simplified boundary of a section. ",""],"inputs":[{"inputName":"pLine","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["The Polyline should have the upper side along the x-axis and the rest of the lines should be definable as /na function of x apart for vertical segments. The last line segment should be the upper one /nuse WetBlanketInterpretation(). ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"momentOfInertia","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The true moment of inertia of the section. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"tol","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The tolerance for considering a line segment horizontal or vertical. /ni.e. (value at endpoint - value at startpoint) < tol. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The shear area of the section. ","This is a Double"]}},{"namespace":"BH.Engine.Structure","className":"Compute","memberName":"Integrate","assemblyName":"Structure_Engine.dll","descriptionParts":["This method is largely replaced by the Compute.IntegrateSection() Method. ","Calculates section constants for a region on the XY-Plane. ","The resulting properties are oriented to the XY-Plane. ",""],"inputs":[{"inputName":"curves","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Non-intersecting planar edge curves that make up the section. All curves should be in the global XY-plane. Curves not in this plane will be projected which might give inaccurate results. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The distance tolerance used in the algorithm. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Dictionary","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Dictionary containing the section properties for the X and Y axis as well as integration slices created and used in the algorithm. ","This is a Dictionary<String, Object>"]}},{"namespace":"BH.Engine.Structure","className":"Compute","memberName":"Integrate","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates all non-torsional section constants for a section profile based on its edge curves and translates the profile curves to be centred around the origin. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["The profile to integrate. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The angleTolerance for dividing the section curves. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Output","namespace":"BH.oM.Reflection","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isInterface":"1","isGeneric":"0"},{"namespace":"System.Collections.Generic","memberName":"Dictionary","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"},{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["This is a BH.oM.Reflection.Output<BH.oM.Spatial.ShapeProfiles.IProfile, System.Collections.Generic.Dictionary<System.String, System.Double>>"]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"SteelISection","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a steel I-section from input dimensions. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full height of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"webThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of the web. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"flangeWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Width of the top and bottom flange. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"flangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of the top and bottom flange. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"rootRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional fillet radius between inner face of flange and face of web. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"toeRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional fillet radius at the outer edge of the flange. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Steel","isGeneric":"0","descriptionParts":["Steel material to be applied to the section. If null a default material will be extracted from the database. ","This is a BH.oM.Structure.MaterialFragments.Steel: ","Structural steel material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the steel section. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SteelSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created steel I-section. ","This is a BH.oM.Structure.SectionProperties.SteelSection: ","Steel section to be used on Bars. Defined by a section profile."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"SteelFabricatedISection","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a fabricated steel I-section from input dimensions. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full height of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"webThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of the web. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"topFlangeWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Width of the top flange. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"topFlangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of the top flange. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"botFlangeWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Width of the bottom flange. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"botFlangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of the bottom flange. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"weldSize","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional fillet weld size between web and flanges. Measured as the distance between intersection of web and flange perpendicular to the edge of the weld. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Steel","isGeneric":"0","descriptionParts":["Steel material to be applied to the section. If null a default material will be extracted from the database. ","This is a BH.oM.Structure.MaterialFragments.Steel: ","Structural steel material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the steel section. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SteelSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created fabricated steel I-section. ","This is a BH.oM.Structure.SectionProperties.SteelSection: ","Steel section to be used on Bars. Defined by a section profile."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"SteelBoxSection","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a steel box-section from input dimensions. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full height of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"width","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full width of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"thickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of the webs and flanges. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"innerRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional inner corner radius. Typically set equal to the thickness. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"outerRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional outer corner radius. Typically set to 1.5-2 times the thickness. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Steel","isGeneric":"0","descriptionParts":["Steel material to be applied to the section. If null a default material will be extracted from the database. ","This is a BH.oM.Structure.MaterialFragments.Steel: ","Structural steel material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the steel section. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SteelSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created steel box-section. ","This is a BH.oM.Structure.SectionProperties.SteelSection: ","Steel section to be used on Bars. Defined by a section profile."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"FabricatedSteelBoxSection","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a fabricated steel box-section from input dimensions. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full height of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"width","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full width of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"webThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of the webs. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"flangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of the flanges. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"weldSize","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional fillet weld size between inside of web and flanges. Measured as the distance between intersection of web and flange perpendicular to the edge of the weld. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Steel","isGeneric":"0","descriptionParts":["Steel material to be applied to the section. If null a default material will be extracted from the database. ","This is a BH.oM.Structure.MaterialFragments.Steel: ","Structural steel material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the steel section. This is required for most structural packages to create the section. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SteelSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created fabricated steel box-section. ","This is a BH.oM.Structure.SectionProperties.SteelSection: ","Steel section to be used on Bars. Defined by a section profile."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"SteelTubeSection","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a circular hollow steel section from input dimensions. ",""],"inputs":[{"inputName":"diameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Outer diameter of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"thickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Plate thickness of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Steel","isGeneric":"0","descriptionParts":["Steel material to be applied to the section. If null a default material will be extracted from the database. ","This is a BH.oM.Structure.MaterialFragments.Steel: ","Structural steel material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the steel section. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SteelSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created circular hollow steel section. ","This is a BH.oM.Structure.SectionProperties.SteelSection: ","Steel section to be used on Bars. Defined by a section profile."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"SteelRectangleSection","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a rectangular solid steel section from input dimensions. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Height of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"width","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Width of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"cornerRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional corner radius for the section. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Steel","isGeneric":"0","descriptionParts":["Steel material to be applied to the section. If null a default material will be extracted from the database. ","This is a BH.oM.Structure.MaterialFragments.Steel: ","Structural steel material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the steel section. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SteelSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created rectangular solid steel section. ","This is a BH.oM.Structure.SectionProperties.SteelSection: ","Steel section to be used on Bars. Defined by a section profile."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"SteelCircularSection","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a circular solid steel section from input dimensions. ",""],"inputs":[{"inputName":"diameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Diameter of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Steel","isGeneric":"0","descriptionParts":["Steel material to be applied to the section. If null a default material will be extracted from the database. ","This is a BH.oM.Structure.MaterialFragments.Steel: ","Structural steel material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the steel section. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SteelSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created circular solid steel section. ","This is a BH.oM.Structure.SectionProperties.SteelSection: ","Steel section to be used on Bars. Defined by a section profile."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"SteelTSection","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a steel T-section from input dimensions. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full height of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"webThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of the web. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"flangeWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Width of the top and bottom flange. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"flangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of the top and bottom flange. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"rootRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional fillet radius between inner face of flange and face of web. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"toeRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional fillet radius at the outer edge of the flange. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Steel","isGeneric":"0","descriptionParts":["Steel material to be applied to the section. If null a default material will be extracted from the database. ","This is a BH.oM.Structure.MaterialFragments.Steel: ","Structural steel material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the steel section. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SteelSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created steel T-section. ","This is a BH.oM.Structure.SectionProperties.SteelSection: ","Steel section to be used on Bars. Defined by a section profile."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"SteelAngleSection","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a steel angle section from input dimensions. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full height of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"webThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of the web. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"width","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full width of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"flangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of the top and bottom flange. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"rootRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional fillet radius between inner face of flange and face of web. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"toeRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional fillet radius at the outer edge of the flange. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Steel","isGeneric":"0","descriptionParts":["Steel material to be applied to the section. If null a default material will be extracted from the database. ","This is a BH.oM.Structure.MaterialFragments.Steel: ","Structural steel material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the steel section. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SteelSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created steel L-section. ","This is a BH.oM.Structure.SectionProperties.SteelSection: ","Steel section to be used on Bars. Defined by a section profile."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"SteelFreeFormSection","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a steel freeform section based on edge curves. Please note that this type of section generally will have less support in adapters. If the type of section being created can be achieved by any other profile, aim use them instead. ",""],"inputs":[{"inputName":"edges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Edges defining the section. Should consist of closed curve(s) in the global xy-plane. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Steel","isGeneric":"0","descriptionParts":["Steel material to be applied to the section. If null a default material will be extracted from the database. ","This is a BH.oM.Structure.MaterialFragments.Steel: ","Structural steel material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the steel section. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SteelSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created free form steel section. ","This is a BH.oM.Structure.SectionProperties.SteelSection: ","Steel section to be used on Bars. Defined by a section profile."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"SteelSectionFromProfile","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a steel section based on a Profile and a material. "," This is the main create method for steel sections, responsible for calculating section constants etc. and is being called from all other create methods for steel sections. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["The section profile the steel section. All section constants are derived based on the dimensions of this. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Steel","isGeneric":"0","descriptionParts":["Steel material to be applied to the section. If null a default material will be extracted from the database. ","This is a BH.oM.Structure.MaterialFragments.Steel: ","Structural steel material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the steel section. If null or empty the name of the profile will be used. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"SteelSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created steel section. ","This is a BH.oM.Structure.SectionProperties.SteelSection: ","Steel section to be used on Bars. Defined by a section profile."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"AreaDifferentialTemperatureLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a differential temperature load to be applied to area elements such as Panels and FEMeshes. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"positions","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The parametric distance distance from the top (local z) or left (local y) of the property. ","This is a List<Double>"],"isRequired":1,"isInterface":0},{"inputName":"temperatures","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The temperature at the corresponding position on the surface property. ","This is a List<Double>"],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"IAreaElement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The collection of elements the load should be applied to. ","This is a IEnumerable<IAreaElement> ","This can be of the following types: FEMesh, Surface, Panel"],"isRequired":1,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"AreaDifferentialTemperatureLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created AreaDifferentialTempratureLoad. ","This is a BH.oM.Structure.Loads.AreaDifferentialTemperatureLoad: ","Vertical differential temperature load for area elements such as Panels and FEMeshes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"AreaDifferentialTemperatureLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a differential temperature load to be applied to area elements such as Panels and FEMeshes. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"topTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The temperature at the top of the specified local axis e.g. the top of the property in the local z or the left of it in the local y. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"bottomTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The temperature at the bottom of the specific local axis e.g. the bottom of the property in the local z or the right of it in the local y. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"IAreaElement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The collection of elements the load should be applied to. ","This is a IEnumerable<IAreaElement> ","This can be of the following types: FEMesh, Surface, Panel"],"isRequired":1,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"AreaDifferentialTemperatureLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created AreaDifferentialTempratureLoad. ","This is a BH.oM.Structure.Loads.AreaDifferentialTemperatureLoad: ","Vertical differential temperature load for area elements such as Panels and FEMeshes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"AreaUniformTemperatureLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates an uniform temperature load to be applied to area elements such as Panels and FEMeshes. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"temperatureChange","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Uniform change of temperature of the element. ",""],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"IAreaElement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The collection of elements the load should be applied to. ","This is a IEnumerable<IAreaElement> ","This can be of the following types: FEMesh, Surface, Panel"],"isRequired":1,"isInterface":1},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"projected","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true the load is projected to the element. This means that the load will be reduced when its direction is at an angle to the element. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"AreaUniformTemperatureLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created AreaUniformTempratureLoad. ","This is a BH.oM.Structure.Loads.AreaUniformTemperatureLoad: ","Uniform temperature load for area elements such as Panels and FEMeshes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"AreaUniformTemperatureLoad","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase."],"isRequired":1,"isInterface":0},{"inputName":"t","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"group","namespace":"BH.oM.Base","memberName":"BHoMGroup","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"IAreaElement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Base.BHoMGroup<BH.oM.Structure.Elements.IAreaElement>"],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadAxis ","Enum values: ","-Global ","-Local"],"isRequired":0,"isInterface":0},{"inputName":"projected","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"AreaUniformTemperatureLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.AreaUniformTemperatureLoad: ","Uniform temperature load for area elements such as Panels and FEMeshes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"AreaUniformlyDistributedLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates an uniformly distributed load to be applied to area elements such as Panels and FEMeshes. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["The force per area to be applied to the elements. ","This is a Pressure [Pa] (as a BH.oM.Geometry.Vector) ",""],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"IAreaElement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The collection of elements the load should be applied to. ","This is a IEnumerable<IAreaElement> ","This can be of the following types: FEMesh, Surface, Panel"],"isRequired":1,"isInterface":1},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"projected","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true the load is projected to the element. This means that the load will be reduced when its direction is at an angle to the element. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"AreaUniformlyDistributedLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created AreaUniformlyDistributedLoad. ","This is a BH.oM.Structure.Loads.AreaUniformlyDistributedLoad: ","Uniform area load for area elements such as Panels and FEMeshes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"AreaUniformlyDistributedLoad","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase."],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"group","namespace":"BH.oM.Base","memberName":"BHoMGroup","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"IAreaElement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Base.BHoMGroup<BH.oM.Structure.Elements.IAreaElement>"],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadAxis ","Enum values: ","-Global ","-Local"],"isRequired":0,"isInterface":0},{"inputName":"projected","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"AreaUniformlyDistributedLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.AreaUniformlyDistributedLoad: ","Uniform area load for area elements such as Panels and FEMeshes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"AreaUniformalyDistributedLoad","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase."],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"group","namespace":"BH.oM.Base","memberName":"BHoMGroup","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"IAreaElement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Base.BHoMGroup<BH.oM.Structure.Elements.IAreaElement>"],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadAxis ","Enum values: ","-Global ","-Local"],"isRequired":0,"isInterface":0},{"inputName":"projected","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"AreaUniformlyDistributedLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.AreaUniformlyDistributedLoad: ","Uniform area load for area elements such as Panels and FEMeshes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"AreaUniformalyDistributedLoad","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase."],"isRequired":1,"isInterface":0},{"inputName":"pressure","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"IAreaElement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<IAreaElement> ","This can be of the following types: FEMesh, Surface, Panel"],"isRequired":1,"isInterface":1},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadAxis ","Enum values: ","-Global ","-Local"],"isRequired":0,"isInterface":0},{"inputName":"projected","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"AreaUniformlyDistributedLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.AreaUniformlyDistributedLoad: ","Uniform area load for area elements such as Panels and FEMeshes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarPointLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a point load to be applied to Bar elements. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"group","namespace":"BH.oM.Base","memberName":"BHoMGroup","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The group of Bars that the load should be applied to. For most analysis packages the objects added here need to be pulled from the analysis package before being assigned to the load. ","This is a BH.oM.Base.BHoMGroup<BH.oM.Structure.Elements.Bar> ",""],"isRequired":1,"isInterface":0},{"inputName":"distFromA","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"force","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Magnitude and direction of the Force. The load requires the Force and/or the Moment Vector to be non-zero to have any effect. ","This is a Force [N] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"moment","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Magnitude and direction of the Moment. The load requires the Force and/or the Moment Vector to be non-zero to have any effect. ","This is a Force [N] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarPointLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created BarPointLoad. ","This is a BH.oM.Structure.Loads.BarPointLoad: ","Point load to be applied for Bars, positioned a set distance from the StartNode."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarPointLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a point load to be applied to Bar elements. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"distFromA","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Bars the load should be applied to. ","This is a IEnumerable<Bar>"],"isRequired":1,"isInterface":1},{"inputName":"force","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Magnitude and direction of the Force. The load requires the Force and/or the Moment Vector to be non-zero to have any effect. ","This is a Force [N] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"moment","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Magnitude and direction of the Moment. The load requires the Force and/or the Moment Vector to be non-zero to have any effect. ","This is a Force [N] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarPointLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created BarPointLoad. ","This is a BH.oM.Structure.Loads.BarPointLoad: ","Point load to be applied for Bars, positioned a set distance from the StartNode."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarPrestressLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a prestress load to be applied to Bars. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"prestress","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Prestress force to be applied to the Bar. Positive for tension, negative for compression. ",""],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Bars the load should be applied to. ","This is a IEnumerable<Bar>"],"isRequired":1,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarPrestressLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created BarPrestressLoad. ","This is a BH.oM.Structure.Loads.BarPrestressLoad: ","Axial prestress load applied to Bars."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarPrestressLoad","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase."],"isRequired":1,"isInterface":0},{"inputName":"prestress","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"group","namespace":"BH.oM.Base","memberName":"BHoMGroup","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Base.BHoMGroup<BH.oM.Structure.Elements.Bar>"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarPrestressLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.BarPrestressLoad: ","Axial prestress load applied to Bars."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarDifferentialTemperatureLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates an differential temprature load to be applied to Bars. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"positions","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The parametric distance distance from the top (local z) or left (local y) of the profile. ","This is a List<Double>"],"isRequired":1,"isInterface":0},{"inputName":"temperatures","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The temperature at the corresponding position on the profile. ","This is a List<Double>"],"isRequired":1,"isInterface":0},{"inputName":"localLoadDirection","namespace":"BH.oM.Structure.Loads","memberName":"DifferentialTemperatureLoadDirection","isGeneric":"0","descriptionParts":["The local direction of the temperature variation relative to the profile. Typically limited to local y or z. ","This is a BH.oM.Structure.Loads.DifferentialTemperatureLoadDirection ","Enum values: ","-LocalY ","-LocalZ"],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Bars the load should be applied to. ","This is a IEnumerable<Bar>"],"isRequired":1,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarDifferentialTemperatureLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created BarDifferentialTemperatureLoad. ","This is a BH.oM.Structure.Loads.BarDifferentialTemperatureLoad: ","Differential temperature load for Bars."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarDifferentialTemperatureLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates an differential temprature load to be applied to Bars. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"topTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The temperature at the top of the specified local axis e.g. the top of the surface property in the local z or the left of it in the local y. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"bottomTemperature","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The temperature at the bottom of the specific local axis e.g. the bottom of the surface property in the local z or the right of it in the local y. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"localLoadDirection","namespace":"BH.oM.Structure.Loads","memberName":"DifferentialTemperatureLoadDirection","isGeneric":"0","descriptionParts":["The local direction of the temperature variation relative to the profile. Typically limited to local y or z. ","This is a BH.oM.Structure.Loads.DifferentialTemperatureLoadDirection ","Enum values: ","-LocalY ","-LocalZ"],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of elements the load should be applied to. ","This is a IEnumerable<Bar>"],"isRequired":1,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarDifferentialTemperatureLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created AreaUniformTempratureLoad. ","This is a BH.oM.Structure.Loads.BarDifferentialTemperatureLoad: ","Differential temperature load for Bars."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarUniformTemperatureLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates an uniform temprature load to be applied to Bars. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"temperatureChange","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Uniform temperature change of the Bar. ",""],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Bars the load should be applied to. ","This is a IEnumerable<Bar>"],"isRequired":1,"isInterface":1},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"projected","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true the load is projected to the element. This means that the load will be reduced when its direction is at an angle to the element. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarUniformTemperatureLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created BarUniformTemperatureLoad. ","This is a BH.oM.Structure.Loads.BarUniformTemperatureLoad: ","Uniform temperature load for Bars."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarUniformTemperatureLoad","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase."],"isRequired":1,"isInterface":0},{"inputName":"temperatureChange","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"group","namespace":"BH.oM.Base","memberName":"BHoMGroup","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Base.BHoMGroup<BH.oM.Structure.Elements.Bar>"],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadAxis ","Enum values: ","-Global ","-Local"],"isRequired":0,"isInterface":0},{"inputName":"projected","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarUniformTemperatureLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.BarUniformTemperatureLoad: ","Uniform temperature load for Bars."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarUniformlyDistributedLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a uniformly distributed load to be applied to Bar elements. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"group","namespace":"BH.oM.Base","memberName":"BHoMGroup","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The group of Bars that the load should be applied to. For most analysis packages the objects added here need to be pulled from the analysis package before being assigned to the load. ","This is a BH.oM.Base.BHoMGroup<BH.oM.Structure.Elements.Bar> ",""],"isRequired":1,"isInterface":0},{"inputName":"force","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Force per length unit to be applied to the full length of the Bar. The load requires the Force and/or the Moment Vector to be non-zero to have any effect. ","This is a ForcePerUnitLength [N/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"moment","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Moment per length unit to be applied to the full length of the Bar. The load requires the Force and/or the Moment Vector to be non-zero to have any effect. ","This is a MomentPerUnitLength [N.m/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"projected","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true the load is projected to the element. This means that the load will be reduced when its direction is at an angle to the element. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarUniformlyDistributedLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created BarPointLoad. ","This is a BH.oM.Structure.Loads.BarUniformlyDistributedLoad: ","Uniformly distributed load applied to Bars. Can be used to apply force and/or moments."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarUniformlyDistributedLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a uniformly distributed load to be applied to Bar elements. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Bars the load should be applied to. ","This is a IEnumerable<Bar>"],"isRequired":1,"isInterface":1},{"inputName":"force","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Force per length unit to be applied to the full length of the Bar. The load requires the Force and/or the Moment Vector to be non-zero to have any effect. ","This is a ForcePerUnitLength [N/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"moment","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Moment per length unit to be applied to the full length of the Bar. The load requires the Force and/or the Moment Vector to be non-zero to have any effect. ","This is a MomentPerUnitLength [N.m/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"projected","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true the load is projected to the element. This means that the load will be reduced when its direction is at an angle to the element. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarUniformlyDistributedLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created BarPointLoad. ","This is a BH.oM.Structure.Loads.BarUniformlyDistributedLoad: ","Uniformly distributed load applied to Bars. Can be used to apply force and/or moments."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarVaryingDistributedLoadDistanceBothEnds","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a varying distributed load to be applied to Bar elements.","Creates the load measuring the distance from the start node to the start of the load and from the end node to the end of the load.","Method will group Bars by their length, according to the tolerance, and return one load for each group. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"group","namespace":"BH.oM.Base","memberName":"BHoMGroup","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The group of Bars that the load should be applied to. For most analysis packages the objects added here need to be pulled from the analysis package before being assigned to the load. ","This is a BH.oM.Base.BHoMGroup<BH.oM.Structure.Elements.Bar> ",""],"isRequired":1,"isInterface":0},{"inputName":"relativePositions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, the StartPosition and EndPosition will be normalised lengths where 0 means start and 1 means end.","If false, the StartPosition and EndPosition will be absolute distances. ",""],"isRequired":1,"isInterface":0},{"inputName":"startToStartDistance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance along each Bar from the StartNode to the start of the load. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"forceAtStart","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction and magnitude of the force at the start of the loaded region. ","This is a ForcePerUnitLength [N/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"momentAtStart","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction and magnitude of the moment at the start of the loaded region. ","This is a MomentPerUnitLength [N.m/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"endToEndDistance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance along each Bar from the EndNode to the end of the load. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"forceAtEnd","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction and magnitude of the force at the end of the loaded region. ","This is a ForcePerUnitLength [N/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"momentAtEnd","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction and magnitude of the moment at the end of the loaded region. ","This is a MomentPerUnitLength [N.m/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"projected","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true the load is projected to the element. This means that the load will be reduced when its direction is at an angle to the element. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"groupingTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The maximum difference in length between the Bars for the grouping. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Loads","memberName":"BarVaryingDistributedLoad","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The created BarVaryingDistributedLoads with bars grouped by length. ","This is a List<BarVaryingDistributedLoad>"]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarVaryingDistributedLoadDistanceBothEnds","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a varying distributed load to be applied to Bar elements.","Creates the load measuring the distance from the start node to the start of the load and from the end node to the end of the load.","Method will group Bars by their length, according to the tolerance, and return one load for each group. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Bars the load should be applied to. ","This is a IEnumerable<Bar>"],"isRequired":1,"isInterface":1},{"inputName":"relativePositions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, the StartPosition and EndPosition will be normalised lengths where 0 means start and 1 means end.","If false, the StartPosition and EndPosition will be absolute distances. ",""],"isRequired":1,"isInterface":0},{"inputName":"startToStartDistance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance along each Bar from the StartNode to the start of the load. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"forceAtStart","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction and magnitude of the force at the start of the loaded region. ","This is a ForcePerUnitLength [N/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"momentAtStart","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction and magnitude of the moment at the start of the loaded region. ","This is a MomentPerUnitLength [N.m/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"endToEndDistance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance along each Bar from the EndNode to the end of the load. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"forceAtEnd","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction and magnitude of the force at the end of the loaded region. ","This is a ForcePerUnitLength [N/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"momentAtEnd","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction and magnitude of the moment at the end of the loaded region. ","This is a MomentPerUnitLength [N.m/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"projected","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true the load is projected to the element. This means that the load will be reduced when its direction is at an angle to the element. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"groupingTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The maximum difference in length between the Bars for the grouping. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Loads","memberName":"BarVaryingDistributedLoad","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The created BarVaryingDistributedLoads with bars grouped by length. ","This is a List<BarVaryingDistributedLoad>"]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarVaryingDistributedLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a varying distributed load to be applied to Bar elements. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"group","namespace":"BH.oM.Base","memberName":"BHoMGroup","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The group of Bars that the load should be applied to. For most analysis packages the objects added here need to be pulled from the analysis package before being assigned to the load. ","This is a BH.oM.Base.BHoMGroup<BH.oM.Structure.Elements.Bar> ",""],"isRequired":1,"isInterface":0},{"inputName":"startPosition","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance along the bar between the start node and the start of the loaded region.","If RelativePositions is true, this value will be a normalised length where 0 means start and 1 means end, which means this value needs to be within this range.","If RelativePositions is false, this value will be in absolute distances. ",""],"isRequired":0,"isInterface":0},{"inputName":"forceAtStart","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction and magnitude of the force at the start of the loaded region. ","This is a ForcePerUnitLength [N/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"momentAtStart","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction and magnitude of the moment at the start of the loaded region. ","This is a MomentPerUnitLength [N.m/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"endPosition","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance along the bar between the start node and the end of the loaded region.","If RelativePositions is true, this value will be a normalised length where 0 means start and 1 means end, which means this value needs to be within this range.","If RelativePositions is false, this value will be in absolute distances. ",""],"isRequired":0,"isInterface":0},{"inputName":"forceAtEnd","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction and magnitude of the force at the end of the loaded region. ","This is a ForcePerUnitLength [N/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"momentAtEnd","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction and magnitude of the moment at the end of the loaded region. ","This is a MomentPerUnitLength [N.m/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"relativePositions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, the StartPosition and EndPosition will be normalised lengths where 0 means start and 1 means end.","If false, the StartPosition and EndPosition will be absolute distances. ",""],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"projected","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true the load is projected to the element. This means that the load will be reduced when its direction is at an angle to the element. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarVaryingDistributedLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created BarVaryingDistributedLoad. ","This is a BH.oM.Structure.Loads.BarVaryingDistributedLoad: ","Varying distributed load for bar elements. Can be used to apply force and/or moments."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarVaryingDistributedLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a varying distributed load to be applied to Bar elements. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Bars the load should be applied to. ","This is a IEnumerable<Bar>"],"isRequired":1,"isInterface":1},{"inputName":"startPosition","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance along the bar between the start node and the start of the loaded region.","If RelativePositions is true, this value will be a normalised length where 0 means start and 1 means end, which means this value needs to be within this range.","If RelativePositions is false, this value will be in absolute distances. ",""],"isRequired":0,"isInterface":0},{"inputName":"forceAtStart","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction and magnitude of the force at the start of the loaded region. ","This is a ForcePerUnitLength [N/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"momentAtStart","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction and magnitude of the moment at the start of the loaded region. ","This is a MomentPerUnitLength [N.m/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"endPosition","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Distance along the bar between the start node and the end of the loaded region.","If RelativePositions is true, this value will be a normalised length where 0 means start and 1 means end, which means this value needs to be within this range.","If RelativePositions is false, this value will be in absolute distances. ",""],"isRequired":0,"isInterface":0},{"inputName":"forceAtEnd","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction and magnitude of the force at the end of the loaded region. ","This is a ForcePerUnitLength [N/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"momentAtEnd","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction and magnitude of the moment at the end of the loaded region. ","This is a MomentPerUnitLength [N.m/m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"relativePositions","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, the StartPosition and EndPosition will be normalised lengths where 0 means start and 1 means end.","If false, the StartPosition and EndPosition will be absolute distances. ",""],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"projected","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true the load is projected to the element. This means that the load will be reduced when its direction is at an angle to the element. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarVaryingDistributedLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created BarVaryingDistributedLoad. ","This is a BH.oM.Structure.Loads.BarVaryingDistributedLoad: ","Varying distributed load for bar elements. Can be used to apply force and/or moments."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"ContourLoad","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"contour","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"loadVector","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase."],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadAxis ","Enum values: ","-Global ","-Local"],"isRequired":0,"isInterface":0},{"inputName":"projected","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ContourLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.ContourLoad: ","Load to be applied over a region defined by a closed planar Polyline."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"GeometricalLineLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a GeometricalLineLoad with a constant force across the length of the Line. ",""],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["Line defining the location of the load. ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications. ",""],"isRequired":1,"isInterface":0},{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"force","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["The force to be applied to the full length of the Line. ","This is a Force [N] (as a BH.oM.Geometry.Vector)"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GeometricalLineLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created GeometricalLineLoad. ","This is a BH.oM.Structure.Loads.GeometricalLineLoad: ","Distributed load to be applied over a line."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"GeometricalLineLoad","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"location","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase."],"isRequired":1,"isInterface":0},{"inputName":"forceAtStart","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"forceAtEnd","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"momentAtStart","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"momentAtEnd","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GeometricalLineLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.GeometricalLineLoad: ","Distributed load to be applied over a line."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"GravityLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a gravity load to be applied to area elements such as Panels and FEMeshes as well as Bar elements. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"gravityDirection","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["The magnitude and direction of gravity. This will be scaled by the gravity constant g in the analysis, which means a load representing gravity should be a Vector with -1 as its Z-component. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space. ",""],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The collection of elements the load should be applied to. ","This is a IEnumerable<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GravityLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created GravityLoad. ","This is a BH.oM.Structure.Loads.GravityLoad: ","Gravity load to be applied to elements such as Bars, Panels and FEMeshes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"GravityLoad","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase."],"isRequired":1,"isInterface":0},{"inputName":"gravityDirection","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0},{"inputName":"group","namespace":"BH.oM.Base","memberName":"BHoMGroup","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"BHoMObject","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Base.BHoMGroup<BH.oM.Base.BHoMObject>"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GravityLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.GravityLoad: ","Gravity load to be applied to elements such as Bars, Panels and FEMeshes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"PointVelocity","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a point velocity to be applied to Nodes. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"group","namespace":"BH.oM.Base","memberName":"BHoMGroup","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Node","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The group of Nodes that the load should be applied to. For most analysis packages the objects added here need to be pulled from the analysis package before being assigned to the load. ","This is a BH.oM.Base.BHoMGroup<BH.oM.Structure.Elements.Node> ",""],"isRequired":1,"isInterface":0},{"inputName":"translationalVelocity","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a Velocity [m/s] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"rotationalVelocity","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a AngularVelocity [rad/s] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PointVelocity","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created PointVelocity. ","This is a BH.oM.Structure.Loads.PointVelocity: ","Point velocity load for Nodes. This can be used to apply translational as well as angular velocity."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"PointVelocity","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a point velocity to be applied to Nodes. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Node","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Nodes the load should be applied to. ","This is a IEnumerable<Node>"],"isRequired":1,"isInterface":1},{"inputName":"translationalVelocity","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a Velocity [m/s] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"rotationalVelocity","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a AngularVelocity [rad/s] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PointVelocity","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created PointVelocity. ","This is a BH.oM.Structure.Loads.PointVelocity: ","Point velocity load for Nodes. This can be used to apply translational as well as angular velocity."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"PointLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a point load to be applied to Nodes. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"group","namespace":"BH.oM.Base","memberName":"BHoMGroup","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Node","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The group of Nodes that the load should be applied to. For most analysis packages the objects added here need to be pulled from the analysis package before being assigned to the load. ","This is a BH.oM.Base.BHoMGroup<BH.oM.Structure.Elements.Node> ",""],"isRequired":1,"isInterface":0},{"inputName":"force","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a Force [N] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"moment","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a Moment [N.m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PointLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created PointLoad. ","This is a BH.oM.Structure.Loads.PointLoad: ","Point load for Nodes. This can be used to apply force as well as moment."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"PointLoad","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a point load to be applied to Nodes. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Node","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Nodes the load should be applied to. ","This is a IEnumerable<Node>"],"isRequired":1,"isInterface":1},{"inputName":"force","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a Force [N] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"moment","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a Moment [N.m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PointLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created PointLoad. ","This is a BH.oM.Structure.Loads.PointLoad: ","Point load for Nodes. This can be used to apply force as well as moment."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"PointForce","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase."],"isRequired":1,"isInterface":0},{"inputName":"group","namespace":"BH.oM.Base","memberName":"BHoMGroup","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Node","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a BH.oM.Base.BHoMGroup<BH.oM.Structure.Elements.Node>"],"isRequired":1,"isInterface":0},{"inputName":"force","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"moment","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadAxis ","Enum values: ","-Global ","-Local"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PointLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.PointLoad: ","Point load for Nodes. This can be used to apply force as well as moment."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"PointForce","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase."],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Node","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Node>"],"isRequired":1,"isInterface":1},{"inputName":"force","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"moment","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadAxis ","Enum values: ","-Global ","-Local"],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PointLoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.PointLoad: ","Point load for Nodes. This can be used to apply force as well as moment."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"PointDisplacement","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a point displacement to be applied to Nodes. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"group","namespace":"BH.oM.Base","memberName":"BHoMGroup","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Node","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The group of Nodes that the load should be applied to. For most analysis packages the objects added here need to be pulled from the analysis package before being assigned to the load. ","This is a BH.oM.Base.BHoMGroup<BH.oM.Structure.Elements.Node> ",""],"isRequired":1,"isInterface":0},{"inputName":"translation","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a Length [m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"rotation","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a Angle [rad] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PointDisplacement","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created PointDisplacement. ","This is a BH.oM.Structure.Loads.PointDisplacement: ","Point displacement for Nodes. This can be used to apply translation as well as rotation."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"PointDisplacement","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a point displacement to be applied to Nodes. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Node","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Nodes the load should be applied to. ","This is a IEnumerable<Node>"],"isRequired":1,"isInterface":1},{"inputName":"translation","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a Length [m] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"rotation","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a Angle [rad] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PointDisplacement","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created PointDisplacement. ","This is a BH.oM.Structure.Loads.PointDisplacement: ","Point displacement for Nodes. This can be used to apply translation as well as rotation."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"PointAcceleration","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a point acceleration to be applied to Nodes. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"group","namespace":"BH.oM.Base","memberName":"BHoMGroup","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Node","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The group of Nodes that the load should be applied to. For most analysis packages the objects added here need to be pulled from the analysis package before being assigned to the load. ","This is a BH.oM.Base.BHoMGroup<BH.oM.Structure.Elements.Node> ",""],"isRequired":1,"isInterface":0},{"inputName":"translationAcc","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a Acceleration [m/s²] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"rotationAcc","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a AngularAcceleration [rad/s²] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PointAcceleration","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created PointAcceleration. ","This is a BH.oM.Structure.Loads.PointAcceleration: ","Point acceleration load for Nodes. This can be used to apply translational as well as angular acceleration."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"PointAcceleration","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a point acceleration to be applied to Nodes. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["The Loadcase in which the load is applied. ","This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase. ",""],"isRequired":1,"isInterface":0},{"inputName":"objects","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Node","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Nodes the load should be applied to. ","This is a IEnumerable<Node>"],"isRequired":1,"isInterface":1},{"inputName":"translationAcc","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a Acceleration [m/s²] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"rotationAcc","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["This is a AngularAcceleration [rad/s²] (as a BH.oM.Geometry.Vector) ",""],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether the load is applied in local or global coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created load. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"PointAcceleration","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created PointAcceleration. ","This is a BH.oM.Structure.Loads.PointAcceleration: ","Point acceleration load for Nodes. This can be used to apply translational as well as angular acceleration."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Aluminium","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a structural Aluminium material fragment to be used on analytical structural elements, or as a fragment of the physical material. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created Aluminium material. This is required for various structural packages to create the object. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"youngsModulus","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modulus of elasticity of the material. Ratio between axial stress and axial strain. ",""],"isRequired":0,"isInterface":0},{"inputName":"poissonsRatio","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Ratio between axial and transverse strain. Used together with YoungsModulus to derive the ShearModulus for isotropic materials. ",""],"isRequired":0,"isInterface":0},{"inputName":"thermalExpansionCoeff","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The strain induced in the material per unit change of temperature. ",""],"isRequired":0,"isInterface":0},{"inputName":"density","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":0,"isInterface":0},{"inputName":"dampingRatio","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Dynamic damping ratio, expressed as a ratio between actual damping and critical damping. For structures, typically taken as 0.02 (i.e. 2%). ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Aluminium","namespace":"BH.oM.Structure.MaterialFragments","isGeneric":"0","descriptionParts":["The created structural Aluminium material fragment. ","This is a BH.oM.Structure.MaterialFragments.Aluminium: ","Structural aluminium material to be used on structural elements and properties or as a fragment of the physical material."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Concrete","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a structural Concrete material fragment to be used on analytical structural elements, or as a fragment of the physical material. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created Concrete material. This is required for various structural packages to create the object. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"youngsModulus","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modulus of elasticity of the material. Ratio between axial stress and axial strain. ",""],"isRequired":0,"isInterface":0},{"inputName":"poissonsRatio","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Ratio between axial and transverse strain. Used together with YoungsModulus to derive the ShearModulus for isotropic materials. ",""],"isRequired":0,"isInterface":0},{"inputName":"thermalExpansionCoeff","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The strain induced in the material per unit change of temperature. ",""],"isRequired":0,"isInterface":0},{"inputName":"density","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":0,"isInterface":0},{"inputName":"dampingRatio","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Dynamic damping ratio, expressed as a ratio between actual damping and critical damping. For structures, typically taken as 0.02 (i.e. 2%). ",""],"isRequired":0,"isInterface":0},{"inputName":"cubeStrength","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"cylinderStrength","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Concrete","namespace":"BH.oM.Structure.MaterialFragments","isGeneric":"0","descriptionParts":["The created structural Concrete material fragment. ","This is a BH.oM.Structure.MaterialFragments.Concrete: ","Structural concrete material to be used on structural elements and properties or as a fragment of the physical material."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Steel","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a structural Steel material fragment to be used on analytical structural elements, or as a fragment of the physical material. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created Steel material. This is required for various structural packages to create the object. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"youngsModulus","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modulus of elasticity of the material. Ratio between axial stress and axial strain. ",""],"isRequired":0,"isInterface":0},{"inputName":"poissonsRatio","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Ratio between axial and transverse strain. Used together with YoungsModulus to derive the ShearModulus for isotropic materials. ",""],"isRequired":0,"isInterface":0},{"inputName":"thermalExpansionCoeff","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The strain induced in the material per unit change of temperature. ",""],"isRequired":0,"isInterface":0},{"inputName":"density","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":0,"isInterface":0},{"inputName":"dampingRatio","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Dynamic damping ratio, expressed as a ratio between actual damping and critical damping. For structures, typically taken as 0.02 (i.e. 2%). ",""],"isRequired":0,"isInterface":0},{"inputName":"yieldStress","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"ultimateStress","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Steel","namespace":"BH.oM.Structure.MaterialFragments","isGeneric":"0","descriptionParts":["The created structural Steel material fragment. ","This is a BH.oM.Structure.MaterialFragments.Steel: ","Structural steel material to be used on structural elements and properties or as a fragment of the physical material."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarResultRequest","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a request for extracting Bar results from an adapter. ",""],"inputs":[{"inputName":"resultType","namespace":"BH.oM.Structure.Requests","memberName":"BarResultType","isGeneric":"0","descriptionParts":[],"isRequired":0,"isInterface":0},{"inputName":"divisionType","namespace":"BH.oM.Structure.Requests","memberName":"DivisionType","isGeneric":"0","descriptionParts":["Defines which internal points results should be extracted for. For evenly distributed the bar is split into equal length segments, controlled by the divisions. For ExtremeValues the positions with extreme forces for any DOF will be included, which means you might get more/less values than stated in the Divisions. ",""],"isRequired":0,"isInterface":0},{"inputName":"divisions","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Defines how many points along the bar that results should be extracted for. ",""],"isRequired":0,"isInterface":0},{"inputName":"cases","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Defines which cases and/or combinations that results should be extracted for. Can generally be set to either Loadcase or Loadcombination objects, or identifiers matching the software. If nothing is provided, results for all cases will be assumed. ",""],"isRequired":0,"isInterface":0},{"inputName":"modes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Defines for which modes results should be extracted. Only applicable for some casetypes. If nothing is provided, results for all modes will be assumed. ",""],"isRequired":0,"isInterface":0},{"inputName":"objectIds","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Defines which Bars that results should be extracted for. Can generally be set to either pulled Bar objects, or identifiers matching the software. If nothing is provided, results for all Bars will be assumed. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarResultRequest","namespace":"BH.oM.Structure.Requests","isGeneric":"0","descriptionParts":["The created BarResultRequest. ","This is a BH.oM.Structure.Requests.BarResultRequest: ","Request for extracting Bar results from an adapter."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"GlobalResultRequest","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a request for extracting global structural results from an adapter. ",""],"inputs":[{"inputName":"resultType","namespace":"BH.oM.Structure.Requests","memberName":"GlobalResultType","isGeneric":"0","descriptionParts":["Defines which type of results that should be extracted. ",""],"isRequired":0,"isInterface":0},{"inputName":"cases","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Defines which cases and/or combinations that results should be extracted for. Can generally be set to either Loadcase or Loadcombination objects, or identifiers matching the software. If nothing is provided, results for all cases will be assumed. ",""],"isRequired":0,"isInterface":0},{"inputName":"modes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Defines for which modes results should be extracted. Only applicable for some casetypes. If nothing is provided, results for all modes will be assumed. ",""],"isRequired":0,"isInterface":0},{"inputName":"objectIds","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Defines which objects that results should be extracted for. Not used for most global results. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GlobalResultRequest","namespace":"BH.oM.Structure.Requests","isGeneric":"0","descriptionParts":["The created GlobalResultRequest. ","This is a BH.oM.Structure.Requests.GlobalResultRequest: ","Request for extracting global structural results from an adapter."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"MeshResultRequest","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a request for extracting mesh results from an adapter. ",""],"inputs":[{"inputName":"resultType","namespace":"BH.oM.Structure.Results","memberName":"MeshResultType","isGeneric":"0","descriptionParts":["Request for extracting bar results from an adapter. ",""],"isRequired":0,"isInterface":0},{"inputName":"smoothing","namespace":"BH.oM.Structure.Results","memberName":"MeshResultSmoothingType","isGeneric":"0","descriptionParts":[],"isRequired":0,"isInterface":0},{"inputName":"layer","namespace":"BH.oM.Structure.Results","memberName":"MeshResultLayer","isGeneric":"0","descriptionParts":[],"isRequired":0,"isInterface":0},{"inputName":"layerPosition","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Position within the element thickness that result is extracted from, normalised to 1. I.e. 0 = lower surface, 0.5 = middle, 1 = top surface. ",""],"isRequired":0,"isInterface":0},{"inputName":"orientation","namespace":"BH.oM.Geometry","memberName":"Basis","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space ",""],"isRequired":0,"isInterface":0},{"inputName":"cases","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Defines which cases and/or combinations that results should be extracted for. Can generally be set to either Loadcase or Loadcombination objects, or identifiers matching the software. If nothing is provided, results for all cases will be assumed. ",""],"isRequired":0,"isInterface":0},{"inputName":"modes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Defines for which modes results should be extracted. Only applicable for some casetypes. If nothing is provided, results for all modes will be assumed. ",""],"isRequired":0,"isInterface":0},{"inputName":"objectIds","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Defines which meshes that results should be extracted for. Can generally be set to either pulled Panel/FEMesh objects, or identifiers matching the software. If nothing is provided, results for all meshes will be assumed. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"MeshResultRequest","namespace":"BH.oM.Structure.Requests","isGeneric":"0","descriptionParts":["The created MeshResultRequest. ","This is a BH.oM.Structure.Requests.MeshResultRequest: ","Request for extracting mesh results from an adapter."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"NodeResultRequest","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a request for extracting Bar results from an adapter. ",""],"inputs":[{"inputName":"resultType","namespace":"BH.oM.Structure.Requests","memberName":"NodeResultType","isGeneric":"0","descriptionParts":["Defines which type of results that should be extracted. ",""],"isRequired":0,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["Defines whether results should be extracted in global coordinates or local node coordinates. ",""],"isRequired":0,"isInterface":0},{"inputName":"cases","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Defines which cases and/or combinations that results should be extracted for. Can generally be set to either Loadcase or Loadcombination objects, or identifiers matching the software. If nothing is provided, results for all cases will be assumed. ",""],"isRequired":0,"isInterface":0},{"inputName":"modes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Defines for which modes results should be extracted. Only applicable for some casetypes. If nothing is provided, results for all modes will be assumed. ",""],"isRequired":0,"isInterface":0},{"inputName":"objectIds","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Defines which Nodes that results should be extracted for. Can generally be set to either pulled Node objects, or identifiers matching the software. If nothing is provided, results for all Nodes will be assumed. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"NodeResultRequest","namespace":"BH.oM.Structure.Requests","isGeneric":"0","descriptionParts":["The created NodeResultRequest. ","This is a BH.oM.Structure.Requests.NodeResultRequest: ","Request for extracting Node results from an adapter."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"AluminiumSectionFromProfile","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a aluminium section based on a Profile and a material. "," This is the main create method for aluminium sections, responsible for calculating section constants etc. and is being called from all other create methods for aluminium sections. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["The section profile the aluminium section. All section constants are derived based on the dimensions of this. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Aluminium","isGeneric":"0","descriptionParts":["aluminium material to be applied to the section. ","This is a BH.oM.Structure.MaterialFragments.Aluminium: ","Structural aluminium material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the aluminium section. If null or empty the name of the profile will be used. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"AluminiumSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created aluminium section. ","This is a BH.oM.Structure.SectionProperties.AluminiumSection: ","Aluminium section to be used on Bars. Defined by a section profile."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"ConstantFramingProperty","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a ConstantFramingProperty from a ISectionProperty and orientation angle. Extracts the SectionProfile (if existing) and Structural MaterialFragment and creates a physical material with the same name. ",""],"inputs":[{"inputName":"sectionProperty","namespace":"BH.oM.Structure.SectionProperties","memberName":"ISectionProperty","isGeneric":"0","descriptionParts":["Structural section property to extract profile and material from. For explicit sections lacking a profile only the material will get extracted. ","This is a BH.oM.Structure.SectionProperties.ISectionProperty: ","Base interface for all bar section properties. Contains the material and all section constants. ","This can be of the following types: AluminiumSection, GenericSection, TimberSection, CableSection, CompositeSection, ConcreteSection, ExplicitSection, SteelSection"],"isRequired":1,"isInterface":1},{"inputName":"orientationAngle","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Defines the sections rotation around its own axis. ","This is a Angle [rad] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the property. If null/empty the name of the section property will be used.  ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ConstantFramingProperty","namespace":"BH.oM.Physical.FramingProperties","isGeneric":"0","descriptionParts":["The constructed physical Constant Framing Property to be used with IFramingElements such as Beams/Columns/Bracing. ","This is a BH.oM.Physical.FramingProperties.ConstantFramingProperty"]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"FEMesh","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a FEMesh based on a geometrical Mesh. ",""],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Geometry","memberName":"Mesh","isGeneric":"0","descriptionParts":["The geometrical Mesh to extract geometrical and topological information from. ","This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."],"isRequired":1,"isInterface":0},{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ISurfaceProperty","isGeneric":"0","descriptionParts":["Defines the thickness property and material of the FEMesh. ","This is a BH.oM.Structure.SurfaceProperties.ISurfaceProperty: ","Base interface for properties for 2D finite element structural objects such as Panels and FEMeshes. ","This can be of the following types: Ribbed, Waffle, ConstantThickness, LoadingPanelProperty ",""],"isRequired":0,"isInterface":1},{"inputName":"localX","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Vector to set as local x of the FEMeshFaces of the FEMesh. Default value of null gives default orientation. If this vector is not in the plane of the FEMeshFace it will get projected. If the vector is parallel to the normal of the FEMeshFace the operation will fail and the FEMeshFace will be assigned default orientation. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created FEMesh. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"FEMesh","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["The created FEMesh with same geometry and topology as the geometrical Mesh. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"ConcreteCircularSection","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a circular solid concrete section from input dimensions. ",""],"inputs":[{"inputName":"diameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Diameter of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Concrete","isGeneric":"0","descriptionParts":["Concrete material to be applied to the section. If null a default material will be extracted from the database. ","This is a BH.oM.Structure.MaterialFragments.Concrete: ","Structural concrete material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the concrete section. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"reinforcement","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"IBarReinforcement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional list of reinforcement to be applied to the section. ","This is a List<IBarReinforcement> ","This can be of the following types: TransverseReinforcement, LongitudinalReinforcement"],"isRequired":0,"isInterface":0},{"inputName":"minimumCover","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum reinforcement cover of the section. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ConcreteSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created circular concrete section. ","This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"ConcreteFreeFormSection","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a concrete freeform section based on edge curves. Please note that this type of section generally will have less support in adapters. If the type of section being created can be achieved by any other profile, aim use them instead. ",""],"inputs":[{"inputName":"edges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Edges defining the section. Should consist of closed curve(s) in the global xy-plane. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Concrete","isGeneric":"0","descriptionParts":["Concrete material to be applied to the section. If null a default material will be extracted from the database. ","This is a BH.oM.Structure.MaterialFragments.Concrete: ","Structural concrete material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the concrete section. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"reinforcement","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"IBarReinforcement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional list of reinforcement to be applied to the section. ","This is a List<IBarReinforcement> ","This can be of the following types: TransverseReinforcement, LongitudinalReinforcement"],"isRequired":0,"isInterface":0},{"inputName":"minimumCover","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum reinforcement cover of the section. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ConcreteSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created free form concrete section. ","This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"ConcreteRectangleSection","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a rectangular solid concrete section from input dimensions. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Height of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"width","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Width of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Concrete","isGeneric":"0","descriptionParts":["Concrete material to be applied to the section. If null a default material will be extracted from the database. ","This is a BH.oM.Structure.MaterialFragments.Concrete: ","Structural concrete material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the concrete section. This is required for various structural packages to create the object. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"reinforcement","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"IBarReinforcement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional list of reinforcement to be applied to the section. ","This is a List<IBarReinforcement> ","This can be of the following types: TransverseReinforcement, LongitudinalReinforcement"],"isRequired":0,"isInterface":0},{"inputName":"minimumCover","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum reinforcement cover of the section. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ConcreteSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created rectangular concrete section. ","This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"ConcreteSectionFromProfile","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a concrete section based on a Profile and a material. "," This is the main create method for concrete sections, responsible for calculating section constants etc. and is being called from all other create methods for concrete sections. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["The section profile the concrete section. All section constants are derived based on the dimensions of this. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Concrete","isGeneric":"0","descriptionParts":["concrete material to be applied to the section. If null a default material will be extracted from the database. ","This is a BH.oM.Structure.MaterialFragments.Concrete: ","Structural concrete material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the concrete section. If null or empty the name of the profile will be used. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"reinforcement","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"IBarReinforcement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional list of reinforcement to be applied to the section. ","This is a List<IBarReinforcement> ","This can be of the following types: TransverseReinforcement, LongitudinalReinforcement"],"isRequired":0,"isInterface":0},{"inputName":"minimumCover","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum reinforcement cover of the section. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ConcreteSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created concrete section. ","This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"ConcreteTSection","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a rectangular solid concrete section from input dimensions. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Full height of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"webThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of the web. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"flangeWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Width of the flange. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"flangeThickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Thickness of the flange. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Concrete","isGeneric":"0","descriptionParts":["Concrete material to be applied to the section. If null a default material will be extracted from the database. ","This is a BH.oM.Structure.MaterialFragments.Concrete: ","Structural concrete material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the concrete section. This is required for various structural packages to create the object. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"reinforcement","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"IBarReinforcement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Optional list of reinforcement to be applied to the section. ","This is a List<IBarReinforcement> ","This can be of the following types: TransverseReinforcement, LongitudinalReinforcement"],"isRequired":0,"isInterface":0},{"inputName":"minimumCover","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum reinforcement cover of the section. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ConcreteSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created concrete T-section. ","This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"GenericSectionFromProfile","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a generic section from any shape profile. Should only be used for material types not yet explicitly supported. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["Profile containing the geometric information to be used to create the generic section. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"IMaterialFragment","isGeneric":"0","descriptionParts":["Material to use on the section. ","This is a BH.oM.Structure.MaterialFragments.IMaterialFragment: ","Base interface for structural materials used by structural properties or as a fragment of the physical material. ","This can be of the following types: Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":0,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the section. If no name is provided, the name from the profile will be used. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GenericSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created generic section. ","This is a BH.oM.Structure.SectionProperties.GenericSection: ","Material agnostic section. To be used for sections of material types not yet explicitly supported."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"IResultRequest","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a IResultRequest of the appropriate type based on provided type as well as optional ids, cases and divisions."," As a user, please have a look at BarResultRequest, MeshResultRequest, NodeResultRequest and GlobalResultRequest instead for greater control. ",""],"inputs":[{"inputName":"type","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["Type of result. ","This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"ids","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Object ids to extract results for. ","This is a IEnumerable<Object>"],"isRequired":0,"isInterface":1},{"inputName":"cases","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Cases to extract results for. ","This is a IEnumerable<Object>"],"isRequired":0,"isInterface":1},{"inputName":"divisions","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Only used for bar results. Sets how many points should be looked at for the result extraction. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IResultRequest","namespace":"BH.oM.Data.Requests","isGeneric":"0","descriptionParts":["A resultRequest matching the inputs provided. ","This is a BH.oM.Data.Requests.IResultRequest ","This can be of the following types: PierAndSpandrelForceRequest, BarResultRequest, GlobalResultRequest, MeshResultRequest, NodeResultRequest"]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Timber","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a structural Timber material fragment to be used on analytical structural elements, or as a fragment of the physical material. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created Timber material. This is required for various structural packages to create the object. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"youngsModulus","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Modulus of elasticity of the material. Ratio between axial stress and axial strain. ","This is a YoungsModulus [Pa] (as a BH.oM.Geometry.Vector) ",""],"isRequired":1,"isInterface":0},{"inputName":"poissonsRatio","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Ratio between axial and transverse strain. ","This is a Ratio [-] (as a BH.oM.Geometry.Vector) ",""],"isRequired":1,"isInterface":0},{"inputName":"shearModulus","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["The shear modulus or modulus of rigidity. Defined as the ratio between shear stress and shear strain. ","This is a ShearModulus [Pa] (as a BH.oM.Geometry.Vector) ",""],"isRequired":1,"isInterface":0},{"inputName":"thermalExpansionCoeff","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["The strain induced in the material per unit change of temperature. ","This is a ThermalExpansionCoefficient [1/K] (as a BH.oM.Geometry.Vector) ",""],"isRequired":1,"isInterface":0},{"inputName":"density","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":[],"isRequired":1,"isInterface":0},{"inputName":"dampingRatio","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Dynamic damping ratio, expressed as a ratio between actual damping and critical damping. For structures, typically taken as 0.02 (i.e. 2%). ",""],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Timber","namespace":"BH.oM.Structure.MaterialFragments","isGeneric":"0","descriptionParts":["The created structural Timber material fragment. ","This is a BH.oM.Structure.MaterialFragments.Timber: ","Structural timber material to be used on structural elements and properties or as a fragment of the physical material."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"SectionPropertyFromProfile","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a Section property from a Profile and a Material. The type of section that will be created depends on the material provided. Null material or unsupported materials will return a GenericSection. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["The profile of the section property. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"IMaterialFragment","isGeneric":"0","descriptionParts":["The material of the section property. Used to determain which type of section that will be created. If null or a not yet explicitly supported material type, a generic section will be created. ","This is a BH.oM.Structure.MaterialFragments.IMaterialFragment: ","Base interface for structural materials used by structural properties or as a fragment of the physical material. ","This can be of the following types: Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":0,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the section property. If no name is provided, the name from the profile will be used. This is required for various structural packages to create the object. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IGeometricalSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created section property of a type matching the material provided. ","This is a BH.oM.Structure.SectionProperties.IGeometricalSection: ","Interface for sections based on Shape profiles. ","This can be of the following types: AluminiumSection, GenericSection, TimberSection, ConcreteSection, SteelSection"]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BottomReinforcement","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a LongitudinalReinforcement placing rebars along multiple linear parallel axes along the local y-axis of the ConcreteSection, defined along a vector from one side of the perimeter of ConcreteSection to the other. ","Starts by fitting in as many points as possible in a layer towards the bottom of the section, then generates a new one and repeats. ",""],"inputs":[{"inputName":"diameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Diameter of a single rebar. ",""],"isRequired":1,"isInterface":0},{"inputName":"area","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Total minimum required area of bottom reinforcement. Will be used to calculate required number of bars, based on their diameter, hence the resulting area may be larger than the input value. ","This is a Area [m²] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"spacing","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum spacing allowed between any two rebars. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"startLocation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Normalised length (0 means start, 1 means end) along the element where the rebars start. ",""],"isRequired":0,"isInterface":0},{"inputName":"endLocation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Normalised length (0 means start, 1 means end) along the element where the rebars ends. ",""],"isRequired":0,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"IMaterialFragment","isGeneric":"0","descriptionParts":["Material of the Rebars. If null, a default material will be pulled from the Datasets. ","This is a BH.oM.Structure.MaterialFragments.IMaterialFragment: ","Base interface for structural materials used by structural properties or as a fragment of the physical material. ","This can be of the following types: Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":0,"isInterface":1}],"outputs":{"memberName":"LongitudinalReinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","isGeneric":"0","descriptionParts":["The created Reinforcement to be applied to a ConcreteSection. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.LongitudinalReinforcement: ","Defines any longitudinal reinforcement along a Bar."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LayerReinforcement","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a LongitudinalReinforcement placing rebars along a straight line throughout the ConcreteSection ",""],"inputs":[{"inputName":"diameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Diameter of a single rebar. ",""],"isRequired":1,"isInterface":0},{"inputName":"barCount","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Number of bars along the along the linear distribution. ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction of the axis of the reinforcement. Should be a vector in the global XY-plane. Defaults to the global X-axis. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"offset","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset of the linear layout in relation to the reference point, perpendicular to the Direction vector in the XY-plane.","A positive value will mean an offset towards the centre of the boundingbox of the ConcreteSection. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"referencePoint","namespace":"BH.oM.Spatial.Layouts","memberName":"ReferencePoint","isGeneric":"0","descriptionParts":["Controls, together with the offset, which point on the ConcreteSection that should be used for the layout. ","This is a BH.oM.Spatial.Layouts.ReferencePoint ","Enum values: ","-Centroid ","-BottomLeft ","-BottomCenter ","-BottomRight ","-MiddleLeft ","-MiddleCenter ","-MiddleRight ","-TopLeft ","-TopCenter ","-TopRight"],"isRequired":0,"isInterface":0},{"inputName":"startLocation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Normalised length (0 means start, 1 means end) along the element where the rebars start. ",""],"isRequired":0,"isInterface":0},{"inputName":"endLocation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Normalised length (0 means start, 1 means end) along the element where the rebars ends. ",""],"isRequired":0,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"IMaterialFragment","isGeneric":"0","descriptionParts":["Material of the Rebars. If null, a default material will be pulled from the Datasets. ","This is a BH.oM.Structure.MaterialFragments.IMaterialFragment: ","Base interface for structural materials used by structural properties or as a fragment of the physical material. ","This can be of the following types: Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":0,"isInterface":1}],"outputs":{"memberName":"LongitudinalReinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","isGeneric":"0","descriptionParts":["The created Reinforcement to be applied to a ConcreteSection. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.LongitudinalReinforcement: ","Defines any longitudinal reinforcement along a Bar."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LongitudinalReinforcement","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a LongitudinalReinforcement placing rebars along a straight line throughout the ConcreteSection ",""],"inputs":[{"inputName":"rebarLayout","namespace":"BH.oM.Spatial.Layouts","memberName":"ILayout2D","isGeneric":"0","descriptionParts":["Layout controlling the distribution of the rebars across the SectionProperty. ","This is a BH.oM.Spatial.Layouts.ILayout2D: ","Base interface for all 2D layouts ","This can be of the following types: ExplicitLayout, LinearLayout, MultiLinearLayout, PerimeterLayout ",""],"isRequired":1,"isInterface":1},{"inputName":"diameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Diameter of a single rebar. ",""],"isRequired":1,"isInterface":0},{"inputName":"startLocation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Normalised length (0 means start, 1 means end) along the element where the rebars start. ",""],"isRequired":0,"isInterface":0},{"inputName":"endLocation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Normalised length (0 means start, 1 means end) along the element where the rebars ends. ",""],"isRequired":0,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"IMaterialFragment","isGeneric":"0","descriptionParts":["Material of the Rebars. If null, a default material will be pulled from the Datasets. ","This is a BH.oM.Structure.MaterialFragments.IMaterialFragment: ","Base interface for structural materials used by structural properties or as a fragment of the physical material. ","This can be of the following types: Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":0,"isInterface":1}],"outputs":{"memberName":"LongitudinalReinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","isGeneric":"0","descriptionParts":["The created Reinforcement to be applied to a ConcreteSection. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.LongitudinalReinforcement: ","Defines any longitudinal reinforcement along a Bar."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"MultiLinearReinforcement","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a LongitudinalReinforcement placing rebars along multiple linear parallel axes, defined along a vector from one side of the perimeter of ConcreteSection to the other. ","Starts by fitting in as many points as possible in the first layer, then generates a new one and repeats. ",""],"inputs":[{"inputName":"diameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Diameter of a single rebar. ",""],"isRequired":1,"isInterface":0},{"inputName":"barCount","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Number of bars along the along the linear distribution axes. ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"parallelSpacing","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum spacing allowed between two rebars in a single layer ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"perpendicularSpacing","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum spacing allowed between two layers of rebar ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Direction of the axis of the reinforcement. Should be a vector in the global XY-plane. Defaults to the global X-axis. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"offset","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset of the linear layout in relation to the reference point, perpendicular to the Direction vector in the XY-plane.","A positive value will mean an offset towards the centre of the boundingbox of the ConcreteSection. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"referencePoint","namespace":"BH.oM.Spatial.Layouts","memberName":"ReferencePoint","isGeneric":"0","descriptionParts":["Controls, together with the offset, which point on the ConcreteSection that should be used for the layout. ","This is a BH.oM.Spatial.Layouts.ReferencePoint ","Enum values: ","-Centroid ","-BottomLeft ","-BottomCenter ","-BottomRight ","-MiddleLeft ","-MiddleCenter ","-MiddleRight ","-TopLeft ","-TopCenter ","-TopRight"],"isRequired":0,"isInterface":0},{"inputName":"startLocation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Normalised length (0 means start, 1 means end) along the element where the rebars start. ",""],"isRequired":0,"isInterface":0},{"inputName":"endLocation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Normalised length (0 means start, 1 means end) along the element where the rebars ends. ",""],"isRequired":0,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"IMaterialFragment","isGeneric":"0","descriptionParts":["Material of the Rebars. If null, a default material will be pulled from the Datasets. ","This is a BH.oM.Structure.MaterialFragments.IMaterialFragment: ","Base interface for structural materials used by structural properties or as a fragment of the physical material. ","This can be of the following types: Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":0,"isInterface":1}],"outputs":{"memberName":"LongitudinalReinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","isGeneric":"0","descriptionParts":["The created Reinforcement to be applied to a ConcreteSection. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.LongitudinalReinforcement: ","Defines any longitudinal reinforcement along a Bar."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"PerimiterReinforcement","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a LongitudinalReinforcement placing rebars along the perimiter of host ConcreteSection. ",""],"inputs":[{"inputName":"diameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Diameter of a single rebar. ",""],"isRequired":1,"isInterface":0},{"inputName":"barCount","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Number of Rebars along the perimeter. ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"rebarsAtProfileDiscontinuities","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, bars will be placed at any discontinuities of the perimeter of the cross section. ","This is a Boolean"],"isRequired":1,"isInterface":0},{"inputName":"startLocation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Normalised length (0 means start, 1 means end) along the element where the rebars start. ",""],"isRequired":0,"isInterface":0},{"inputName":"endLocation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Normalised length (0 means start, 1 means end) along the element where the rebars ends. ",""],"isRequired":0,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"IMaterialFragment","isGeneric":"0","descriptionParts":["Material of the Rebars. If null, a default material will be pulled from the Datasets. ","This is a BH.oM.Structure.MaterialFragments.IMaterialFragment: ","Base interface for structural materials used by structural properties or as a fragment of the physical material. ","This can be of the following types: Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":0,"isInterface":1}],"outputs":{"memberName":"LongitudinalReinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","isGeneric":"0","descriptionParts":["The created Reinforcement to be applied to a ConcreteSection. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.LongitudinalReinforcement: ","Defines any longitudinal reinforcement along a Bar."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"TopReinforcement","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a LongitudinalReinforcement placing rebars along multiple linear parallel axes along the local y-axis of the ConcreteSection, defined along a vector from one side of the perimeter of ConcreteSection to the other. ","Starts by fitting in as many points as possible in a layer towards the top of the section, then generates a new one and repeats. ",""],"inputs":[{"inputName":"diameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Diameter of a single rebar. ",""],"isRequired":1,"isInterface":0},{"inputName":"area","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Total minimum required area of bottom reinforcement. Will be used to calculate required number of bars, based on their diameter, hence the resulting area may be larger than the input value. ","This is a Area [m²] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"spacing","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Minimum spacing allowed between any two rebars. ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"startLocation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Normalised length (0 means start, 1 means end) along the element where the rebars start. ",""],"isRequired":0,"isInterface":0},{"inputName":"endLocation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Normalised length (0 means start, 1 means end) along the element where the rebars ends. ",""],"isRequired":0,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"IMaterialFragment","isGeneric":"0","descriptionParts":["Material of the Rebars. If null, a default material will be pulled from the Datasets. ","This is a BH.oM.Structure.MaterialFragments.IMaterialFragment: ","Base interface for structural materials used by structural properties or as a fragment of the physical material. ","This can be of the following types: Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":0,"isInterface":1}],"outputs":{"memberName":"LongitudinalReinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","isGeneric":"0","descriptionParts":["The created Reinforcement to be applied to a ConcreteSection. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.LongitudinalReinforcement: ","Defines any longitudinal reinforcement along a Bar."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"TransverseReinforcement","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a TransverseReinforcement placing rebars across a straight line along the ConcreteSection ",""],"inputs":[{"inputName":"curveLayout","namespace":"BH.oM.Spatial.Layouts","memberName":"ICurveLayout","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.Layouts.ICurveLayout: ","Base interface for all curve layouts. ","This can be of the following types: ExplicitCurveLayout, OffsetCurveLayout"],"isRequired":1,"isInterface":1},{"inputName":"diameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Diameter of a single rebar. ",""],"isRequired":1,"isInterface":0},{"inputName":"spacing","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Axial distance between consecutive rebars. If AdjustSpacingToFit is true it will become maximum spacing. ",""],"isRequired":1,"isInterface":0},{"inputName":"adjustSpacingToFit","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles if provided spacing value should be fixed or adjusted to fit rebars from the host bar's start to end. ",""],"isRequired":1,"isInterface":0},{"inputName":"startLocation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Normalised length (0 means start, 1 means end) along the element where the rebars start. ",""],"isRequired":0,"isInterface":0},{"inputName":"endLocation","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Normalised length (0 means start, 1 means end) along the element where the rebars ends. ",""],"isRequired":0,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"IMaterialFragment","isGeneric":"0","descriptionParts":["Material of the Rebars. If null, a default material will be pulled from the Datasets. ","This is a BH.oM.Structure.MaterialFragments.IMaterialFragment: ","Base interface for structural materials used by structural properties or as a fragment of the physical material. ","This can be of the following types: Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":0,"isInterface":1}],"outputs":{"memberName":"TransverseReinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","isGeneric":"0","descriptionParts":["The created Reinforcement to be applied to a ConcreteSection. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.TransverseReinforcement: ","Defines any transverse reinforcement along a Bar."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"TimberRectangleSection","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a rectangular solid timber section from input dimensions. ",""],"inputs":[{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Height of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"width","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Width of the section. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"cornerRadius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional corner radius for the section. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Timber","isGeneric":"0","descriptionParts":["Timber material to be applied to the section. If null a default material will be extracted from the database. ","This is a BH.oM.Structure.MaterialFragments.Timber: ","Structural timber material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the timber section. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"TimberSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created rectangular solid timber section. ","This is a BH.oM.Structure.SectionProperties.TimberSection: ","Timber section to be used on Bars. Defined by a section profile."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"TimberSectionFromProfile","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a timber section based on a Profile and a material. "," This is the main create method for timber sections, responsible for calculating section constants etc. and is being called from all other create methods for timber sections. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["The section profile the timber section. All section constants are derived based on the dimensions of this. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Timber","isGeneric":"0","descriptionParts":["timber material to be applied to the section. ","This is a BH.oM.Structure.MaterialFragments.Timber: ","Structural timber material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the timber section. If null or empty the name of the profile will be used. This is required for most structural packages to create the section. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"TimberSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The created timber section. ","This is a BH.oM.Structure.SectionProperties.TimberSection: ","Timber section to be used on Bars. Defined by a section profile."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Edge","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"support","namespace":"BH.oM.Structure.Constraints","memberName":"Constraint6DOF","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.Constraint6DOF: ","Constraint objects with six degrees of freedom, three translational and three rotational, used for supports and bar end releases."],"isRequired":0,"isInterface":0},{"inputName":"release","namespace":"BH.oM.Structure.Constraints","memberName":"Constraint4DOF","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.Constraint4DOF: ","Constraint objects with four degrees of freedom, three translational and one rotational. Used for support or release of 1D analytical elements of 2D analytical objects. The Rotational DOF will correspond to rotation about the axis of the object."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Edge","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Edge: ","Edge class to describe the edges of panels (or other objects) by a curve and properties."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Edge","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"release","namespace":"BH.oM.Structure.Constraints","memberName":"Constraint4DOF","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.Constraint4DOF: ","Constraint objects with four degrees of freedom, three translational and one rotational. Used for support or release of 1D analytical elements of 2D analytical objects. The Rotational DOF will correspond to rotation about the axis of the object."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Edge","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Edge: ","Edge class to describe the edges of panels (or other objects) by a curve and properties."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LoadingPanelProperty","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"supportCondition","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"LoadPanelSupportConditions","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SurfaceProperties.LoadPanelSupportConditions ","Enum values: ","-AllSides ","-ThreeSides ","-TwoSides ","-TwoAdjacentSides ","-OneSide ","-Cantilever"],"isRequired":0,"isInterface":0},{"inputName":"referenceEdge","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LoadingPanelProperty","namespace":"BH.oM.Structure.SurfaceProperties","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SurfaceProperties.LoadingPanelProperty: ","Property for 2D analytical elements used to distribute load, without any structural stiffness."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Offset","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates an Offset defining offsets for Bar objects from its end Nodes to be applied in analysis packages. ",""],"inputs":[{"inputName":"startX","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset of the StartNode along the local x-axis, i.e. along the tangent. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"startY","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset of the StartNode along the local y-axis, i.e. along the axis perpendicular to the normal and tangent. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"startZ","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset of the StartNode along the local z-axis, i.e. along the normal. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"endX","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset of the EndNode along the local x-axis, i.e. along the tangent. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"endY","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset of the EndNode along the local y-axis, i.e. along the axis perpendicular to the normal and tangent. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"endZ","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset of the EndNode along the local z-axis, i.e. along the normal. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Offset","namespace":"BH.oM.Structure.Offsets","isGeneric":"0","descriptionParts":["The created Offset. ","This is a BH.oM.Structure.Offsets.Offset: ","Class defining offsets for bar objects from its end Nodes to be applied in analysis packages."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LayerReinforcement","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"diameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"depth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"count","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"isVertical","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LayerReinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SectionProperties.Reinforcement.LayerReinforcement"]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"PerimeterReinforcement","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"diameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"count","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"pattern","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"ReinforcementPattern","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SectionProperties.Reinforcement.ReinforcementPattern ","Enum values: ","-Equispaced ","-Horizontal ","-Vertical"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PerimeterReinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SectionProperties.Reinforcement.PerimeterReinforcement"]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"TieReinforcement","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"diameter","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"spacing","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"count","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TieReinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SectionProperties.Reinforcement.TieReinforcement"]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"ConstantThickness","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"thickness","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"IMaterialFragment","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.MaterialFragments.IMaterialFragment: ","Base interface for structural materials used by structural properties or as a fragment of the physical material. ","This can be of the following types: Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":0,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"type","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"PanelType","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SurfaceProperties.PanelType ","Enum values: ","-Undefined ","-Slab ","-Wall ","-PileCap ","-DropPanel"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ConstantThickness","namespace":"BH.oM.Structure.SurfaceProperties","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SurfaceProperties.ConstantThickness: ","Simplest property for 2D analytical elements with a constant thickness and homogenous material across the whole element."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Waffle","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"slabDepth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"depthX","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"depthY","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"stemWidthX","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"stemWidthY","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"spacingX","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"spacingY","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"PanelType","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SurfaceProperties.PanelType ","Enum values: ","-Undefined ","-Slab ","-Wall ","-PileCap ","-DropPanel"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Waffle","namespace":"BH.oM.Structure.SurfaceProperties","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SurfaceProperties.Waffle: ","Property for 2D analytical elements, made up of a slab on top of parallel ribs running in two directions, all sharing the same material."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Ribbed","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"slabDepth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"totalDepth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"stemWidth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"spacing","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"direction","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"PanelDirection","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SurfaceProperties.PanelDirection ","Enum values: ","-X ","-Y"],"isRequired":1,"isInterface":0},{"inputName":"type","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"PanelType","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SurfaceProperties.PanelType ","Enum values: ","-Undefined ","-Slab ","-Wall ","-PileCap ","-DropPanel"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Ribbed","namespace":"BH.oM.Structure.SurfaceProperties","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SurfaceProperties.Ribbed: ","Property for 2D analytical elements, made up of a slab on top of parallel ribs running in one direction, all sharing the same material."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarReleaseFixFix","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a BarRelease that is fully fixed in both ends, i.e. all degrees of freedom, translational and rotational will be fixed. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the BarRelease. Defaults to FixFix. This is required by most structural analysis software to create the object ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarRelease","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["The created fully fixed BarRelease. ","This is a BH.oM.Structure.Constraints.BarRelease: ","Defines the releases at the start and end node of a Bar."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarReleasePinPin","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a BarRelease that is pinned at both ends, i.e. all translational degrees of freedom will be fixed, and rotational released, with one exception. The rx release on the start will be fixed to avoid instability of the Bar, to prevent it from rotating about the local x-axis (the centreline axis). ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the BarRelease. Defaults to PinPin. This is required by most structural analysis software to create the object ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarRelease","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["The created pinned BarRelease. ","This is a BH.oM.Structure.Constraints.BarRelease: ","Defines the releases at the start and end node of a Bar."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarReleasePinSlip","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a BarRelease that is pinned at one end and axially released at the other. ","This means that the start node will have all tranlational degrees fixed as well as the rx, to avoid instability, i.e. to prevent it from rotating about the local x-axis (the centreline axis). ","The end node will be fixed in the y-axis and z-axis translationally, all other degrees of freedom will be free, i.e. it will be free to rotate as well as translate along the local x-axis (the centreline axis) of the Bar. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the BarRelease. Defaults to PinSlip. This is required by most structural analysis software to create the object ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarRelease","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["The created pin-slip BarRelease. ","This is a BH.oM.Structure.Constraints.BarRelease: ","Defines the releases at the start and end node of a Bar."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"BarRelease","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"startConstraint","namespace":"BH.oM.Structure.Constraints","memberName":"Constraint6DOF","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.Constraint6DOF: ","Constraint objects with six degrees of freedom, three translational and three rotational, used for supports and bar end releases."],"isRequired":1,"isInterface":0},{"inputName":"endConstraint","namespace":"BH.oM.Structure.Constraints","memberName":"Constraint6DOF","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.Constraint6DOF: ","Constraint objects with six degrees of freedom, three translational and three rotational, used for supports and bar end releases."],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BarRelease","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.BarRelease: ","Defines the releases at the start and end node of a Bar."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Constraint3DOF","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Constraint3DOF","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.Constraint3DOF: ","Constraint objects with three translational degrees of freedom, used for support of 2D analytical objects."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Constraint6DOF","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a Constraint6DOF from a list of fixities and spring values. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name to be used for the Constraint. This is required for various structural packages to create the object. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"fixity","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Boolean","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A list of 6 booleans, in the order TransX, TranxY, TransZ, RotX, RotY, RotZ. If true, the fixity is set to fixed. If false, the fixity is set to free or spring, depending if the double values provided are 0 or not. ","This is a List<Boolean>"],"isRequired":1,"isInterface":0},{"inputName":"values","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A list of 6 doubles with positive values (>= 0), in the orderTransX, TranxY, TransZ, RotX, RotY, RotZ. If zero, and corresponding fixity is false, the DOF will be free. If non-zero, these values will be set as the spring values. ","First three should have the quantity force per unit length, last three should be moment per unit angle. ","This is a List<Double>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Constraint6DOF","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["The created custom Constraint6DOF. ","This is a BH.oM.Structure.Constraints.Constraint6DOF: ","Constraint objects with six degrees of freedom, three translational and three rotational, used for supports and bar end releases."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"PinConstraint6DOF","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a pinned Constraint6DOF, i.e. a constraint that have all translational degrees of freedom fixed and all the rotational degrees of freedom free. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the Constraint6DOF. Defaults to Pin. This is required by most structural analysis software to create the object ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Constraint6DOF","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["The created pinned Constraint6DOF. ","This is a BH.oM.Structure.Constraints.Constraint6DOF: ","Constraint objects with six degrees of freedom, three translational and three rotational, used for supports and bar end releases."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"FixConstraint6DOF","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a fully fixed Constraint6DOF, i.e. a constraint that have all degrees of freedom, translational and rotational, fixed. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the Constraint6DOF. Defaults to Fix. This is required by most structural analysis software to create the object ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Constraint6DOF","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["The created fully fixed Constraint6DOF. ","This is a BH.oM.Structure.Constraints.Constraint6DOF: ","Constraint objects with six degrees of freedom, three translational and three rotational, used for supports and bar end releases."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"FullReleaseConstraint6DOF","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a fully free Constraint6DOF, i.e. a constraint that have all degrees of freedom, translational and rotational, free. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the Constraint6DOF. Defaults to Release. This is required by most structural analysis software to create the object ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Constraint6DOF","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["The created fully free Constraint6DOF. ","This is a BH.oM.Structure.Constraints.Constraint6DOF: ","Constraint objects with six degrees of freedom, three translational and three rotational, used for supports and bar end releases."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Constraint6DOF","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a Constraint6DOF from a set of booleans. True denotes fixed, false denotes free. ",""],"inputs":[{"inputName":"x","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Translational fixity in x-direction. True denotes fixed, false denotes free. ","This is a Boolean"],"isRequired":1,"isInterface":0},{"inputName":"y","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Translational fixity in y-direction. True denotes fixed, false denotes free. ","This is a Boolean"],"isRequired":1,"isInterface":0},{"inputName":"z","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Translational fixity in z-direction. True denotes fixed, false denotes free. ","This is a Boolean"],"isRequired":1,"isInterface":0},{"inputName":"xx","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Rotational fixity about the x-axis. True denotes fixed, false denotes free. ","This is a Boolean"],"isRequired":1,"isInterface":0},{"inputName":"yy","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Rotational fixity about the y-axis. True denotes fixed, false denotes free. ","This is a Boolean"],"isRequired":1,"isInterface":0},{"inputName":"zz","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Rotational fixity about the z-axis. True denotes fixed, false denotes free. ","This is a Boolean"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the Constraint6DOF. This is required for various structural packages to create the object. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Constraint6DOF","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["The created custom Constraint6DOF. ","This is a BH.oM.Structure.Constraints.Constraint6DOF: ","Constraint objects with six degrees of freedom, three translational and three rotational, used for supports and bar end releases."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Constraint6DOF","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Constraint6DOF","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.Constraint6DOF: ","Constraint objects with six degrees of freedom, three translational and three rotational, used for supports and bar end releases."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Constraint4DOF","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Constraint4DOF","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.Constraint4DOF: ","Constraint objects with four degrees of freedom, three translational and one rotational. Used for support or release of 1D analytical elements of 2D analytical objects. The Rotational DOF will correspond to rotation about the axis of the object."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Load","assemblyName":"Structure_Engine.dll","descriptionParts":["Method used to create a load from a specified type as well as range of variables. ",""],"inputs":[{"inputName":"type","namespace":"BH.oM.Structure.Loads","memberName":"LoadType","isGeneric":"0","descriptionParts":["Specifies the type of load that should be created. ","This is a BH.oM.Structure.Loads.LoadType ","Enum values: ","-Selfweight ","-PointForce ","-PointDisplacement ","-PointVelocity ","-PointAcceleration ","-BarPointLoad ","-BarUniformLoad ","-BarVaryingLoad ","-BarTemperature ","-AreaUniformLoad ","-AreaVaryingLoad ","-AreaTemperature ","-Pressure ","-Geometrical"],"isRequired":1,"isInterface":0},{"inputName":"loadCase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase."],"isRequired":1,"isInterface":0},{"inputName":"magnitude","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Should be a list of 1-6 doubles, depending on load type. ","-For load types with a single value, such as temprature loads, only the first value is used. ","-For load types with a single vector, such as Area UDLs, the first three numbers are used, and assumed to be the x, y and z component of this vector. ","-For load types with two vectors, such as bar UDLs, the first three values will be assumed to be the force vector, and the last three the moment vector. ","Quantity varies with load type. ","This is a List<Double>"],"isRequired":1,"isInterface":0},{"inputName":"groupName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Value will be given to the object group on the load as well as to the load itself. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"axis","namespace":"BH.oM.Structure.Loads","memberName":"LoadAxis","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadAxis ","Enum values: ","-Global ","-Local"],"isRequired":1,"isInterface":0},{"inputName":"isProjected","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true the load is projected along to the element. This means that the load will be reduced when its direction is at an angle to the element. ",""],"isRequired":1,"isInterface":0},{"inputName":"units","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Scales the magnitude inputs to SI depending on the provided value. Accepted values are N, Newton, Newtons, kN, kilo newton, kilo newtons, C, Celcius, K, Kelvin. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ILoad","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created Load. ","This is a BH.oM.Structure.Loads.ILoad: ","Base interface implemented by all load classes. ","This can be of the following types: ContourLoad, GeometricalLineLoad, AreaDifferentialTemperatureLoad, AreaUniformTemperatureLoad, AreaUniformlyDistributedLoad, BarPointLoad, BarPrestressLoad, BarDifferentialTemperatureLoad, BarUniformTemperatureLoad, BarUniformlyDistributedLoad, BarVaryingDistributedLoad, GeometricalLineLoad, GravityLoad, ContourLoad, PointAcceleration, and more..."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LoadCombination","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a LoadCombination from two equal length lists of Loadcases and factors. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the load combination. This is required for various structural packages to create the object. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"number","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Unique numeric identifier of the LoadCombination. ",""],"isRequired":1,"isInterface":0},{"inputName":"cases","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The cases to be assigned to the LoadCombination. This list should have the exact same length as the factors. ","This is a List<Loadcase>"],"isRequired":1,"isInterface":0},{"inputName":"factors","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The factor to scale each of the cases with.  This list should have the exact same length as the cases. ","This is a List<Double>"],"isRequired":1,"isInterface":0},{"inputName":"excludeZeroFactorCases","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If set to true, any case that has a corresponding factor of 0 will NOT be added to the case. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LoadCombination","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["The created LoadCombination. ","This is a BH.oM.Structure.Loads.LoadCombination: ","Load combination class to set up combination of factored Loadcases."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LoadCombination","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"number","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"factoredCases","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Tuple","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"},{"namespace":"BH.oM.Structure.Loads","memberName":"ICase","isInterface":"1","isGeneric":"0"}]}],"descriptionParts":["This is a IEnumerable<Tuple<Double, ICase>>"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"LoadCombination","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadCombination: ","Load combination class to set up combination of factored Loadcases."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Loadcase","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"number","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"nature","namespace":"BH.oM.Structure.Loads","memberName":"LoadNature","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadNature ","Enum values: ","-Dead ","-SuperDead ","-Live ","-Wind ","-Seismic ","-Temperature ","-Snow ","-Accidental ","-Prestress ","-Notional ","-Other"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Loadcase","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"RigidLink","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"masterNode","namespace":"BH.oM.Structure.Elements","memberName":"Node","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Node: ","0D finite element for structural analysis. Node class contains positional information as well as orientation and support."],"isRequired":1,"isInterface":0},{"inputName":"slaveNodes","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Node","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Node>"],"isRequired":1,"isInterface":1},{"inputName":"constraint","namespace":"BH.oM.Structure.Constraints","memberName":"LinkConstraint","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.LinkConstraint: ","Defines the rigid connectivity between a primary and set of secondary nodes."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RigidLink","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.RigidLink: ","A rigid link object defining rigid constraints between two or more nodes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"FramingElement","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a physical IFramingElement from a Bar. The framing element will be assigned a ConstantFramingProperty based on the sectionproeprty of the bar and have a type based on the structural usage. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to use as the base for the framing element. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0},{"inputName":"structuralUsage","namespace":"BH.oM.Structure.Elements","memberName":"StructuralUsage1D","isGeneric":"0","descriptionParts":["Used to determine which type of framing element that should be constructed. ","This is a BH.oM.Structure.Elements.StructuralUsage1D ","Enum values: ","-Undefined ","-Beam ","-Column ","-Brace ","-Cable ","-Pile"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IFramingElement","namespace":"BH.oM.Physical.Elements","isGeneric":"0","descriptionParts":["The created physical FramingElement based on the Bar element provided. ","This is a BH.oM.Physical.Elements.IFramingElement ","This can be of the following types: Bracing, Pile, Column, Cable, Beam"]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Panel","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a structural Panel from its fundamental parts and an local orientation vector. ",""],"inputs":[{"inputName":"externalEdges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Edge","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A list of coplanar Edges defining the external contour and potential constraints of the Panel. ",""],"isRequired":1,"isInterface":0},{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A list of Openings of the panel. The edges that make up the openings must be coplanar with the external edges. ",""],"isRequired":0,"isInterface":0},{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ISurfaceProperty","isGeneric":"0","descriptionParts":["Defines the thickness property and material of the Panel. Orientation of non-isotropic properties are controlled by the OrientationAngle. ","This is a BH.oM.Structure.SurfaceProperties.ISurfaceProperty: ","Base interface for properties for 2D finite element structural objects such as Panels and FEMeshes. ","This can be of the following types: Ribbed, Waffle, ConstantThickness, LoadingPanelProperty ",""],"isRequired":0,"isInterface":1},{"inputName":"localX","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Vector to set as local x of the Panel. Default value of null gives default orientation. If this vector is not in the plane of the Panel it will get projected. If the vector is parallel to the normal of the Panel the operation will fail and the Panel local orientation will be set to default. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created Panel. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["The created Panel. ","This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Panel","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a structural Panel from a closed curve defining the outline, and any number of closed curves defining openings. ",""],"inputs":[{"inputName":"outline","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["A closed Curve defining the outline of the Panel. The ExternalEdges of the Panel will be the subparts of this curve, where each edge will corespond to one curve segment. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of closed curves representing the openings of the Panel. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":0},{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ISurfaceProperty","isGeneric":"0","descriptionParts":["Defines the thickness property and material of the Panel. Orientation of non-isotropic properties are controlled by the OrientationAngle. ","This is a BH.oM.Structure.SurfaceProperties.ISurfaceProperty: ","Base interface for properties for 2D finite element structural objects such as Panels and FEMeshes. ","This can be of the following types: Ribbed, Waffle, ConstantThickness, LoadingPanelProperty ",""],"isRequired":0,"isInterface":1},{"inputName":"localX","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Vector to set as local x of the Panel. Default value of null gives default orientation. If this vector is not in the plane of the Panel it will get projected. If the vector is parallel to the normal of the Panel the operation will fail and the Panel local orientation will be set to default. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created Panel. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["The created Panel. ","This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Panel","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a list of Panels based on a collection of outline curves. ","Method will distribute the outlines such that the outermost curve will be assumed to be an external outline of a panel, and any curve contained in this outline will be assumed as an opening of this Panel. ","Any outline curve inside an opening will again be assumed to be the outline of a new Panel. ",""],"inputs":[{"inputName":"outlines","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of outline curves representing outlines of external edges and opening used to create the Panel(s). ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ISurfaceProperty","isGeneric":"0","descriptionParts":["Defines the thickness property and material of the Panel. Orientation of non-isotropic properties are controlled by the OrientationAngle. ","This is a BH.oM.Structure.SurfaceProperties.ISurfaceProperty: ","Base interface for properties for 2D finite element structural objects such as Panels and FEMeshes. ","This can be of the following types: Ribbed, Waffle, ConstantThickness, LoadingPanelProperty ",""],"isRequired":0,"isInterface":1},{"inputName":"localX","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Vector to set as local x of the Panel. Default value of null gives default orientation. If this vector is not in the plane of the Panel it will get projected. If the vector is parallel to the normal of the Panel the operation will fail and the Panel local orientation will be set to default. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created Panel(s). ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The created Panel(s). ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Panel","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a structural Panel from a PlanarSurface, creating external edges from the ExternalBoundary and openings from the InternalBoundaries of the PlanarSurface. ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["A planar surface used to define the geometry of the panel, i.e. the external edges and the openings. ","This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ISurfaceProperty","isGeneric":"0","descriptionParts":["Defines the thickness property and material of the Panel. Orientation of non-isotropic properties are controlled by the OrientationAngle. ","This is a BH.oM.Structure.SurfaceProperties.ISurfaceProperty: ","Base interface for properties for 2D finite element structural objects such as Panels and FEMeshes. ","This can be of the following types: Ribbed, Waffle, ConstantThickness, LoadingPanelProperty ",""],"isRequired":0,"isInterface":1},{"inputName":"localX","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Vector to set as local x of the Panel. Default value of null gives default orientation. If this vector is not in the plane of the Panel it will get projected. If the vector is parallel to the normal of the Panel the operation will fail and the Panel local orientation will be set to default. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created Panel. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["The created Panel. ","This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Panel","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"externalEdges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Edge","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Edge>"],"isRequired":1,"isInterface":0},{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":0},{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ISurfaceProperty","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SurfaceProperties.ISurfaceProperty: ","Base interface for properties for 2D finite element structural objects such as Panels and FEMeshes. ","This can be of the following types: Ribbed, Waffle, ConstantThickness, LoadingPanelProperty"],"isRequired":0,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Panel","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"outline","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"openings","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Opening","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Opening>"],"isRequired":0,"isInterface":0},{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ISurfaceProperty","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SurfaceProperties.ISurfaceProperty: ","Base interface for properties for 2D finite element structural objects such as Panels and FEMeshes. ","This can be of the following types: Ribbed, Waffle, ConstantThickness, LoadingPanelProperty"],"isRequired":0,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Node","assemblyName":"Structure_Engine.dll","descriptionParts":["Created a Node from a Cartesian coordinate system. The position of the Node will be the Orgin, and the Orientation of the node will match the axes of the Coordinate system. ",""],"inputs":[{"inputName":"coordinates","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["The Cartesian coordinate system to control the position and orientation of the Node. ","This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created Node. ","This is a String"],"isRequired":0,"isInterface":0},{"inputName":"support","namespace":"BH.oM.Structure.Constraints","memberName":"Constraint6DOF","isGeneric":"0","descriptionParts":["Defines the Support property of the Node. If not set, the Node will be assumed to be free to translate and rotate. ","This is a BH.oM.Structure.Constraints.Constraint6DOF: ","Constraint objects with six degrees of freedom, three translational and three rotational, used for supports and bar end releases. ",""],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Node","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["The created structural Node. ","This is a BH.oM.Structure.Elements.Node: ","0D finite element for structural analysis. Node class contains positional information as well as orientation and support."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Node","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"position","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0},{"inputName":"support","namespace":"BH.oM.Structure.Constraints","memberName":"Constraint6DOF","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.Constraint6DOF: ","Constraint objects with six degrees of freedom, three translational and three rotational, used for supports and bar end releases."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Node","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Node: ","0D finite element for structural analysis. Node class contains positional information as well as orientation and support."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Bar","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a Bar element from a Line, to be used as centre line of the Bar, and properties. ",""],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["Geometrical Line used as centreline of the Bar. The StartNode and EndNode of the bar will be extracted from the Line. ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"sectionProperty","namespace":"BH.oM.Structure.SectionProperties","memberName":"ISectionProperty","isGeneric":"0","descriptionParts":["Section property of the bar, containing all sectional constants and material as well as profile geometry and dimensions, where applicable. ","This is a BH.oM.Structure.SectionProperties.ISectionProperty: ","Base interface for all bar section properties. Contains the material and all section constants. ","This can be of the following types: AluminiumSection, GenericSection, TimberSection, CableSection, CompositeSection, ConcreteSection, ExplicitSection, SteelSection ",""],"isRequired":0,"isInterface":1},{"inputName":"orientationAngle","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Controls the local axis orientation of the bar ","For non-vertical members the local z is aligned with the global Z and rotated with the orientation angle about the local x. ","For vertical members the local y is aligned with the global Y and rotated with the orientation angle about the local x. ","A bar is vertical if its projected length to the horizontal plane is less than 0.0001, i.e. a tolerance of 0.1mm on verticality. ","For general structural conventions please see  https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions. ",""],"isRequired":0,"isInterface":0},{"inputName":"release","namespace":"BH.oM.Structure.Constraints","memberName":"BarRelease","isGeneric":"0","descriptionParts":["Defines the start and end release of the Bar. The releases defines how the bar is attached to its end nodes. If not set, full fixity will be assumed. ","This is a BH.oM.Structure.Constraints.BarRelease: ","Defines the releases at the start and end node of a Bar. ",""],"isRequired":0,"isInterface":0},{"inputName":"feaType","namespace":"BH.oM.Structure.Elements","memberName":"BarFEAType","isGeneric":"0","descriptionParts":[],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created Bar. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Bar","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["The created Bar with a centreline matching the provided geometrical Line. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Bar","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a Bar element from a Line, to be used as centre line of the Bar, and properties. ",""],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["Geometrical Line used as centreline of the Bar. The StartNode and EndNode of the bar will be extracted from the Line. ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0},{"inputName":"sectionProperty","namespace":"BH.oM.Structure.SectionProperties","memberName":"ISectionProperty","isGeneric":"0","descriptionParts":["Section property of the bar, containing all sectional constants and material as well as profile geometry and dimensions, where applicable. ","This is a BH.oM.Structure.SectionProperties.ISectionProperty: ","Base interface for all bar section properties. Contains the material and all section constants. ","This can be of the following types: AluminiumSection, GenericSection, TimberSection, CableSection, CompositeSection, ConcreteSection, ExplicitSection, SteelSection ",""],"isRequired":0,"isInterface":1},{"inputName":"normal","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Vector to be used as normal of the Bar. This vector should generally be orthogonal to the Bar, if it is not, it will be made orthogonal by projecting it to the section plane of the Bar (a plane that has that Bar tangent as its normal). This means that the Normal cannot be paralell to the Tangent of the Bar. ","Vector will be used to determain the orientation angle of the Bar. This is done by measuring the counter clockwise angle in the section plane of the Bar between a reference Vector and the provided Vector. For a non-vertical Bar, the reference vector will be the global Z-axis. For a vertical bar the reference vector will be a vector that is orthogonal to the tangent vector of the Bar and the global Y-axis. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":0,"isInterface":0},{"inputName":"release","namespace":"BH.oM.Structure.Constraints","memberName":"BarRelease","isGeneric":"0","descriptionParts":["Defines the start and end release of the Bar. The releases defines how the bar is attached to its end nodes. If not set, full fixity will be assumed. ","This is a BH.oM.Structure.Constraints.BarRelease: ","Defines the releases at the start and end node of a Bar. ",""],"isRequired":0,"isInterface":0},{"inputName":"feaType","namespace":"BH.oM.Structure.Elements","memberName":"BarFEAType","isGeneric":"0","descriptionParts":[],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The name of the created Bar. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Bar","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["The created Bar with a centreline matching the provided geometrical Line. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Bar","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"startNode","namespace":"BH.oM.Structure.Elements","memberName":"Node","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Node: ","0D finite element for structural analysis. Node class contains positional information as well as orientation and support."],"isRequired":1,"isInterface":0},{"inputName":"endNode","namespace":"BH.oM.Structure.Elements","memberName":"Node","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Node: ","0D finite element for structural analysis. Node class contains positional information as well as orientation and support."],"isRequired":1,"isInterface":0},{"inputName":"property","namespace":"BH.oM.Structure.SectionProperties","memberName":"ISectionProperty","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SectionProperties.ISectionProperty: ","Base interface for all bar section properties. Contains the material and all section constants. ","This can be of the following types: AluminiumSection, GenericSection, TimberSection, CableSection, CompositeSection, ConcreteSection, ExplicitSection, SteelSection"],"isRequired":0,"isInterface":1},{"inputName":"orientationAngle","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"release","namespace":"BH.oM.Structure.Constraints","memberName":"BarRelease","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.BarRelease: ","Defines the releases at the start and end node of a Bar."],"isRequired":0,"isInterface":0},{"inputName":"feaType","namespace":"BH.oM.Structure.Elements","memberName":"BarFEAType","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.BarFEAType: ","Defines the finite element type of the bar and what forces the bar can accommodate, i.e. if the bar should be treated as a bending element or axial only in analysis packages. ","Enum values: ","-Flexural: Full axial, flexural and torsional behaviour. 2 x 6 DOFs. ","-Axial: Axial only. 2 x 3 DOFs. Can be used to model pin-pin elements. ","-CompressionOnly: Axial compression only. No tension stiffness. 2 x 3 DOFs. ","-TensionOnly: Axial tension only. No compression stiffness. 2 x 3 DOFs."],"isRequired":0,"isInterface":0},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Bar","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LinkConstraint","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a LinkConstraint from a list of booleans. True denotes fixity. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the created LinkConstraint. This is required for various structural packages to create the object. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"fixity","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Boolean","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of booleans setting the fixities of the LinkConstraint. True denotes fixity. A list of 12 booleans in the following order: XtoX, YtoY, ZtoZ, XtoYY, XtoZZ, YtoXX, YtoZZ, ZtoXX, ZtoYY, XXtoXX, YYtoYY, ZZtoZZ. ","This is a List<Boolean>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LinkConstraint","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["The created custom LinkConstraint. ","This is a BH.oM.Structure.Constraints.LinkConstraint: ","Defines the rigid connectivity between a primary and set of secondary nodes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LinkConstraintFixed","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a LinkConstraint where all directions are linked, rotations at secondary nodes are linked to rotations of the primary. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the created LinkConstraint. Defaults to 'Fixed'. This is required for various structural packages to create the object. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LinkConstraint","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["The created LinkConstraint. ","This is a BH.oM.Structure.Constraints.LinkConstraint: ","Defines the rigid connectivity between a primary and set of secondary nodes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LinkConstraintPinned","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a LinkConstraint where all directions are linked, but the rotations of the secondary nodes are not linked to the primary. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the created LinkConstraint. Defaults to 'Pinned'. This is required for various structural packages to create the object. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LinkConstraint","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["The created LinkConstraint. ","This is a BH.oM.Structure.Constraints.LinkConstraint: ","Defines the rigid connectivity between a primary and set of secondary nodes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LinkConstraintXYPlane","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a LinkConstraint where the directions are linked to give rigidity in the xy-plane but there is no constraint out of plane. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the created LinkConstraint. Defaults to 'xy-Plane'. This is required for various structural packages to create the object. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LinkConstraint","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["The created LinkConstraint. ","This is a BH.oM.Structure.Constraints.LinkConstraint: ","Defines the rigid connectivity between a primary and set of secondary nodes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LinkConstraintYZPlane","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a LinkConstraint where the directions are linked to give rigidity in the yz-plane but there is no constraint out of plane. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the created LinkConstraint. Defaults to 'yz-Plane'. This is required for various structural packages to create the object. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LinkConstraint","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["The created LinkConstraint. ","This is a BH.oM.Structure.Constraints.LinkConstraint: ","Defines the rigid connectivity between a primary and set of secondary nodes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LinkConstraintZXPlane","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a LinkConstraint where the directions are linked to give rigidity in the zx-plane but there is no constraint out of plane. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the created LinkConstraint. Defaults to 'zx-Plane'. This is required for various structural packages to create the object. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LinkConstraint","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["The created LinkConstraint. ","This is a BH.oM.Structure.Constraints.LinkConstraint: ","Defines the rigid connectivity between a primary and set of secondary nodes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LinkConstraintXYPlanePin","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a LinkConstraint where the directions are linked to give rigidity in the xy-plane, but the rotations of the secondary nodes are not linked to the primary, and there is no constraint out of plane. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the created LinkConstraint. Defaults to 'xy-Plane Pin'. This is required for various structural packages to create the object. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LinkConstraint","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["The created LinkConstraint. ","This is a BH.oM.Structure.Constraints.LinkConstraint: ","Defines the rigid connectivity between a primary and set of secondary nodes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LinkConstraintYZPlanePin","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a LinkConstraint where the directions are linked to give rigidity in the yz-plane, but the rotations of the secondary nodes are not linked to the primary, and there is no constraint out of plane. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the created LinkConstraint. Defaults to 'yz-Plane Pin'. This is required for various structural packages to create the object. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LinkConstraint","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["The created LinkConstraint. ","This is a BH.oM.Structure.Constraints.LinkConstraint: ","Defines the rigid connectivity between a primary and set of secondary nodes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LinkConstraintZXPlanePin","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a LinkConstraint where the directions are linked to give rigidity in the zx-plane, but the rotations of the secondary nodes are not linked to the primary, and there is no constraint out of plane. ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the created LinkConstraint. Defaults to 'zx-Plane Pin'. This is required for various structural packages to create the object. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LinkConstraint","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["The created LinkConstraint. ","This is a BH.oM.Structure.Constraints.LinkConstraint: ","Defines the rigid connectivity between a primary and set of secondary nodes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LinkConstraintXPlate","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LinkConstraint","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.LinkConstraint: ","Defines the rigid connectivity between a primary and set of secondary nodes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LinkConstraintYPlate","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LinkConstraint","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.LinkConstraint: ","Defines the rigid connectivity between a primary and set of secondary nodes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LinkConstraintYPlateZPlate","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LinkConstraint","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.LinkConstraint: ","Defines the rigid connectivity between a primary and set of secondary nodes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LinkConstraintXPlatePin","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LinkConstraint","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.LinkConstraint: ","Defines the rigid connectivity between a primary and set of secondary nodes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LinkConstraintYPlatePin","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LinkConstraint","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.LinkConstraint: ","Defines the rigid connectivity between a primary and set of secondary nodes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"LinkConstraintZPlatePin","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"LinkConstraint","namespace":"BH.oM.Structure.Constraints","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.LinkConstraint: ","Defines the rigid connectivity between a primary and set of secondary nodes."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Opening","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a structural Opening from a closed curve. ",""],"inputs":[{"inputName":"outline","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["Closed curve defining the outline of the Opening. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Opening","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["Created structural Opening. ","This is a BH.oM.Structure.Elements.Opening: ","Opening of a structural Panel object. Can be used to represent, for example, shafts, windows, and doors."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Opening","assemblyName":"Structure_Engine.dll","descriptionParts":["Creates a structural Opening from a collection of curves forming a closed loop. ",""],"inputs":[{"inputName":"edges","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Closed curve defining the outline of the Opening. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Opening","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["Created structural Opening. ","This is a BH.oM.Structure.Elements.Opening: ","Opening of a structural Panel object. Can be used to represent, for example, shafts, windows, and doors."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"PanelFreeForm","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Surface","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Surface: ","2D element for structural analysis. ","The Surface is a freeform surface object defined by a geometrical surface. For planar elements, the Panel is recommended, as it is generally better supported in analysis packages."]}},{"namespace":"BH.Engine.Structure","className":"Create","memberName":"Surface","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"surface","namespace":"BH.oM.Geometry","memberName":"ISurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ISurface: ","The interface for two-dimensional geometrical objects. ","This can be of the following types: Extrusion, Loft, NurbsSurface, Pipe, PlanarSurface, PolySurface"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Surface","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Surface: ","2D element for structural analysis. ","The Surface is a freeform surface object defined by a geometrical surface. For planar elements, the Panel is recommended, as it is generally better supported in analysis packages."]}},{"namespace":"BH.Engine.Structure","className":"Modify","memberName":"AddReinforcement","assemblyName":"Structure_Engine.dll","descriptionParts":["Adds Reinforcement to a ConcreteSection. Any previous Reinforcement will be kept. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"ConcreteSection","isGeneric":"0","descriptionParts":["The concrete section to add Reinforcement to. ","This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."],"isRequired":1,"isInterface":0},{"inputName":"reinforcement","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"IBarReinforcement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The collection of Reinforcement to add to the ConcreteSection. ","This is a IEnumerable<IBarReinforcement> ","This can be of the following types: TransverseReinforcement, LongitudinalReinforcement"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ConcreteSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The ConcreteSection with additional Reinforcement. ","This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."]}},{"namespace":"BH.Engine.Structure","className":"Modify","memberName":"OrientTowards","assemblyName":"Structure_Engine.dll","descriptionParts":["Orients the normal of the Bar towards the provided point. The normal is calculated as the vector from the centre of the bar to the provided point. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to update the orientation of. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0},{"inputName":"orientationPoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The point to orient the normal of the Bar towards. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Bar","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["Bar with updated orientation. If the calcualtion of the orientation angle fails, the unmodified bar is returned. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."]}},{"namespace":"BH.Engine.Structure","className":"Modify","memberName":"OrientTowards","assemblyName":"Structure_Engine.dll","descriptionParts":["Orients the direction of the local x of the Panel towards the provided point. The local x is calculated as the vector from the centroid of the Panel to the provided point. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Structure.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The Panel to update the local orientation of. ","This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."],"isRequired":1,"isInterface":0},{"inputName":"orientationPoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The point to orient the local x of the Panel towards. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["Panel with updated local orientation. If the calcualtion of the orientation angle fails, the unmodified Panel is returned. ","This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."]}},{"namespace":"BH.Engine.Structure","className":"Modify","memberName":"OrientTowards","assemblyName":"Structure_Engine.dll","descriptionParts":["Orients the direction of the local x of each FEMeshFace of the FEMesh towards the provided point. The local x vectors are calculated as the vector from the centroid of each FEMeshFace of the FEMesh to the provided point. ",""],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Structure.Elements","memberName":"FEMesh","isGeneric":"0","descriptionParts":["The FEMesh to update the local orientations of. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."],"isRequired":1,"isInterface":0},{"inputName":"orientationPoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The point to orient the local x vectors of the FEMeshFaces of the FEMesh towards. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FEMesh","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["FEMesh with updated local orientations. If the calcualtion of the orientation angle fails for an FEMeshFace, it remains unchanged. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."]}},{"namespace":"BH.Engine.Structure","className":"Modify","memberName":"OrientTowards","assemblyName":"Structure_Engine.dll","descriptionParts":["Orients the direction of the local x of the FEMeshFace towards the provided point. The local x vector is calculated as the vector from the centroid of the FEMeshFace of to the provided point. ",""],"inputs":[{"inputName":"face","namespace":"BH.oM.Structure.Elements","memberName":"FEMeshFace","isGeneric":"0","descriptionParts":["The FEMeshFace to update the local orientation of. ","This is a BH.oM.Structure.Elements.FEMeshFace: ","Face of an FEMesh. The face is defined by the indices of its nodes in the node list. Geometrical information about position in space is stored on the host FEMesh."],"isRequired":1,"isInterface":0},{"inputName":"mesh","namespace":"BH.oM.Structure.Elements","memberName":"FEMesh","isGeneric":"0","descriptionParts":["The FEMesh to which the face belongs. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."],"isRequired":1,"isInterface":0},{"inputName":"orientationPoint","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["The point to orient the local x of the FEMeshFaces towards. ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FEMeshFace","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["FEMeshFace with updated local orientation. If the calcualtion of the orientation angle fails, the unmodified FEMeshFace is returned. ","This is a BH.oM.Structure.Elements.FEMeshFace: ","Face of an FEMesh. The face is defined by the indices of its nodes in the node list. Geometrical information about position in space is stored on the host FEMesh."]}},{"namespace":"BH.Engine.Structure","className":"Modify","memberName":"SetLocalOrientation","assemblyName":"Structure_Engine.dll","descriptionParts":["Sets the direction of the local x vector of the Panel. This is done by calculation of a new orientation angle matching the provided vector. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Structure.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The Panel to set the local orientation to. ","This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."],"isRequired":1,"isInterface":0},{"inputName":"localX","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Vector to set as local x of the panel. If this vector is not in the plane of the Panel it will get projected. If the vector is parallel to the normal of the Panel the operation will fail and the Panel will not be updated. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["The Panel with updated orientation. ","This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."]}},{"namespace":"BH.Engine.Structure","className":"Modify","memberName":"SetLocalOrientations","assemblyName":"Structure_Engine.dll","descriptionParts":["Sets the direction of the local x vector of all FEMeshFaces of the FEMesh. This is done by calculation of a new orientation angles matching the provided vector. ",""],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Structure.Elements","memberName":"FEMesh","isGeneric":"0","descriptionParts":["The FEMesh to set the local orientations to. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."],"isRequired":1,"isInterface":0},{"inputName":"localX","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Vector to set as local x of the FEMeshFaces of the FEMesh. If this vector is not in the plane of the FEMeshFace it will get projected. If the vector is parallel to the normal of the FEMeshFace the operation will fail and the FEMeshFace will not be updated. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FEMesh","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["The FEMesh with updated face orientations. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."]}},{"namespace":"BH.Engine.Structure","className":"Modify","memberName":"SetLocalOrientation","assemblyName":"Structure_Engine.dll","descriptionParts":["Sets the direction of the local x vector of the FEMeshFace. This is done by calculation of a new orientation angle matching the provided vector. ",""],"inputs":[{"inputName":"face","namespace":"BH.oM.Structure.Elements","memberName":"FEMeshFace","isGeneric":"0","descriptionParts":["The FEMeshFace to set the local orientation to. ","This is a BH.oM.Structure.Elements.FEMeshFace: ","Face of an FEMesh. The face is defined by the indices of its nodes in the node list. Geometrical information about position in space is stored on the host FEMesh."],"isRequired":1,"isInterface":0},{"inputName":"mesh","namespace":"BH.oM.Structure.Elements","memberName":"FEMesh","isGeneric":"0","descriptionParts":["The FEMesh to which the face belongs. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."],"isRequired":1,"isInterface":0},{"inputName":"localX","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Vector to set as local x of the FEMeshFaces. If this vector is not in the plane of the FEMeshFace it will get projected. If the vector is parallel to the normal of the FEMeshFace the operation will fail and the FEMeshFace will not be updated. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"FEMeshFace","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["The FEMeshFace with updated face orientation. ","This is a BH.oM.Structure.Elements.FEMeshFace: ","Face of an FEMesh. The face is defined by the indices of its nodes in the node list. Geometrical information about position in space is stored on the host FEMesh."]}},{"namespace":"BH.Engine.Structure","className":"Modify","memberName":"SetMaterial","assemblyName":"Structure_Engine.dll","descriptionParts":["Sets the material of a Bar by updating the material of its SectionProperty. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to set the material to, i.e. the Bar to have the material of its SectionProperty updated. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0},{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"IMaterialFragment","isGeneric":"0","descriptionParts":["The material to set to the Bar. ","This is a BH.oM.Structure.MaterialFragments.IMaterialFragment: ","Base interface for structural materials used by structural properties or as a fragment of the physical material. ","This can be of the following types: Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Bar","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["The Bar with updated material. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."]}},{"namespace":"BH.Engine.Structure","className":"Modify","memberName":"SetNormal","assemblyName":"Structure_Engine.dll","descriptionParts":["Aligns the normal of the Bar with the provided normal by updating the OrientationAngle of the former. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to update. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0},{"inputName":"normal","namespace":"BH.oM.Geometry","memberName":"Vector","isGeneric":"0","descriptionParts":["Vector to be used as normal of the Bar. This vector should generally be orthogonal to the Bar, if it is not, it will be made orthogonal by projecting it to the section plane of the Bar (a plane that has that Bar tangent as its normal). This means that the Normal cannot be parallel to the Tangent of the Bar. ","Vector will be used to determine the orientation angle of the Bar. This is done by measuring the counter clockwise angle in the section plane of the Bar between a reference Vector and the provided Vector. For a non-vertical Bar, the reference vector will be the global Z-axis. For a vertical bar the reference vector will be a vector that is orthogonal to the tangent vector of the Bar and the global Y-axis. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Bar","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["Bar with updated orientation angle. If the orientation angle could not be calculated, the unchanged bar is returned. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."]}},{"namespace":"BH.Engine.Structure","className":"Modify","memberName":"SetStructuralFragment","assemblyName":"Structure_Engine.dll","descriptionParts":["Assigns a MaterialFragment to a physical Material. First removes any previous instances of the structural IMaterialFragment from the list, then adds the new. ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["The physical material to add a structural fragment to. ","This is a BH.oM.Physical.Materials.Material"],"isRequired":1,"isInterface":0},{"inputName":"structuralFragment","namespace":"BH.oM.Structure.MaterialFragments","memberName":"IMaterialFragment","isGeneric":"0","descriptionParts":["The structural fragment to be appended to the material. Will replace any previous instance. ","This is a BH.oM.Structure.MaterialFragments.IMaterialFragment: ","Base interface for structural materials used by structural properties or as a fragment of the physical material. ","This can be of the following types: Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Material","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["Physical Material with structural MaterialFragment set. ","This is a BH.oM.Physical.Materials.Material"]}},{"namespace":"BH.Engine.Structure","className":"Modify","memberName":"ApplyModifiers","assemblyName":"Structure_Engine.dll","descriptionParts":["Sets modifiers to the SurfaceProperty. The modifiers are used to scale one or more of the property constants for analysis. Constants are multiplied with the modifiers, hence a modifier value of 1 means no change. ",""],"inputs":[{"inputName":"prop","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ISurfaceProperty","isGeneric":"0","descriptionParts":["The SurfaceProperty to apply modifiers to. ","This is a BH.oM.Structure.SurfaceProperties.ISurfaceProperty: ","Base interface for properties for 2D finite element structural objects such as Panels and FEMeshes. ","This can be of the following types: Ribbed, Waffle, ConstantThickness, LoadingPanelProperty"],"isRequired":1,"isInterface":1},{"inputName":"fxx","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modifier of the axial stiffness along the local x-axis. ","This is a Ratio [-] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"fxy","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modifier of the the in-plane shear. ","This is a Ratio [-] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"fyy","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modifier of the axial stiffness along the local y-axis. ","This is a Ratio [-] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"mxx","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modifier of the bending stiffness about the local x-axis. ","This is a Ratio [-] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"mxy","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modifier of the in-plane twist stiffness. ","This is a Ratio [-] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"myy","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modifier of the bending stiffness about the local y-axis. ","This is a Ratio [-] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"vxz","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modifier of the out of plane shear stiffness along the local x-axis. ","This is a Ratio [-] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"vyz","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modifier of the out of plane shear stiffness along the local y-axis. ","This is a Ratio [-] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"mass","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modifier of the mass. ","This is a Ratio [-] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"weight","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modifier of the weight. ","This is a Ratio [-] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ISurfaceProperty","namespace":"BH.oM.Structure.SurfaceProperties","isGeneric":"0","descriptionParts":["SurfaceProperty with applied modifiers. ","This is a BH.oM.Structure.SurfaceProperties.ISurfaceProperty: ","Base interface for properties for 2D finite element structural objects such as Panels and FEMeshes. ","This can be of the following types: Ribbed, Waffle, ConstantThickness, LoadingPanelProperty"]}},{"namespace":"BH.Engine.Structure","className":"Modify","memberName":"ApplyModifiers","assemblyName":"Structure_Engine.dll","descriptionParts":["Sets modifiers to the SectionProperty. The modifiers are used to scale one or more of the property constants for analysis. Constants are multiplied with the modifiers, hence a modifier value of 1 means no change. ",""],"inputs":[{"inputName":"prop","namespace":"BH.oM.Structure.SectionProperties","memberName":"ISectionProperty","isGeneric":"0","descriptionParts":["The SectionProperty to apply modifiers to. ","This is a BH.oM.Structure.SectionProperties.ISectionProperty: ","Base interface for all bar section properties. Contains the material and all section constants. ","This can be of the following types: AluminiumSection, GenericSection, TimberSection, CableSection, CompositeSection, ConcreteSection, ExplicitSection, SteelSection"],"isRequired":1,"isInterface":1},{"inputName":"area","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modifier of the area. ","This is a Ratio [-] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"iy","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modifier of the second moment about the local y-axis (generally major axis). ","This is a Ratio [-] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"iz","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modifier of the second moment about the local z-axis (generally minor axis). ","This is a Ratio [-] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"j","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modifier of the torsional constant. ","This is a Ratio [-] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"asy","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modifier of the shear area along the local y-axis (generally minor axis). ","This is a Ratio [-] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"asz","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Modifier of the shear area along the local z-axis (generally major axis). ","This is a Ratio [-] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"ISectionProperty","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["SectionProperty with applied modifiers. ","This is a BH.oM.Structure.SectionProperties.ISectionProperty: ","Base interface for all bar section properties. Contains the material and all section constants. ","This can be of the following types: AluminiumSection, GenericSection, TimberSection, CableSection, CompositeSection, ConcreteSection, ExplicitSection, SteelSection"]}},{"namespace":"BH.Engine.Structure","className":"Modify","memberName":"SetElements0D","assemblyName":"Structure_Engine.dll","descriptionParts":["Sets the IElement0Ds of the Bar, i.e. its two end Nodes or Points. Method required for IElement1Ds. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to set the IElement0Ds to. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0},{"inputName":"newElements0D","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Dimensional","memberName":"IElement0D","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The new IElement0Ds of the Bar. Should be a list of length two, containing exactly two structural Nodes or Geometrical Points. ","Points will assigin default end properties to the Bar, i.e. Fixed releases, no support. ","This is a List<IElement0D> ","This can be of the following types: Point, Node, Luminaire, Node, AirTerminal, LightFixture, VolumeDamper, CameraDevice, Node"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Bar","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["The bar with updated Nodes. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."]}},{"namespace":"BH.Engine.Structure","className":"Modify","memberName":"Flip","assemblyName":"Structure_Engine.dll","descriptionParts":["Flips the StartNode and EndNode of the Bar, i.e. the StartNode is set to the EndNode and vice versa. No modification is being made to releases, orientation angle, offsets etc. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to flip. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Bar","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["The Bar with flipped end Nodes. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."]}},{"namespace":"BH.Engine.Structure","className":"Modify","memberName":"Flip","assemblyName":"Structure_Engine.dll","descriptionParts":["Flips the location curve of the Edge, i.e. the start becomes the end and vice versa. ",""],"inputs":[{"inputName":"edge","namespace":"BH.oM.Structure.Elements","memberName":"Edge","isGeneric":"0","descriptionParts":["The Edge to flip. ","This is a BH.oM.Structure.Elements.Edge: ","Edge class to describe the edges of panels (or other objects) by a curve and properties."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Edge","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["The Edge with a flipped location curve. ","This is a BH.oM.Structure.Elements.Edge: ","Edge class to describe the edges of panels (or other objects) by a curve and properties."]}},{"namespace":"BH.Engine.Structure","className":"Modify","memberName":"SetReinforcement","assemblyName":"Structure_Engine.dll","descriptionParts":["Sets Reinforcement to a ConcreteSection. Any previous Reinforcement will be overwritten. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"ConcreteSection","isGeneric":"0","descriptionParts":["The ConcreteSection to set Reinforcement to. ","This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."],"isRequired":1,"isInterface":0},{"inputName":"reinforcement","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"IBarReinforcement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The collection of Reinforcement to set to the ConcreteSection. ","This is a IEnumerable<IBarReinforcement> ","This can be of the following types: TransverseReinforcement, LongitudinalReinforcement"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"ConcreteSection","namespace":"BH.oM.Structure.SectionProperties","isGeneric":"0","descriptionParts":["The ConcreteSection with new Reinforcement. ","This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"WarpingConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the warping constant for the profile. This will always return 0 for closed sections. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"CircleProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the warping constant for. ","This is a BH.oM.Spatial.ShapeProfiles.CircleProfile: ","Solid circular profile"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The warping constant of the profile. ","This is a WarpingConstant [m⁶] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"WarpingConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the warping constant for the profile. This will always return 0 for closed sections. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"TubeProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the warping constant for. ","This is a BH.oM.Spatial.ShapeProfiles.TubeProfile: ","Circular hollow profile."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The warping constant of the profile. ","This is a WarpingConstant [m⁶] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"WarpingConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the warping constant for the profile. This will always return 0 for closed sections. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"BoxProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the warping constant for. ","This is a BH.oM.Spatial.ShapeProfiles.BoxProfile: ","Rectangular hollow profile with constant thickness and optional corner radii."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The warping constant of the profile. ","This is a WarpingConstant [m⁶] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"WarpingConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the warping constant for the profile. This will always return 0 for closed sections. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"FabricatedBoxProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the warping constant for. ","This is a BH.oM.Spatial.ShapeProfiles.FabricatedBoxProfile: ","Rectangular hollow profile that allows for different thicknesses of the webs, top flange and bottom flange."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The warping constant of the profile. ","This is a WarpingConstant [m⁶] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"WarpingConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the warping constant for the profile. This will always return 0 for closed sections. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"KiteProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the warping constant for. ","This is a BH.oM.Spatial.ShapeProfiles.KiteProfile"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The warping constant of the profile. ","This is a WarpingConstant [m⁶] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"WarpingConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the warping constant for the profile. This will always return 0 for closed sections. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"RectangleProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the warping constant for. ","This is a BH.oM.Spatial.ShapeProfiles.RectangleProfile: ","Solid rectangular profile."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The warping constant of the profile. ","This is a WarpingConstant [m⁶] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"WarpingConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the warping constant for the profile. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"ISectionProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the warping constant for. ","This is a BH.oM.Spatial.ShapeProfiles.ISectionProfile: ","I-shaped profile with parallel flanges with equal thickness."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The warping constant of the profile. ","This is a WarpingConstant [m⁶] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"WarpingConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the warping constant for the profile. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"FabricatedISectionProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the warping constant for. ","This is a BH.oM.Spatial.ShapeProfiles.FabricatedISectionProfile: ","I-shaped profile with parallel flanges that allows for different thicknesses of the web, top flange and bottom flange as well as different top and bottom flange widths."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The warping constant of the profile. ","This is a WarpingConstant [m⁶] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"WarpingConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the warping constant for the profile. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"ChannelProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the warping constant for. ","This is a BH.oM.Spatial.ShapeProfiles.ChannelProfile: ","C-shaped profile with parallel flanges of the same length and thickness."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The warping constant of the profile. ","This is a WarpingConstant [m⁶] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IWarpingConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the warping constant for the profile. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the warping constant for. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The warping constant of the profile. ","This is a WarpingConstant [m⁶] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"AverageElement","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"nodes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Node","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Node>"],"isRequired":1,"isInterface":0},{"inputName":"weights","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Double>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Node","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Node: ","0D finite element for structural analysis. Node class contains positional information as well as orientation and support."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IsConstrained","assemblyName":"Structure_Engine.dll","descriptionParts":["Method checks if a Node has a Support assigned. ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Structure.Elements","memberName":"Node","isGeneric":"0","descriptionParts":["The Node to check. ","This is a BH.oM.Structure.Elements.Node: ","0D finite element for structural analysis. Node class contains positional information as well as orientation and support."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Returns true is the Node has a Support assigned. ","This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IEdges","assemblyName":"Structure_Engine.dll","descriptionParts":["Extracts all the edge curves from an AreaElement. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Structure.Elements","memberName":"IAreaElement","isGeneric":"0","descriptionParts":["The element to extract opening edges from. ","This is a BH.oM.Structure.Elements.IAreaElement: ","Base interface for 2D analytical elements such as Panels, FEMeshes and Surfaces to represent, for example, walls and slabs. ","This can be of the following types: FEMesh, Surface, Panel"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The list of curves representing all internal and external edges of an element. ","This is a IEnumerable<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Geometry","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the geometry of a ConcreteSection as its profile outlines and reinforcement in the global XY plane. Method required for automatic display in UI packages. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"ConcreteSection","isGeneric":"0","descriptionParts":["ConcreteSection to get outline and reinforcement geometry from. ","This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CompositeGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The geometry of the ConcreteSection as its outline and reinforment curves in the global XY. ","This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Geometry","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the geometry of a GeometricalSection as its profile outlines the global XY plane. Method required for automatic display in UI packages. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"IGeometricalSection","isGeneric":"0","descriptionParts":["GeometricalSection to get outline geometry from. ","This is a BH.oM.Structure.SectionProperties.IGeometricalSection: ","Interface for sections based on Shape profiles. ","This can be of the following types: AluminiumSection, GenericSection, TimberSection, ConcreteSection, SteelSection"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The geometry of the GeometricalSection as its outline in the global XY plane. ","This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Geometry","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the geometry of a RigidLink as a list of lines between the primary node and the secondary nodes. Method required for automatic display in UI packages. ",""],"inputs":[{"inputName":"link","namespace":"BH.oM.Structure.Elements","memberName":"RigidLink","isGeneric":"0","descriptionParts":["RigidLink to get the line geometry from. ","This is a BH.oM.Structure.Elements.RigidLink: ","A rigid link object defining rigid constraints between two or more nodes."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The geometry of the RigidLink as a list of primary-secondary lines. ","This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IGeometry","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the geometry of a SectionProperty, generally as its profile outlines the global XY plane. Method required for automatic display in UI packages. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"ISectionProperty","isGeneric":"0","descriptionParts":["SectionProperty to get outline geometry from. ","This is a BH.oM.Structure.SectionProperties.ISectionProperty: ","Base interface for all bar section properties. Contains the material and all section constants. ","This can be of the following types: AluminiumSection, GenericSection, TimberSection, CableSection, CompositeSection, ConcreteSection, ExplicitSection, SteelSection"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The geometry of the SectionProperty. ","This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Geometry","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"SteelSection","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SectionProperties.SteelSection: ","Steel section to be used on Bars. Defined by a section profile."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Mass","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the mass of a Bar as its length times mass per metre. The mass per metre is generally calculated as section area multiplied by the density. No offsets or similar ar taken into acount. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to calculate the mass for. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The mass of the Bar. ","This is a Mass [kg] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Mass","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the mass of a Panel as its area times mass per area. The mass per area is for a constant thickness calculated as thickness multiplied by the density. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Structure.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The Panel to calculate the mass for. ","This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The mass of the Panel. ","This is a Mass [kg] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MassPerArea","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the mass per area for the property as its thickness mutiplied by the density. ",""],"inputs":[{"inputName":"constantThickness","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ConstantThickness","isGeneric":"0","descriptionParts":["The ConstantThickness property to calculate the mass per area for. ","This is a BH.oM.Structure.SurfaceProperties.ConstantThickness: ","Simplest property for 2D analytical elements with a constant thickness and homogenous material across the whole element."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The mass per area for the property. ","This is a MassPerUnitArea [kg/m²] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MassPerArea","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ribbedProperty","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"Ribbed","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SurfaceProperties.Ribbed: ","Property for 2D analytical elements, made up of a slab on top of parallel ribs running in one direction, all sharing the same material."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MassPerArea","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"ribbedProperty","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"Waffle","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SurfaceProperties.Waffle: ","Property for 2D analytical elements, made up of a slab on top of parallel ribs running in two directions, all sharing the same material."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MassPerArea","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the mass per area for a LoadingPanelProperty. This will always return 0. ",""],"inputs":[{"inputName":"loadingPanelProperty","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"LoadingPanelProperty","isGeneric":"0","descriptionParts":["The LoadingPanelProperty property to calculate the mass per area for. ","This is a BH.oM.Structure.SurfaceProperties.LoadingPanelProperty: ","Property for 2D analytical elements used to distribute load, without any structural stiffness."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The mass per area for the property. THis will always return 0 for a LoadingPanelProperty. ","This is a MassPerUnitArea [kg/m²] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IMassPerArea","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the mass per area for the property. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ISurfaceProperty","isGeneric":"0","descriptionParts":["The ISurfaceProperty property to calculate the mass per area for. ","This is a BH.oM.Structure.SurfaceProperties.ISurfaceProperty: ","Base interface for properties for 2D finite element structural objects such as Panels and FEMeshes. ","This can be of the following types: Ribbed, Waffle, ConstantThickness, LoadingPanelProperty"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The mass per area for the property. ","This is a MassPerUnitArea [kg/m²] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MassPerMetre","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the mass per length for the section as its area mulitplied by the density. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"ISectionProperty","isGeneric":"0","descriptionParts":["The SectionProperty to calculate the mass per area for. ","This is a BH.oM.Structure.SectionProperties.ISectionProperty: ","Base interface for all bar section properties. Contains the material and all section constants. ","This can be of the following types: AluminiumSection, GenericSection, TimberSection, CableSection, CompositeSection, ConcreteSection, ExplicitSection, SteelSection"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The mass per length for the section. ","This is a MassPerUnitLength [kg/m] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MassPerMetre","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the mass per length for the section as its area times density. Does not take any reinforcement into acount. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"ConcreteSection","isGeneric":"0","descriptionParts":["The ConcreteSection to calculate the mass per area for. ","This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The mass per length for the section. ","This is a MassPerUnitLength [kg/m] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MassPerMetre","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the mass per length for the section the mass per metre of the concrete section + the mass per metre of the steel section. Does not take any reinforcement into acount. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"CompositeSection","isGeneric":"0","descriptionParts":["The CompositeSection to calculate the mass per area for. ","This is a BH.oM.Structure.SectionProperties.CompositeSection: ","A steel-concrete composite section to be used on bars. Defined by a steel and a concrete section. Not yet fully implemented/Supported."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The mass per length for the section. ","This is a MassPerUnitLength [kg/m] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MassPerMetre","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the mass per length for the section as its area mulitplied by the density. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"CableSection","isGeneric":"0","descriptionParts":["The CableSection to calculate the mass per area for. ","This is a BH.oM.Structure.SectionProperties.CableSection: ","Cable section to be used on Bars. Defined by cable diameter, number of cables, and total area."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The mass per length for the section. ","This is a MassPerUnitLength [kg/m] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IMassPerMetre","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the mass per length for the section, generally as its area mulitplied by the density. General dispatch method that calls the correct method based on type. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"ISectionProperty","isGeneric":"0","descriptionParts":["The SectionProperty to calculate the mass per area for. ","This is a BH.oM.Structure.SectionProperties.ISectionProperty: ","Base interface for all bar section properties. Contains the material and all section constants. ","This can be of the following types: AluminiumSection, GenericSection, TimberSection, CableSection, CompositeSection, ConcreteSection, ExplicitSection, SteelSection"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The mass per length for the section. ","This is a MassPerUnitLength [kg/m] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Modifiers","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets any modifiers from a property as an array of doubles. The modifiers are used to scale one or more of the property constants for analysis. Constants are multiplied with the modifiers, hence a modifier value of 1 means no change. ","The values returned are in the following order: FXX, FXY, FYY, MXX, MXY, MYY, VXZ, VYZ, Mass, Weight. Method returns null if no modifiers are found. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ISurfaceProperty","isGeneric":"0","descriptionParts":["The property to extract modifiers from. ","This is a BH.oM.Structure.SurfaceProperties.ISurfaceProperty: ","Base interface for properties for 2D finite element structural objects such as Panels and FEMeshes. ","This can be of the following types: Ribbed, Waffle, ConstantThickness, LoadingPanelProperty"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double[]","namespace":"System","isGeneric":"0","descriptionParts":["Returns the modifier values of the property as a double array in the following order: FXX, FXY, FYY, MXX, MXY, MYY, VXZ, VYZ, Mass, Weight. Returns null if no modifiers are found. ","This is a Double[]"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Modifiers","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets any modifiers from a section as an array of doubles. The modifiers are used to scale one or more of the section constants for analysis.  Constants are multiplied with the modifiers, hence a modifier value of 1 means no change. ","The values returned are in the following order: Area, Iy, Iz, J, Asy, Asz. Method returns null if no modifiers are found. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SectionProperties","memberName":"ISectionProperty","isGeneric":"0","descriptionParts":["The SectionProperty to extract modifiers from. ","This is a BH.oM.Structure.SectionProperties.ISectionProperty: ","Base interface for all bar section properties. Contains the material and all section constants. ","This can be of the following types: AluminiumSection, GenericSection, TimberSection, CableSection, CompositeSection, ConcreteSection, ExplicitSection, SteelSection"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double[]","namespace":"System","isGeneric":"0","descriptionParts":["Returns the modifier values of the section as a double array in the following order: Area, Iy, Iz, J, Asy, Asz. Returns null if no modifiers are found. ","This is a Double[]"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Normal","assemblyName":"Structure_Engine.dll","descriptionParts":["Returns the bars local z-axis, generally the major axis direction of the section of the Bar. ","For non - vertical members the local z-axis is aligned with the global Z-axis and rotated with the orientation angle around the local x-axis. ","For vertical members the local y-axis is aligned with the global Y-axis and rotated with the orientation angle around the local x-axis. For this case the normal will be the vector orthogonal to the local x-axis and local y-axis. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to evaluate the normal of. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Vector representing the local z-axis of the Bar. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Normals","assemblyName":"Structure_Engine.dll","descriptionParts":["Returns the local z-axes of all FEMeshFaces in the FEMesh. Can only extract normals for 3 or 4-sided faces. ",""],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Structure.Elements","memberName":"FEMesh","isGeneric":"0","descriptionParts":["The FEMesh to extract the face normals from. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Vector","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of vectors representing the local z-axes of mesh faces. List order corresponds to the order of the faces. ","This is a List<Vector>"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Normal","assemblyName":"Structure_Engine.dll","descriptionParts":["Returns the local z-axis of an FEMeshFace. Can only extract normals for 3 or 4-sided faces. ",""],"inputs":[{"inputName":"face","namespace":"BH.oM.Structure.Elements","memberName":"FEMeshFace","isGeneric":"0","descriptionParts":["The FEMeshFace to evaluate the normal of. ","This is a BH.oM.Structure.Elements.FEMeshFace: ","Face of an FEMesh. The face is defined by the indices of its nodes in the node list. Geometrical information about position in space is stored on the host FEMesh."],"isRequired":1,"isInterface":0},{"inputName":"mesh","namespace":"BH.oM.Structure.Elements","memberName":"FEMesh","isGeneric":"0","descriptionParts":["The FEMesh to which the face belongs. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Vector representing the local z-axis of a mesh face. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"INormal","assemblyName":"Structure_Engine.dll","descriptionParts":["Returns the local z-axis of the IAreaElement. ",""],"inputs":[{"inputName":"areaElement","namespace":"BH.oM.Structure.Elements","memberName":"IAreaElement","isGeneric":"0","descriptionParts":["The element to evaluate the normal of. ","This is a BH.oM.Structure.Elements.IAreaElement: ","Base interface for 2D analytical elements such as Panels, FEMeshes and Surfaces to represent, for example, walls and slabs. ","This can be of the following types: FEMesh, Surface, Panel"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Vector representing the local z-axis element. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Normal","assemblyName":"Structure_Engine.dll","descriptionParts":["Returns the Panels local z-axis, a vector orthogonal to the plane of the Panel. This is found by fitting a plane through all the edge curves and taking the Normal from this plane. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Structure.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The Panel to evaluate the normal of. ","This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["Vector representing the local z-axis Panel. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"OppositeNode","assemblyName":"Structure_Engine.dll","descriptionParts":["If the provided node belongs to the Bar, this method returns the Node on the opposite end of the Bar. The Node is checked if it belongs to the Bar by comparing its Guid. If the provided Node is neither StartNode or EndNode, null is returned. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to get the oposite Node from. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0},{"inputName":"node","namespace":"BH.oM.Structure.Elements","memberName":"Node","isGeneric":"0","descriptionParts":["The Node used to check for the oposite. This should be either the StartNode or the EndNode of the Bar for the method to return anything. ","This is a BH.oM.Structure.Elements.Node: ","0D finite element for structural analysis. Node class contains positional information as well as orientation and support."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Node","namespace":"BH.oM.Structure.Elements","isGeneric":"0","descriptionParts":["The oposite Node of the Bar in relation to the one provided. ","This is a BH.oM.Structure.Elements.Node: ","0D finite element for structural analysis. Node class contains positional information as well as orientation and support."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"ElasticValues","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the spring values from a constraint as a double array. Values returned in the following order: TransX, TranxY, TransZ, RotX, RotY, RotZ. ",""],"inputs":[{"inputName":"constraint","namespace":"BH.oM.Structure.Constraints","memberName":"Constraint6DOF","isGeneric":"0","descriptionParts":["The constraint to spring values from. ","This is a BH.oM.Structure.Constraints.Constraint6DOF: ","Constraint objects with six degrees of freedom, three translational and three rotational, used for supports and bar end releases."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double[]","namespace":"System","isGeneric":"0","descriptionParts":["The elastic values, or spring values, from a constraint as a double array in the following order: TransX, TransY, TransZ, RotX, RotY, RotZ. ","This is a Double[]"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"DepthAt","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"section","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1},{"inputName":"x","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"DepthAt","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"section","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1},{"inputName":"x","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"range","namespace":"System","memberName":"Double[]&","isGeneric":"0","descriptionParts":["This is a Double[]&"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"PlotBarForce","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bars","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Bar>"],"isRequired":1,"isInterface":0},{"inputName":"forces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarForce","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<BarForce>"],"isRequired":1,"isInterface":0},{"inputName":"adapterIdType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"loadCase","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":0,"isInterface":0},{"inputName":"fx","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"fy","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"fz","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"mx","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"my","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"mz","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"PointGrid","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a rectangular grid of points on the Panel, scaled depending on Panel size. Used for load visualisation. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Structure.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The Panel to generate a grid on. ","This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Rectangular grid of points on the Panel. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"PointGrid","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a rectangular grid of points on the each face of the FEMesh. Used for load visualisation. ",""],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Structure.Elements","memberName":"FEMesh","isGeneric":"0","descriptionParts":["The FEMesh to generate a grid on. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["Rectangular grid of points on the FEMesh. ","This is a List<List<Point>>"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"PointGrid","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a rectangular grid of points on the FEMeshFace of the FEMesh. Used for load visualisation. ",""],"inputs":[{"inputName":"face","namespace":"BH.oM.Structure.Elements","memberName":"FEMeshFace","isGeneric":"0","descriptionParts":["The FEMeshFace to generate a grid on. ","This is a BH.oM.Structure.Elements.FEMeshFace: ","Face of an FEMesh. The face is defined by the indices of its nodes in the node list. Geometrical information about position in space is stored on the host FEMesh."],"isRequired":1,"isInterface":0},{"inputName":"mesh","namespace":"BH.oM.Structure.Elements","memberName":"FEMesh","isGeneric":"0","descriptionParts":["The FEMesh to which the face belongs. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Rectangular grid of points on the FEMeshFace. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IPointGrid","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a rectangular grid of points on an IAreaElement. Used for load visualisation. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Structure.Elements","memberName":"IAreaElement","isGeneric":"0","descriptionParts":["The element to generate a grid on. ","This is a BH.oM.Structure.Elements.IAreaElement: ","Base interface for 2D analytical elements such as Panels, FEMeshes and Surfaces to represent, for example, walls and slabs. ","This can be of the following types: FEMesh, Surface, Panel"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The generated rectangular grid of points on the element. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Position","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"node","namespace":"BH.oM.Structure.Elements","memberName":"Node","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Node: ","0D finite element for structural analysis. Node class contains positional information as well as orientation and support."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"BarSectionTranformation","assemblyName":"Structure_Engine.dll","descriptionParts":["Constructs the transformation matrix needed to move the section curves of the Bar from the default drawing position around the global origin to the start of the Bar and aligned with its tangent. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to extract the transformation matrix from. Will make use of the position, tangent and normal of the Bar to generate the matrix. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"TransformMatrix","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The generated transformation matrix. ","This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"LongitudinalReinforcementLayout","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the LongitudinalReinforcement positions in the ConcreteSection as a list of Points. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"ConcreteSection","isGeneric":"0","descriptionParts":["The concrete section to return all points from. ","This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."],"isRequired":1,"isInterface":0},{"inputName":"position","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Position along the section to extract reinforcement. A negative value will return all reinforcement. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The positions of the LongitudinalReinforcement. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"TransverseReinforcementLayout","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the TransverseReinforcement positions in the ConcreteSection as a list of Curves (centerlines). ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"ConcreteSection","isGeneric":"0","descriptionParts":["The concrete section to return all points from. ","This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."],"isRequired":1,"isInterface":0},{"inputName":"position","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Position along the section to extract reinforcement. A negative value will return all reinforcement. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The positions of the LongitudinalReinforcement. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"ReinforcementLayout","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the IBarReinforcement positions in the ConcreteSection as a list of points (centers) and curves (centerlines). ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"ConcreteSection","isGeneric":"0","descriptionParts":["The concrete section to return all points from. ","This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."],"isRequired":1,"isInterface":0},{"inputName":"position","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Position along the section to extract reinforcement. A negative value will return all reinforcement. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"IGeometry","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The positions of the IBarReinforcement. ","This is a List<IGeometry> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"ReinforcementLayout","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the LongitudinalReinforcement positions as a list of points, based on inner and outer profile edges. ",""],"inputs":[{"inputName":"reinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"LongitudinalReinforcement","isGeneric":"0","descriptionParts":["The LongitudinalReinforcement to extract the points from. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.LongitudinalReinforcement: ","Defines any longitudinal reinforcement along a Bar."],"isRequired":1,"isInterface":0},{"inputName":"cover","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Any additional spacing to be added in relation to the edge curves, such as minimum cover and stirups. This will be added on top of half the rebar Diameter. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"outerProfileEdges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The outer profile edges of the ConcreteSection to be populated. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"innerProfileEdges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The inner profile edges, or openings, of the ConcreteSection to be populated. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The positions of the LongitudinalReinforcement. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"ReinforcementLayout","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the TransverseReinforcement positions as a list of curves, based on inner and outer profile edges. ",""],"inputs":[{"inputName":"reinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"TransverseReinforcement","isGeneric":"0","descriptionParts":["The TransverseReinforcement to extract the points from. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.TransverseReinforcement: ","Defines any transverse reinforcement along a Bar."],"isRequired":1,"isInterface":0},{"inputName":"cover","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Rebar cover. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"outerProfileEdges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The outer profile edges of the ConcreteSection to be populated. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"innerProfileEdges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The inner profile edges, or openings, of the ConcreteSection to be populated. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The centerlines of the TransverseReinforcement. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"ReinforcementLayout","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets all the reinforcement centrelines in the Bar as a list of Curves. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to extract all longitudinal reinforcement from. If the bar does not contain a ConcreteSection an empty list will be returned. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The centrelines of the IBarReinforcement. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"ReinforcementLayout","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the LongitudinalReinforcement centrelines as a list of lines, based on inner and outer profile edges and Bar parameters. ",""],"inputs":[{"inputName":"reinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"LongitudinalReinforcement","isGeneric":"0","descriptionParts":["The LongitudinalReinforcement to extract the centrelines from. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.LongitudinalReinforcement: ","Defines any longitudinal reinforcement along a Bar."],"isRequired":1,"isInterface":0},{"inputName":"cover","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Any additional spacing to be added in relation to the edge curves, such as minimum cover and stirups. This will be added on top of half the rebar Diameter. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"outerProfileEdges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The outer profile edges of the ConcreteSection to be populated. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"innerProfileEdges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The inner profile edges, or openings, of the ConcreteSection to be populated. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of the host Bar used to generate the lines ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"transformation","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["Transformation needed to move the lines from the position of the host element. ","This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Line","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The centrelines of the LongitudinalReinforcement. ","This is a List<Line>"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"ReinforcementLayout","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the TransverseReinforcement centrelines as a list of curves, based on inner and outer profile edges and Bar parameters. ",""],"inputs":[{"inputName":"reinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"TransverseReinforcement","isGeneric":"0","descriptionParts":["The TransverseReinforcement to extract the centrelines from. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.TransverseReinforcement: ","Defines any transverse reinforcement along a Bar."],"isRequired":1,"isInterface":0},{"inputName":"cover","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Rebar cover. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"outerProfileEdges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The outer profile edges of the ConcreteSection to be populated. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"innerProfileEdges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The inner profile edges, or openings, of the ConcreteSection to be populated. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of the host Bar used to generate the lines. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"transformation","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["Transformation needed to move the lines from the position of the host element. ","This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The centrelines of the LongitudinalReinforcement. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IReinforcementLayout","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the IBarReinforcement centrelines as a list of curves, based on inner and outer profile edges and Bar parameters. ",""],"inputs":[{"inputName":"reinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"IBarReinforcement","isGeneric":"0","descriptionParts":["The TransverseReinforcement to extract the centrelines from. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.IBarReinforcement: ","Base interface for any reinforcement applied to a Bar. ","This can be of the following types: TransverseReinforcement, LongitudinalReinforcement"],"isRequired":1,"isInterface":1},{"inputName":"cover","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Rebar cover. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"outerProfileEdges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The outer profile edges of the ConcreteSection to be populated. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"innerProfileEdges","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The inner profile edges, or openings, of the ConcreteSection to be populated. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":0},{"inputName":"length","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Length of the host Bar used to generate the lines. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"transformation","namespace":"BH.oM.Geometry","memberName":"TransformMatrix","isGeneric":"0","descriptionParts":["Transformation needed to move the lines from the position of the host element. ","This is a BH.oM.Geometry.TransformMatrix: ","A 4x4 matrix describing linear tranformations in three-dimensional space, such as translations, rotations, reflections, scaling and shearing."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The centrelines of the LongitudinalReinforcement. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"ReinforcementTransitionPoints","assemblyName":"Structure_Engine.dll","descriptionParts":["Returns a list of the normalised locations (0 means start, 1 means end) in the cross section where the reinforcement changes. If section is null or does not contain any reinforcement, an empty list will be returned. ",""],"inputs":[{"inputName":"concreteSection","namespace":"BH.oM.Structure.SectionProperties","memberName":"ConcreteSection","isGeneric":"0","descriptionParts":["The ConcreteSection from which to extract reinforcement transitions. ","This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."],"isRequired":1,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Tolerance on how close two transition points should lie to be deemed the same. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The locations of reinforcement transitions in the crossection. ","This is a List<Double>"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"ReinforcingBarCount","assemblyName":"Structure_Engine.dll","descriptionParts":["Return the number of rebars in one particular Reinforcement object. ",""],"inputs":[{"inputName":"reinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"LongitudinalReinforcement","isGeneric":"0","descriptionParts":["The reinforcement object to extract the count from. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.LongitudinalReinforcement: ","Defines any longitudinal reinforcement along a Bar."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["Number of bars in the provided LongitudinalReinforcement. ","This is a Int32"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"ReinforcingBars","assemblyName":"Structure_Engine.dll","descriptionParts":["Extract all physical ReinforcingBars from the structural Bar. Only extract reinforcement for bars owning a ConcreteSection, for other section types, an empty list will be returned. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The structural Bar to extract Reinforcement from. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Reinforcement","memberName":"IReinforcingBar","isInterface":"1","isGeneric":"0"}],"descriptionParts":["All physical ReinforcingBar on the provided Bar. ","This is a List<IReinforcingBar> ","This can be of the following types: PrimaryReinforcingBar, Stirrup"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"SelectCase","assemblyName":"Structure_Engine.dll","descriptionParts":["Filters out results from a specific case given an identifier, Loadcase or LoadCombination. For Loadcase and LoadCombination the number property will be used as identifier for filtering. ",""],"inputs":[{"inputName":"results","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Structure","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The list of results to filter. ","This is a List<T>"],"isRequired":1,"isInterface":0},{"inputName":"loadcase","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["The case or combination to filter by. Should either be a string/int as identifier of the case or a Loadcase/LoadCombination where the number will be used as the identifier. If identifier can be extracted, all results are returned. ","This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Structure","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The filtered results. If no filtering param could be extracted, all results are returned. ","This is a List<T>"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"ShearArea","assemblyName":"Structure_Engine.dll","descriptionParts":["This method is largely replaced by the Compute.ShearAreaPolyline() Method. ","Calculates the Shear area from a list of IntegrationSlices, based on the integral found https://github.com/BHoM/documentation/wiki/Shear-Area-Derivation ","To use this method for a closed set of Curves, first call Geometry.Create.IntegrationSlices() to generate the slices. ",""],"inputs":[{"inputName":"slices","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"IntegrationSlice","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The list of integration slices used to calculate the shear area. To generate the integration slices from as set of closed curves first call Geometry.Create.IntegrationSlices(). ","This is a List<IntegrationSlice>"],"isRequired":1,"isInterface":0},{"inputName":"momentOfInertia","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The moment of inertia around the axis orthogonal to the one being used to generate the slices. ","This is a SecondMomentOfArea [m⁴] (as a Double)"],"isRequired":1,"isInterface":0},{"inputName":"centroid","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The centroid of the curves along the axis used to generate the slices. ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The shear area calculated based on the slices. ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"ShearModulus","assemblyName":"Structure_Engine.dll","descriptionParts":["Shear modulus of the isotropic material fragment. Evaluated based on YoungsModulus and PoissonsRatio as G = E/2(1+ν). ",""],"inputs":[{"inputName":"materialFragment","namespace":"BH.oM.Structure.MaterialFragments","memberName":"IIsotropic","isGeneric":"0","descriptionParts":["The isotropic material to get the ShearModulus from. ","This is a BH.oM.Structure.MaterialFragments.IIsotropic: ","Base interface for isotropic structural materials. ","This can be of the following types: Aluminium, Concrete, GenericIsotropicMaterial, Steel"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Shear modulus of the material fragment. ","This is a ShearModulus [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"SolidVolume","assemblyName":"Structure_Engine.dll","descriptionParts":["Returns a Bar's solid volume based on its SectionProperty area and the CentreLine length ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to get the volume from ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The Bar solid material volume. ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"SolidVolume","assemblyName":"Structure_Engine.dll","descriptionParts":["Returns a IAreaElement's solid volume as the area of the element times the average thickness of its SurfaceProperty. The average thickness is evaluated as if it was applied to an infinite plane. ",""],"inputs":[{"inputName":"areaElement","namespace":"BH.oM.Structure.Elements","memberName":"IAreaElement","isGeneric":"0","descriptionParts":["The IAreaElement to get the volume from ","This is a BH.oM.Structure.Elements.IAreaElement: ","Base interface for 2D analytical elements such as Panels, FEMeshes and Surfaces to represent, for example, walls and slabs. ","This can be of the following types: FEMesh, Surface, Panel"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The IAreaElement solid material volume. ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"StructuralMaterialFragment","assemblyName":"Structure_Engine.dll","descriptionParts":["Checks if the physical Material contains a single structural MaterialFragment, and if it does returns this fragment, containing all relevant structural material data. Returns null if not exactly one structural MaterialFragment is found. ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["The physical Material to extract a structural MaterialFragment from. ","This is a BH.oM.Physical.Materials.Material"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IMaterialFragment","namespace":"BH.oM.Structure.MaterialFragments","isGeneric":"0","descriptionParts":["The structural MaterialFragment. ","This is a BH.oM.Structure.MaterialFragments.IMaterialFragment: ","Base interface for structural materials used by structural properties or as a fragment of the physical material. ","This can be of the following types: Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Tangent","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the tangent Vector of a Bar as the direction Vector from StartNode to EndNode. No offsets or similar are taken into account. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to get the tangent from. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0},{"inputName":"normalise","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If true, the tangent Vector returned will be a unit Vector, that is, a Vector with length 1. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Vector","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The tangent Vector of the Bar. ","This is a BH.oM.Geometry.Vector: ","Defines a direction and magnitude in three-dimensional Euclidean space."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Visualize","assemblyName":"Structure_Engine.dll","descriptionParts":["Draws lines representing the area load, either as a grid over the element, or along the boundary of the elements. ",""],"inputs":[{"inputName":"areaTempLoad","namespace":"BH.oM.Structure.Loads","memberName":"AreaUniformTemperatureLoad","isGeneric":"0","descriptionParts":["The area load to visualise. Currently only supports area loads with Panels. ","This is a BH.oM.Structure.Loads.AreaUniformTemperatureLoad: ","Uniform temperature load for area elements such as Panels and FEMeshes."],"isRequired":1,"isInterface":0},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Scales the lines drawn. Default scaling of 1 means 1 Kelvin per metre. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"displayForces","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether forces should be displayed or not. Unused for temperature loads. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"displayMoments","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether moments should be displayed or not. Unused for temperature loads. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"asResultants","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether loads should be displayed as resultant vectors or as components. Unused for temperature loads. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"edgeDisplay","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Set to true to visualise the loads along the boundary of the elements. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"gridDisplay","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Set to true to visualise the load as a grid over the elements. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of lines representing the load. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Visualize","assemblyName":"Structure_Engine.dll","descriptionParts":["Draws arrows representing the area load, either as a grid over the element, or along the boundary of the elements. ",""],"inputs":[{"inputName":"areaUDL","namespace":"BH.oM.Structure.Loads","memberName":"AreaUniformlyDistributedLoad","isGeneric":"0","descriptionParts":["The area load to visualise. Currently only supports area loads with Panels. ","This is a BH.oM.Structure.Loads.AreaUniformlyDistributedLoad: ","Uniform area load for area elements such as Panels and FEMeshes."],"isRequired":1,"isInterface":0},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Scales the arrows drawn. Default scaling of 1 means 1 kN per metre. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"displayForces","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether forces should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"displayMoments","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether moments should be displayed or not. Unused for area loads. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"asResultants","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether loads should be displayed as resultant vectors or as components. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"edgeDisplay","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Set to true to visualise the loads along the boundary of the elements. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"gridDisplay","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Set to true to visualise the load as a grid over the elements. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of arrows representing the load. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Visualize","assemblyName":"Structure_Engine.dll","descriptionParts":["Draws arrows representing the Bar point load at its location on the Bar. ",""],"inputs":[{"inputName":"barPointForce","namespace":"BH.oM.Structure.Loads","memberName":"BarPointLoad","isGeneric":"0","descriptionParts":["The Bar load to visualise. ","This is a BH.oM.Structure.Loads.BarPointLoad: ","Point load to be applied for Bars, positioned a set distance from the StartNode."],"isRequired":1,"isInterface":0},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Scales the arrows drawn. Default scaling of 1 means 1 kN per metre. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"displayForces","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether forces should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"displayMoments","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether moments should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"asResultants","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether loads should be displayed as resultant vectors or as components. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of arrows representing the load. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Visualize","assemblyName":"Structure_Engine.dll","descriptionParts":["Draws lines representing the Bar load over the length of the Bar elements in the load. ",""],"inputs":[{"inputName":"barPrestressLoad","namespace":"BH.oM.Structure.Loads","memberName":"BarPrestressLoad","isGeneric":"0","descriptionParts":["The Bar load to visualise. ","This is a BH.oM.Structure.Loads.BarPrestressLoad: ","Axial prestress load applied to Bars."],"isRequired":1,"isInterface":0},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Scales the lines drawn. Default scaling of 1 means 1 kN per metre. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"displayForces","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether forces should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"displayMoments","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether moments should be displayed or not. Unused for Bar prestress loads. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"asResultants","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether loads should be displayed as resultant vectors or as components. Unused for Bar prestress loads. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of lines representing the load. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Visualize","assemblyName":"Structure_Engine.dll","descriptionParts":["Draws lines representing the Bar load over the length of the Bar elements in the load. ",""],"inputs":[{"inputName":"barTempLoad","namespace":"BH.oM.Structure.Loads","memberName":"BarUniformTemperatureLoad","isGeneric":"0","descriptionParts":["The Bar load to visualise. ","This is a BH.oM.Structure.Loads.BarUniformTemperatureLoad: ","Uniform temperature load for Bars."],"isRequired":1,"isInterface":0},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Scales the lines drawn. Default scaling of 1 means 1 kN per metre. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"displayForces","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether forces should be displayed or not. Unused for Bar temprature loads. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"displayMoments","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether moments should be displayed or not. Unused for Bar temprature loads. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"asResultants","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether loads should be displayed as resultant vectors or as components. Unused for Bar temprature loads. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of lines representing the load. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Visualize","assemblyName":"Structure_Engine.dll","descriptionParts":["Draws arrows representing the Bar load over the length of the Bar elements in the load. ",""],"inputs":[{"inputName":"barUDL","namespace":"BH.oM.Structure.Loads","memberName":"BarUniformlyDistributedLoad","isGeneric":"0","descriptionParts":["The Bar load to visualise. ","This is a BH.oM.Structure.Loads.BarUniformlyDistributedLoad: ","Uniformly distributed load applied to Bars. Can be used to apply force and/or moments."],"isRequired":1,"isInterface":0},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Scales the arrows drawn. Default scaling of 1 means 1 kN per metre. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"displayForces","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether forces should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"displayMoments","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether moments should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"asResultants","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether loads should be displayed as resultant vectors or as components. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of arrows representing the load. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Visualize","assemblyName":"Structure_Engine.dll","descriptionParts":["Draws arrows representing the Bar load over the length of the Bar elements in the load. ",""],"inputs":[{"inputName":"barVaryingDistLoad","namespace":"BH.oM.Structure.Loads","memberName":"BarVaryingDistributedLoad","isGeneric":"0","descriptionParts":["The Bar load to visualise. ","This is a BH.oM.Structure.Loads.BarVaryingDistributedLoad: ","Varying distributed load for bar elements. Can be used to apply force and/or moments."],"isRequired":1,"isInterface":0},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Scales the arrows drawn. Default scaling of 1 means 1 kN per metre. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"displayForces","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether forces should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"displayMoments","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether moments should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"asResultants","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether loads should be displayed as resultant vectors or as components. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of arrows representing the load. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Visualize","assemblyName":"Structure_Engine.dll","descriptionParts":["Draws arrows representing the gravity load. FOr bars it will be drawn as a series of arrows over the length of the Bar elements in the load. For panels it will be displayed as a list of arrows along the boundary on the element. ",""],"inputs":[{"inputName":"gravityLoad","namespace":"BH.oM.Structure.Loads","memberName":"GravityLoad","isGeneric":"0","descriptionParts":["The gravity load to visualise. ","This is a BH.oM.Structure.Loads.GravityLoad: ","Gravity load to be applied to elements such as Bars, Panels and FEMeshes."],"isRequired":1,"isInterface":0},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Scales the arrows drawn. Default scaling of 1 means 1 kN per metre. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"displayForces","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether forces should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"displayMoments","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether moments should be displayed or not. Not in use for gravity loads. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"asResultants","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether loads should be displayed as resultant vectors or as components. Not in use for gravity loads. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of arrows representing the load. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Visualize","assemblyName":"Structure_Engine.dll","descriptionParts":["Draws arrows representing the point load at the location of the Nodes of the load. ",""],"inputs":[{"inputName":"pointAcceleration","namespace":"BH.oM.Structure.Loads","memberName":"PointAcceleration","isGeneric":"0","descriptionParts":["The node load to visualise. ","This is a BH.oM.Structure.Loads.PointAcceleration: ","Point acceleration load for Nodes. This can be used to apply translational as well as angular acceleration."],"isRequired":1,"isInterface":0},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Scales the arrows drawn. Default scaling of 1 means 1 m/s² per metre. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"displayTranslations","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether translational acceleration should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"displayRotations","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether rotational acceleration should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"asResultants","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether loads should be displayed as resultant vectors or as components. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of arrows representing the load. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Visualize","assemblyName":"Structure_Engine.dll","descriptionParts":["Draws arrows representing the point load at the location of the Nodes of the load. ",""],"inputs":[{"inputName":"pointDisplacement","namespace":"BH.oM.Structure.Loads","memberName":"PointDisplacement","isGeneric":"0","descriptionParts":["The node load to visualise. ","This is a BH.oM.Structure.Loads.PointDisplacement: ","Point displacement for Nodes. This can be used to apply translation as well as rotation."],"isRequired":1,"isInterface":0},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Scales the arrows drawn. Default scaling of 1 means 1 m per metre. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"displayTranslations","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether translations should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"displayRotations","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether rotations should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"asResultants","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether loads should be displayed as resultant vectors or as components. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of arrows representing the load. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Visualize","assemblyName":"Structure_Engine.dll","descriptionParts":["Draws arrows representing the point load at the location of the Nodes of the load. ",""],"inputs":[{"inputName":"pointForce","namespace":"BH.oM.Structure.Loads","memberName":"PointLoad","isGeneric":"0","descriptionParts":["The node load to visualise. ","This is a BH.oM.Structure.Loads.PointLoad: ","Point load for Nodes. This can be used to apply force as well as moment."],"isRequired":1,"isInterface":0},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Scales the arrows drawn. Default scaling of 1 means 1 kN per metre. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"displayForces","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether forces should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"displayMoments","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether moments should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"asResultants","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether loads should be displayed as resultant vectors or as components. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of arrows representing the load. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Visualize","assemblyName":"Structure_Engine.dll","descriptionParts":["Draws arrows representing the point load at the location of the Nodes of the load. ",""],"inputs":[{"inputName":"pointVelocity","namespace":"BH.oM.Structure.Loads","memberName":"PointVelocity","isGeneric":"0","descriptionParts":["The node load to visualise. ","This is a BH.oM.Structure.Loads.PointVelocity: ","Point velocity load for Nodes. This can be used to apply translational as well as angular velocity."],"isRequired":1,"isInterface":0},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Scales the arrows drawn. Default scaling of 1 means 1 m/s per metre. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"displayTranslations","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether translational velocity should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"displayRotations","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether rotational velocity should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"asResultants","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether loads should be displayed as resultant vectors or as components. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of arrows representing the load. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Visualize","assemblyName":"Structure_Engine.dll","descriptionParts":["Draws arrows representing the load along the edges of the contour of the load. ",""],"inputs":[{"inputName":"contourLoad","namespace":"BH.oM.Structure.Loads","memberName":"ContourLoad","isGeneric":"0","descriptionParts":["The ContourLoad to visualise. ","This is a BH.oM.Structure.Loads.ContourLoad: ","Load to be applied over a region defined by a closed planar Polyline."],"isRequired":1,"isInterface":0},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Scales the arrows drawn. Default scaling of 1 means 1 m/s per metre. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"displayForces","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether forces should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"displayMoments","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether moments should be displayed or not. Unused for contour loads. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"asResultants","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether loads should be displayed as resultant vectors or as components. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of arrows representing the load. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Visualize","assemblyName":"Structure_Engine.dll","descriptionParts":["Draws arrows representing the load along the length of the line of the load. ",""],"inputs":[{"inputName":"lineLoad","namespace":"BH.oM.Structure.Loads","memberName":"GeometricalLineLoad","isGeneric":"0","descriptionParts":["The GeometricalLineLoad to visualise. ","This is a BH.oM.Structure.Loads.GeometricalLineLoad: ","Distributed load to be applied over a line."],"isRequired":1,"isInterface":0},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Scales the arrows drawn. Default scaling of 1 means 1 m/s per metre. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"displayForces","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether forces should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"displayMoments","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether moments should be displayed or not. Unused for contour loads. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"asResultants","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether loads should be displayed as resultant vectors or as components. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of arrows representing the load. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IVisualize","assemblyName":"Structure_Engine.dll","descriptionParts":["Draws arrows representing the load. Visualisation will depend on the load type. ",""],"inputs":[{"inputName":"load","namespace":"BH.oM.Structure.Loads","memberName":"ILoad","isGeneric":"0","descriptionParts":["The node load to visualise. ","This is a BH.oM.Structure.Loads.ILoad: ","Base interface implemented by all load classes. ","This can be of the following types: ContourLoad, GeometricalLineLoad, AreaDifferentialTemperatureLoad, AreaUniformTemperatureLoad, AreaUniformlyDistributedLoad, BarPointLoad, BarPrestressLoad, BarDifferentialTemperatureLoad, BarUniformTemperatureLoad, BarUniformlyDistributedLoad, BarVaryingDistributedLoad, GeometricalLineLoad, GravityLoad, ContourLoad, PointAcceleration, and more..."],"isRequired":1,"isInterface":1},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Scales the arrows drawn. Default scaling of 1 means 1 kN per metre. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"displayForces","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether forces or other translational loads should be displayed or not. . ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"displayMoments","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether moments or other rotational loads should be displayed or not. ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"asResultants","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles whether loads should be displayed as resultant vectors or as components. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IEnumerable","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"IGeometry","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A list of arrows representing the load. ","This is a IEnumerable<IGeometry> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"WidthAt","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"section","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1},{"inputName":"y","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"WidthAt","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"section","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1},{"inputName":"y","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"range","namespace":"System","memberName":"Double[]&","isGeneric":"0","descriptionParts":["This is a Double[]&"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IsLongitudinal","assemblyName":"Structure_Engine.dll","descriptionParts":["Method returns whether the reinforcement is longitudinal or not. This is always true for LayerReinforcement. ",""],"inputs":[{"inputName":"reinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"LayerReinforcement","isGeneric":"0","descriptionParts":["The reinforcement object to check. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.LayerReinforcement"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Returns true if the reinforcement is longitudinal. Always true for LayerReinforcement. ","This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IsLongitudinal","assemblyName":"Structure_Engine.dll","descriptionParts":["Method returns whether the reinforcement is longitudinal or not. This is always true for PerimeterReinforcement. ",""],"inputs":[{"inputName":"reinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"PerimeterReinforcement","isGeneric":"0","descriptionParts":["The reinforcement object to check. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.PerimeterReinforcement"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Returns true if the reinforcement is longitudinal. Always true for PerimeterReinforcement. ","This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IsLongitudinal","assemblyName":"Structure_Engine.dll","descriptionParts":["Method returns whether the reinforcement is longitudinal or not. This is always false for TieReinforcement. ",""],"inputs":[{"inputName":"reinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"TieReinforcement","isGeneric":"0","descriptionParts":["The reinforcement object to check. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.TieReinforcement"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Returns true if the reinforcement is longitudinal. Always false for TieReinforcement. ","This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IIsLongitudinal","assemblyName":"Structure_Engine.dll","descriptionParts":["Method returns whether the reinforcement is longitudinal or not. ",""],"inputs":[{"inputName":"reinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"Reinforcement","isGeneric":"0","descriptionParts":["The reinforcement object to check. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.Reinforcement"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Returns true if the reinforcement is longitudinal. ","This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"TieDiameter","assemblyName":"Structure_Engine.dll","descriptionParts":["Extracts the the diameter of the first tie reinforecment of a ConcreteSection. If no TieReinforcement is found, 0 will be returned. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SectionProperties","memberName":"ConcreteSection","isGeneric":"0","descriptionParts":["The ConcreteSection to get TieReinforcement diameter from. ","This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The diameter of the first TieReinforcement of the ConcreteSection. ","This is a Length [m] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"TorsionalConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Calcualtes the torsional constant for the profile. Note that this is not the polar moment of inertia. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"CircleProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the torsional constant for. ","This is a BH.oM.Spatial.ShapeProfiles.CircleProfile: ","Solid circular profile"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Torsional constant of the profile. Note that this is not the polar moment of inertia. ","This is a TorsionConstant [m⁴] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"TorsionalConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Calcualtes the torsional constant for the profile. Note that this is not the polar moment of inertia. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"TubeProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the torsional constant for. ","This is a BH.oM.Spatial.ShapeProfiles.TubeProfile: ","Circular hollow profile."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Torsional constant of the profile. Note that this is not the polar moment of inertia. ","This is a TorsionConstant [m⁴] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"TorsionalConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Calcualtes the torsional constant for the profile. Note that this is not the polar moment of inertia. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"FabricatedBoxProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the torsional constant for. ","This is a BH.oM.Spatial.ShapeProfiles.FabricatedBoxProfile: ","Rectangular hollow profile that allows for different thicknesses of the webs, top flange and bottom flange."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Torsional constant of the profile. Note that this is not the polar moment of inertia. ","This is a TorsionConstant [m⁴] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"TorsionalConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the torsional constant for the profile in accordance with section A.3 from BS EN 10210-2:2019. Note that this is not the polar moment of intertia. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"BoxProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the torsional constant for. ","This is a BH.oM.Spatial.ShapeProfiles.BoxProfile: ","Rectangular hollow profile with constant thickness and optional corner radii."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Torsional constant of the profile. Note that this is not the polar moment of inertia. ","This is a TorsionConstant [m⁴] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"TorsionalConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Calcualtes the torsional constant for the profile. Note that this is not the polar moment of inertia. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"FabricatedISectionProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the torsional constant for. ","This is a BH.oM.Spatial.ShapeProfiles.FabricatedISectionProfile: ","I-shaped profile with parallel flanges that allows for different thicknesses of the web, top flange and bottom flange as well as different top and bottom flange widths."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Torsional constant of the profile. Note that this is not the polar moment of inertia. ","This is a TorsionConstant [m⁴] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"TorsionalConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Calcualtes the torsional constant for the profile. Note that this is not the polar moment of inertia.","Formulae taken from https://orangebook.arcelormittal.com/explanatory-notes/long-products/section-properties/ ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"ISectionProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the torsional constant for. ","This is a BH.oM.Spatial.ShapeProfiles.ISectionProfile: ","I-shaped profile with parallel flanges with equal thickness."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Torsional constant of the profile. Note that this is not the polar moment of inertia. ","This is a TorsionConstant [m⁴] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"TorsionalConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Calcualtes the torsional constant for the profile. Note that this is not the polar moment of inertia.","Formulae taken from https://orangebook.arcelormittal.com/explanatory-notes/long-products/section-properties/ ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"ChannelProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the torsional constant for. ","This is a BH.oM.Spatial.ShapeProfiles.ChannelProfile: ","C-shaped profile with parallel flanges of the same length and thickness."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Torsional constant of the profile. Note that this is not the polar moment of inertia. ","This is a TorsionConstant [m⁴] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"TorsionalConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Calcualtes the torsional constant for the profile. Note that this is not the polar moment of inertia. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"ZSectionProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the torsional constant for. ","This is a BH.oM.Spatial.ShapeProfiles.ZSectionProfile"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Torsional constant of the profile. Note that this is not the polar moment of inertia. ","This is a TorsionConstant [m⁴] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"TorsionalConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Calcualtes the torsional constant for the profile. Note that this is not the polar moment of inertia.","Formulae taken from 'P385 Design of steel beams in torsion'. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"TSectionProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the torsional constant for. ","This is a BH.oM.Spatial.ShapeProfiles.TSectionProfile: ","T-shaped profile with constant flange thickness."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Torsional constant of the profile. Note that this is not the polar moment of inertia. ","This is a TorsionConstant [m⁴] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"TorsionalConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Calcualtes the torsional constant for the profile. Note that this is not the polar moment of inertia. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"GeneralisedTSectionProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the torsional constant for. ","This is a BH.oM.Spatial.ShapeProfiles.GeneralisedTSectionProfile: ","T-shaped profile that allows for different outsand widths and thicknesses. Outstands with different thicknesses are aligned by their top edge.","The full width of the top flange can be calculated as LeftOutstandWidth + WebThickness + RightOutstandWidth."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Torsional constant of the profile. Note that this is not the polar moment of inertia. ","This is a TorsionConstant [m⁴] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"TorsionalConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Calcualtes the torsional constant for the profile. Note that this is not the polar moment of inertia.","Formulae taken from 'P385 Design of steel beams in torsion'. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"AngleProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the torsional constant for. ","This is a BH.oM.Spatial.ShapeProfiles.AngleProfile: ","L-shaped profile."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Torsional constant of the profile. Note that this is not the polar moment of inertia. ","This is a TorsionConstant [m⁴] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"TorsionalConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Calcualtes the torsional constant for the profile. Note that this is not the polar moment of inertia. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"RectangleProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the torsional constant for. ","This is a BH.oM.Spatial.ShapeProfiles.RectangleProfile: ","Solid rectangular profile."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Torsional constant of the profile. Note that this is not the polar moment of inertia. ","This is a TorsionConstant [m⁴] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"ITorsionalConstant","assemblyName":"Structure_Engine.dll","descriptionParts":["Calcualtes the torsional constant for the profile. Note that this is not the polar moment of inertia. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["The ShapeProfile to calculate the torsional constant for. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Torsional constant of the profile. Note that this is not the polar moment of inertia. ","This is a TorsionConstant [m⁴] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"AverageThickness","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the average thickness of the property as if it was applied to an infinite plane. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ConstantThickness","isGeneric":"0","descriptionParts":["The property to evaluate the average thickness of. ","This is a BH.oM.Structure.SurfaceProperties.ConstantThickness: ","Simplest property for 2D analytical elements with a constant thickness and homogenous material across the whole element."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["the average thickness of the property as if it was applied to an infinite plane. ","This is a Length [m] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"AverageThickness","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the average thickness of the property as if it was applied to an infinite plane. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"Ribbed","isGeneric":"0","descriptionParts":["The property to evaluate the average thickness of. ","This is a BH.oM.Structure.SurfaceProperties.Ribbed: ","Property for 2D analytical elements, made up of a slab on top of parallel ribs running in one direction, all sharing the same material."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["the average thickness of the property as if it was applied to an infinite plane. ","This is a Length [m] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"AverageThickness","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the average thickness of the property as if it was applied to an infinite plane. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"Waffle","isGeneric":"0","descriptionParts":["The property to evaluate the average thickness of. ","This is a BH.oM.Structure.SurfaceProperties.Waffle: ","Property for 2D analytical elements, made up of a slab on top of parallel ribs running in two directions, all sharing the same material."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["the average thickness of the property as if it was applied to an infinite plane. ","This is a Length [m] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"AverageThickness","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the average thickness of the property as if it was applied to an infinite plane. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"LoadingPanelProperty","isGeneric":"0","descriptionParts":["The property to evaluate the average thickness of. ","This is a BH.oM.Structure.SurfaceProperties.LoadingPanelProperty: ","Property for 2D analytical elements used to distribute load, without any structural stiffness."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["the average thickness of the property as if it was applied to an infinite plane. ","This is a Length [m] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IAverageThickness","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the average thickness of the property as if it was applied to an infinite plane. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ISurfaceProperty","isGeneric":"0","descriptionParts":["The property to evaluate the average thickness of. ","This is a BH.oM.Structure.SurfaceProperties.ISurfaceProperty: ","Base interface for properties for 2D finite element structural objects such as Panels and FEMeshes. ","This can be of the following types: Ribbed, Waffle, ConstantThickness, LoadingPanelProperty"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["the average thickness of the property as if it was applied to an infinite plane. ","This is a Length [m] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"CoordinateSystem","assemblyName":"Structure_Engine.dll","descriptionParts":["Get the carteseian coordinate system descibring the position and local orientation of the node in the global coordinate system. ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Structure.Elements","memberName":"Node","isGeneric":"0","descriptionParts":["The Node to extract the local coordinate system from. ","This is a BH.oM.Structure.Elements.Node: ","0D finite element for structural analysis. Node class contains positional information as well as orientation and support."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Cartesian","namespace":"BH.oM.Geometry.CoordinateSystem","isGeneric":"0","descriptionParts":["The local cartesian coordinate system of the Node. ","This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"CoordinateSystem","assemblyName":"Structure_Engine.dll","descriptionParts":["Get the carteseian coordinate system descibring the position and local orientation of the Bar in the global coordinate system where the Bar tangent is the local x-axis and the normal is the local z-axis. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to extract the local coordinate system from. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Cartesian","namespace":"BH.oM.Geometry.CoordinateSystem","isGeneric":"0","descriptionParts":["The local cartesian coordinate system of the Bar. ","This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"CoordinateSystem","assemblyName":"Structure_Engine.dll","descriptionParts":["Get the Cartesian coordinate system describing the position and local orientation of the Panel in the global coordinate system where the z-axis is the normal of the Panel and the x and y axes are the directions of the local in-plane axes. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Structure.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The Panel to extract the local coordinate system from. ","This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Cartesian","namespace":"BH.oM.Geometry.CoordinateSystem","isGeneric":"0","descriptionParts":["The local cartesian coordinate system of the Panel. ","This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"CoordinateSystem","assemblyName":"Structure_Engine.dll","descriptionParts":["Get the Cartesian coordinate system descibring the position and local orientation of the FEMeshFaces of the FEMesh in the global coordinate system where the z-axis is the normal of the FEMeshFace and the x and y axes are the directions of the local in-plane axes. ",""],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Structure.Elements","memberName":"FEMesh","isGeneric":"0","descriptionParts":["The FEMesh to extract the local coordinate systems of the FEMeshFaces from. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The local cartesian coordinate systems of the FEMeshFaces of the FEMesh. ","This is a List<Cartesian>"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"CoordinateSystem","assemblyName":"Structure_Engine.dll","descriptionParts":["Get the Cartesian coordinate system descibring the position and local orientation of the FEMeshFace in the global coordinate system where the z-axis is the normal of the FEMeshFace and the x and y axes are the directions of the local in-plane axes. ",""],"inputs":[{"inputName":"face","namespace":"BH.oM.Structure.Elements","memberName":"FEMeshFace","isGeneric":"0","descriptionParts":["The FEMeshFace to extract the local coordinate system from. ","This is a BH.oM.Structure.Elements.FEMeshFace: ","Face of an FEMesh. The face is defined by the indices of its nodes in the node list. Geometrical information about position in space is stored on the host FEMesh."],"isRequired":1,"isInterface":0},{"inputName":"mesh","namespace":"BH.oM.Structure.Elements","memberName":"FEMesh","isGeneric":"0","descriptionParts":["The FEMesh to which the face belongs. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Cartesian","namespace":"BH.oM.Geometry.CoordinateSystem","isGeneric":"0","descriptionParts":["The local cartesian coordinate system of the FEMeshFace. ","This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"DescriptionOrName","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the name from a IProperty. If null or empty, a default description name is provided instead. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure","memberName":"IProperty","isGeneric":"0","descriptionParts":["The IProperty go get the name or default description from. ","This is a BH.oM.Structure.IProperty: ","Base interface for all structural properties. ","This can be of the following types: Offset, Ribbed, Waffle, ConstantThickness, LoadingPanelProperty, AluminiumSection, GenericSection, TimberSection, CableSection, CompositeSection, ConcreteSection, ExplicitSection, SteelSection, Aluminium, Concrete, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The name or autogenerated description for the IProperty. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"DescriptionOrName","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the name from a profile. If null or empty, a default description name is provided instead. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["The profile go get the name or default description from. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The name or autogenerated description for the profile. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"DescriptionOrName","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the name from a section. If null or empty, a default description name is provided instead. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"ISectionProperty","isGeneric":"0","descriptionParts":["The section go get the name or default description from. ","This is a BH.oM.Structure.SectionProperties.ISectionProperty: ","Base interface for all bar section properties. Contains the material and all section constants. ","This can be of the following types: AluminiumSection, GenericSection, TimberSection, CableSection, CompositeSection, ConcreteSection, ExplicitSection, SteelSection"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The name or autogenerated description for the section. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"DescriptionOrName","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the name from a property. If null or empty, a default description name is provided instead. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ISurfaceProperty","isGeneric":"0","descriptionParts":["The property go get the name or default description from. ","This is a BH.oM.Structure.SurfaceProperties.ISurfaceProperty: ","Base interface for properties for 2D finite element structural objects such as Panels and FEMeshes. ","This can be of the following types: Ribbed, Waffle, ConstantThickness, LoadingPanelProperty"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The name or autogenerated description for the property. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the profile as 'I Hegiht x Width x WebThickness x FlangeThickness'. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"ISectionProfile","isGeneric":"0","descriptionParts":["The profile to get a default description for. ","This is a BH.oM.Spatial.ShapeProfiles.ISectionProfile: ","I-shaped profile with parallel flanges with equal thickness."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the profile based on its dimensions. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the profile as 'Box Hegiht x Width x Thickness'. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"BoxProfile","isGeneric":"0","descriptionParts":["The profile to get a default description for. ","This is a BH.oM.Spatial.ShapeProfiles.BoxProfile: ","Rectangular hollow profile with constant thickness and optional corner radii."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the profile based on its dimensions. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the profile as 'Angle Hegiht x Width x WebThickness x FlangeThickness'. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"AngleProfile","isGeneric":"0","descriptionParts":["The profile to get a default description for. ","This is a BH.oM.Spatial.ShapeProfiles.AngleProfile: ","L-shaped profile."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the profile based on its dimensions. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the profile as 'Channel Hegiht x Width x WebThickness x FlangeThickness'. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"ChannelProfile","isGeneric":"0","descriptionParts":["The profile to get a default description for. ","This is a BH.oM.Spatial.ShapeProfiles.ChannelProfile: ","C-shaped profile with parallel flanges of the same length and thickness."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the profile based on its dimensions. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the profile as 'Circle Diameter'. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"CircleProfile","isGeneric":"0","descriptionParts":["The profile to get a default description for. ","This is a BH.oM.Spatial.ShapeProfiles.CircleProfile: ","Solid circular profile"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the profile based on its dimensions. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the profile as 'FabBox Hegiht x Width x WebThickness x TopFlangeThickness x BotFlangeThickness'. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"FabricatedBoxProfile","isGeneric":"0","descriptionParts":["The profile to get a default description for. ","This is a BH.oM.Spatial.ShapeProfiles.FabricatedBoxProfile: ","Rectangular hollow profile that allows for different thicknesses of the webs, top flange and bottom flange."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the profile based on its dimensions. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the profile as 'GenFabBox Hegiht x TotalWidth x WebThickness x TopFlangeThickness x BotFlangeThickness'. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"GeneralisedFabricatedBoxProfile","isGeneric":"0","descriptionParts":["The profile to get a default description for. ","This is a BH.oM.Spatial.ShapeProfiles.GeneralisedFabricatedBoxProfile: ","Rectangular hollow profile that allows for different thicknesses of the webs, top flange and bottom flange as well as defined outstands of the top and bottom flange"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the profile based on its dimensions. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the profile as 'Kite Angle x Width x Thickness'. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"KiteProfile","isGeneric":"0","descriptionParts":["The profile to get a default description for. ","This is a BH.oM.Spatial.ShapeProfiles.KiteProfile"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the profile based on its dimensions. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the profile as 'FabI Hegiht x TopFlangeWidth x BotFLangeWidth x WebThickness x TopFlangeThickness x BotFlangeThickness'. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"FabricatedISectionProfile","isGeneric":"0","descriptionParts":["The profile to get a default description for. ","This is a BH.oM.Spatial.ShapeProfiles.FabricatedISectionProfile: ","I-shaped profile with parallel flanges that allows for different thicknesses of the web, top flange and bottom flange as well as different top and bottom flange widths."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the profile based on its dimensions. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the profile as 'FreeForm'. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"FreeFormProfile","isGeneric":"0","descriptionParts":["The profile to get a default description for. ","This is a BH.oM.Spatial.ShapeProfiles.FreeFormProfile: ","Freeform profile only defined by its geometry without any dimensional data. To be used as a fallback for profiles not yet explicitly defined."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the profile based on its dimensions. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the profile as 'Rectangle Hegiht x Width x CornerRadius'. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"RectangleProfile","isGeneric":"0","descriptionParts":["The profile to get a default description for. ","This is a BH.oM.Spatial.ShapeProfiles.RectangleProfile: ","Solid rectangular profile."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the profile based on its dimensions. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the profile as 'T Hegiht x Width x WebThickness x FlangeThickness'. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"TSectionProfile","isGeneric":"0","descriptionParts":["The profile to get a default description for. ","This is a BH.oM.Spatial.ShapeProfiles.TSectionProfile: ","T-shaped profile with constant flange thickness."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the profile based on its dimensions. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the profile as 'GenT  Height x WebThickness x LeftOutstandWidth x LeftOutstandThickness x RightOutstandWidth x RightOutstandThickness'. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"GeneralisedTSectionProfile","isGeneric":"0","descriptionParts":["The profile to get a default description for. ","This is a BH.oM.Spatial.ShapeProfiles.GeneralisedTSectionProfile: ","T-shaped profile that allows for different outsand widths and thicknesses. Outstands with different thicknesses are aligned by their top edge.","The full width of the top flange can be calculated as LeftOutstandWidth + WebThickness + RightOutstandWidth."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the profile based on its dimensions. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the profile as 'Tube Diameter x Thickness'. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"TubeProfile","isGeneric":"0","descriptionParts":["The profile to get a default description for. ","This is a BH.oM.Spatial.ShapeProfiles.TubeProfile: ","Circular hollow profile."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the profile based on its dimensions. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the Section as 'Steel ProfileDescription - MaterialName'. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"SteelSection","isGeneric":"0","descriptionParts":["The section to get a default description for. ","This is a BH.oM.Structure.SectionProperties.SteelSection: ","Steel section to be used on Bars. Defined by a section profile."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the section based on its dimensions, material and type. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the Section as 'Concrete ProfileDescription - MaterialName'. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"ConcreteSection","isGeneric":"0","descriptionParts":["The section to get a default description for. ","This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the section based on its dimensions, material and type. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the Section as 'Timber ProfileDescription - MaterialName'. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"TimberSection","isGeneric":"0","descriptionParts":["The section to get a default description for. ","This is a BH.oM.Structure.SectionProperties.TimberSection: ","Timber section to be used on Bars. Defined by a section profile."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the section based on its dimensions, material and type. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the Section as 'Aluminium ProfileDescription - MaterialName'. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"AluminiumSection","isGeneric":"0","descriptionParts":["The section to get a default description for. ","This is a BH.oM.Structure.SectionProperties.AluminiumSection: ","Aluminium section to be used on Bars. Defined by a section profile."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the section based on its dimensions, material and type. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the Section as 'Generic ProfileDescription - MaterialName'. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"GenericSection","isGeneric":"0","descriptionParts":["The section to get a default description for. ","This is a BH.oM.Structure.SectionProperties.GenericSection: ","Material agnostic section. To be used for sections of material types not yet explicitly supported."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the section based on its dimensions, material and type. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the Section as 'Cable NumberOfCables x Diameter - MaterialName'. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"CableSection","isGeneric":"0","descriptionParts":["The section to get a default description for. ","This is a BH.oM.Structure.SectionProperties.CableSection: ","Cable section to be used on Bars. Defined by cable diameter, number of cables, and total area."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the section based on its dimensions, material and type. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the Section as 'Explicit Area Iy Iz J  - MaterialName'. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"ExplicitSection","isGeneric":"0","descriptionParts":["The section to get a default description for. ","This is a BH.oM.Structure.SectionProperties.ExplicitSection: ","Material agnostic section. Does not own any geometry. Allows explicit setting of all section constants."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the section based on its dimensions, material and type. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the SurfaceProperty as 'THK Thickness - MaterialName'. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ConstantThickness","isGeneric":"0","descriptionParts":["The SurfaceProperty to get a default description for. ","This is a BH.oM.Structure.SurfaceProperties.ConstantThickness: ","Simplest property for 2D analytical elements with a constant thickness and homogenous material across the whole element."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the property based on its dimensions, material and type. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the SurfaceProperty as 'Ribbed Depth Spacing StemWidth - MaterialName'. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"Ribbed","isGeneric":"0","descriptionParts":["The SurfaceProperty to get a default description for. ","This is a BH.oM.Structure.SurfaceProperties.Ribbed: ","Property for 2D analytical elements, made up of a slab on top of parallel ribs running in one direction, all sharing the same material."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the property based on its dimensions, material and type. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the SurfaceProperty as 'Ribbed DepthX DepthY SpacingX SpacingY StemWidthX StemWidthY - MaterialName'. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"Waffle","isGeneric":"0","descriptionParts":["The SurfaceProperty to get a default description for. ","This is a BH.oM.Structure.SurfaceProperties.Waffle: ","Property for 2D analytical elements, made up of a slab on top of parallel ribs running in two directions, all sharing the same material."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the property based on its dimensions, material and type. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the SurfaceProperty as 'LoadingPanel LoadApplication ReferenceEdge'. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"LoadingPanelProperty","isGeneric":"0","descriptionParts":["The SurfaceProperty to get a default description for. ","This is a BH.oM.Structure.SurfaceProperties.LoadingPanelProperty: ","Property for 2D analytical elements used to distribute load, without any structural stiffness."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the property. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the Constraint3DOF based on the constraints at each degree of freedom. ",""],"inputs":[{"inputName":"constraint","namespace":"BH.oM.Structure.Constraints","memberName":"Constraint3DOF","isGeneric":"0","descriptionParts":["The Constraint3DOF to get a default description for. ","This is a BH.oM.Structure.Constraints.Constraint3DOF: ","Constraint objects with three translational degrees of freedom, used for support of 2D analytical objects."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the constraint. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the Constraint4DOF based on the constraints at each degree of freedom. ",""],"inputs":[{"inputName":"constraint","namespace":"BH.oM.Structure.Constraints","memberName":"Constraint4DOF","isGeneric":"0","descriptionParts":["The Constraint4DOF to get a default description for. ","This is a BH.oM.Structure.Constraints.Constraint4DOF: ","Constraint objects with four degrees of freedom, three translational and one rotational. Used for support or release of 1D analytical elements of 2D analytical objects. The Rotational DOF will correspond to rotation about the axis of the object."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the constraint. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the Constraint6DOF based on the constraints at each degree of freedom. ",""],"inputs":[{"inputName":"constraint","namespace":"BH.oM.Structure.Constraints","memberName":"Constraint6DOF","isGeneric":"0","descriptionParts":["The Constraint6DOF to get a default description for. ","This is a BH.oM.Structure.Constraints.Constraint6DOF: ","Constraint objects with six degrees of freedom, three translational and three rotational, used for supports and bar end releases."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the constraint. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the BarRelease as 'StartReleaseNameOrDesc - EndReleaseNameOrDesc'. ",""],"inputs":[{"inputName":"release","namespace":"BH.oM.Structure.Constraints","memberName":"BarRelease","isGeneric":"0","descriptionParts":["The BarRelease to get a default description for. ","This is a BH.oM.Structure.Constraints.BarRelease: ","Defines the releases at the start and end node of a Bar."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the BarRelease. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the LinkConstraint based on its fixities where x denoted fixed and f denotes free. ",""],"inputs":[{"inputName":"constraint","namespace":"BH.oM.Structure.Constraints","memberName":"LinkConstraint","isGeneric":"0","descriptionParts":["The LinkConstraint to get a default description for. ","This is a BH.oM.Structure.Constraints.LinkConstraint: ","Defines the rigid connectivity between a primary and set of secondary nodes."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the LinkConstraint. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the Offset as 'Start - End'. ",""],"inputs":[{"inputName":"offset","namespace":"BH.oM.Structure.Offsets","memberName":"Offset","isGeneric":"0","descriptionParts":["The Constraint6DOF to get a default description for. ","This is a BH.oM.Structure.Offsets.Offset: ","Class defining offsets for bar objects from its end Nodes to be applied in analysis packages."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the constraint. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the material based on its properties. ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Steel","isGeneric":"0","descriptionParts":["The material to get a default description for. ","This is a BH.oM.Structure.MaterialFragments.Steel: ","Structural steel material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the material. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the material based on its properties. ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Concrete","isGeneric":"0","descriptionParts":["The material to get a default description for. ","This is a BH.oM.Structure.MaterialFragments.Concrete: ","Structural concrete material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the material. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the material based on its properties. ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Aluminium","isGeneric":"0","descriptionParts":["The material to get a default description for. ","This is a BH.oM.Structure.MaterialFragments.Aluminium: ","Structural aluminium material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the material. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the material based on its properties. ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"GenericIsotropicMaterial","isGeneric":"0","descriptionParts":["The material to get a default description for. ","This is a BH.oM.Structure.MaterialFragments.GenericIsotropicMaterial: ","Generic isotropic material to be used for isotropic materials not yet explicitly supported."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the material. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the material based on its properties. ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Timber","isGeneric":"0","descriptionParts":["The material to get a default description for. ","This is a BH.oM.Structure.MaterialFragments.Timber: ","Structural timber material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the material. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Description","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the material based on its properties. ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Structure.MaterialFragments","memberName":"GenericOrthotropicMaterial","isGeneric":"0","descriptionParts":["The material to get a default description for. ","This is a BH.oM.Structure.MaterialFragments.GenericOrthotropicMaterial: ","Generic orthotropic material to be used for orthotropic materials not yet explicitly supported."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the material. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IDescription","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the IProperty, based on its properties. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure","memberName":"IProperty","isGeneric":"0","descriptionParts":["The property to get a default description for. ","This is a BH.oM.Structure.IProperty: ","Base interface for all structural properties. ","This can be of the following types: Offset, Ribbed, Waffle, ConstantThickness, LoadingPanelProperty, AluminiumSection, GenericSection, TimberSection, CableSection, CompositeSection, ConcreteSection, ExplicitSection, SteelSection, Aluminium, Concrete, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the property, based on its property values. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IDescription","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the SectionProperty, based on type, profile and material. ",""],"inputs":[{"inputName":"section","namespace":"BH.oM.Structure.SectionProperties","memberName":"ISectionProperty","isGeneric":"0","descriptionParts":["The SectionProperty to get a default description for. ","This is a BH.oM.Structure.SectionProperties.ISectionProperty: ","Base interface for all bar section properties. Contains the material and all section constants. ","This can be of the following types: AluminiumSection, GenericSection, TimberSection, CableSection, CompositeSection, ConcreteSection, ExplicitSection, SteelSection"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the SectionProperty based on its dimensions, material and type. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IDescription","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the Profile, based on dimensions. ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Spatial.ShapeProfiles","memberName":"IProfile","isGeneric":"0","descriptionParts":["The Profile to get a default description for. ","This is a BH.oM.Spatial.ShapeProfiles.IProfile: ","Base interface for all shape profiles. ","This can be of the following types: AngleProfile, BoxProfile, ChannelProfile, CircleProfile, FabricatedBoxProfile, FabricatedISectionProfile, FreeFormProfile, GeneralisedFabricatedBoxProfile, GeneralisedTSectionProfile, ISectionProfile, KiteProfile, RectangleProfile, TaperedProfile, TSectionProfile, TubeProfile, and more..."],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the Profile based on its dimensions. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IDescription","assemblyName":"Structure_Engine.dll","descriptionParts":["Generates a default description for the SurfaceProperty, based on type, dimensions and material. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ISurfaceProperty","isGeneric":"0","descriptionParts":["The SurfaceProperty to get a default description for. ","This is a BH.oM.Structure.SurfaceProperties.ISurfaceProperty: ","Base interface for properties for 2D finite element structural objects such as Panels and FEMeshes. ","This can be of the following types: Ribbed, Waffle, ConstantThickness, LoadingPanelProperty"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The generated description for the SurfaceProperty based on its dimensions, material and type. ","This is a String"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"EmbodiedCarbon","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the total amount of embodied carbon of a Bar by getting the mass of the Bar (generally as section area*length*density) multiplied by the EmbodiedCarbon value of the material. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to get the total embodied carbon from. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The total embodied carbon of the Bar. ","This is a Mass [kg] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"EmbodiedCarbon","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the total amount of embodied carbon of a Panel by getting the mass of the Panel (generally as area*thickness*density) multiplied by the EmbodiedCarbon value of the material. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Structure.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The Panel to get the total embodied carbon from. ","This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The total embodied carbon of the Panel. ","This is a Mass [kg] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Fixities","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the fixitiy values from a constraint as a bool array. The value returned will be true if the DOFType is fixed. Values returned in the following order: TransX, TranxY, TransZ, RotX, RotY, RotZ. ",""],"inputs":[{"inputName":"constraint","namespace":"BH.oM.Structure.Constraints","memberName":"Constraint6DOF","isGeneric":"0","descriptionParts":["The constraint to check for fixities. ","This is a BH.oM.Structure.Constraints.Constraint6DOF: ","Constraint objects with six degrees of freedom, three translational and three rotational, used for supports and bar end releases."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean[]","namespace":"System","isGeneric":"0","descriptionParts":["The fixity values from a constraint as a bool array, where true indicates a fixity, in the following order: TransX, TransY, TransZ, RotX, RotY, RotZ. ","This is a Boolean[]"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"HasAssignedObjectIds","assemblyName":"Structure_Engine.dll","descriptionParts":["Checks if the objects assigned to the IElementLoad all have an identifier matching the AdapterIdName assigned.","Loads without correctly assigned ids to the objects can generally not be pushed through to structural packages. ",""],"inputs":[{"inputName":"load","namespace":"BH.oM.Structure.Loads","memberName":"IElementLoad","isGeneric":"1","inheritances":[{"namespace":"BH.Engine.Structure","memberName":"T","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The load to check for id assignment. ","This is a BH.oM.Structure.Loads.IElementLoad<BH.Engine.Structure.T>: ","Base load interface used by all element type loads, such as Bar, Node and Panel loads. ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"adapterIdType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The the type of AdapterId fragment to check for. For example RobotId for Autodesk Robot. ","This is a Type"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Returns true if all objects assigned to the load has an id matching the AdapterIdName assigned. ","This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"HasMergeablePropertiesWith","assemblyName":"Structure_Engine.dll","descriptionParts":["Evaluates if the two Edges Supports and Releases are equal with the Support and Release comparers. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Structure.Elements","memberName":"Edge","isGeneric":"0","descriptionParts":["An Structure Edge to compare the properties of with an other Structure Edge ","This is a BH.oM.Structure.Elements.Edge: ","Edge class to describe the edges of panels (or other objects) by a curve and properties."],"isRequired":1,"isInterface":0},{"inputName":"other","namespace":"BH.oM.Structure.Elements","memberName":"Edge","isGeneric":"0","descriptionParts":["The Structure Edge to compare with the other Structure Edge. ","This is a BH.oM.Structure.Elements.Edge: ","Edge class to describe the edges of panels (or other objects) by a curve and properties."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the Objects non-geometrical property is equal to the point that they could be merged into one object ","This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"HasModifiers","assemblyName":"Structure_Engine.dll","descriptionParts":["Checks if a SurfaceProperty has any modifiers by first checking if any modifiers has been assigned, and if any of them are set to a value different than 1. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SurfaceProperties","memberName":"ISurfaceProperty","isGeneric":"0","descriptionParts":["The property to check for modifiers. ","This is a BH.oM.Structure.SurfaceProperties.ISurfaceProperty: ","Base interface for properties for 2D finite element structural objects such as Panels and FEMeshes. ","This can be of the following types: Ribbed, Waffle, ConstantThickness, LoadingPanelProperty"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Returns true if any modifiers exists on the section. ","This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"HasModifiers","assemblyName":"Structure_Engine.dll","descriptionParts":["Checks if a SectionProperty has any modifiers by first checking if any modifiers has been assigned, and if any of them are set to a value different than 1. ",""],"inputs":[{"inputName":"property","namespace":"BH.oM.Structure.SectionProperties","memberName":"ISectionProperty","isGeneric":"0","descriptionParts":["The property to check for modifiers. ","This is a BH.oM.Structure.SectionProperties.ISectionProperty: ","Base interface for all bar section properties. Contains the material and all section constants. ","This can be of the following types: AluminiumSection, GenericSection, TimberSection, CableSection, CompositeSection, ConcreteSection, ExplicitSection, SteelSection"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Returns true if any modifiers exists on the section. ","This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IsNumericallyDependent","assemblyName":"Structure_Engine.dll","descriptionParts":["Returns true if any of the degrees of freedom is of a value based type or the values are non-zero. ",""],"inputs":[{"inputName":"constraint","namespace":"BH.oM.Structure.Constraints","memberName":"Constraint3DOF","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.Constraint3DOF: ","Constraint objects with three translational degrees of freedom, used for support of 2D analytical objects."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IsNumericallyDependent","assemblyName":"Structure_Engine.dll","descriptionParts":["Returns true if any of the degrees of freedom is of a value based type or the values are non-zero. ",""],"inputs":[{"inputName":"constraint","namespace":"BH.oM.Structure.Constraints","memberName":"Constraint4DOF","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.Constraint4DOF: ","Constraint objects with four degrees of freedom, three translational and one rotational. Used for support or release of 1D analytical elements of 2D analytical objects. The Rotational DOF will correspond to rotation about the axis of the object."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IsNumericallyDependent","assemblyName":"Structure_Engine.dll","descriptionParts":["Returns true if any of the degrees of freedom is of a value based type or the values are non-zero. ",""],"inputs":[{"inputName":"constraint","namespace":"BH.oM.Structure.Constraints","memberName":"Constraint6DOF","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.Constraint6DOF: ","Constraint objects with six degrees of freedom, three translational and three rotational, used for supports and bar end releases."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IsNumericallyDependent","assemblyName":"Structure_Engine.dll","descriptionParts":["Returns true if the DOF is of a type that depends on a stiffness value. ",""],"inputs":[{"inputName":"dof","namespace":"BH.oM.Structure.Constraints","memberName":"DOFType","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Constraints.DOFType: ","Enumerator outlining the fixity of a particular degree of freedom. Controls if the DOF should be free, fixed or stiffness based. ","Enum values: ","-Free: Free to translate or rotate, depending on the DOF. ","-Fixed: Fixed in translation or rotation, depending on the DOF. ","-FixedNegative: Zero stiffness in the positive direction. ","-FixedPositive: Zero stiffness in the negative direction. ","-Spring: Linear spring constant. ","-SpringNegative: Nonlinear, zero stiffness in the positive direction. ","-SpringPositive: Nonlinear, zero stiffness in the negative direction. ","-SpringRelative: Spring stiffness between 0-1 relates to the element to which the DOF applies (e.g. bar end stiffness). ","-SpringRelativeNegative: Nonlinear, Spring stiffness between 0-1 relates to the element to which the DOF applies (e.g. bar end stiffness), zero stiffness in the positive direction. ","-SpringRelativePositive: Nonlinear, Spring stiffness between 0-1 relates to the element to which the DOF applies (e.g. bar end stiffness), zero stiffness in the negative direction. ","-NonLinear: Nonlinear spring model. ","-Friction: Friction model (relative to the load applied). ","-Damped: Damped velocities/accelerations. ","-Gap: Gap model."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"LocalOrientation","assemblyName":"Structure_Engine.dll","descriptionParts":["Get the Vector basis system descibring the local axis orientation of the Panel in the global coordinate system where the z-axis is the normal of the panel and the x and y axes are the directions of the local in-plane axes. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Structure.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["The Panel to extract the local orientation from from. ","This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Basis","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The local orientation of the Panel as a vector Basis. ","This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"LocalOrientations","assemblyName":"Structure_Engine.dll","descriptionParts":["Get the Vector basis system descibring the local axes orientation of the faces of the FEMesh in the global coordinate system where the z-axis is the normal of each face and the x and y axes are the directions of the local in-plane axes. ",""],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Structure.Elements","memberName":"FEMesh","isGeneric":"0","descriptionParts":["The FEMesh to extract the local orientations from from. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Basis","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The local orientations of the mesh faces as a list of vector Bases. ","This is a List<Basis>"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"LocalOrientation","assemblyName":"Structure_Engine.dll","descriptionParts":["Get the Vector basis system descibring the local axes orientation of a face of a FEMesh in the global coordinate system where the z-axis is the normal of each face and the x and y axes are the directions of the local in-plane axes. ",""],"inputs":[{"inputName":"face","namespace":"BH.oM.Structure.Elements","memberName":"FEMeshFace","isGeneric":"0","descriptionParts":["The FEMeshFace to extract the local orientation from from. ","This is a BH.oM.Structure.Elements.FEMeshFace: ","Face of an FEMesh. The face is defined by the indices of its nodes in the node list. Geometrical information about position in space is stored on the host FEMesh."],"isRequired":1,"isInterface":0},{"inputName":"mesh","namespace":"BH.oM.Structure.Elements","memberName":"FEMesh","isGeneric":"0","descriptionParts":["The FEMesh to which the face belongs. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Basis","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The local orientation of the FEMeshFace as a vector Basis. ","This is a BH.oM.Geometry.Basis: ","An ordered set of mutually orthogonal unit vectors defining three-dimensional orientation in space"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MaterialComposition","assemblyName":"Structure_Engine.dll","descriptionParts":["Returns a Bar's homogeneous MaterialComposition. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to material from ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["The kind of matter the Bar is composed of. ","This is a BH.oM.Physical.Materials.MaterialComposition: ","Defines the make up of an object through a list of Materials as relative proportions of the total solid volume.","There must be the same number of items in both lists, assigning a single Ratio for each Material."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MaterialComposition","assemblyName":"Structure_Engine.dll","descriptionParts":["Returns a areaElement's homogeneous MaterialComposition. ",""],"inputs":[{"inputName":"areaElement","namespace":"BH.oM.Structure.Elements","memberName":"IAreaElement","isGeneric":"0","descriptionParts":["The areaElement to material from ","This is a BH.oM.Structure.Elements.IAreaElement: ","Base interface for 2D analytical elements such as Panels, FEMeshes and Surfaces to represent, for example, walls and slabs. ","This can be of the following types: FEMesh, Surface, Panel"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["The kind of matter the areaElement is composed of. ","This is a BH.oM.Physical.Materials.MaterialComposition: ","Defines the make up of an object through a list of Materials as relative proportions of the total solid volume.","There must be the same number of items in both lists, assigning a single Ratio for each Material."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MaterialComposition","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"sectionProperty","namespace":"BH.oM.Structure.SectionProperties","memberName":"ISectionProperty","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SectionProperties.ISectionProperty: ","Base interface for all bar section properties. Contains the material and all section constants. ","This can be of the following types: AluminiumSection, GenericSection, TimberSection, CableSection, CompositeSection, ConcreteSection, ExplicitSection, SteelSection"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["This is a BH.oM.Physical.Materials.MaterialComposition: ","Defines the make up of an object through a list of Materials as relative proportions of the total solid volume.","There must be the same number of items in both lists, assigning a single Ratio for each Material."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MaterialComposition","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"sectionProperty","namespace":"BH.oM.Structure.SectionProperties","memberName":"ConcreteSection","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.SectionProperties.ConcreteSection: ","Concrete section to be used on Bars. Defined by a section profile. Note that all section constants are assuming an uncracked section and are disregarding reinforcement."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialComposition","namespace":"BH.oM.Physical.Materials","isGeneric":"0","descriptionParts":["This is a BH.oM.Physical.Materials.MaterialComposition: ","Defines the make up of an object through a list of Materials as relative proportions of the total solid volume.","There must be the same number of items in both lists, assigning a single Ratio for each Material."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MaterialType","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the material type from the MaterialFragment. For a Steel material this will always return type Steel. ",""],"inputs":[{"inputName":"materialFragment","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Steel","isGeneric":"0","descriptionParts":["The structural MaterialFragment to get the type from. ","This is a BH.oM.Structure.MaterialFragments.Steel: ","Structural steel material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialType","namespace":"BH.oM.Structure.MaterialFragments","isGeneric":"0","descriptionParts":["The material type of the provided material. ","This is a BH.oM.Structure.MaterialFragments.MaterialType ","Enum values: ","-Aluminium ","-Steel ","-Concrete ","-Timber ","-Rebar ","-Tendon ","-Glass ","-Cable ","-Undefined"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MaterialType","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the material type from the MaterialFragment. For a Concrete material this will always return type Concrete. ",""],"inputs":[{"inputName":"materialFragment","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Concrete","isGeneric":"0","descriptionParts":["The structural MaterialFragment to get the type from. ","This is a BH.oM.Structure.MaterialFragments.Concrete: ","Structural concrete material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialType","namespace":"BH.oM.Structure.MaterialFragments","isGeneric":"0","descriptionParts":["The material type of the provided material. ","This is a BH.oM.Structure.MaterialFragments.MaterialType ","Enum values: ","-Aluminium ","-Steel ","-Concrete ","-Timber ","-Rebar ","-Tendon ","-Glass ","-Cable ","-Undefined"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MaterialType","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the material type from the MaterialFragment. For a Timber material this will always return type Timber. ",""],"inputs":[{"inputName":"materialFragment","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Timber","isGeneric":"0","descriptionParts":["The structural MaterialFragment to get the type from. ","This is a BH.oM.Structure.MaterialFragments.Timber: ","Structural timber material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialType","namespace":"BH.oM.Structure.MaterialFragments","isGeneric":"0","descriptionParts":["The material type of the provided material. ","This is a BH.oM.Structure.MaterialFragments.MaterialType ","Enum values: ","-Aluminium ","-Steel ","-Concrete ","-Timber ","-Rebar ","-Tendon ","-Glass ","-Cable ","-Undefined"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MaterialType","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the material type from the MaterialFragment. For a Aluminium material this will always return type Aluminium. ",""],"inputs":[{"inputName":"materialFragment","namespace":"BH.oM.Structure.MaterialFragments","memberName":"Aluminium","isGeneric":"0","descriptionParts":["The structural MaterialFragment to get the type from. ","This is a BH.oM.Structure.MaterialFragments.Aluminium: ","Structural aluminium material to be used on structural elements and properties or as a fragment of the physical material."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialType","namespace":"BH.oM.Structure.MaterialFragments","isGeneric":"0","descriptionParts":["The material type of the provided material. ","This is a BH.oM.Structure.MaterialFragments.MaterialType ","Enum values: ","-Aluminium ","-Steel ","-Concrete ","-Timber ","-Rebar ","-Tendon ","-Glass ","-Cable ","-Undefined"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MaterialType","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the material type from the MaterialFragment. For a GenericIsotropicMaterial material this will always return type Undefined. ",""],"inputs":[{"inputName":"materialFragment","namespace":"BH.oM.Structure.MaterialFragments","memberName":"GenericIsotropicMaterial","isGeneric":"0","descriptionParts":["The structural MaterialFragment to get the type from. ","This is a BH.oM.Structure.MaterialFragments.GenericIsotropicMaterial: ","Generic isotropic material to be used for isotropic materials not yet explicitly supported."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialType","namespace":"BH.oM.Structure.MaterialFragments","isGeneric":"0","descriptionParts":["The material type of the provided material. ","This is a BH.oM.Structure.MaterialFragments.MaterialType ","Enum values: ","-Aluminium ","-Steel ","-Concrete ","-Timber ","-Rebar ","-Tendon ","-Glass ","-Cable ","-Undefined"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"MaterialType","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the material type from the MaterialFragment. For a GenericOrthotropicMaterial material this will always return type Undefined. ",""],"inputs":[{"inputName":"materialFragment","namespace":"BH.oM.Structure.MaterialFragments","memberName":"GenericOrthotropicMaterial","isGeneric":"0","descriptionParts":["The structural MaterialFragment to get the type from. ","This is a BH.oM.Structure.MaterialFragments.GenericOrthotropicMaterial: ","Generic orthotropic material to be used for orthotropic materials not yet explicitly supported."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialType","namespace":"BH.oM.Structure.MaterialFragments","isGeneric":"0","descriptionParts":["The material type of the provided material. ","This is a BH.oM.Structure.MaterialFragments.MaterialType ","Enum values: ","-Aluminium ","-Steel ","-Concrete ","-Timber ","-Rebar ","-Tendon ","-Glass ","-Cable ","-Undefined"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IMaterialType","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the material type from the MaterialFragment. ",""],"inputs":[{"inputName":"materialFragment","namespace":"BH.oM.Structure.MaterialFragments","memberName":"IMaterialFragment","isGeneric":"0","descriptionParts":["The structural MaterialFragment to get the type from. ","This is a BH.oM.Structure.MaterialFragments.IMaterialFragment: ","Base interface for structural materials used by structural properties or as a fragment of the physical material. ","This can be of the following types: Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"MaterialType","namespace":"BH.oM.Structure.MaterialFragments","isGeneric":"0","descriptionParts":["The material type of the provided material. ","This is a BH.oM.Structure.MaterialFragments.MaterialType ","Enum values: ","-Aluminium ","-Steel ","-Concrete ","-Timber ","-Rebar ","-Tendon ","-Glass ","-Cable ","-Undefined"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"AnalyticalBars","assemblyName":"Structure_Engine.dll","descriptionParts":["Create a series of analytical Bar elements from the framing element. The relationship of Bars to FramingElements is not necessarily one to one and this is dictated by property and curve type of the FramingElement. ",""],"inputs":[{"inputName":"elements","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Physical.Elements","memberName":"IFramingElement","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The framing element to generate bars from. ","This is a List<IFramingElement> ","This can be of the following types: Bracing, Pile, Column, Cable, Beam"],"isRequired":1,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Angle tolerance to control the splitting up of non-linear curves. Unused for line based FramingElements. ","This is a Angle [rad] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"maxNbBarsPerArc","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The maximum number of bars that each arc segement of the element will be split up into. Unused for line based FramingElements. ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A list of bars per framing element. For straight framing elements with prismatic sections this will be a single bar. ","This is a List<List<Bar>>"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Area","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the area of a FEMesh as the sum of the area of all faces. Quad faces will be triangulated to perform the area calculation. ",""],"inputs":[{"inputName":"mesh","namespace":"BH.oM.Structure.Elements","memberName":"FEMesh","isGeneric":"0","descriptionParts":["The FEMesh to calculate the area for. ","This is a BH.oM.Structure.Elements.FEMesh: ","2D finite element mesh for structural analysis. Defined by a list of nodes and faces."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The area of the FEMesh. ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Area","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the area of a Surface based on the area of the geometrical surface stored in Extents. ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Structure.Elements","memberName":"Surface","isGeneric":"0","descriptionParts":["The Surface to calculate the area for. ","This is a BH.oM.Structure.Elements.Surface: ","2D element for structural analysis. ","The Surface is a freeform surface object defined by a geometrical surface. For planar elements, the Panel is recommended, as it is generally better supported in analysis packages."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The area of the Surface. ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Area","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the total section area of all rebars in the reinforcement object. ",""],"inputs":[{"inputName":"reinforcement","namespace":"BH.oM.Structure.SectionProperties.Reinforcement","memberName":"LongitudinalReinforcement","isGeneric":"0","descriptionParts":["The LongitudinalReinforcement to calculate the area for. ","This is a BH.oM.Structure.SectionProperties.Reinforcement.LongitudinalReinforcement: ","Defines any longitudinal reinforcement along a Bar."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The area of the LongitudinalReinforcement. ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IArea","assemblyName":"Structure_Engine.dll","descriptionParts":["Calculates the area of an IAreaElement. ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Structure.Elements","memberName":"IAreaElement","isGeneric":"0","descriptionParts":["The element to calculate the area for. ","This is a BH.oM.Structure.Elements.IAreaElement: ","Base interface for 2D analytical elements such as Panels, FEMeshes and Surfaces to represent, for example, walls and slabs. ","This can be of the following types: FEMesh, Surface, Panel"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The area of the element. ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"DampingRatio","assemblyName":"Structure_Engine.dll","descriptionParts":["Damping ratio of the material. Gets the damping ratio from the structural material fragment. ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["This is a BH.oM.Physical.Materials.Material"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["Damping ratio of the material. . ","This is a Double"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Default","assemblyName":"Structure_Engine.dll","descriptionParts":["Extracts a default material from the material datasets for a specific material type. ",""],"inputs":[{"inputName":"materialType","namespace":"BH.oM.Structure.MaterialFragments","memberName":"MaterialType","isGeneric":"0","descriptionParts":["The material type to extract a default value for. ","This is a BH.oM.Structure.MaterialFragments.MaterialType ","Enum values: ","-Aluminium ","-Steel ","-Concrete ","-Timber ","-Rebar ","-Tendon ","-Glass ","-Cable ","-Undefined"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IMaterialFragment","namespace":"BH.oM.Structure.MaterialFragments","isGeneric":"0","descriptionParts":["The default material of the type provided. ","This is a BH.oM.Structure.MaterialFragments.IMaterialFragment: ","Base interface for structural materials used by structural properties or as a fragment of the physical material. ","This can be of the following types: Aluminium, Concrete, GenericIsotropicMaterial, GenericOrthotropicMaterial, Steel, Timber"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"DeformedShape","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets deformed shape of a Bar based on BarDisplacements. ",""],"inputs":[{"inputName":"bars","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"Bar","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The Bars to get the deformed shape for. The Bars input here should generally have been pulled from an analysis package to ensure they carry the AdapterNameId. ","This is a List<Bar>"],"isRequired":1,"isInterface":0},{"inputName":"barDisplacements","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"BarDisplacement","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The displacement results used to compute the deformed shape. The displacements are assumed to be in global coordinates. This list does NOT need to match the Bar input list, grouping is completed by the method. ","This is a List<BarDisplacement>"],"isRequired":1,"isInterface":0},{"inputName":"adapterIdType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The type of identifier fragment to look for identifying information on for the Bars. This will depend on the software package used, but generally be for example RobotId, GSAId etc. Try checking the fragments of the Bars to find the identifier. ","This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"loadcase","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["Loadcase to display results for. Should generally be either an identifier matching the one used in the analysis package that the results were pulled from or a Loadcase/LoadCombination. ","This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Controls by how much the results should be scaled. ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"drawSections","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Toggles if output should be just centrelines or include section geometry. Note that currently section geometry only supports displacements, no rotations! ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"IGeometry","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The shape of the Bars from the displacements. ","This is a List<IGeometry> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"DeformedShape","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets deformed shape of a FEMesh based on MeshDisplacements. ",""],"inputs":[{"inputName":"meshes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Elements","memberName":"FEMesh","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The FEMeshes to get the deformed shape for. The FEMeshes input here should generally have been pulled from an analysis package to ensure they carry the AdapterNameId. ","This is a List<FEMesh>"],"isRequired":1,"isInterface":0},{"inputName":"meshDisplacements","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Structure.Results","memberName":"MeshResult","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The displacement results used to compute the deformed shape.  This input should be a list of MeshResults which in turn should contain results of type MeshDisplacements. The displacements are assumed to be in global coordinates. This list does NOT need to match the FEMesh input list, grouping is completed by the method. ","This is a List<MeshResult>"],"isRequired":1,"isInterface":0},{"inputName":"adapterIdType","namespace":"System","memberName":"Type","isGeneric":"0","descriptionParts":["The type of identifier fragment to look for identifying information on for the FEMeshes. This will depend on the software package used, but generally be for example RobotId, GSAId etc. Try checking the fragments of the FEMeshes to find the identifier. ","This is a Type"],"isRequired":1,"isInterface":0},{"inputName":"loadcase","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["Loadcase to display results for. Should generally be either an identifier matching the one used in the analysis package that the results were pulled from or a Loadcase/LoadCombination. ","This is a Object"],"isRequired":1,"isInterface":0},{"inputName":"scaleFactor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Controls by how much the results should be scaled. ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Mesh","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The shape of the FEMeshes from the displacements. ","This is a List<Mesh>"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"DistributedPoints","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets a list of evenly distributed points along a Bar from a given number of divisions. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to get division points for. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0},{"inputName":"divisions","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Number of segments to divide the Bar into. The number of points returned will be divisions + 1. ","This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"startLength","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional offset from Bar StartNode to start of divisions. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"endLength","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Optional offset from Bar EndNode to start of divisions. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of evenly distibuted points along the Bar. ","This is a List<Point>"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Extrude","assemblyName":"Structure_Engine.dll","descriptionParts":["Computes an extrusion of the section along the Bar centreline. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to get an extruded shape from. This requires the property of the Bar to be of a type with a section profile. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0},{"inputName":"simple","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["If false, a full extrusion of the section curves along the Bar will be returned. If true, a geometrical mesh as a bounding box in local coordinates, enclosing the extruded section will be returned. ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"IGeometry","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The volumetric representation of the Bar as an extrusion or a geometrical bounding box mesh. ","This is a List<IGeometry> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"CaseType","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the CaseType for the Loadcase. This will always return the type Simple for a Loadcase. ",""],"inputs":[{"inputName":"loadcase","namespace":"BH.oM.Structure.Loads","memberName":"Loadcase","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.Loadcase: ","Basic load case class. All load classes need to point to one Loadcase."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CaseType","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.CaseType ","Enum values: ","-Simple ","-Mobile ","-Combination ","-Envelope"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"CaseType","assemblyName":"Structure_Engine.dll","descriptionParts":["Gets the CaseType for the LoadCombination. This will always return the type Combination for a LoadCombination. ",""],"inputs":[{"inputName":"loadCombination","namespace":"BH.oM.Structure.Loads","memberName":"LoadCombination","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadCombination: ","Load combination class to set up combination of factored Loadcases."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"CaseType","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.CaseType ","Enum values: ","-Simple ","-Mobile ","-Combination ","-Envelope"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Centreline","assemblyName":"Structure_Engine.dll","descriptionParts":["Returns the centreline of the Bar as the line between the StratNode and EndNode. No offsets or similar is accounted for. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to get the centreline from. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Line","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["The centreline of the Bar. ","This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IsValidStructural","assemblyName":"Structure_Engine.dll","descriptionParts":["Checks if a physical Material contains exactly one structural material fragment, i.e. checks if the Material contains structural data. ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["The physical Material to check. ","This is a BH.oM.Physical.Materials.Material"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Returns true if the physical Material contains structural data. ","This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IsVertical","assemblyName":"Structure_Engine.dll","descriptionParts":["Checks if a Bar is vertical. A Bar is vertical if its projected length to the horizontal plane is less than 0.0001, i.e. a tolerance of 0.1mm on verticality. ","For general structural conventions please see  https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["The Bar to check for verticality. ","This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["Returns true if the Bar is vertical. ","This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"IsVertical","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"line","namespace":"BH.oM.Geometry","memberName":"Line","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Line: ","A straight segment in space defining the shortest distance between two points in three-dimensional Euclidean geometry.","The Vector from Start to End defines the Line direction, which can be important for some applications."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"LoadType","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"load","namespace":"BH.oM.Structure.Loads","memberName":"AreaUniformTemperatureLoad","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.AreaUniformTemperatureLoad: ","Uniform temperature load for area elements such as Panels and FEMeshes."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LoadType","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadType ","Enum values: ","-Selfweight ","-PointForce ","-PointDisplacement ","-PointVelocity ","-PointAcceleration ","-BarPointLoad ","-BarUniformLoad ","-BarVaryingLoad ","-BarTemperature ","-AreaUniformLoad ","-AreaVaryingLoad ","-AreaTemperature ","-Pressure ","-Geometrical"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"LoadType","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"load","namespace":"BH.oM.Structure.Loads","memberName":"AreaUniformlyDistributedLoad","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.AreaUniformlyDistributedLoad: ","Uniform area load for area elements such as Panels and FEMeshes."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LoadType","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadType ","Enum values: ","-Selfweight ","-PointForce ","-PointDisplacement ","-PointVelocity ","-PointAcceleration ","-BarPointLoad ","-BarUniformLoad ","-BarVaryingLoad ","-BarTemperature ","-AreaUniformLoad ","-AreaVaryingLoad ","-AreaTemperature ","-Pressure ","-Geometrical"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"LoadType","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"load","namespace":"BH.oM.Structure.Loads","memberName":"BarPointLoad","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.BarPointLoad: ","Point load to be applied for Bars, positioned a set distance from the StartNode."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LoadType","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadType ","Enum values: ","-Selfweight ","-PointForce ","-PointDisplacement ","-PointVelocity ","-PointAcceleration ","-BarPointLoad ","-BarUniformLoad ","-BarVaryingLoad ","-BarTemperature ","-AreaUniformLoad ","-AreaVaryingLoad ","-AreaTemperature ","-Pressure ","-Geometrical"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"LoadType","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"load","namespace":"BH.oM.Structure.Loads","memberName":"BarPrestressLoad","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.BarPrestressLoad: ","Axial prestress load applied to Bars."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LoadType","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadType ","Enum values: ","-Selfweight ","-PointForce ","-PointDisplacement ","-PointVelocity ","-PointAcceleration ","-BarPointLoad ","-BarUniformLoad ","-BarVaryingLoad ","-BarTemperature ","-AreaUniformLoad ","-AreaVaryingLoad ","-AreaTemperature ","-Pressure ","-Geometrical"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"LoadType","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"load","namespace":"BH.oM.Structure.Loads","memberName":"BarUniformTemperatureLoad","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.BarUniformTemperatureLoad: ","Uniform temperature load for Bars."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LoadType","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadType ","Enum values: ","-Selfweight ","-PointForce ","-PointDisplacement ","-PointVelocity ","-PointAcceleration ","-BarPointLoad ","-BarUniformLoad ","-BarVaryingLoad ","-BarTemperature ","-AreaUniformLoad ","-AreaVaryingLoad ","-AreaTemperature ","-Pressure ","-Geometrical"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"LoadType","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"load","namespace":"BH.oM.Structure.Loads","memberName":"BarUniformlyDistributedLoad","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.BarUniformlyDistributedLoad: ","Uniformly distributed load applied to Bars. Can be used to apply force and/or moments."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LoadType","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadType ","Enum values: ","-Selfweight ","-PointForce ","-PointDisplacement ","-PointVelocity ","-PointAcceleration ","-BarPointLoad ","-BarUniformLoad ","-BarVaryingLoad ","-BarTemperature ","-AreaUniformLoad ","-AreaVaryingLoad ","-AreaTemperature ","-Pressure ","-Geometrical"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"LoadType","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"load","namespace":"BH.oM.Structure.Loads","memberName":"BarVaryingDistributedLoad","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.BarVaryingDistributedLoad: ","Varying distributed load for bar elements. Can be used to apply force and/or moments."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LoadType","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadType ","Enum values: ","-Selfweight ","-PointForce ","-PointDisplacement ","-PointVelocity ","-PointAcceleration ","-BarPointLoad ","-BarUniformLoad ","-BarVaryingLoad ","-BarTemperature ","-AreaUniformLoad ","-AreaVaryingLoad ","-AreaTemperature ","-Pressure ","-Geometrical"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"LoadType","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"load","namespace":"BH.oM.Structure.Loads","memberName":"GravityLoad","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.GravityLoad: ","Gravity load to be applied to elements such as Bars, Panels and FEMeshes."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LoadType","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadType ","Enum values: ","-Selfweight ","-PointForce ","-PointDisplacement ","-PointVelocity ","-PointAcceleration ","-BarPointLoad ","-BarUniformLoad ","-BarVaryingLoad ","-BarTemperature ","-AreaUniformLoad ","-AreaVaryingLoad ","-AreaTemperature ","-Pressure ","-Geometrical"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"LoadType","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"load","namespace":"BH.oM.Structure.Loads","memberName":"PointAcceleration","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.PointAcceleration: ","Point acceleration load for Nodes. This can be used to apply translational as well as angular acceleration."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LoadType","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadType ","Enum values: ","-Selfweight ","-PointForce ","-PointDisplacement ","-PointVelocity ","-PointAcceleration ","-BarPointLoad ","-BarUniformLoad ","-BarVaryingLoad ","-BarTemperature ","-AreaUniformLoad ","-AreaVaryingLoad ","-AreaTemperature ","-Pressure ","-Geometrical"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"LoadType","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"load","namespace":"BH.oM.Structure.Loads","memberName":"PointDisplacement","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.PointDisplacement: ","Point displacement for Nodes. This can be used to apply translation as well as rotation."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LoadType","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadType ","Enum values: ","-Selfweight ","-PointForce ","-PointDisplacement ","-PointVelocity ","-PointAcceleration ","-BarPointLoad ","-BarUniformLoad ","-BarVaryingLoad ","-BarTemperature ","-AreaUniformLoad ","-AreaVaryingLoad ","-AreaTemperature ","-Pressure ","-Geometrical"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"LoadType","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"load","namespace":"BH.oM.Structure.Loads","memberName":"PointLoad","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.PointLoad: ","Point load for Nodes. This can be used to apply force as well as moment."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LoadType","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadType ","Enum values: ","-Selfweight ","-PointForce ","-PointDisplacement ","-PointVelocity ","-PointAcceleration ","-BarPointLoad ","-BarUniformLoad ","-BarVaryingLoad ","-BarTemperature ","-AreaUniformLoad ","-AreaVaryingLoad ","-AreaTemperature ","-Pressure ","-Geometrical"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"LoadType","assemblyName":"Structure_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"load","namespace":"BH.oM.Structure.Loads","memberName":"PointVelocity","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.PointVelocity: ","Point velocity load for Nodes. This can be used to apply translational as well as angular velocity."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"LoadType","namespace":"BH.oM.Structure.Loads","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Loads.LoadType ","Enum values: ","-Selfweight ","-PointForce ","-PointDisplacement ","-PointVelocity ","-PointAcceleration ","-BarPointLoad ","-BarUniformLoad ","-BarVaryingLoad ","-BarTemperature ","-AreaUniformLoad ","-AreaVaryingLoad ","-AreaTemperature ","-Pressure ","-Geometrical"]}},{"namespace":"BH.Engine.Structure","className":"Query","memberName":"Edges","assemblyName":"Structure_Engine.dll","descriptionParts":["Extracts the edge curves from the geometric surface of the element. ",""],"inputs":[{"inputName":"surface","namespace":"BH.oM.Structure.Elements","memberName":"Surface","isGeneric":"0","descriptionParts":["The structural surface to extract edges from. ","This is a BH.oM.Structure.Elements.Surface: ","2D element for structural analysis. ","The Surface is a freeform surface object defined by a geometrical surface. For planar elements, the Panel is recommended, as it is generally better supported in analysis packages."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["The list of curves representing the edges of the underlying surface. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"]}},{"namespace":"BH.Engine.Structure.Results","className":"Create","memberName":"MeshResult","assemblyName":"Structure_Engine.dll","descriptionParts":["Specific filter request to retrieve structural mesh results. ",""],"inputs":[{"inputName":"smoothing","namespace":"BH.oM.Structure.Results","memberName":"MeshResultSmoothingType","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Results.MeshResultSmoothingType: ","Defines the smoothing used for the Meshresults, i.e. if and how any result averaging should be done per nodes/face. ","Enum values: ","-None ","-ByPanel ","-BySelection ","-Global ","-ByFiniteElementCentres"],"isRequired":1,"isInterface":0},{"inputName":"layer","namespace":"BH.oM.Structure.Results","memberName":"MeshResultLayer","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Results.MeshResultLayer: ","Specifies which layer the results are extracted from or if it is a maxima/minima of the layers. ","Enum values: ","-Lower: Lower surface/extreme fibre of the panel/mesh element. ","-Middle: Middle layer of the panel/mesh element. ","-Upper: Upper surface/extreme fibre of the panel/mesh element. ","-Minimum: The minimum value of all layers in the panel/mesh element. ","-Maximum: The maximum value of all layers in the panel/mesh element. ","-AbsoluteMaximum: The absolute maximum value of all layers in the panel/mesh element. ","-Arbitrary: An arbitrary position within the thickness of the element."],"isRequired":1,"isInterface":0},{"inputName":"layerPosition","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"resultType","namespace":"BH.oM.Structure.Results","memberName":"MeshResultType","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Results.MeshResultType: ","Specifies which layer the results are extracted from or if it is a maxima/minima of the layers. ","Enum values: ","-Forces: Bending moments and shear forces out-of-plane, membrane forces in the plane of the mesh/element. ","-Stresses: Stresses in the plane of the mesh/element. ","-Displacements: Displacements of the mesh/element nodes. ","-VonMises: Von Mises stresses and forces. ","-MeshModeShape: Mode shape of the mesh/element nodes."],"isRequired":1,"isInterface":0},{"inputName":"coordinateSystem","namespace":"BH.oM.Geometry.CoordinateSystem","memberName":"Cartesian","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CoordinateSystem.Cartesian: ","A three-dimensional Cartesian coordinate system, as defined by a set of mutually orthogonal unit vectors and a common origin point"],"isRequired":0,"isInterface":0},{"inputName":"cases","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Object>"],"isRequired":0,"isInterface":1},{"inputName":"objectIds","namespace":"System.Collections.Generic","memberName":"IEnumerable","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Object","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a IEnumerable<Object>"],"isRequired":0,"isInterface":1}],"outputs":{"memberName":"FilterRequest","namespace":"BH.oM.Data.Requests","isGeneric":"0","descriptionParts":["This is a BH.oM.Data.Requests.FilterRequest"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Compute","memberName":"TBDSizing","assemblyName":"TAS_Engine.dll","descriptionParts":["Run Design Day Sizing ",""],"inputs":[{"inputName":"tbdFile","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The full file path of the TBD file ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"run","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Set to true when you want to run the component, default false ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if sizing has been successfully run, false otherwise ","This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Compute","memberName":"TBDSizing","assemblyName":"TAS_Engine.dll","descriptionParts":["Run Dynamic Simulation ",""],"inputs":[{"inputName":"tbdFile","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The full file path of the TBD file ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"startDay","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Set start day, default 0 ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"endDay","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["Set end day, default 365 ","This is a Int32"],"isRequired":0,"isInterface":0},{"inputName":"autoViewResults","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Set to true when you want to open results when simulation complete, default false ","This is a Boolean"],"isRequired":0,"isInterface":0},{"inputName":"run","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Set to true when you want to run the component, default false ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if simulation has been successfully run, false otherwise ","This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTASLevels","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a list of BHoM Architectural Levels from a TAS TBD Building ",""],"inputs":[{"inputName":"tbdBuilding","namespace":"TBD","memberName":"Building","isGeneric":"0","descriptionParts":["TAS TBD Building ","This is a Building ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Architecture.Elements","memberName":"Level","isInterface":"0","isGeneric":"0"}],"descriptionParts":["BHoM Architectural Levels ","This is a List<Level>"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a BHoM Architectural Level from a TAS TBD Building Storey ",""],"inputs":[{"inputName":"tbdStorey","namespace":"TBD","memberName":"BuildingStorey","isGeneric":"0","descriptionParts":["TAS TBD Building Storey ","This is a BuildingStorey ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Level","namespace":"BH.oM.Architecture.Elements","isGeneric":"0","descriptionParts":["BHoM Architectural Level ","This is a BH.oM.Architecture.Elements.Level"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a BHoM Architectural Level from a TAS T3D Floor ",""],"inputs":[{"inputName":"tbdFloor","namespace":"TAS3D","memberName":"Floor","isGeneric":"0","descriptionParts":["TAS T3D Floor ","This is a Floor ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Level","namespace":"BH.oM.Architecture.Elements","isGeneric":"0","descriptionParts":["BHoM Architectural Level ","This is a BH.oM.Architecture.Elements.Level"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a TAS TBD Building Storey from a BHoM Architecture Level ",""],"inputs":[{"inputName":"level","namespace":"BH.oM.Architecture.Elements","memberName":"Level","isGeneric":"0","descriptionParts":["BHoM Architecture Level ","This is a BH.oM.Architecture.Elements.Level"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BuildingStoreyClass","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD Building Storey ","This is a BuildingStoreyClass"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["BH.Engine.Adapters.TAS.Convert ToBHoM => gets a BHoM Environmental Building from a TAS TBD Building ",""],"inputs":[{"inputName":"tbdBuilding","namespace":"TBD","memberName":"Building","isGeneric":"0","descriptionParts":["TAS TBD Building ","This is a Building ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Building","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["BHoM Environmental Building ","This is a BH.oM.Environment.Elements.Building: ","This building object is used for setting the location and building type, which is required for some environmental workflows"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a TAS TBD Building from a BHoM Environmental Building ",""],"inputs":[{"inputName":"building","namespace":"BH.oM.Environment.Elements","memberName":"Building","isGeneric":"0","descriptionParts":["BHoM Environmental Building ","This is a BH.oM.Environment.Elements.Building: ","This building object is used for setting the location and building type, which is required for some environmental workflows"],"isRequired":1,"isInterface":0},{"inputName":"tbdBuilding","namespace":"TBD","memberName":"Building","isGeneric":"0","descriptionParts":["This is a Building ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Building","namespace":"TBD","isGeneric":"0","descriptionParts":["tasTBDBuilding ","This is a Building ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["BH.Engine.Adapters.TAS.Convert ToBHoM => gets a BHoM Environmental BuildingElement from a TAS TBD BuildingElement and TAS TBD ZoneSurface ",""],"inputs":[{"inputName":"tbdElement","namespace":"TBD","memberName":"buildingElement","isGeneric":"0","descriptionParts":["TAS TBD BuildingElement ","This is a buildingElement ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"tbdSurface","namespace":"TBD","memberName":"zoneSurface","isGeneric":"0","descriptionParts":["TAS TBD ZoneSurface ","This is a zoneSurface ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"tasSettings","namespace":"BH.oM.Adapters.TAS.Settings","memberName":"TASSettings","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.TAS.Settings.TASSettings"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["BHoM Environmental BuildingElement ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["BH.Engine.Adapters.TAS.Convert ToTAS => gets a TAS TBD BuildingElement from a BHoM Environmental BuildingElement ",""],"inputs":[{"inputName":"buildingElement","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["BHoM Environmental BuildingElement ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"tbdBuildingElement","namespace":"TBD","memberName":"buildingElement","isGeneric":"0","descriptionParts":["This is a buildingElement ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"tbdConstruction","namespace":"TBD","memberName":"Construction","isGeneric":"0","descriptionParts":["This is a Construction ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"buildingElement","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD BuildingElement ","This is a buildingElement ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTASSurface","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a TAS TBD ZoneSurface from a BHoM Environmental BuildingElement ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["BHoM Environmental BuildingElement ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"zoneSurfaceClass","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD ZoneSurface ","This is a zoneSurfaceClass"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a BHoM Environmental PanelType from a TAS TBD BuildingElementType ",""],"inputs":[{"inputName":"tbdType","namespace":"TBD","memberName":"BuildingElementType","isGeneric":"0","descriptionParts":["TAS TBD BuildingElementType ","This is a BuildingElementType ","Enum values: ","-NOBETYPE ","-INTERNALWALL ","-EXTERNALWALL ","-ROOFELEMENT ","-INTERNALFLOOR ","-SHADEELEMENT ","-UNDERGROUNDWALL ","-UNDERGROUNDSLAB ","-CEILING ","-UNDERGROUNDCEILING ","-RAISEDFLOOR ","-SLABONGRADE ","-GLAZING ","-ROOFLIGHT ","-DOORELEMENT ","-FRAMEELEMENT ","-CURTAINWALL ","-NULLELEMENT ","-SOLARPANEL ","-...And more"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"PanelType","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["BHoM Environmental PanelType ","This is a BH.oM.Environment.Elements.PanelType: ","The type of environmental surface (e.g. Wall, Floor, Roof) ","Enum values: ","-Undefined ","-Adiabatic ","-Air ","-Ceiling ","-CurtainWall ","-Floor ","-FloorExposed ","-FloorInternal ","-FloorRaised ","-Roof ","-Shade ","-SlabOnGrade ","-SolarPanel ","-UndergroundCeiling ","-UndergroundSlab ","-UndergroundWall ","-Wall ","-WallExternal ","-WallInternal"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTASOpeningType","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a BHoM Environmental OpeningType from a TAS TBD BuildingElementType ",""],"inputs":[{"inputName":"tbdType","namespace":"TBD","memberName":"BuildingElementType","isGeneric":"0","descriptionParts":["TAS TBD BuildingElementType ","This is a BuildingElementType ","Enum values: ","-NOBETYPE ","-INTERNALWALL ","-EXTERNALWALL ","-ROOFELEMENT ","-INTERNALFLOOR ","-SHADEELEMENT ","-UNDERGROUNDWALL ","-UNDERGROUNDSLAB ","-CEILING ","-UNDERGROUNDCEILING ","-RAISEDFLOOR ","-SLABONGRADE ","-GLAZING ","-ROOFLIGHT ","-DOORELEMENT ","-FRAMEELEMENT ","-CURTAINWALL ","-NULLELEMENT ","-SOLARPANEL ","-...And more"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"OpeningType","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["BHoM Environmental OpeningType ","This is a BH.oM.Environment.Elements.OpeningType: ","The type of cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight) ","Enum values: ","-Undefined ","-CurtainWall ","-Door ","-Frame ","-Glazing ","-Hole ","-Rooflight ","-RooflightWithFrame ","-Window ","-WindowWithFrame ","-VehicleDoor"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTASBuildingElementType","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a TAS TBD BuildingElementType from a BHoM Environmental BuildingElementType ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["BHoM Environmental BuildingElement ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"spaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["Collection of BHoM Environmental BuildingElements that define a set of spaces for the building ","This is a List<List<Panel>>"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BuildingElementType","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD BuildingElementType ","This is a BuildingElementType ","Enum values: ","-NOBETYPE ","-INTERNALWALL ","-EXTERNALWALL ","-ROOFELEMENT ","-INTERNALFLOOR ","-SHADEELEMENT ","-UNDERGROUNDWALL ","-UNDERGROUNDSLAB ","-CEILING ","-UNDERGROUNDCEILING ","-RAISEDFLOOR ","-SLABONGRADE ","-GLAZING ","-ROOFLIGHT ","-DOORELEMENT ","-FRAMEELEMENT ","-CURTAINWALL ","-NULLELEMENT ","-SOLARPANEL ","-...And more"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTBDSurfaceType","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets an int representing a TAS TBD BuildingElementType from a string defining the type ",""],"inputs":[{"inputName":"type","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["String naming the type of building element ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Int32","namespace":"System","isGeneric":"0","descriptionParts":["int representation of a TAS TBD BuildingElementType ","This is a Int32"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a TAS TBD BuildingElementType from a BHoM Environmental BuildingElementType ",""],"inputs":[{"inputName":"bHoMBuildingElementType","namespace":"BH.oM.Environment.Elements","memberName":"PanelType","isGeneric":"0","descriptionParts":["Set the BuildingElementType ","This is a BH.oM.Environment.Elements.PanelType: ","The type of environmental surface (e.g. Wall, Floor, Roof) ","Enum values: ","-Undefined ","-Adiabatic ","-Air ","-Ceiling ","-CurtainWall ","-Floor ","-FloorExposed ","-FloorInternal ","-FloorRaised ","-Roof ","-Shade ","-SlabOnGrade ","-SolarPanel ","-UndergroundCeiling ","-UndergroundSlab ","-UndergroundWall ","-Wall ","-WallExternal ","-WallInternal"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BuildingElementType","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD BuildingElementType ","This is a BuildingElementType ","Enum values: ","-NOBETYPE ","-INTERNALWALL ","-EXTERNALWALL ","-ROOFELEMENT ","-INTERNALFLOOR ","-SHADEELEMENT ","-UNDERGROUNDWALL ","-UNDERGROUNDSLAB ","-CEILING ","-UNDERGROUNDCEILING ","-RAISEDFLOOR ","-SLABONGRADE ","-GLAZING ","-ROOFLIGHT ","-DOORELEMENT ","-FRAMEELEMENT ","-CURTAINWALL ","-NULLELEMENT ","-SOLARPANEL ","-...And more"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a TAS TBD BuildingElementType from a BHoM Environmental OpeningType ",""],"inputs":[{"inputName":"bHoMBuildingElementType","namespace":"BH.oM.Environment.Elements","memberName":"OpeningType","isGeneric":"0","descriptionParts":["BHoM Environmental OpeningType ","This is a BH.oM.Environment.Elements.OpeningType: ","The type of cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight) ","Enum values: ","-Undefined ","-CurtainWall ","-Door ","-Frame ","-Glazing ","-Hole ","-Rooflight ","-RooflightWithFrame ","-Window ","-WindowWithFrame ","-VehicleDoor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BuildingElementType","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD BuildingElementType ","This is a BuildingElementType ","Enum values: ","-NOBETYPE ","-INTERNALWALL ","-EXTERNALWALL ","-ROOFELEMENT ","-INTERNALFLOOR ","-SHADEELEMENT ","-UNDERGROUNDWALL ","-UNDERGROUNDSLAB ","-CEILING ","-UNDERGROUNDCEILING ","-RAISEDFLOOR ","-SLABONGRADE ","-GLAZING ","-ROOFLIGHT ","-DOORELEMENT ","-FRAMEELEMENT ","-CURTAINWALL ","-NULLELEMENT ","-SOLARPANEL ","-...And more"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a BHoM Environmental Construction from a TAS TBD Construction ",""],"inputs":[{"inputName":"tbdConstruction","namespace":"TBD","memberName":"Construction","isGeneric":"0","descriptionParts":["TAS TBD Construction ","This is a Construction ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Construction","namespace":"BH.oM.Physical.Constructions","isGeneric":"0","descriptionParts":["BHoM Environmental Construction ","This is a BH.oM.Physical.Constructions.Construction"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a TAS TBD Construction from a BHoM Environmental Construction ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["BHoM Environmental Construction ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1},{"inputName":"tbdConstruction","namespace":"TBD","memberName":"Construction","isGeneric":"0","descriptionParts":["This is a Construction ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Construction","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD Construction ","This is a Construction ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a TAS TBD Construction from a BHoM Environmental Construction ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isGeneric":"0","descriptionParts":["BHoM Environmental Construction ","This is a BH.oM.Physical.Constructions.Construction"],"isRequired":1,"isInterface":0},{"inputName":"tbdConstruction","namespace":"TBD","memberName":"Construction","isGeneric":"0","descriptionParts":["This is a Construction ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Construction","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD Construction ","This is a Construction ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets BHoM Emitter from TAS TBD Emitter ",""],"inputs":[{"inputName":"tbdEmitter","namespace":"TBD","memberName":"Emitter","isGeneric":"0","descriptionParts":["TAS TBD Emitter ","This is a Emitter ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Equipment","namespace":"BH.oM.Environment.SpaceCriteria","isGeneric":"0","descriptionParts":["BHoM Environmental Emitter object ","This is a BH.oM.Environment.SpaceCriteria.Equipment: ","Equipment gains are defined as the amount of both latent and sensible heat contributed by specified equipment within the space (dishwasher, oven, etc)"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets BHoM EmitterType from TAS TBD EmitterTypes ",""],"inputs":[{"inputName":"tbdEmitterType","namespace":"TBD","memberName":"EmitterTypes","isGeneric":"0","descriptionParts":["TAS TBD EmitterTypes object ","This is a EmitterTypes ","Enum values: ","-ticCooling ","-ticHeating ","-ticCompensatedCooling ","-ticCompensatedHeating"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"EmitterType","namespace":"BH.oM.Environment.SpaceCriteria","isGeneric":"0","descriptionParts":["BHoM Environmental EmitterType enum value ","This is a BH.oM.Environment.SpaceCriteria.EmitterType ","Enum values: ","-Undefined ","-Cooling ","-Heating"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets TAS TBD Emitter from BH.oM.Environment.Elements.Emitter ",""],"inputs":[{"inputName":"emitter","namespace":"BH.oM.Environment.SpaceCriteria","memberName":"Equipment","isGeneric":"0","descriptionParts":["BHoM Environmental Emitter object ","This is a BH.oM.Environment.SpaceCriteria.Equipment: ","Equipment gains are defined as the amount of both latent and sensible heat contributed by specified equipment within the space (dishwasher, oven, etc)"],"isRequired":1,"isInterface":0},{"inputName":"tbdEmitter","namespace":"TBD","memberName":"Emitter","isGeneric":"0","descriptionParts":["This is a Emitter ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Emitter","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD Emitter ","This is a Emitter ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets TAS TBD EmitterTypes from BHoM EmitterType ",""],"inputs":[{"inputName":"emitterType","namespace":"BH.oM.Environment.SpaceCriteria","memberName":"EmitterType","isGeneric":"0","descriptionParts":["BHoM Environmental EmitterType enum value ","This is a BH.oM.Environment.SpaceCriteria.EmitterType ","Enum values: ","-Undefined ","-Cooling ","-Heating"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"EmitterTypes","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD EmitterType enum value ","This is a EmitterTypes ","Enum values: ","-ticCooling ","-ticHeating ","-ticCompensatedCooling ","-ticCompensatedHeating"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets BHoM InternalGain from TAS TBD InternalGain ",""],"inputs":[{"inputName":"tbdInternalGain","namespace":"TBD","memberName":"InternalGain","isGeneric":"0","descriptionParts":["TAS TBD InternalGain ","This is a InternalGain ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.SpaceCriteria","memberName":"IGain","isInterface":"1","isGeneric":"0"}],"descriptionParts":["BHoM Environmental InternalGain object ","This is a List<IGain> ","This can be of the following types: Equipment, Infiltration, Lighting, People, Plug, Pollutant"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets TAS TBD InternalGain from BHoM InternalGain ",""],"inputs":[{"inputName":"internalGains","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.SpaceCriteria","memberName":"IGain","isInterface":"1","isGeneric":"0"}],"descriptionParts":["BHoM Environmental InternalGain object ","This is a List<IGain> ","This can be of the following types: Equipment, Infiltration, Lighting, People, Plug, Pollutant"],"isRequired":1,"isInterface":0},{"inputName":"tbdInternalGain","namespace":"TBD","memberName":"InternalGain","isGeneric":"0","descriptionParts":["This is a InternalGain ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"InternalGain","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD InternalGain ","This is a InternalGain ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a BHoM Environmental Material from a TAS TBD Material ",""],"inputs":[{"inputName":"tbdMaterial","namespace":"TBD","memberName":"material","isGeneric":"0","descriptionParts":["TAS TBD Material ","This is a material ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"tbdConstruction","namespace":"TBD","memberName":"Construction","isGeneric":"0","descriptionParts":["This is a Construction ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Layer","namespace":"BH.oM.Physical.Constructions","isGeneric":"0","descriptionParts":["BHoM Environmental Material ","This is a BH.oM.Physical.Constructions.Layer: ","A layer object with given material and thickness"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTASProperties","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a BHoM Environmental MaterialProperties from a TAS TBD Material ",""],"inputs":[{"inputName":"tbdMaterial","namespace":"TBD","memberName":"material","isGeneric":"0","descriptionParts":["TAS TBD Material ","This is a material ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"tbdConstruction","namespace":"TBD","memberName":"Construction","isGeneric":"0","descriptionParts":["This is a Construction ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"IEnvironmentMaterial","namespace":"BH.oM.Environment.MaterialFragments","isGeneric":"0","descriptionParts":["BHoM Environmental MaterialProperties ","This is a BH.oM.Environment.MaterialFragments.IEnvironmentMaterial ","This can be of the following types: GasMaterial, SolidMaterial"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTASType","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a TAS TBD MaterialType from a BHoM Environmental MaterialType ",""],"inputs":[{"inputName":"material","namespace":"BH.oM.Physical.Materials","memberName":"Material","isGeneric":"0","descriptionParts":["BHoM Material ","This is a BH.oM.Physical.Materials.Material"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"MaterialTypes","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD MaterialType ","This is a MaterialTypes ","Enum values: ","-tcdOpaqueMaterial ","-tcdOpaqueLayer ","-tcdTransparentLayer ","-tcdGasLayer"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a TAS TBD Material from a BHoM Environmental Material ",""],"inputs":[{"inputName":"layer","namespace":"BH.oM.Physical.Constructions","memberName":"Layer","isGeneric":"0","descriptionParts":["This is a BH.oM.Physical.Constructions.Layer: ","A layer object with given material and thickness"],"isRequired":1,"isInterface":0},{"inputName":"tbdMaterial","namespace":"TBD","memberName":"material","isGeneric":"0","descriptionParts":["BHoM Environmental Material ","This is a material ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"material","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD Material ","This is a material ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTASOpening","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a BHoM Environmental Opening from a TAS TBD Opening Polygon ",""],"inputs":[{"inputName":"tbdPolygon","namespace":"TBD","memberName":"Polygon","isGeneric":"0","descriptionParts":["tbdPolygon that represents an opening ","This is a Polygon ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"roomSurface","namespace":"TBD","memberName":"RoomSurface","isGeneric":"0","descriptionParts":["This is a RoomSurface ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"tasSettings","namespace":"BH.oM.Adapters.TAS.Settings","memberName":"TASSettings","isGeneric":"0","descriptionParts":["This is a BH.oM.Adapters.TAS.Settings.TASSettings"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Opening","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["BHoM Environmental Opening ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a TAS TBD Polygon from a BHoM Environmental Opening ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["BHoM Environmental Opening ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0},{"inputName":"tbdPolygon","namespace":"TBD","memberName":"Polygon","isGeneric":"0","descriptionParts":["This is a Polygon ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Polygon","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD Polygon ","This is a Polygon ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0},{"inputName":"tbdBuildingElement","namespace":"TBD","memberName":"buildingElement","isGeneric":"0","descriptionParts":["This is a buildingElement ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"tbdConstruction","namespace":"TBD","memberName":"Construction","isGeneric":"0","descriptionParts":["This is a Construction ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"buildingElement","namespace":"TBD","isGeneric":"0","descriptionParts":["This is a buildingElement ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a BHoM Environmental Profile from a TAS TBD Profile ",""],"inputs":[{"inputName":"tbdProfile","namespace":"TBD","memberName":"profile","isGeneric":"0","descriptionParts":["TAS TBD Profile ","This is a profile ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Profile","namespace":"BH.oM.Environment.SpaceCriteria","isGeneric":"0","descriptionParts":["BHoM Environmental Profile ","This is a BH.oM.Environment.SpaceCriteria.Profile: ","A profile object represents a gain, thermostat or humdistat as conditions vary over a 24-hour period"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a TAS TBD Profile from a BHoM Environmental Profile ",""],"inputs":[{"inputName":"profile","namespace":"BH.oM.Environment.SpaceCriteria","memberName":"Profile","isGeneric":"0","descriptionParts":["BHoM Environmental Profile ","This is a BH.oM.Environment.SpaceCriteria.Profile: ","A profile object represents a gain, thermostat or humdistat as conditions vary over a 24-hour period"],"isRequired":1,"isInterface":0},{"inputName":"tbdProfile","namespace":"TBD","memberName":"profile","isGeneric":"0","descriptionParts":["This is a profile ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"profile","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD Profile ","This is a profile ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTASBuildingType","assemblyName":"TAS_Engine.dll","descriptionParts":["BH.Engine.Adapters.TAS.Convert ToTAS => gets a TAS TSD Building Array from a BHoM Environmental Profile Result Type ",""],"inputs":[{"inputName":"resultType","namespace":"BH.oM.Environment.Results","memberName":"ProfileResultType","isGeneric":"0","descriptionParts":["BHoM Environmental Profile Result Type ","This is a BH.oM.Environment.Results.ProfileResultType ","Enum values: ","-Undefined ","-ApertureFlowIn ","-ApertureFlowOut ","-ApertureOpening ","-CloudCover ","-CondensationExternal ","-CondensationInternal ","-CondensationInterstitial ","-ConductionExternal ","-ConductionExternalGlazing ","-ConductionExternalOpaque ","-ConductionInternal ","-ConvectionExternal ","-ConvectionInternal ","-GainAirMovement ","-GainEquipmentLatent ","-GainEquipmentSensible ","-GainInfiltrationVentilation ","-GainInternalSolar ","-...And more"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Nullable","namespace":"System","isGeneric":"1","inheritances":[{"namespace":"TSD","memberName":"tsdBuildingArray","isInterface":"0","isGeneric":"0"}],"descriptionParts":["TAS TSB Building Array ","This is a Nullable<tsdBuildingArray>"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTASSurfaceType","assemblyName":"TAS_Engine.dll","descriptionParts":["BH.Engine.Adapters.TAS.Convert ToTAS => gets a TAS TSD Surface Array from a BHoM Environmental Profile Result Type ",""],"inputs":[{"inputName":"resultType","namespace":"BH.oM.Environment.Results","memberName":"ProfileResultType","isGeneric":"0","descriptionParts":["BHoM Environmental Profile Result Type ","This is a BH.oM.Environment.Results.ProfileResultType ","Enum values: ","-Undefined ","-ApertureFlowIn ","-ApertureFlowOut ","-ApertureOpening ","-CloudCover ","-CondensationExternal ","-CondensationInternal ","-CondensationInterstitial ","-ConductionExternal ","-ConductionExternalGlazing ","-ConductionExternalOpaque ","-ConductionInternal ","-ConvectionExternal ","-ConvectionInternal ","-GainAirMovement ","-GainEquipmentLatent ","-GainEquipmentSensible ","-GainInfiltrationVentilation ","-GainInternalSolar ","-...And more"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Nullable","namespace":"System","isGeneric":"1","inheritances":[{"namespace":"TSD","memberName":"tsdSurfaceArray","isInterface":"0","isGeneric":"0"}],"descriptionParts":["TAS TSB Surface Array ","This is a Nullable<tsdSurfaceArray>"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTASSpaceType","assemblyName":"TAS_Engine.dll","descriptionParts":["BH.Engine.Adapters.TAS.Convert ToTAS => gets a TAS TSD Zone Array from a BHoM Environmental Profile Result Type ",""],"inputs":[{"inputName":"resultType","namespace":"BH.oM.Environment.Results","memberName":"ProfileResultType","isGeneric":"0","descriptionParts":["BHoM Environmental Profile Result Type ","This is a BH.oM.Environment.Results.ProfileResultType ","Enum values: ","-Undefined ","-ApertureFlowIn ","-ApertureFlowOut ","-ApertureOpening ","-CloudCover ","-CondensationExternal ","-CondensationInternal ","-CondensationInterstitial ","-ConductionExternal ","-ConductionExternalGlazing ","-ConductionExternalOpaque ","-ConductionInternal ","-ConvectionExternal ","-ConvectionInternal ","-GainAirMovement ","-GainEquipmentLatent ","-GainEquipmentSensible ","-GainInfiltrationVentilation ","-GainInternalSolar ","-...And more"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Nullable","namespace":"System","isGeneric":"1","inheritances":[{"namespace":"TSD","memberName":"tsdZoneArray","isInterface":"0","isGeneric":"0"}],"descriptionParts":["TAS TSB Zone Array ","This is a Nullable<tsdZoneArray>"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["BH.Engine.Adapters.TAS.Convert ToBHoM => gets a BHoM Environmental Simulation Result from a TAS TSD Surface Simulation ",""],"inputs":[{"inputName":"tsdData","namespace":"TSD","memberName":"SurfaceData","isGeneric":"0","descriptionParts":["TAS TSD Surface Data ","This is a SurfaceData ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"unitType","namespace":"BH.oM.Environment.Results","memberName":"ProfileResultUnit","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Results.ProfileResultUnit ","Enum values: ","-Undefined ","-Daily ","-Hourly ","-Value ","-Yearly"],"isRequired":1,"isInterface":0},{"inputName":"resultType","namespace":"BH.oM.Environment.Results","memberName":"ProfileResultType","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Results.ProfileResultType ","Enum values: ","-Undefined ","-ApertureFlowIn ","-ApertureFlowOut ","-ApertureOpening ","-CloudCover ","-CondensationExternal ","-CondensationInternal ","-CondensationInterstitial ","-ConductionExternal ","-ConductionExternalGlazing ","-ConductionExternalOpaque ","-ConductionInternal ","-ConvectionExternal ","-ConvectionInternal ","-GainAirMovement ","-GainEquipmentLatent ","-GainEquipmentSensible ","-GainInfiltrationVentilation ","-GainInternalSolar ","-...And more"],"isRequired":1,"isInterface":0},{"inputName":"hour","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"day","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SimulationResult","namespace":"BH.oM.Environment.Results","isGeneric":"0","descriptionParts":["BHoM Environmental Simulation Result ","This is a BH.oM.Environment.Results.SimulationResult: ","An Environment Simulation Result object"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTASSurface","assemblyName":"TAS_Engine.dll","descriptionParts":["BH.Engine.Adapters.TAS.Convert ToTAS => gets a TAS TSD Surface Data object from a BHoM Environmental Simulation Result ",""],"inputs":[{"inputName":"result","namespace":"BH.oM.Environment.Results","memberName":"SimulationResult","isGeneric":"0","descriptionParts":["BHoM Environmental Simulation Result ","This is a BH.oM.Environment.Results.SimulationResult: ","An Environment Simulation Result object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SurfaceData","namespace":"TSD","isGeneric":"0","descriptionParts":["TAS TSD Surface Data ","This is a SurfaceData ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["BH.Engine.Adapters.TAS.Convert ToBHoM => gets a BHoM Environmental Simulation Result from a TAS TSD Zone Simulation ",""],"inputs":[{"inputName":"tsdData","namespace":"TSD","memberName":"ZoneData","isGeneric":"0","descriptionParts":["TAS TSD Zone Data ","This is a ZoneData ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"unitType","namespace":"BH.oM.Environment.Results","memberName":"ProfileResultUnit","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Results.ProfileResultUnit ","Enum values: ","-Undefined ","-Daily ","-Hourly ","-Value ","-Yearly"],"isRequired":1,"isInterface":0},{"inputName":"resultType","namespace":"BH.oM.Environment.Results","memberName":"ProfileResultType","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Results.ProfileResultType ","Enum values: ","-Undefined ","-ApertureFlowIn ","-ApertureFlowOut ","-ApertureOpening ","-CloudCover ","-CondensationExternal ","-CondensationInternal ","-CondensationInterstitial ","-ConductionExternal ","-ConductionExternalGlazing ","-ConductionExternalOpaque ","-ConductionInternal ","-ConvectionExternal ","-ConvectionInternal ","-GainAirMovement ","-GainEquipmentLatent ","-GainEquipmentSensible ","-GainInfiltrationVentilation ","-GainInternalSolar ","-...And more"],"isRequired":1,"isInterface":0},{"inputName":"hour","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"day","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SimulationResult","namespace":"BH.oM.Environment.Results","isGeneric":"0","descriptionParts":["BHoM Environmental Simulation Result ","This is a BH.oM.Environment.Results.SimulationResult: ","An Environment Simulation Result object"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTASZone","assemblyName":"TAS_Engine.dll","descriptionParts":["BH.Engine.Adapters.TAS.Convert ToTAS => gets a TAS TSD Zone Data object from a BHoM Environmental Simulation Result ",""],"inputs":[{"inputName":"result","namespace":"BH.oM.Environment.Results","memberName":"SimulationResult","isGeneric":"0","descriptionParts":["BHoM Environmental Simulation Result ","This is a BH.oM.Environment.Results.SimulationResult: ","An Environment Simulation Result object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"ZoneData","namespace":"TSD","isGeneric":"0","descriptionParts":["TAS TSD Zone Data ","This is a ZoneData ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets BH.oM.Environment.Elements.SimulationDayType from TAS TBD Day Type ",""],"inputs":[{"inputName":"tbdDayType","namespace":"TBD","memberName":"dayType","isGeneric":"0","descriptionParts":["TAS TBD day type ","This is a dayType ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"SimulationDayType","namespace":"BH.oM.Environment.SpaceCriteria","isGeneric":"0","descriptionParts":["BHoM Environmental Simulation Day Type enum ","This is a BH.oM.Environment.SpaceCriteria.SimulationDayType ","Enum values: ","-Undefined ","-Monday ","-Tuesday ","-Wednesday ","-Thursday ","-Friday ","-Saturday ","-Sunday ","-Weekday ","-Weekend ","-PublicHoliday ","-CoolingDesignDay ","-HeatingDesignDay"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTASString","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"dayType","namespace":"BH.oM.Environment.SpaceCriteria","memberName":"SimulationDayType","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.SpaceCriteria.SimulationDayType ","Enum values: ","-Undefined ","-Monday ","-Tuesday ","-Wednesday ","-Thursday ","-Friday ","-Saturday ","-Sunday ","-Weekday ","-Weekend ","-PublicHoliday ","-CoolingDesignDay ","-HeatingDesignDay"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"dayType","namespace":"BH.oM.Environment.SpaceCriteria","memberName":"SimulationDayType","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.SpaceCriteria.SimulationDayType ","Enum values: ","-Undefined ","-Monday ","-Tuesday ","-Wednesday ","-Thursday ","-Friday ","-Saturday ","-Sunday ","-Weekday ","-Weekend ","-PublicHoliday ","-CoolingDesignDay ","-HeatingDesignDay"],"isRequired":1,"isInterface":0},{"inputName":"tbdDayType","namespace":"TBD","memberName":"dayType","isGeneric":"0","descriptionParts":["This is a dayType ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"dayType","namespace":"TBD","isGeneric":"0","descriptionParts":["This is a dayType ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets BHoM SizingMethod from TAS TBD SizeMethod ",""],"inputs":[{"inputName":"sizingType","namespace":"TBD","memberName":"SizingType","isGeneric":"0","descriptionParts":["TAS TBD SizingType ","This is a SizingType ","Enum values: ","-tbdNoSizing ","-tbdDesignSizingOnly ","-tbdSizing ","-tbdMixed ","-tbdLoadPerArea"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SizingMethod","namespace":"BH.oM.Environment.Fragments","isGeneric":"0","descriptionParts":["BHoM Environmental SizingType Type enum ","This is a BH.oM.Environment.Fragments.SizingMethod ","Enum values: ","-Undefined ","-DesignSizingOnly ","-LoadPerArea ","-Mixed ","-NoSizing ","-Sizing"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"sizingMethod","namespace":"BH.oM.Environment.Fragments","memberName":"SizingMethod","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Fragments.SizingMethod ","Enum values: ","-Undefined ","-DesignSizingOnly ","-LoadPerArea ","-Mixed ","-NoSizing ","-Sizing"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SizingType","namespace":"TBD","isGeneric":"0","descriptionParts":["This is a SizingType ","Enum values: ","-tbdNoSizing ","-tbdDesignSizingOnly ","-tbdSizing ","-tbdMixed ","-tbdLoadPerArea"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["BH.Engine.Adapters.TAS.Convert ToBHoM => gets a BHoM Environmental Simulation Result from a TAS TSD Building Simulation ",""],"inputs":[{"inputName":"tsdData","namespace":"TSD","memberName":"BuildingData","isGeneric":"0","descriptionParts":["TAS TSD Building Data ","This is a BuildingData ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"unitType","namespace":"BH.oM.Environment.Results","memberName":"ProfileResultUnit","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Results.ProfileResultUnit ","Enum values: ","-Undefined ","-Daily ","-Hourly ","-Value ","-Yearly"],"isRequired":1,"isInterface":0},{"inputName":"resultType","namespace":"BH.oM.Environment.Results","memberName":"ProfileResultType","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Results.ProfileResultType ","Enum values: ","-Undefined ","-ApertureFlowIn ","-ApertureFlowOut ","-ApertureOpening ","-CloudCover ","-CondensationExternal ","-CondensationInternal ","-CondensationInterstitial ","-ConductionExternal ","-ConductionExternalGlazing ","-ConductionExternalOpaque ","-ConductionInternal ","-ConvectionExternal ","-ConvectionInternal ","-GainAirMovement ","-GainEquipmentLatent ","-GainEquipmentSensible ","-GainInfiltrationVentilation ","-GainInternalSolar ","-...And more"],"isRequired":1,"isInterface":0},{"inputName":"hour","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0},{"inputName":"day","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"SimulationResult","namespace":"BH.oM.Environment.Results","isGeneric":"0","descriptionParts":["BHoM Environmental Simulation Result ","This is a BH.oM.Environment.Results.SimulationResult: ","An Environment Simulation Result object"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTASBuilding","assemblyName":"TAS_Engine.dll","descriptionParts":["BH.Engine.Adapters.TAS.Convert ToTAS => gets a TAS TSD Building Data object from a BHoM Environmental Simulation Result ",""],"inputs":[{"inputName":"result","namespace":"BH.oM.Environment.Results","memberName":"SimulationResult","isGeneric":"0","descriptionParts":["BHoM Environmental Simulation Result ","This is a BH.oM.Environment.Results.SimulationResult: ","An Environment Simulation Result object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"BuildingData","namespace":"TSD","isGeneric":"0","descriptionParts":["TAS TSD Building Data ","This is a BuildingData ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets BHoM Space from TAS TBD Zone ",""],"inputs":[{"inputName":"tbdSpace","namespace":"TBD","memberName":"zone","isGeneric":"0","descriptionParts":["TAS TBD Zone ","This is a zone ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"tbdDocument","namespace":"TBD","memberName":"TBDDocument","isGeneric":"0","descriptionParts":["This is a TBDDocument ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Space","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["BHoM Environmental Space object ","This is a BH.oM.Environment.Elements.Space: ","A space object is an analytical depiction of a room defined by its environmental conditions (internal gains)"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets TAS TBD Zone from BHoM Space ",""],"inputs":[{"inputName":"space","namespace":"BH.oM.Environment.Elements","memberName":"Space","isGeneric":"0","descriptionParts":["BHoM Environmental InternalCondition object ","This is a BH.oM.Environment.Elements.Space: ","A space object is an analytical depiction of a room defined by its environmental conditions (internal gains)"],"isRequired":1,"isInterface":0},{"inputName":"tbdSpace","namespace":"TBD","memberName":"zone","isGeneric":"0","descriptionParts":["This is a zone ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"zone","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD Zone ","This is a zone ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets BHoM Thermostat from TAS TBD Thermostat ",""],"inputs":[{"inputName":"tbdThermostat","namespace":"TBD","memberName":"Thermostat","isGeneric":"0","descriptionParts":["TAS TBD Thermostat ","This is a Thermostat ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Thermostat","namespace":"BH.oM.Environment.SpaceCriteria","isGeneric":"0","descriptionParts":["BHoM Environmental Thermostat object ","This is a BH.oM.Environment.SpaceCriteria.Thermostat"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets TAS TBD Thermostat from BHoM Thermostat ",""],"inputs":[{"inputName":"thermostat","namespace":"BH.oM.Environment.SpaceCriteria","memberName":"Thermostat","isGeneric":"0","descriptionParts":["BHoM Environmental Thermostat object ","This is a BH.oM.Environment.SpaceCriteria.Thermostat"],"isRequired":1,"isInterface":0},{"inputName":"tbdThermostat","namespace":"TBD","memberName":"Thermostat","isGeneric":"0","descriptionParts":["This is a Thermostat ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Thermostat","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD Thermostat ","This is a Thermostat ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a BHoM Geomtry Point TAS TBD Point ",""],"inputs":[{"inputName":"tbdPoint","namespace":"TBD","memberName":"TasPoint","isGeneric":"0","descriptionParts":["TAS TBD Point ","This is a TasPoint ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Point","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["BHoM Geometry Point ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a TAS TBD Point from a BHoM Geometry Point ",""],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["BHoM Geomtry Point ","This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"tbdPoint","namespace":"TBD","memberName":"TasPoint","isGeneric":"0","descriptionParts":["This is a TasPoint ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"TasPoint","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD Point ","This is a TasPoint ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a BHoM Geomtry Polyline TAS TBD Perimeter ",""],"inputs":[{"inputName":"tbdPerimeter","namespace":"TBD","memberName":"Perimeter","isGeneric":"0","descriptionParts":["TAS TBD Perimeter ","This is a Perimeter ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["BHoM Geometry Polyline ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"FromTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a BHoM Geomtry Polyline TAS TBD Polygon ",""],"inputs":[{"inputName":"tbdPolygon","namespace":"TBD","memberName":"Polygon","isGeneric":"0","descriptionParts":["TAS TBD Polygon ","This is a Polygon ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["BHoM Geometry Polyline ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTAS","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a TAS TBD Perimeter from a BHoM Geometry Polyline ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["BHoM Geomtry Polyline ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tbdPerimeter","namespace":"TBD","memberName":"Perimeter","isGeneric":"0","descriptionParts":["This is a Perimeter ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Perimeter","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD Perimeter ","This is a Perimeter ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToTASPolygon","assemblyName":"TAS_Engine.dll","descriptionParts":["Gets a TAS TBD Polygon from a BHoM Geometry Polyline ",""],"inputs":[{"inputName":"polyline","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["BHoM Geomtry Polyline ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"tbdPolygon","namespace":"TBD","memberName":"Polygon","isGeneric":"0","descriptionParts":["This is a Polygon ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Polygon","namespace":"TBD","isGeneric":"0","descriptionParts":["TAS TBD Polygon ","This is a Polygon ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToFloatList","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Single","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Single>"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Convert","memberName":"ToDoubleList","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"obj","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["This is a Object"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"Double","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Double>"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Create","memberName":"TASSettings","assemblyName":"TAS_Engine.dll","descriptionParts":["Create a TASSettings object for use with the TAS adapters ",""],"inputs":[{"inputName":"planarTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Set tolerance for planar surfaces, default is set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"distanceTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["distanceTolerance is used as input for CleanPolyline method used for opening, default is set to BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"minimumSegmentLength","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The length of the smallest allowed segment.Default is set to the value defined by BH.oM.Geometry.Tolerance.Distance ","This is a Double"],"isRequired":0,"isInterface":0},{"inputName":"angleTolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The tolerance of the angle that defines a straight line. Default is set to the value defined by BH.oM.Geometry.Tolerance.Angle ","This is a Double"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"TASSettings","namespace":"BH.oM.Adapters.TAS.Settings","isGeneric":"0","descriptionParts":["The TAS setting to use with the TAS adapter ","This is a BH.oM.Adapters.TAS.Settings.TASSettings"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Create","memberName":"Panel","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"height","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Panel","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Modify","memberName":"FixBuildingElementType","assemblyName":"TAS_Engine.dll","descriptionParts":["Sets opening type for TBD Building element. ",""],"inputs":[{"inputName":"bHoMBuildingElementType","namespace":"BH.oM.Environment.Elements","memberName":"OpeningType","isGeneric":"0","descriptionParts":["Set the opening type to give the openings ","This is a BH.oM.Environment.Elements.OpeningType: ","The type of cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight) ","Enum values: ","-Undefined ","-CurtainWall ","-Door ","-Frame ","-Glazing ","-Hole ","-Rooflight ","-RooflightWithFrame ","-Window ","-WindowWithFrame ","-VehicleDoor"],"isRequired":1,"isInterface":0},{"inputName":"tbdBuildingElement","namespace":"TBD","memberName":"buildingElement","isGeneric":"0","descriptionParts":["TBD opening elements ","This is a buildingElement ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"tbdZoneSurface","namespace":"TBD","memberName":"zoneSurface","isGeneric":"0","descriptionParts":["This is a zoneSurface ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"OpeningType","namespace":"BH.oM.Environment.Elements","isGeneric":"0","descriptionParts":["bHoMBuildingElements with a set type ","This is a BH.oM.Environment.Elements.OpeningType: ","The type of cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight) ","Enum values: ","-Undefined ","-CurtainWall ","-Door ","-Frame ","-Glazing ","-Hole ","-Rooflight ","-RooflightWithFrame ","-Window ","-WindowWithFrame ","-VehicleDoor"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Modify","memberName":"Round","assemblyName":"TAS_Engine.dll","descriptionParts":["Returns a float number rounded to the specified number of decimal places ",""],"inputs":[{"inputName":"number","namespace":"System","memberName":"Single","isGeneric":"0","descriptionParts":["A floating point number to round ","This is a Single"],"isRequired":1,"isInterface":0},{"inputName":"decimals","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimals to round to - default 3 decimal places (e.g. round 3.14159 to 3.141 ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Single","namespace":"System","isGeneric":"0","descriptionParts":["The floating point number rounded to the specified number of decimal places ","This is a Single"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Modify","memberName":"Round","assemblyName":"TAS_Engine.dll","descriptionParts":["Returns a double number rounded to the specified number of decimal places ",""],"inputs":[{"inputName":"number","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["A double to round ","This is a Double"],"isRequired":1,"isInterface":0},{"inputName":"decimals","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["The number of decimals to round to - default 3 decimal places (e.g. round 3.14159 to 3.141 ","This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The double number rounded to the specified number of decimal places ","This is a Double"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Modify","memberName":"SetTag","assemblyName":"TAS_Engine.dll","descriptionParts":["Sets Tag for BHoMObject. ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"tag","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["tag to be set ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"IBHoMObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["IBHoMObject ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Modify","memberName":"CleanString","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"st","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Modify","memberName":"RemoveStringPart","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0},{"inputName":"toRemove","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Modify","memberName":"RemoveBrackets","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"st","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"LTValue","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tbdBuildingElement","namespace":"TBD","memberName":"buildingElement","isGeneric":"0","descriptionParts":["This is a buildingElement ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"decimals","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"GValue","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tbdBuildingElement","namespace":"TBD","memberName":"buildingElement","isGeneric":"0","descriptionParts":["This is a buildingElement ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"decimals","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"MultiplyByFactor","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"x","namespace":"System","memberName":"Double[]","isGeneric":"0","descriptionParts":["This is a Double[]"],"isRequired":1,"isInterface":0},{"inputName":"factor","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double[]","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double[]"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"GetHourlyValues","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"profile","namespace":"TBD","memberName":"profile","isGeneric":"0","descriptionParts":["This is a profile ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double[]","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double[]"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"GetZones","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tbdDocument","namespace":"TBD","memberName":"TBDDocument","isGeneric":"0","descriptionParts":["This is a TBDDocument ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"TBD","memberName":"zone","isInterface":"1","isGeneric":"0"}],"descriptionParts":["This is a List<zone> ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"ConstructionThickness","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tbdConstruction","namespace":"TBD","memberName":"Construction","isGeneric":"0","descriptionParts":["This is a Construction ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"decimals","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"OpeningIsFrame","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"openingType","namespace":"BH.oM.Environment.Elements","memberName":"OpeningType","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Elements.OpeningType: ","The type of cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight) ","Enum values: ","-Undefined ","-CurtainWall ","-Door ","-Frame ","-Glazing ","-Hole ","-Rooflight ","-RooflightWithFrame ","-Window ","-WindowWithFrame ","-VehicleDoor"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"TBD3dVisualisation","assemblyName":"TAS_Engine.dll","descriptionParts":["Get TAS TBD 3d Visulisation, when finish close window and click False to end process. Use Shift + Middle mouse ",""],"inputs":[{"inputName":"tbdFile","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The full file path of the TBD file ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"run","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Set to true when you want to run the component, default false ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if TBD file has been successfully run, false otherwise ","This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"ElementIsOpening","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tbdType","namespace":"TBD","memberName":"BuildingElementType","isGeneric":"0","descriptionParts":["This is a BuildingElementType ","Enum values: ","-NOBETYPE ","-INTERNALWALL ","-EXTERNALWALL ","-ROOFELEMENT ","-INTERNALFLOOR ","-SHADEELEMENT ","-UNDERGROUNDWALL ","-UNDERGROUNDSLAB ","-CEILING ","-UNDERGROUNDCEILING ","-RAISEDFLOOR ","-SLABONGRADE ","-GLAZING ","-ROOFLIGHT ","-DOORELEMENT ","-FRAMEELEMENT ","-CURTAINWALL ","-NULLELEMENT ","-SOLARPANEL ","-...And more"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"GetSingleValueLowerLimit","assemblyName":"TAS_Engine.dll","descriptionParts":["Get Single Lower Limit ",""],"inputs":[{"inputName":"tbdICThermostat","namespace":"TBD","memberName":"Thermostat","isGeneric":"0","descriptionParts":["tbd IC Thermostat ","This is a Thermostat ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Single","namespace":"System","isGeneric":"0","descriptionParts":["return max lowerLimit value ","This is a Single"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"UValue","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tbdBuildingElement","namespace":"TBD","memberName":"buildingElement","isGeneric":"0","descriptionParts":["This is a buildingElement ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"decimals","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"Profiles","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tbdThermostat","namespace":"TBD","memberName":"Thermostat","isGeneric":"0","descriptionParts":["This is a Thermostat ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.SpaceCriteria","memberName":"Profile","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Profile>"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"Profiles","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tbdInternalGain","namespace":"TBD","memberName":"InternalGain","isGeneric":"0","descriptionParts":["This is a InternalGain ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.SpaceCriteria","memberName":"Profile","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Profile>"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"BuildingElement","assemblyName":"TAS_Engine.dll","descriptionParts":["Get TBD Building Element from building by Name ",""],"inputs":[{"inputName":"tbdBuilding","namespace":"TBD","memberName":"Building","isGeneric":"0","descriptionParts":["TBD Building ","This is a Building ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["string name for building element  ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"buildingElement","namespace":"TBD","isGeneric":"0","descriptionParts":["return building element ","This is a buildingElement ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"BuildingElement","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tbdBuilding","namespace":"TBD","memberName":"Building","isGeneric":"0","descriptionParts":["This is a Building ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"panelCurve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"buildingElement","namespace":"TBD","isGeneric":"0","descriptionParts":["This is a buildingElement ","This can be of the following types"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"GetRGB","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"uInt","namespace":"System","memberName":"UInt32","isGeneric":"0","descriptionParts":["This is a UInt32"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Color","namespace":"System.Drawing","isGeneric":"0","descriptionParts":["This is a Color"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"MinElevation","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tbdPerimeter","namespace":"TBD","memberName":"Perimeter","isGeneric":"0","descriptionParts":["This is a Perimeter ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Single","namespace":"System","isGeneric":"0","descriptionParts":["This is a Single"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"GetNumberOfPeople","assemblyName":"TAS_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"tbdDocument","namespace":"TBD","memberName":"TBDDocument","isGeneric":"0","descriptionParts":["This is a TBDDocument ","This can be of the following types"],"isRequired":1,"isInterface":1},{"inputName":"tbdZone","namespace":"TBD","memberName":"zone","isGeneric":"0","descriptionParts":["This is a zone ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Double[]","namespace":"System","isGeneric":"0","descriptionParts":["This is a Double[]"]}},{"namespace":"BH.Engine.Adapters.TAS","className":"Query","memberName":"GetSingleValueUpperLimit","assemblyName":"TAS_Engine.dll","descriptionParts":["Get Single Upper Limit ",""],"inputs":[{"inputName":"tbdICThermostat","namespace":"TBD","memberName":"Thermostat","isGeneric":"0","descriptionParts":["tbd IC Thermostat ","This is a Thermostat ","This can be of the following types"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"Single","namespace":"System","isGeneric":"0","descriptionParts":["return max UpperLimit value ","This is a Single"]}},{"namespace":"BH.Engine.Geometry.Triangulation","className":"Compute","memberName":"DelaunayTriangulation","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Create a Delaunay mesh from an outline and holes ",""],"inputs":[{"inputName":"outerCurve","namespace":"BH.oM.Geometry","memberName":"Polyline","isGeneric":"0","descriptionParts":["A BHoM Polyline representing the mesh boundary ","This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"],"isRequired":1,"isInterface":0},{"inputName":"innerCurves","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A list of holes to 'punch' through the mesh generated mesh ","This is a List<Polyline>"],"isRequired":0,"isInterface":0},{"inputName":"offsetDistance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Offset distance for innerCurves which have coincident edges - needs to be a negative value for inwards based offsetting, default -0.001 ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"conformingDelaunay","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Choose whether or not to have the resulting triangulation conform to Delaunay principles. This will give a higher detail triangulation. Default true ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A list of BHoM Polylines ","This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry.Triangulation","className":"Compute","memberName":"DelaunayTriangulation","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Creates a list of closed Delaunay polyline cells from a list of coplanar points. Each cell will correspond to a face in a Delaunay mesh. ",""],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The points to connect to Delanuay cells. All points need to be coplanar  ","This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["Optional plane of the points. Needs to be coplanar with all of the points. If no plane is provided, a best fit plane through the points will be used. ","This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Numeric tolerance to be used by the method. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["List of closed polyline representing faces in a Delaunay. ","This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry.Triangulation","className":"Compute","memberName":"VoronoiRegions","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Creates a voronoi diagram from a list of coplanar, non-duplicate points. The returned polylines cells will correspond to the input points by index. ",""],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The coplanar points to use to generate the voronoi diagram. The algorithm can currently not handle colinear points. ","This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["Optional plane for the voronoi. If provided, all points must be complanar with the plane. If nothing provided, a best fit plane will be calculated. For colinear points, if nothing no plane provided, a plane aligned with the global Z-axis will be created. ","This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":0,"isInterface":0},{"inputName":"boundarySize","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["To handle problems at boundaries, extra points are added outside the bounds of the provided points for the generation of the voronoi and then culled away. This value controls how far off these points should be created. If a zero or negative value is provided, this value will be calculated automatically, based on the size of the boundingbox of the provided points. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Tolerance to be used in the method. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Polyline","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Voronoi regions calculated by the method. The position in the list will correspond to the position in the list of the provided points. ","This is a List<Polyline>"]}},{"namespace":"BH.Engine.Geometry.Triangulation","className":"Compute","memberName":"VoronoiRegions","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Creates a voronoi diagram from a list of coplanar, non-duplicate points and cuts the cells with the provided boundary curves. The returned polylines cells will correspond to the input points by index. ",""],"inputs":[{"inputName":"points","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Point","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The coplanar points to use to generate the voronoi diagram. The algorithm can currently not handle colinear points. ","This is a List<Point>"],"isRequired":1,"isInterface":0},{"inputName":"boundaryCurve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["Outer boundary for any of the voronoi cells. Must be coplanar with the provided points. ","This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"openingCurves","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"ICurve","isInterface":"1","isGeneric":"0"}],"descriptionParts":["Inner openings to be cut out from the voronoi cells. Must be coplanar with the provided points. ","This is a List<ICurve> ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":0,"isInterface":0},{"inputName":"plane","namespace":"BH.oM.Geometry","memberName":"Plane","isGeneric":"0","descriptionParts":["Optional plane for the voronoi. If provided, all points must be complanar with the plane. If nothing provided, a best fit plane will be calculated. For colinear points, if nothing no plane provided, a plane aligned with the global Z-axis will be created. ","This is a BH.oM.Geometry.Plane: ","Defines a flat infinite two-dimensional surface"],"isRequired":0,"isInterface":0},{"inputName":"boundarySize","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["To handle problems at boundaries, extra points are added outside the bounds of the provided points for the generation of the voronoi and then culled away. This value controls how far off these points should be created. If a negative value is provided, this value will be calculated automatically, based on the size of the boundingbox of the provided points. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0},{"inputName":"tolerance","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["Tolerance to be used in the method. ","This is a Length [m] (as a Double)"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"PolyCurve","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["Voronoi regions calculated by the method. The position in the list will correspond to the position in the list of the provided points. ","This is a List<List<PolyCurve>>"]}},{"namespace":"BH.Engine.Representation","className":"Query","memberName":"TryGetRendermesh","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Retrieves a representation from the specified IBHoMObject's Fragments, if present. Returns it as a RenderMesh."," ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"renderMesh","namespace":"BH.oM.Graphics","memberName":"RenderMesh&","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMesh&"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["This is a Boolean"]}},{"namespace":"BH.Engine.Representation","className":"Modify","memberName":"ISetRendermesh","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Sets a RenderMesh in the Fragments of the BHoMObject.","If specified, the `meshRepresentation` should contain a valid mesh representation for the BHoMObject.If meshRepresentation is null, attempts to compute a Rendermesh for the object.  ",""],"inputs":[{"inputName":"bHoMObject","namespace":"BH.oM.Base","memberName":"IBHoMObject","isGeneric":"0","descriptionParts":["BHoMObject to set the representation for. ","This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":1},{"inputName":"meshRepresentation","namespace":"System","memberName":"Object","isGeneric":"0","descriptionParts":["A valid mesh representation for the BHoMObject. ","This is a Object"],"isRequired":0,"isInterface":0},{"inputName":"renderMeshOptions","namespace":"BH.oM.Graphics","memberName":"RenderMeshOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMeshOptions: ","Defines options for the Meshing of BHoM Objects."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IBHoMObject","namespace":"BH.oM.Base","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IBHoMObject ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"GeometricalRepresentation","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Returns the geometrical representation of the point, which is a Sphere. ",""],"inputs":[{"inputName":"point","namespace":"BH.oM.Geometry","memberName":"Point","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Point: ","Defines a dimensionless location in three-dimensional space."],"isRequired":1,"isInterface":0},{"inputName":"reprOptions","namespace":"BH.oM.Graphics","memberName":"RepresentationOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RepresentationOptions: ","Defines options for the Representation of BHoM Objects."],"isRequired":0,"isInterface":0},{"inputName":"isSubObject","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"GeometricalRepresentation","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Returns the geometrical representation of the Node. It can be as simple as a Sphere, or a more complicated Composite Geometry computed from its DOFs. ",""],"inputs":[{"inputName":"node","namespace":"BH.oM.Structure.Elements","memberName":"Node","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Node: ","0D finite element for structural analysis. Node class contains positional information as well as orientation and support."],"isRequired":1,"isInterface":0},{"inputName":"reprOptions","namespace":"BH.oM.Graphics","memberName":"RepresentationOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RepresentationOptions: ","Defines options for the Representation of BHoM Objects."],"isRequired":0,"isInterface":0},{"inputName":"isSubObject","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"GeometricalRepresentation","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Returns the geometrical representation of the Environment Panel. It can be as simple as its middle Surface, Composite Geometry representing its thickness. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"reprOptions","namespace":"BH.oM.Graphics","memberName":"RepresentationOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RepresentationOptions: ","Defines options for the Representation of BHoM Objects."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"GeometricalRepresentation","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Returns the geometrical representation of the Structure Panel. It can be as simple as its middle Surface, Composite Geometry representing its thickness. ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Structure.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Panel: ","2D element for structural analysis. ","The Panel is a planar surface object defined by a list of planar 'Edges' (curves with properties) for both external and internal edges (openings)."],"isRequired":1,"isInterface":0},{"inputName":"reprOptions","namespace":"BH.oM.Graphics","memberName":"RepresentationOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RepresentationOptions: ","Defines options for the Representation of BHoM Objects."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"GeometricalRepresentation","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Returns the geometrical representation of the curve, which is a Pipe. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"reprOptions","namespace":"BH.oM.Graphics","memberName":"RepresentationOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RepresentationOptions: ","Defines options for the Representation of BHoM Objects."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"GeometricalRepresentation","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Returns the geometrical representation of the Bar. It can be as simple as its Centreline, or an Extrusion obtained from its Cross Section. ",""],"inputs":[{"inputName":"bar","namespace":"BH.oM.Structure.Elements","memberName":"Bar","isGeneric":"0","descriptionParts":["This is a BH.oM.Structure.Elements.Bar: ","1D finite element for structural analysis. Linear 2-noded element defined by a start and end node.For structural conventions and orientation of the bar please see https://github.com/BHoM/documentation/wiki/BHoM-Structural-Conventions."],"isRequired":1,"isInterface":0},{"inputName":"reprOptions","namespace":"BH.oM.Graphics","memberName":"RepresentationOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RepresentationOptions: ","Defines options for the Representation of BHoM Objects."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"RenderMesh","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Attempts to rationalise the curve into a Polyline; if successful, it pipes the polyline and returns the meshed pipe. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"renderMeshOptions","namespace":"BH.oM.Graphics","memberName":"RenderMeshOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMeshOptions: ","Defines options for the Meshing of BHoM Objects."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RenderMesh","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMesh"]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"RenderMesh","assemblyName":"TriangleNet_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"planarSurface","namespace":"BH.oM.Geometry","memberName":"PlanarSurface","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PlanarSurface: ","A surface defined by boundary edge curves lying in a common plane. Planarity toleraces default to the BH.oM.Geometry.Tolerace.Distance."],"isRequired":1,"isInterface":0},{"inputName":"renderMeshOptions","namespace":"BH.oM.Graphics","memberName":"RenderMeshOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMeshOptions: ","Defines options for the Meshing of BHoM Objects."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RenderMesh","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMesh"]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"RenderMesh","assemblyName":"TriangleNet_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"pipe","namespace":"BH.oM.Geometry","memberName":"Pipe","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Pipe: ","A constant circular cross section surface, following a defined curve path."],"isRequired":1,"isInterface":0},{"inputName":"renderMeshOptions","namespace":"BH.oM.Graphics","memberName":"RenderMeshOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMeshOptions: ","Defines options for the Meshing of BHoM Objects."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RenderMesh","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMesh"]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"RenderMesh","assemblyName":"TriangleNet_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"bbox","namespace":"BH.oM.Geometry","memberName":"BoundingBox","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.BoundingBox: ","An axis aligned cuboid, which describes the smallest volume Box, oriented with the global coordinate system, that fully encompases a set of geometry.","Defined by its two extreme corner Points, these six coordinate values of Min and Max X, Y and Z are combined to specify all eight Box corners."],"isRequired":1,"isInterface":0},{"inputName":"renderMeshOptions","namespace":"BH.oM.Graphics","memberName":"RenderMeshOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMeshOptions: ","Defines options for the Meshing of BHoM Objects."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RenderMesh","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMesh"]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"RenderMesh","assemblyName":"TriangleNet_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"cone","namespace":"BH.oM.Geometry","memberName":"Cone","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Cone: ","A solid circular right angled cone"],"isRequired":1,"isInterface":0},{"inputName":"renderMeshOptions","namespace":"BH.oM.Graphics","memberName":"RenderMeshOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMeshOptions: ","Defines options for the Meshing of BHoM Objects."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RenderMesh","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMesh"]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"RenderMesh","assemblyName":"TriangleNet_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"cuboid","namespace":"BH.oM.Geometry","memberName":"Cuboid","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Cuboid: ","A polyhedron. Standard cuboid consisting of six right-angled quadrilateral faces."],"isRequired":1,"isInterface":0},{"inputName":"renderMeshOptions","namespace":"BH.oM.Graphics","memberName":"RenderMeshOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMeshOptions: ","Defines options for the Meshing of BHoM Objects."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RenderMesh","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMesh"]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"RenderMesh","assemblyName":"TriangleNet_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"extrusion","namespace":"BH.oM.Geometry","memberName":"Extrusion","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Extrusion: ","A constant cross section surface, defined by a single profile curve and a linear axis."],"isRequired":1,"isInterface":0},{"inputName":"renderMeshOptions","namespace":"BH.oM.Graphics","memberName":"RenderMeshOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMeshOptions: ","Defines options for the Meshing of BHoM Objects."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RenderMesh","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMesh"]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"RenderMesh","assemblyName":"TriangleNet_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"sphere","namespace":"BH.oM.Geometry","memberName":"Sphere","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Sphere: ","Standard sphere defining the closed bounding surface of constant distance from a point, its Centre"],"isRequired":1,"isInterface":0},{"inputName":"renderMeshOptions","namespace":"BH.oM.Graphics","memberName":"RenderMeshOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMeshOptions: ","Defines options for the Meshing of BHoM Objects."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RenderMesh","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMesh"]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"JoinRenderMeshes","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Joins multiple RenderMeshes into a single one. Currently this does not optimise for duplicate vertices. ",""],"inputs":[{"inputName":"renderMeshes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Graphics","memberName":"RenderMesh","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<RenderMesh>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"RenderMesh","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMesh"]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"JoinRenderMeshes","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Joins multiple RenderMeshes into a single one. Currently this does not optimise for duplicate vertices. ",""],"inputs":[{"inputName":"a","namespace":"BH.oM.Graphics","memberName":"RenderMesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMesh"],"isRequired":1,"isInterface":0},{"inputName":"b","namespace":"BH.oM.Graphics","memberName":"RenderMesh","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMesh"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"RenderMesh","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMesh"]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"IRationalise","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Rationalises the Curve into a Polyline. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"ICurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.ICurve: ","The interface for all one-dimensional geometrical objects. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline"],"isRequired":1,"isInterface":1},{"inputName":"renderMeshOptions","namespace":"BH.oM.Graphics","memberName":"RenderMeshOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMeshOptions: ","Defines options for the Meshing of BHoM Objects."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"Rationalise","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Rationalises the Polycurve into a Polyline. Currently limited functionality. ",""],"inputs":[{"inputName":"curve","namespace":"BH.oM.Geometry","memberName":"PolyCurve","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.PolyCurve: ","A composite curve constructed by combining a collection of curves of any type. Whole PolyCurve integrity, continuity and closure is not guaranteed at creation. Discontinuous and/or multi-region definitions are possible, although not recommended as may cause unexpected results in method operating on PolyCurves."],"isRequired":1,"isInterface":0},{"inputName":"renderMeshOptions","namespace":"BH.oM.Graphics","memberName":"RenderMeshOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMeshOptions: ","Defines options for the Meshing of BHoM Objects."],"isRequired":0,"isInterface":0},{"inputName":"minSubdivisions","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"Rationalise","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Rationalises the Arc into a Polyline. ",""],"inputs":[{"inputName":"arc","namespace":"BH.oM.Geometry","memberName":"Arc","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Arc: ","A plane curve. A circular Arc, a curve, with a constant distance from a point, its centre, defined it the local angular domain between start and end angle."],"isRequired":1,"isInterface":0},{"inputName":"renderMeshOptions","namespace":"BH.oM.Graphics","memberName":"RenderMeshOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMeshOptions: ","Defines options for the Meshing of BHoM Objects."],"isRequired":0,"isInterface":0},{"inputName":"minSubdivisions","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"Rationalise","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Rationalises the Circle into a Polyline. ",""],"inputs":[{"inputName":"circle","namespace":"BH.oM.Geometry","memberName":"Circle","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Circle: ","A plane curve. Standard circle defining a curve of constant distance from a point, its Centre."],"isRequired":1,"isInterface":0},{"inputName":"renderMeshOptions","namespace":"BH.oM.Graphics","memberName":"RenderMeshOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMeshOptions: ","Defines options for the Meshing of BHoM Objects."],"isRequired":0,"isInterface":0},{"inputName":"minSubdivisions","namespace":"System","memberName":"Int32","isGeneric":"0","descriptionParts":["This is a Int32"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"Polyline","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Polyline: ","A curve consisting of a continuous chain of straight line segments. The Polyline is considered closed if the first and last ControlPoints are coincident"]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"JoinMeshes","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Joins multiple Meshes into a single one. Currently this does not optimise for duplicate vertices. ",""],"inputs":[{"inputName":"meshes","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry","memberName":"Mesh","isInterface":"0","isGeneric":"0"}],"descriptionParts":["This is a List<Mesh>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Mesh","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.Mesh: ","A polygon mesh, defined by a list of triangular or quadrilateral Faces and their Vertices."]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"IRenderMesh","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Computes the Geometrical Representation of the input object and then attempts to mesh it. ",""],"inputs":[{"inputName":"obj","namespace":"BH.oM.Base","memberName":"IObject","isGeneric":"0","descriptionParts":["Any object defined within BHoM. ","This is a BH.oM.Base.IObject ","This can be of the following types: FileSettings, AdapterSettings, ObjectWrapper, ActionConfig, AnalyseLoadCases, CustomCommand, Analyse, NewModel, Close, Open, ClearResults, SaveAs, Save, BatchRequest, CustomRequest, and more..."],"isRequired":1,"isInterface":1},{"inputName":"renderMeshOptions","namespace":"BH.oM.Graphics","memberName":"RenderMeshOptions","isGeneric":"0","descriptionParts":["Options that regulate both the calculation of the Geometrical Representation and how it should be meshed. ","This is a BH.oM.Graphics.RenderMeshOptions: ","Defines options for the Meshing of BHoM Objects."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RenderMesh","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["A RenderMesh, which is a geometrical mesh that can potentially have additional attributes like Colours. ","This is a BH.oM.Graphics.RenderMesh"]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"RenderMesh","assemblyName":"TriangleNet_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"compositeGeometry","namespace":"BH.oM.Geometry","memberName":"CompositeGeometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.CompositeGeometry: ","A collection of multiple sets of Geometry of any or mixed type. Integrity, continuity and closure is not guaranteed. Discontinuous and/or mixed type definitions are possible, with no restrictions placed on how geometry can be combined."],"isRequired":1,"isInterface":0},{"inputName":"renderMeshOptions","namespace":"BH.oM.Graphics","memberName":"RenderMeshOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMeshOptions: ","Defines options for the Meshing of BHoM Objects."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"RenderMesh","namespace":"BH.oM.Graphics","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RenderMesh"]}},{"namespace":"BH.Engine.Representation","className":"Compute","memberName":"IGeometricalRepresentation","assemblyName":"TriangleNet_Engine.dll","descriptionParts":["Computes the Geometrical Representation of the given IObject.The Geometrical Representation is an IGeometry that can be used to represent the object in another environment. ",""],"inputs":[{"inputName":"obj","namespace":"BH.oM.Base","memberName":"IObject","isGeneric":"0","descriptionParts":["This is a BH.oM.Base.IObject ","This can be of the following types: FileSettings, AdapterSettings, ObjectWrapper, ActionConfig, AnalyseLoadCases, CustomCommand, Analyse, NewModel, Close, Open, ClearResults, SaveAs, Save, BatchRequest, CustomRequest, and more..."],"isRequired":1,"isInterface":1},{"inputName":"reprOptions","namespace":"BH.oM.Graphics","memberName":"RepresentationOptions","isGeneric":"0","descriptionParts":["This is a BH.oM.Graphics.RepresentationOptions: ","Defines options for the Representation of BHoM Objects."],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"IGeometry","namespace":"BH.oM.Geometry","isGeneric":"0","descriptionParts":["This is a BH.oM.Geometry.IGeometry: ","The parent interface for all primative geometrical objects.","IGeometry implements IObject - and not IBHoMObject. Equally primative geometrical objects do not inherit from the base BHoMObject class either. As primatives, the additional base BHoM properties are omitted for both efficency and performace. ","This can be of the following types: Arc, Circle, Ellipse, Line, NurbsCurve, PolyCurve, Polyline, Face, CellRelation, Mesh3D, Mesh, BoundingBox, CompositeGeometry, Quaternion, SurfaceTrim, and more..."]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilometre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres) into kilometres ",""],"inputs":[{"inputName":"metres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres to convert ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilometres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilometre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilometres into SI units (metres) ",""],"inputs":[{"inputName":"kilometres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilometres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres ","This is a Length [m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToMicrometre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres) into micrometres ",""],"inputs":[{"inputName":"metres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres to convert ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of micrometres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromMicrometre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert micrometres into SI units (metres) ",""],"inputs":[{"inputName":"micrometres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of micrometres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres ","This is a Length [m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToMile","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres) into miles ",""],"inputs":[{"inputName":"metres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres to convert ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of miles ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromMile","assemblyName":"Units_Engine.dll","descriptionParts":["Convert miles into SI units (metres) ",""],"inputs":[{"inputName":"miles","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of miles to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres ","This is a Length [m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres) into millimetres ",""],"inputs":[{"inputName":"metres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres to convert ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of millimetres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert millimetres into SI units (metres) ",""],"inputs":[{"inputName":"millimetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of millimetres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres ","This is a Length [m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToNanometre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres) into nanometres ",""],"inputs":[{"inputName":"metres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres to convert ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of nanometres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromNanometre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert nanometres into SI units (metres) ",""],"inputs":[{"inputName":"nanometres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of nanometres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres ","This is a Length [m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToNauticalMile","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres) into nautical miles ",""],"inputs":[{"inputName":"metres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres to convert ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of nautical miles ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromNauticalMile","assemblyName":"Units_Engine.dll","descriptionParts":["Convert nautical miles into SI units (metres) ",""],"inputs":[{"inputName":"nauticalMiles","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of nautical miles to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres ","This is a Length [m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToYard","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres) into yards ",""],"inputs":[{"inputName":"metres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres to convert ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of yards ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromYard","assemblyName":"Units_Engine.dll","descriptionParts":["Convert yards into SI units (metres) ",""],"inputs":[{"inputName":"yards","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of yards to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres ","This is a Length [m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilopoundForceFootPerFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres per metre) into kilopound-force feet per foot ",""],"inputs":[{"inputName":"newtonMetresPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres per metre to convert ","This is a MomentPerUnitLength [N.m/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilopound-force feet per foot ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilopoundForceFootPerFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilopound-force feet per foot into SI units (Newton-metres per metre) ",""],"inputs":[{"inputName":"kilopoundForceFeetPerFoot","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilopound-force feet per foot to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToTonneForceMetrePerMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres per metre) into tonne-force metres per metre ",""],"inputs":[{"inputName":"newtonMetresPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres per metre to convert ","This is a MomentPerUnitLength [N.m/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of tonne-force metres per metre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromTonneForceMetrePerMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert tonne-force metres per metre into SI units (Newton-metres per metre) ",""],"inputs":[{"inputName":"tonneForceMetresPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of tonne-force metres per metre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilonewtonMetrePerMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres per metre) into kilonewton-metres per metre ",""],"inputs":[{"inputName":"newtonMetresPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres per metre to convert ","This is a MomentPerUnitLength [N.m/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilonewton-metres per metre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilonewtonMetrePerMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert Newton-metres per metre into SI units (Newton-metres per metre) ",""],"inputs":[{"inputName":"kilonewtonMetresPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilonewton-metres per metre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilogramForceMetrePerMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres per metre) into kilogram-force metres per metre ",""],"inputs":[{"inputName":"newtonMetresPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres per metre to convert ","This is a MomentPerUnitLength [N.m/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilogram-force metres per metre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilogramForceMetrePerMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilogram-force metres per metre into SI units (Newton-metres per metre) ",""],"inputs":[{"inputName":"kilogramForceMetresPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilogram-force metres per metre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToPoundForceFootPerFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres per metre) into pound-force feet per foot ",""],"inputs":[{"inputName":"newtonMetresPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres per metre to convert ","This is a MomentPerUnitLength [N.m/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of pound-force feet per foot ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromPoundForceFootPerFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert pound-force feet per foot into SI units (Newton-metres per metre) ",""],"inputs":[{"inputName":"poundForceFeetPerFoot","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of pound-force feet per foot to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToNewtonCentimetrePerMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres per metre) into Newton-centimetres per metre ",""],"inputs":[{"inputName":"newtonMetresPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres per metre to convert ","This is a MomentPerUnitLength [N.m/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-centimetres per metre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromNewtonCentimetrePerMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert Newton-centimetres per metre into SI units (Newton-metres per metre) ",""],"inputs":[{"inputName":"newtonCentimetresPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-centimetres per metre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToNewtonMillimetrePerMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres per metre) into Newton-millimetres per metre ",""],"inputs":[{"inputName":"newtonMetresPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres per metre to convert ","This is a MomentPerUnitLength [N.m/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-millimetres per metre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromNewtonMillimetrePerMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert Newton-millimetres per metre into SI units (Newton-metres per metre) ",""],"inputs":[{"inputName":"newtonMillimetresPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-millimetres per metre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilonewtonPerSquareMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into kilonewtons per square metre ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilonewtons per square metre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilonewtonPerSquareMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilonewtons per square metre into SI units (Pascals) ",""],"inputs":[{"inputName":"kilonewtonsPerSquareMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilonewtons per square metre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilonewtonPerSquareCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into kilonewtons per square centimetre ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilonewtons per square centimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilonewtonPerSquareCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilonewtons per square centimetre into SI units (Pascals) ",""],"inputs":[{"inputName":"kilonewtonsPerSquareCentimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilonewtons per square centimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilonewtonPerSquareMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into kilonewtons per square millimetre ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilonewtons per square millimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilonewtonPerSquareMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilonewtons per square millimetre into SI units (Pascals) ",""],"inputs":[{"inputName":"kilonewtonsPerSquareMillimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilonewtons per square millimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilopoundForcePerSquareFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into kilopounds-force per square foot ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilopounds-force per square foot ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilopoundForcePerSquareFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilopounds-force per square foot into SI units (Pascals) ",""],"inputs":[{"inputName":"kilopoundsForcePerSquareFoot","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilopounds-force per square foot to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilopoundForcePerSquareInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into kilopounds-force per square inch ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilopounds-force per square inch ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilopoundForcePerSquareInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilopounds-force per square inch into SI units (Pascals) ",""],"inputs":[{"inputName":"kilopoundsForcePerSquareInch","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilopounds-force per square inch to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToTechnicalAtmosphere","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into technical atmospheres ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of technical atmospheres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromTechnicalAtmosphere","assemblyName":"Units_Engine.dll","descriptionParts":["Convert technical atmospheres into SI units (Pascals) ",""],"inputs":[{"inputName":"technicalAtmospheres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of technical atmospheres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToBar","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into bars ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of bars ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromBar","assemblyName":"Units_Engine.dll","descriptionParts":["Convert bars into SI units (Pascals) ",""],"inputs":[{"inputName":"bars","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of bars to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToAtmosphere","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into atmospheres ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of atmospheres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromAtmosphere","assemblyName":"Units_Engine.dll","descriptionParts":["Convert atmospheres into SI units (Pascals) ",""],"inputs":[{"inputName":"atmospheres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of atmospheres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToPoundForcePerSquareFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into pounds-force per square foot ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of pounds-force per square foot ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromPoundForcePerSquareFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert pounds-force per square foot into SI units (Pascals) ",""],"inputs":[{"inputName":"poundsForcePerSquareFoot","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of pounds-force per square foot to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToPoundForcePerSquareInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into pounds-force per square inch ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of pounds-force per square inch ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromPoundForcePerSquareInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert pounds-force per square inch into SI units (Pascals) ",""],"inputs":[{"inputName":"poundsForcePerSquareInch","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of pounds-force per square inch to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToTonneForcePerSquareCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into tonnes-force per square centimetre ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of tonnes-force per square centimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromTonneForcePerSquareCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert tonnes-force per square centimetre into SI units (Pascals) ",""],"inputs":[{"inputName":"tonnesForcePerSquareCentimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of tonnes-force per square centimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToTonneForcePerSquareMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into tonnes-force per square millimetre ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of tonnes-force per square millimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromTonneForcePerSquareMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert tonnes-force per square millimetre into SI units (Pascals) ",""],"inputs":[{"inputName":"tonnesForcePerSquareMillimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of tonnes-force per square millimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToTonneForcePerSquareMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into tonnes-force per square metre ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of tonnes-force per square metre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromTonneForcePerSquareMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert tonnes-force per square metre into SI units (Pascals) ",""],"inputs":[{"inputName":"tonnesForcePerSquareMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of tonnes-force per square metre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToNewtonPerSquareMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into Newtons per square millimetre ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per square millimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromNewtonPerSquareMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert Newtons per square millimetre into SI units (Pascals) ",""],"inputs":[{"inputName":"newtonsPerSquareMillimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of newtons per square millimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToNewtonPerSquareCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into Newtons per square centimetre ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per square centimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromNewtonPerSquareCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert Newtons per square centimetre into SI units (Pascals) ",""],"inputs":[{"inputName":"newtonsPerSquareCentimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of newtons per square centimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilogramForcePerSquareMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into kilograms-force per square millimetre ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms-force per square millimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilogramForcePerSquareMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilograms-force per square millimetre into SI units (Pascals) ",""],"inputs":[{"inputName":"kilogramsForcePerSquareMillimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms-force per square millimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilogramForcePerSquareCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into kilograms-force per square centimetre ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms-force per square centimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilogramForcePerSquareCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilograms-force per square centimetre into SI units (Pascals) ",""],"inputs":[{"inputName":"kilogramsForcePerSquareCentimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms-force per square centimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilogramForcePerSquareMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Pascals) into kilograms-force per square metre ",""],"inputs":[{"inputName":"pascals","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Pascals to convert ","This is a Pressure [Pa] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms-force per square metre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilogramForcePerSquareMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilograms-force per square metre into SI units (Pascals) ",""],"inputs":[{"inputName":"kilogramsForcePerSquareMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms-force per square metre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Pascals ","This is a Pressure [Pa] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToInverseDeltaDegreeFahrenheit","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (inverse delta Kelvins) into inverse delta degress Fahrenheit ",""],"inputs":[{"inputName":"inverseDeltaKelvins","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of inverse delta Kelvins to convert ","This is a ThermalExpansionCoefficient [1/K] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of inverse delta degrees Fahrenheit ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromInverseDeltaDegreeFahrenheit","assemblyName":"Units_Engine.dll","descriptionParts":["Convert inverse delta degrees Fahrenheit into SI units (inverse delta Kelvins) ",""],"inputs":[{"inputName":"inverseDeltaDegreesFahrenheit","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of inverse delta degrees Fahrenheit to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of inverse delta Kelvins ","This is a ThermalExpansionCoefficient [1/K] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToDeltaDegreeCelsius","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Kelvins) into degrees Celsius ",""],"inputs":[{"inputName":"kelvins","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The change in Kelvins to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The change in degrees Celsius ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromDeltaDegreeCelsius","assemblyName":"Units_Engine.dll","descriptionParts":["Convert degrees Celsius into SI units (Kelvins) ",""],"inputs":[{"inputName":"degreesCelsius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The change in degrees Celsius to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The change in Kelvins ","This is a Temperature [K] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToDegreeFahrenheit","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Kelvins) into degrees Fahrenheit ",""],"inputs":[{"inputName":"kelvins","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Kelvins to convert ","This is a Temperature [K] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of degrees Fahrenheit ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromDegreeFahrenheit","assemblyName":"Units_Engine.dll","descriptionParts":["Convert degrees Fahrenheit into SI units (Kelvins) ",""],"inputs":[{"inputName":"degreesFahrenheit","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of degrees Fahrenheit to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Kelvins ","This is a Temperature [K] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToDegreeCelsius","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Kelvins) into degrees Celsius ",""],"inputs":[{"inputName":"kelvins","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Kelvins to convert ","This is a Temperature [K] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of degrees Celsius ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromDegreeCelsius","assemblyName":"Units_Engine.dll","descriptionParts":["Convert degrees Celsius into SI units (Kelvins) ",""],"inputs":[{"inputName":"degreesCelsius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of degrees Celsius to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Kelvins ","This is a Temperature [K] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilonewtonMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres) into kilonewton-metres ",""],"inputs":[{"inputName":"newtonMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres to convert ","This is a Moment [N.m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilonewton-metres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilonewtonMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilonewton-metres into SI units (Newton-metres) ",""],"inputs":[{"inputName":"kilonewtonMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilonewton-metres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres ","This is a Moment [N.m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilonewtonMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres) into kilonewton-millimetres ",""],"inputs":[{"inputName":"newtonMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres to convert ","This is a Moment [N.m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilonewton-millimetres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilonewtonMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilonewton-millimetres into SI units (Newton-metres) ",""],"inputs":[{"inputName":"kilonewtonMillimetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilonewton-millimetres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres ","This is a Moment [N.m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilonewtonCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres) into kilonewton-centimetres ",""],"inputs":[{"inputName":"newtonMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres to convert ","This is a Moment [N.m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilonewton-centimetres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilonewtonCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilonewton-centimetres into SI units (Newton-metres) ",""],"inputs":[{"inputName":"kilonewtonCentimetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilonewton-centimetres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres ","This is a Moment [N.m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilopoundForceFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres) into kilopound-force feet ",""],"inputs":[{"inputName":"newtonMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres to convert ","This is a Moment [N.m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilopound-force feet ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilopoundForceFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilopound-force feet into SI units (Newton-metres) ",""],"inputs":[{"inputName":"kilopoundForceFeet","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilopound-force feet to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres ","This is a Moment [N.m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilopoundForceInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres) into kilopound-force inches ",""],"inputs":[{"inputName":"newtonMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres to convert ","This is a Moment [N.m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilopound-force inches ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilopoundForceInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilopound-force inches into SI units (Newton-metres) ",""],"inputs":[{"inputName":"kilopoundForceInches","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilopound-force inches to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres ","This is a Moment [N.m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToTonneForceMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres) into tonne-force metres ",""],"inputs":[{"inputName":"newtonMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres to convert ","This is a Moment [N.m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of tonne-force metres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromTonneForceMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert Tonne-force metre into SI units (Newton-metres) ",""],"inputs":[{"inputName":"tonneForceMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of tonne-force metres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres ","This is a Moment [N.m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToTonneForceMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres) into tonne-force millimetres ",""],"inputs":[{"inputName":"newtonMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres to convert ","This is a Moment [N.m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of tonne-force millimetres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromTonneForceMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert tonne-force millimetres into SI units (Newton-metres) ",""],"inputs":[{"inputName":"tonneForceMillimetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of tonne-force millimetres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres ","This is a Moment [N.m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToTonneForceCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres) into tonne-force centimetres ",""],"inputs":[{"inputName":"newtonMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres to convert ","This is a Moment [N.m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of tonne-force centimetres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromTonneForceCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert tonne-force centimetres into SI units (Newton-metres) ",""],"inputs":[{"inputName":"tonneForceCentimetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of tonne-force centimetres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres ","This is a Moment [N.m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilogramForceMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres) into kilogram-force metres ",""],"inputs":[{"inputName":"newtonMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres to convert ","This is a Moment [N.m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilogram-force metres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilogramForceMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilogram-force metre into SI units (Newton-metres) ",""],"inputs":[{"inputName":"kilogramForceMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilogram-force metres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres ","This is a Moment [N.m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilogramForceCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres) into kilogram-force centimetres ",""],"inputs":[{"inputName":"newtonMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres to convert ","This is a Moment [N.m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilogram-force centimetres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilogramForceCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilogram-force centimetres into SI units (Newton-metres) ",""],"inputs":[{"inputName":"kilogramForceCentimetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilogram-force centimetres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres ","This is a Moment [N.m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilogramForceMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres) into kilogram-force millimetres ",""],"inputs":[{"inputName":"newtonMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres to convert ","This is a Moment [N.m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilogram-force millimetres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilogramForceMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilogram-force millimetres into SI units (Newton-metres) ",""],"inputs":[{"inputName":"kilogramForceMillimetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilogram-force millimetres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres ","This is a Moment [N.m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToPoundForceFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres) into pound-force feet ",""],"inputs":[{"inputName":"newtonMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres to convert ","This is a Moment [N.m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of pound-force feet ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromPoundForceFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert pound-force feet into SI units (Newton-metres) ",""],"inputs":[{"inputName":"poundForceFeet","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of pound-force feet to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres ","This is a Moment [N.m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToPoundForceInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres) into pound-force inches ",""],"inputs":[{"inputName":"newtonMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres to convert ","This is a Moment [N.m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of pound-force inches ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromPoundForceInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert pound-force inches into SI units (Newton-metres) ",""],"inputs":[{"inputName":"poundForceInches","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of pound-force inches to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres ","This is a Moment [N.m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToNewtonCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres) into Newton-centimetres ",""],"inputs":[{"inputName":"newtonMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres to convert ","This is a Moment [N.m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-centimetres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromNewtonCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert Newton-centimetres into SI units (Newton-metres) ",""],"inputs":[{"inputName":"newtonCentimetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-centimetres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres ","This is a Moment [N.m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToNewtonMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newton-metres) into Newton-millimetres ",""],"inputs":[{"inputName":"newtonMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-metres to convert ","This is a Moment [N.m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-millimetres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromNewtonMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert Newton-millimetres into SI units (Newton-metres) ",""],"inputs":[{"inputName":"newtonMillimetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newton-millimetres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newton-metres ","This is a Moment [N.m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToCubicFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (cubic metres) into cubic feet ",""],"inputs":[{"inputName":"cubicMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of cubic metres to convert ","This is a Volume [m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of cubic feet ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromCubicFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert cubic feet into SI units (cubic metres) ",""],"inputs":[{"inputName":"cubicFeet","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of cubic feet to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of cubic metres ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToCubicInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (cubic metres) into cubic inches ",""],"inputs":[{"inputName":"cubicMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of cubic metres to convert ","This is a Volume [m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of cubic inches ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromCubicInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert cubic inches into SI units (cubic metres) ",""],"inputs":[{"inputName":"cubicInches","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of cubic inches to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of cubic metres ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToCubicYard","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (cubic metres) into cubic yards ",""],"inputs":[{"inputName":"cubicMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of cubic metres to convert ","This is a Volume [m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of cubic yards ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromCubicYard","assemblyName":"Units_Engine.dll","descriptionParts":["Convert cubic yards into SI units (cubic metres) ",""],"inputs":[{"inputName":"cubicYards","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of cubic yards to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of cubic metres ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToUSGallon","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (cubic metres) into US gallons ",""],"inputs":[{"inputName":"cubicMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of cubic metres to convert ","This is a Volume [m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of US gallons ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromUSGallon","assemblyName":"Units_Engine.dll","descriptionParts":["Convert US gallons into SI units (cubic metres) ",""],"inputs":[{"inputName":"usGallons","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of US gallons to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of cubic metres ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToImperialGallon","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (cubic metres) into imperial gallons ",""],"inputs":[{"inputName":"cubicMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of cubic metres to convert ","This is a Volume [m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of imperial gallons ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromImperialGallon","assemblyName":"Units_Engine.dll","descriptionParts":["Convert imperial gallons into SI units (cubic metres) ",""],"inputs":[{"inputName":"imperialGallons","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of imperial gallons to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of cubic metres ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToLitre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (cubic metres) into litres ",""],"inputs":[{"inputName":"cubicMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of cubic metres to convert ","This is a Volume [m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of litres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromLitre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert litres into SI units (cubic metres) ",""],"inputs":[{"inputName":"litres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of litres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of cubic metres ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToCubicMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (cubic metres) into cubic millimetres ",""],"inputs":[{"inputName":"cubicMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of cubic metres to convert ","This is a Volume [m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of cubic millimetres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromCubicMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert cubic millimetres into SI units (cubic metres) ",""],"inputs":[{"inputName":"cubicMillimetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of cubic millimetres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of cubic metres ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToCubicKilometre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (cubic metres) into cubic kilometres ",""],"inputs":[{"inputName":"cubicMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of cubic metres to convert ","This is a Volume [m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of cubic kilometres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromCubicKilometre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert cubic kilometres into SI units (cubic metres) ",""],"inputs":[{"inputName":"cubicKilometres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of cubic kilometres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of cubic metres ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToCubicCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (cubic metres) into cubic centimetres ",""],"inputs":[{"inputName":"cubicMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of cubic metres to convert ","This is a Volume [m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of cubic centimetres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromCubicCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert cubic centimetres into SI units (cubic metres) ",""],"inputs":[{"inputName":"cubicCentimetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of cubic centimetres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of cubic metres ","This is a Volume [m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToStandardGravity","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres per second squared) into standard gravities ",""],"inputs":[{"inputName":"metresPerSecondSquared","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres per second squared to convert ","This is a Acceleration [m/s²] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of standard gravities ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromStandardGravity","assemblyName":"Units_Engine.dll","descriptionParts":["Convert standard gravities into SI units (metres per second squared) ",""],"inputs":[{"inputName":"standardGravities","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of standard gravities to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres per second squared ","This is a Acceleration [m/s²] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToFootPerSecondSquared","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres per second squared) into feet per second squared ",""],"inputs":[{"inputName":"metresPerSecondSquared","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres per second squared to convert ","This is a Acceleration [m/s²] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of feet per second squared ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromFootPerSecondSquared","assemblyName":"Units_Engine.dll","descriptionParts":["Convert feet per second squared into SI units (metres per second squared) ",""],"inputs":[{"inputName":"feetPerSecondSquared","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of feet per second squared to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres per second squared ","This is a Acceleration [m/s²] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToInchPerSecondSquared","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres per second squared) into inches per second squared ",""],"inputs":[{"inputName":"metresPerSecondSquared","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres per second squared to convert ","This is a Acceleration [m/s²] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of inches per second squared ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromInchPerSecondSquared","assemblyName":"Units_Engine.dll","descriptionParts":["Convert inches per second squared into SI units (metres per second squared) ",""],"inputs":[{"inputName":"inchesPerSecondSquared","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of inches per second squared to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres per second squared ","This is a Acceleration [m/s²] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToArcminutes","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (radians) into arcminutes ",""],"inputs":[{"inputName":"radians","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of radians to convert ","This is a Angle [rad] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of arcminutes ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromArcminute","assemblyName":"Units_Engine.dll","descriptionParts":["Convert arcminutes into SI units (radians) ",""],"inputs":[{"inputName":"arcminutes","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of arcminutes to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of radians ","This is a Angle [rad] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToArcseconds","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (radians) into arcseconds ",""],"inputs":[{"inputName":"radians","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of radians to convert ","This is a Angle [rad] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of arcseconds ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromArcsecond","assemblyName":"Units_Engine.dll","descriptionParts":["Convert arcseconds into SI units (radians) ",""],"inputs":[{"inputName":"arcseconds","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of arcseconds to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of radians ","This is a Angle [rad] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToDegree","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (radians) into degrees ",""],"inputs":[{"inputName":"radians","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of radians to convert ","This is a Angle [rad] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of degrees ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromDegree","assemblyName":"Units_Engine.dll","descriptionParts":["Convert degrees into SI units (radians) ",""],"inputs":[{"inputName":"degrees","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of degrees to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of radians ","This is a Angle [rad] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToFootToTheFourth","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres to the fourth) into feet to the fourth ",""],"inputs":[{"inputName":"metresToTheFourth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres to the fourth to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of feet to the fourth ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromFootToTheFourth","assemblyName":"Units_Engine.dll","descriptionParts":["Convert feet to the fourth into SI units (metres to the fourth) ",""],"inputs":[{"inputName":"feetToTheFourth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of feet to the fourth to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres to the fourth ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToMillimetreToTheFourth","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres to the fourth) into millimetres to the fourth ",""],"inputs":[{"inputName":"metresToTheFourth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres to the fourth to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of millimetres to the fourth ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromMillimetreToTheFourth","assemblyName":"Units_Engine.dll","descriptionParts":["Convert millimetres to the fourth into SI units (metres to the fourth) ",""],"inputs":[{"inputName":"millimetresToTheFourth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of millimetres to the fourth to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres to the fourth ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToInchToTheFourth","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres to the fourth) into inches to the fourth ",""],"inputs":[{"inputName":"metresToTheFourth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres to the fourth to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of inches to the fourth ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromInchToTheFourth","assemblyName":"Units_Engine.dll","descriptionParts":["Convert inches to the fourth into SI units (metres to the fourth) ",""],"inputs":[{"inputName":"inchesToTheFourth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of inches to the fourth to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres to the fourth ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToCentimetreToTheFourth","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres to the fourth) into centimetres to the fourth ",""],"inputs":[{"inputName":"metresToTheFourth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres to the fourth to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of centimetres to the fourth ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromCentimetreToTheFourth","assemblyName":"Units_Engine.dll","descriptionParts":["Convert centimetres to the fourth into SI units (metres to the fourth) ",""],"inputs":[{"inputName":"centimetresToTheFourth","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of centimetres to the fourth to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres to the fourth ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToHectare","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (square metres) into hectares ",""],"inputs":[{"inputName":"squareMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square metres to convert ","This is a Area [m²] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of hectares ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromHectare","assemblyName":"Units_Engine.dll","descriptionParts":["Convert hectares into SI units (square metres) ",""],"inputs":[{"inputName":"hectares","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of hectares to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square metres ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToSquareFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (square metres) into square feet ",""],"inputs":[{"inputName":"squareMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square metres to convert ","This is a Area [m²] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square feet ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromSquareFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert square feet into SI units (square metres) ",""],"inputs":[{"inputName":"squareFeet","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square feet to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square metres ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToSquareInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (square metres) into square inches ",""],"inputs":[{"inputName":"squareMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square metres to convert ","This is a Area [m²] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square inches ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromSquareInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert square inches into SI units (square metres) ",""],"inputs":[{"inputName":"squareInches","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square inches to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square metres ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToAcre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (square metres) into acres ",""],"inputs":[{"inputName":"squareMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square metres to convert ","This is a Area [m²] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of acres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromAcre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert acres into SI units (square metres) ",""],"inputs":[{"inputName":"acres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of acres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square metres ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToSquareNauticalMile","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (square metres) into square nautical miles ",""],"inputs":[{"inputName":"squareMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square metres to convert ","This is a Area [m²] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square nautical miles ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromSquareNauticalMile","assemblyName":"Units_Engine.dll","descriptionParts":["Convert square nautical miles into SI units (square metres) ",""],"inputs":[{"inputName":"squareNauticalMiles","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square nautical miles to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square metres ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToSquareYard","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (square metres) into square yards ",""],"inputs":[{"inputName":"squareMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square metres to convert ","This is a Area [m²] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square yards ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromSquareYard","assemblyName":"Units_Engine.dll","descriptionParts":["Convert square yards into SI units (square metres) ",""],"inputs":[{"inputName":"squareYards","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square yards to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square metres ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToSquareMile","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (square metres) into square miles ",""],"inputs":[{"inputName":"squareMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square metres to convert ","This is a Area [m²] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square miles ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromSquareMile","assemblyName":"Units_Engine.dll","descriptionParts":["Convert square miles into SI units (square metres) ",""],"inputs":[{"inputName":"squareMiles","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square miles to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square metres ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToSquareMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (square metres) into square millimetres ",""],"inputs":[{"inputName":"squareMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square metres to convert ","This is a Area [m²] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square millimetres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromSquareMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert square millimetres into SI units (square metres) ",""],"inputs":[{"inputName":"squareMillimetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square millimetres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square metres ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToSquareCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (square metres) into square centimetres ",""],"inputs":[{"inputName":"squareMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square metres to convert ","This is a Area [m²] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square centimetres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromSquareCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert square centimetres into SI units (square metres) ",""],"inputs":[{"inputName":"squareCentimetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square centimetres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square metres ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToSquareKilometre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (square metres) into square kilometres ",""],"inputs":[{"inputName":"squareMetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square metres to convert ","This is a Area [m²] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square kilometres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromSquareKilometre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert square kilometres into SI units (square metres) ",""],"inputs":[{"inputName":"squareKilometres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of square kilometres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of square metres ","This is a Area [m²] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToInverseDeltaDegreeCelsius","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (inverse delta Kelvins) into inverse delta degress Celsius ",""],"inputs":[{"inputName":"inverseDeltaKelvins","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of inverse delta Kelvins to convert ","This is a ThermalExpansionCoefficient [1/K] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of inverse delta degrees Celsius ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromInverseDeltaDegreeCelsius","assemblyName":"Units_Engine.dll","descriptionParts":["Convert inverse delta degrees Celsius into SI units (inverse delta Kelvins) ",""],"inputs":[{"inputName":"inverseDeltaDegreesCelsius","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of inverse delta degrees Celsius to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of inverse delta Kelvins ","This is a ThermalExpansionCoefficient [1/K] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToDeltaDegreeFahrenheit","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Kelvins) into degrees Fahrenheit ",""],"inputs":[{"inputName":"kelvins","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The change in Kelvins to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The change in degrees Fahrenheit ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromDeltaDegreeFahrenheit","assemblyName":"Units_Engine.dll","descriptionParts":["Convert degrees Fahrenheit into SI units (Kelvins) ",""],"inputs":[{"inputName":"degreesFahrenheit","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The change in degrees Fahrenheit to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The change in kelvins ","This is a Temperature [K] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilogramPerLitre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (kilogram per cubic metre) into kilograms per litre ",""],"inputs":[{"inputName":"kilogramsPerCubicMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre to convert ","This is a Density [kg/m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per litre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilogramPerLitre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilograms per litre into SI units (kilograms per cubic metre) ",""],"inputs":[{"inputName":"kilogramsPerLitre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per litre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre ","This is a Density [kg/m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToGramPerMillilitre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (kilogram per cubic metre) into grams per millilitre ",""],"inputs":[{"inputName":"kilogramsPerCubicMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre to convert ","This is a Density [kg/m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of grams per millilitre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromGramPerMillilitre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert grams per millilitre into SI units (kilograms per cubic metre) ",""],"inputs":[{"inputName":"gramsPerMillilitre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of grams per millilitre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre ","This is a Density [kg/m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToGramPerLitre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (kilogram per cubic metre) into grams per litre ",""],"inputs":[{"inputName":"kilogramsPerCubicMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre to convert ","This is a Density [kg/m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of grams per litre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromGramPerLitre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert grams per litre into SI units (kilograms per cubic metre) ",""],"inputs":[{"inputName":"gramsPerLitre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of grams per litre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre ","This is a Density [kg/m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToPoundPerCubicFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (kilograms per cubic metre) into pounds per cubic foot ",""],"inputs":[{"inputName":"kilogramsPerCubicMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre to convert ","This is a Density [kg/m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of pounds per cubic foot ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromPoundPerCubicFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert pounds per cubic foot into SI units (kilograms per cubic metre) ",""],"inputs":[{"inputName":"poundsPerCubicFoot","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of pounds per cubic foot to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre ","This is a Density [kg/m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToPoundPerUSGallon","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (kilograms per cubic metre) into pounds per US gallon ",""],"inputs":[{"inputName":"kilogramsPerCubicMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre to convert ","This is a Density [kg/m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of pounds per cubic US gallon ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromPoundPerUSGallon","assemblyName":"Units_Engine.dll","descriptionParts":["Convert pounds per US gallon into SI units (kilograms per cubic metre) ",""],"inputs":[{"inputName":"poundsPerUSGallon","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of pounds per US gallon to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre ","This is a Density [kg/m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToPoundPerImperialGallon","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (kilograms per cubic metre) into pounds per imperial gallon ",""],"inputs":[{"inputName":"kilogramsPerCubicMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre to convert ","This is a Density [kg/m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of pounds per cubic imperial gallon ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromPoundPerImperialGallon","assemblyName":"Units_Engine.dll","descriptionParts":["Convert pounds per imperial gallon into SI units (kilograms per cubic metre) ",""],"inputs":[{"inputName":"poundsPerImperialGallon","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of pounds per imperial gallon to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre ","This is a Density [kg/m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilogramPerCubicCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (kilograms per cubic metre) into kilograms per cubic centimetre ",""],"inputs":[{"inputName":"kilogramsPerCubicMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre to convert ","This is a Density [kg/m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per cubic centimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilogramPerCubicCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilograms per cubic centimetre into SI units (kilograms per cubic metre) ",""],"inputs":[{"inputName":"kilogramsPerCubicCentimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per cubic centimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre ","This is a Density [kg/m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToTonnePerCubicMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (kilograms per cubic metre) into tonnes per cubic metre ",""],"inputs":[{"inputName":"kilogramsPerCubicMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre to convert ","This is a Density [kg/m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of tonnes per cubic metre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromTonnePerCubicMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert tonnes per cubic metre into SI units (kilograms per cubic metre) ",""],"inputs":[{"inputName":"tonnesPerCubicMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of tonnes per cubic metre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre ","This is a Density [kg/m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToTonnePerCubicCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (kilograms per cubic metre) into tonnes per cubic centimetre ",""],"inputs":[{"inputName":"kilogramsPerCubicMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre to convert ","This is a Density [kg/m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of tonnes per cubic centimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromTonnePerCubicCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert tonnes per cubic centimetre into SI units (kilograms per cubic metre) ",""],"inputs":[{"inputName":"tonnesPerCubicCentimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of tonnes per cubic centimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre ","This is a Density [kg/m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilogramPerCubicMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (kilograms per cubic metre) into kilograms per cubic millimetre ",""],"inputs":[{"inputName":"kilogramsPerCubicMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre to convert ","This is a Density [kg/m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per cubic millimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilogramPerCubicMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilograms per cubic millimetre into SI units (kilograms per cubic metre) ",""],"inputs":[{"inputName":"kilogramsPerCubicMillimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per cubic millimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre ","This is a Density [kg/m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToTonnePerCubicMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (kilograms per cubic metre) into tonnes per cubic millimetre ",""],"inputs":[{"inputName":"kilogramsPerCubicMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre to convert ","This is a Density [kg/m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of tonnes per cubic millimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromTonnePerCubicMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert tonnes per cubic millimetre into SI units (kilograms per cubic metre) ",""],"inputs":[{"inputName":"tonnesPerCubicMillimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of tonnes per cubic millimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre ","This is a Density [kg/m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToPoundPerCubicInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (kilograms per cubic metre) into pounds per cubic inch ",""],"inputs":[{"inputName":"kilogramsPerCubicMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre to convert ","This is a Density [kg/m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of pounds per cubic inch ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromPoundPerCubicInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert pounds per cubic inch into SI units (kilograms per cubic metre) ",""],"inputs":[{"inputName":"poundsPerCubicInch","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of pounds per cubic inch to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre ","This is a Density [kg/m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToGramPerCubicMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (kilogram per cubic metre) into grams per cubic metre ",""],"inputs":[{"inputName":"kilogramsPerCubicMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre to convert ","This is a Density [kg/m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of grams per cubic metre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromGramPerCubicMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert grams per cubic metre into SI units (kilograms per cubic metre) ",""],"inputs":[{"inputName":"gramsPerCubicMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of grams per cubic metre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre ","This is a Density [kg/m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToGramPerCubicCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (kilogram per cubic metre) into grams per cubic centimetre ",""],"inputs":[{"inputName":"kilogramsPerCubicMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre to convert ","This is a Density [kg/m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of grams per cubic centimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromGramPerCubicCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert grams per cubic centimetre into SI units (kilograms per cubic metre) ",""],"inputs":[{"inputName":"gramsPerCubicCentimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of grams per cubic centimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre ","This is a Density [kg/m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToGramPerCubicMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (kilogram per cubic metre) into grams per cubic millimetre ",""],"inputs":[{"inputName":"kilogramsPerCubicMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre to convert ","This is a Density [kg/m³] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of grams per cubic millimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromGramPerCubicMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert grams per cubic millimetre into SI units (kilograms per cubic metre) ",""],"inputs":[{"inputName":"gramsPerCubicMillimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of grams per cubic millimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms per cubic metre ","This is a Density [kg/m³] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilopoundForcePerInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons per metre) into kilopounds-force per inch ",""],"inputs":[{"inputName":"newtonsPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per metre to convert ","This is a ForcePerUnitLength [N/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilopounds-force per inch ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilopoundForcePerInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilopounds-force per inch into SI units (Newtons per metre) ",""],"inputs":[{"inputName":"kilopoundsForcePerInch","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilopounds-force per inch to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToTonneForcePerMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons per metre) into tonnes-force per metre ",""],"inputs":[{"inputName":"newtonsPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per metre to convert ","This is a ForcePerUnitLength [N/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of tonnes-force per metre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromTonneForcePerMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert tonnes-force per metre into SI units (Newtons per metre) ",""],"inputs":[{"inputName":"tonnesForcePerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of tonnes-force per metre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToTonneForcePerMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons per metre) into tonnes-force per millimetre ",""],"inputs":[{"inputName":"newtonsPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per metre to convert ","This is a ForcePerUnitLength [N/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of tonnes-force per millimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromTonneForcePerMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert tonnes-force per millimetre into SI units (Newtons per metre) ",""],"inputs":[{"inputName":"tonnesForcePerMillimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of tonnes-force per millimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToTonneForcePerCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons per metre) into tonnes-force per centimetre ",""],"inputs":[{"inputName":"newtonsPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per metre to convert ","This is a ForcePerUnitLength [N/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of tonnes-force per centimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromTonneForcePerCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert tonnes-force per centimetre into SI units (Newtons per metre) ",""],"inputs":[{"inputName":"tonnesForcePerCentimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of tonnes-force per centimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilogramForcePerMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons per metre) into kilograms-force per millimetre ",""],"inputs":[{"inputName":"newtonsPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per metre to convert ","This is a ForcePerUnitLength [N/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms-force per millimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilogramForcePerMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilograms-force per millimetre into SI units (Newtons per metre) ",""],"inputs":[{"inputName":"kilogramsForcePerMillimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms-force per millimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilogramForcePerCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons per metre) into kilograms-force per centimetre ",""],"inputs":[{"inputName":"newtonsPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per metre to convert ","This is a ForcePerUnitLength [N/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms-force per centimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilogramForcePerCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilograms-force per centimetre into SI units (Newtons per metre) ",""],"inputs":[{"inputName":"kilogramsForcePerCentimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms-force per centimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilonewtonPerMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons per metre) into kilonewtons per metre ",""],"inputs":[{"inputName":"newtonsPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per metre to convert ","This is a ForcePerUnitLength [N/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilonewtons per metre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilonewtonPerMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilonewtons per metre into SI units (Newtons per metre) ",""],"inputs":[{"inputName":"kilonewtonsPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilonewtons per metre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilonewtonPerCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons per metre) into kilonewtons per centimetre ",""],"inputs":[{"inputName":"newtonsPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per metre to convert ","This is a ForcePerUnitLength [N/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilonewtons per centimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilonewtonPerCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilonewtons per centimetre into SI units (Newtons per metre) ",""],"inputs":[{"inputName":"kilonewtonsPerCentimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilonewtons per centimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilopoundForcePerFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons per metre) into kilopounds-force per foot ",""],"inputs":[{"inputName":"newtonsPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per metre to convert ","This is a ForcePerUnitLength [N/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilopounds-force per foot ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilopoundForcePerFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilopounds-force per foot into SI units (Newtons per metre) ",""],"inputs":[{"inputName":"kilopoundsForcePerFoot","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilopounds-force per foot to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilonewtonPerMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons per metre) into kilonewtons per millimetre ",""],"inputs":[{"inputName":"newtonsPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per metre to convert ","This is a ForcePerUnitLength [N/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilonewtons per millimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilonewtonPerMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilonewtons per millimetre into SI units (Newtons per metre) ",""],"inputs":[{"inputName":"kilonewtonsPerMillimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilonewtons per millimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToNewtonPerCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons per metre) into Newtons per centimetre ",""],"inputs":[{"inputName":"newtonsPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per metre to convert ","This is a ForcePerUnitLength [N/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per centimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromNewtonPerCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert Newtons per centimetre into SI units (Newtons per metre) ",""],"inputs":[{"inputName":"newtonsPerCentimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per centimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToPoundForcePerYard","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons per metre) into pounds-force per yard ",""],"inputs":[{"inputName":"newtonsPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per metre to convert ","This is a ForcePerUnitLength [N/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of pounds-force per yard ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromPoundForcePerYard","assemblyName":"Units_Engine.dll","descriptionParts":["Convert pounds-force per yard into SI units (Newtons per metre) ",""],"inputs":[{"inputName":"poundsForcePerYard","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of pounds-force per yard to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToPoundForcePerInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons per metre) into pounds-force per inch ",""],"inputs":[{"inputName":"newtonsPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per metre to convert ","This is a ForcePerUnitLength [N/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of pounds-force per inch ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromPoundForcePerInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert pounds-force per inch into SI units (Newtons per metre) ",""],"inputs":[{"inputName":"poundsForcePerInch","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of pounds-force per inch to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToPoundForcePerFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons per metre) into pounds-force per foot ",""],"inputs":[{"inputName":"newtonsPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per metre to convert ","This is a ForcePerUnitLength [N/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of pounds-force per foot ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromPoundForcePerFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert pounds-force per foot into SI units (Newtons per metre) ",""],"inputs":[{"inputName":"poundsForcePerFoot","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of pounds-force per foot to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToNewtonPerMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons per metre) into Newtons per millimetre ",""],"inputs":[{"inputName":"newtonsPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per metre to convert ","This is a ForcePerUnitLength [N/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per millimetre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromNewtonPerMillimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert Newtons per millimetre into SI units (Newtons per metre) ",""],"inputs":[{"inputName":"newtonsPerMillimetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per millimetre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilogramForcePerMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons per metre) into kilograms-force per metre ",""],"inputs":[{"inputName":"newtonsPerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons per metre to convert ","This is a ForcePerUnitLength [N/m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms-force per metre ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilogramForcePerMetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilograms-force per metre into SI units (Newtons per metre) ",""],"inputs":[{"inputName":"kilogramsForcePerMetre","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms-force per metre to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons per metre ","This is a ForcePerUnitLength [N/m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilogramForce","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons) into kilograms-force ",""],"inputs":[{"inputName":"newtons","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons to convert ","This is a Force [N] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilograms-force ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilogramForce","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilograms-force into SI units (Newtons) ",""],"inputs":[{"inputName":"kilogramsForce","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilograms-force to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons ","This is a Force [N] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToMeganewton","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons) into meganewtons ",""],"inputs":[{"inputName":"newtons","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons to convert ","This is a Force [N] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of meganewtons ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromMeganewton","assemblyName":"Units_Engine.dll","descriptionParts":["Convert meganewtons into SI units (Newtons) ",""],"inputs":[{"inputName":"meganewtons","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of meganewtons to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons ","This is a Force [N] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToOunceForce","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons) into ounces-force ",""],"inputs":[{"inputName":"newtons","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons to convert ","This is a Force [N] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of ounces-force ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromOunceForce","assemblyName":"Units_Engine.dll","descriptionParts":["Convert ounces-force into SI units (Newtons) ",""],"inputs":[{"inputName":"ouncesForce","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of ounces-force to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons ","This is a Force [N] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilopoundForce","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons) into kilopounds-force ",""],"inputs":[{"inputName":"newtons","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons to convert ","This is a Force [N] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilopounds-force ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilopoundForce","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilopounds-force into SI units (Newtons) ",""],"inputs":[{"inputName":"kilopoundsForce","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilopounds-force to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons ","This is a Force [N] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToPoundForce","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons) into pounds-force ",""],"inputs":[{"inputName":"newtons","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons to convert ","This is a Force [N] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of pounds-force ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromPoundForce","assemblyName":"Units_Engine.dll","descriptionParts":["Convert pounds-force into SI units (Newtons) ",""],"inputs":[{"inputName":"poundsForce","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of pounds-force to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons ","This is a Force [N] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToTonneForce","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons) into tonnes-force ",""],"inputs":[{"inputName":"newtons","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons to convert ","This is a Force [N] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of tonnes-force ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromTonneForce","assemblyName":"Units_Engine.dll","descriptionParts":["Convert tonnes-force into SI units (Newtons) ",""],"inputs":[{"inputName":"tonnesForce","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of tonnes-force to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons ","This is a Force [N] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToKilonewton","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (Newtons) into kilonewtons ",""],"inputs":[{"inputName":"newtons","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of Newtons to convert ","This is a Force [N] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of kilonewtons ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromKilonewton","assemblyName":"Units_Engine.dll","descriptionParts":["Convert kilonewtons into SI units (Newtons) ",""],"inputs":[{"inputName":"kilonewtons","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of kilonewtons to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of Newtons ","This is a Force [N] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromAngstroms","assemblyName":"Units_Engine.dll","descriptionParts":["Convert ångstroms into SI units (metres) ",""],"inputs":[{"inputName":"angstroms","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of ångstroms to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToAngstroms","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres) into ångstroms ",""],"inputs":[{"inputName":"metres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of ångstroms ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres) into centimetres ",""],"inputs":[{"inputName":"metres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres to convert ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of centimetres ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromCentimetre","assemblyName":"Units_Engine.dll","descriptionParts":["Convert centimetres into SI units (metres) ",""],"inputs":[{"inputName":"centimetres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of centimetres to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres ","This is a Length [m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres) into feet ",""],"inputs":[{"inputName":"metres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres to convert ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of feet ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromFoot","assemblyName":"Units_Engine.dll","descriptionParts":["Convert feet into SI units (metres) ",""],"inputs":[{"inputName":"feet","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of feet to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres ","This is a Length [m] (as a Double)"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"ToInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert SI units (metres) into inches ",""],"inputs":[{"inputName":"metres","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of metres to convert ","This is a Length [m] (as a Double)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of inches ","This is a Double"]}},{"namespace":"BH.Engine.Units","className":"Convert","memberName":"FromInch","assemblyName":"Units_Engine.dll","descriptionParts":["Convert inches into SI units (metres) ",""],"inputs":[{"inputName":"inches","namespace":"System","memberName":"Double","isGeneric":"0","descriptionParts":["The number of inches to convert ","This is a Double"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Double","namespace":"System","isGeneric":"0","descriptionParts":["The number of metres ","This is a Length [m] (as a Double)"]}},{"namespace":"BH.Engine.Versioning","className":"Compute","memberName":"VersioningKey","assemblyName":"Versioning_Engine.dll","descriptionParts":["Provide a string representation of a method as it used for versioning by the PreviousVersion attribute. ",""],"inputs":[{"inputName":"declaringType","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Type in which the method is declared. You can use just the name of the type or include a (part of the) namespace in front of it. ","This is a String"],"isRequired":1,"isInterface":0},{"inputName":"methodName","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["Name of the method. It has to be the exact string. If the method is a constructor, you can leave this input blank. ","This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"System","memberName":"String","isInterface":"0","isGeneric":"0"}],"descriptionParts":["String representation for each method that matches the input filters. ","This is a List<String>"]}},{"namespace":"BH.Engine.Versioning","className":"Convert","memberName":"ToNewVersion","assemblyName":"Versioning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"json","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["This is a String"]}},{"namespace":"BH.Engine.Versioning","className":"Convert","memberName":"ToNewVersion","assemblyName":"Versioning_Engine.dll","descriptionParts":[],"inputs":[{"inputName":"document","namespace":"MongoDB.Bson","memberName":"BsonDocument","isGeneric":"0","descriptionParts":["This is a BsonDocument"],"isRequired":1,"isInterface":0},{"inputName":"version","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["This is a String"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"BsonDocument","namespace":"MongoDB.Bson","isGeneric":"0","descriptionParts":["This is a BsonDocument"]}},{"namespace":"BH.Engine.Versioning","className":"Query","memberName":"VersioningKey","assemblyName":"Versioning_Engine.dll","descriptionParts":["Provide a string representation of a method as it used for versioning by the PreviousVersion attribute. ",""],"inputs":[{"inputName":"method","namespace":"System.Reflection","memberName":"MethodBase","isGeneric":"0","descriptionParts":["Method to generate the key for ","This is a MethodBase"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["String representation of the method as it will be used by the PreviousVersion attribute. ","This is a String"]}},{"namespace":"BH.Engine.Adapters.XML","className":"Create","memberName":"DocumentBuilder","assemblyName":"XML_Engine.dll","descriptionParts":["Create a Document Builder object to collate data required for GBXML schema documents ",""],"inputs":[{"inputName":"building","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Building","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The building object for the elements in the schema ","This is a List<Building>"],"isRequired":1,"isInterface":0},{"inputName":"elementsAsSpaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["The nested collection of Environment Panels which form closed spaces within the building ","This is a List<List<Panel>>"],"isRequired":1,"isInterface":0},{"inputName":"shadingElements","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels which provide shading to the building ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"levels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Geometry.SettingOut","memberName":"Level","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of levels which group spaces by floor ","This is a List<Level>"],"isRequired":1,"isInterface":0},{"inputName":"unassignedPanels","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["Any additional panels needed to be included within the GBXML file ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"GBXMLDocumentBuilder","namespace":"BH.oM.Adapters.XML","isGeneric":"0","descriptionParts":["A Document Builder object suitable for GBXML schema document creation ","This is a BH.oM.Adapters.XML.GBXMLDocumentBuilder"]}},{"namespace":"BH.Engine.Adapters.XML","className":"Create","memberName":"DocumentBuilder","assemblyName":"XML_Engine.dll","descriptionParts":["Create a Document Builder object to collate data required for GBXML schema documents automatically from a given list of BHoM Objects ",""],"inputs":[{"inputName":"objs","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Base","memberName":"IBHoMObject","isInterface":"1","isGeneric":"0"}],"descriptionParts":["A collection of BHoM Objects to sort into a suitable format for inclusion within a GBXML file ","This is a List<IBHoMObject> ","This can be of the following types: FileSettings, ObjectWrapper, Dataset, Source, Table, UnderlyingType, Event, Log, CustomObject, BHoMObject, BHoMGroup<T>, Grid, Level, ComponentRequest, OutputsUpdate, and more..."],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"GBXMLDocumentBuilder","namespace":"BH.oM.Adapters.XML","isGeneric":"0","descriptionParts":["A Document Builder object suitable for GBXML schema document creation ","This is a BH.oM.Adapters.XML.GBXMLDocumentBuilder"]}},{"namespace":"BH.Engine.Adapters.XML","className":"Create","memberName":"GBXMLUnitSetUp","assemblyName":"XML_Engine.dll","descriptionParts":["Creates an instance of a GBXMLUnitSetUp object based on the LengthUnit type. If the LengthUnit type is Meters, the Area and Volume Units will become SquareMeters and CubicMeters respectively. Allows for the creation of GBXMLUnitSetUp from just the length and temperature attributes. ",""],"inputs":[{"inputName":"length","namespace":"BH.oM.Adapters.XML","memberName":"LengthUnit","isGeneric":"0","descriptionParts":["The length unit to build the area and volume units from. ","This is a BH.oM.Adapters.XML.LengthUnit ","Enum values: ","-Kilometers ","-Meters ","-Centimeters ","-Millimeters ","-Miles ","-Yards ","-Feet ","-Inches"],"isRequired":1,"isInterface":0},{"inputName":"temperature","namespace":"BH.oM.Adapters.XML","memberName":"TemperatureUnit","isGeneric":"0","descriptionParts":["The temperature unit to use, defaults to Celcius ","This is a BH.oM.Adapters.XML.TemperatureUnit ","Enum values: ","-Celcius ","-Fahrenheit ","-Kelvin ","-Rankine"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"GBXMLUnitSetUp","namespace":"BH.oM.Adapters.XML","isGeneric":"0","descriptionParts":["A GBXMLUnitSetUp object containing set up options for the gbXML export. ","This is a BH.oM.Adapters.XML.GBXMLUnitSetUp"]}},{"namespace":"BH.Engine.Adapters.XML","className":"Query","memberName":"CleanName","assemblyName":"XML_Engine.dll","descriptionParts":["Get a clean string name representation of a name suitable for GBXML. Removes colons (replaced with underscores _ ), removes spaces, commas, forward slashes, open and closed round brackets ",""],"inputs":[{"inputName":"name","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["The string name to clean up ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The clean name suitable for GBXML ","This is a String"]}},{"namespace":"BH.Engine.Adapters.XML","className":"Query","memberName":"ExposedToSun","assemblyName":"XML_Engine.dll","descriptionParts":["BH.Engine.XML.Query.ExposedToSun => Returns whether a given gbXML surface type string can be classed as being exposed to the sun ",""],"inputs":[{"inputName":"surfaceType","namespace":"System","memberName":"String","isGeneric":"0","descriptionParts":["A gbXML string representing a surface type ","This is a String"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the surface type can be considered to be exposed to the sun, false otherwise ","This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.XML","className":"Query","memberName":"ExternalElements","assemblyName":"XML_Engine.dll","descriptionParts":["Filters a collection of Environment Panels grouped to represent closed spaces to only those which have only one adjacenet space ",""],"inputs":[{"inputName":"elementsAsSpaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A nested collection of Environment Panels that represent closed spaced ","This is a List<List<Panel>>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"List","namespace":"System.Collections.Generic","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["The collection of Environment Panels which are externally facing ","This is a List<Panel>"]}},{"namespace":"BH.Engine.Adapters.XML","className":"Query","memberName":"IsExternal","assemblyName":"XML_Engine.dll","descriptionParts":["Determines whether a collection of Environment Panels representing a single space contains any panels which are externally facing ",""],"inputs":[{"inputName":"elementsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels that represent closed spaced ","This is a List<Panel>"],"isRequired":1,"isInterface":0},{"inputName":"elementsAsSpaces","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"System.Collections.Generic","memberName":"List","isInterface":"0","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}]}],"descriptionParts":["A nested collection of Environment Panels which represent all spaces in the model ","This is a List<List<Panel>>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"Boolean","namespace":"System","isGeneric":"0","descriptionParts":["True if the space has at least one externally facing Panel ","This is a Boolean"]}},{"namespace":"BH.Engine.Adapters.XML","className":"Query","memberName":"ConstructionID","assemblyName":"XML_Engine.dll","descriptionParts":["Gets the unique construction ID for an Environment Panel ",""],"inputs":[{"inputName":"panel","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel with a construction ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The unique ID for the construction on the panel ","This is a String"]}},{"namespace":"BH.Engine.Adapters.XML","className":"Query","memberName":"ConstructionID","assemblyName":"XML_Engine.dll","descriptionParts":["Gets the unique construction ID for a construction ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"IConstruction","isGeneric":"0","descriptionParts":["An instance of a construction implementing the Physical IConstruction interface ","This is a BH.oM.Physical.Constructions.IConstruction ","This can be of the following types: Construction"],"isRequired":1,"isInterface":1}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The unique ID for the construction ","This is a String"]}},{"namespace":"BH.Engine.Adapters.XML","className":"Query","memberName":"ConstructionID","assemblyName":"XML_Engine.dll","descriptionParts":["Gets the unique construction ID for a Physical construction ",""],"inputs":[{"inputName":"construction","namespace":"BH.oM.Physical.Constructions","memberName":"Construction","isGeneric":"0","descriptionParts":["An instance of a Physical construction ","This is a BH.oM.Physical.Constructions.Construction"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The unique ID for the construction ","This is a String"]}},{"namespace":"BH.Engine.Adapters.XML","className":"Query","memberName":"CADObjectID","assemblyName":"XML_Engine.dll","descriptionParts":["Gets the CAD Object ID for an Environment Panel suitable for GBXML ",""],"inputs":[{"inputName":"element","namespace":"BH.oM.Environment.Elements","memberName":"Panel","isGeneric":"0","descriptionParts":["An Environment Panel to obtain the CAD Object ID of ","This is a BH.oM.Environment.Elements.Panel: ","An environmental object used to define planar surfaces of a space (e.g. Wall, Floor, Roof)"],"isRequired":1,"isInterface":0},{"inputName":"replaceCurtainWalls","namespace":"System","memberName":"Boolean","isGeneric":"0","descriptionParts":["Determine whether to change the CAD Object ID based on whether we are replacing curtain walls or not, default false ","This is a Boolean"],"isRequired":0,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The CAD Object ID for the software where this Panel came from ","This is a String"]}},{"namespace":"BH.Engine.Adapters.XML","className":"Query","memberName":"CADObjectID","assemblyName":"XML_Engine.dll","descriptionParts":["Gets the CAD Object ID for a Space suitable for GBXML ",""],"inputs":[{"inputName":"panelsAsSpace","namespace":"System.Collections.Generic","memberName":"List","isGeneric":"1","inheritances":[{"namespace":"BH.oM.Environment.Elements","memberName":"Panel","isInterface":"0","isGeneric":"0"}],"descriptionParts":["A collection of Environment Panels that represent a closed space to obtain the CAD Object ID of ","This is a List<Panel>"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The CAD Object ID for the software where this collection of Panels came from ","This is a String"]}},{"namespace":"BH.Engine.Adapters.XML","className":"Query","memberName":"CADObjectID","assemblyName":"XML_Engine.dll","descriptionParts":["Gets the CAD Object ID for an Environment Opening suitable for GBXML ",""],"inputs":[{"inputName":"opening","namespace":"BH.oM.Environment.Elements","memberName":"Opening","isGeneric":"0","descriptionParts":["An Environment Opening to obtain the CAD Object ID of ","This is a BH.oM.Environment.Elements.Opening: ","A cutout or hole in a building surface/panel (e.g. Window, Door, Rooflight)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The CAD Object ID for the software where this Opening came from ","This is a String"]}},{"namespace":"BH.Engine.Adapters.XML","className":"Query","memberName":"CADObjectID","assemblyName":"XML_Engine.dll","descriptionParts":["Gets the CAD Object ID for a Space suitable for GBXML ",""],"inputs":[{"inputName":"space","namespace":"BH.oM.Environment.Elements","memberName":"Space","isGeneric":"0","descriptionParts":["An Environment Space to obtain the CAD Object ID of ","This is a BH.oM.Environment.Elements.Space: ","A space object is an analytical depiction of a room defined by its environmental conditions (internal gains)"],"isRequired":1,"isInterface":0}],"outputs":{"memberName":"String","namespace":"System","isGeneric":"0","descriptionParts":["The CAD Object ID for the software where this space came from ","This is a String"]}}]
